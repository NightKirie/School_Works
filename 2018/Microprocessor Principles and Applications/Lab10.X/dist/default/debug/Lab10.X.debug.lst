

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Dec 10 19:15:34 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNCALL	_main,_adc_init
   384                           	FNCALL	_main,_ccp2_init
   385                           	FNCALL	_main,_tmr_init
   386                           	FNROOT	_main
   387                           	FNCALL	intlevel2,_Hi_ISR
   388                           	global	intlevel2
   389                           	FNROOT	intlevel2
   390                           	global	_count
   391                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   392                           global __pidataCOMRAM
   393                           __pidataCOMRAM:
   394  000144                     	file	"newmain.c"
   395                           	line	10
   396                           
   397                           ;initializer for _count
   398                           	dw	(07h)&0ffffh
   399  000144  0007               	global	_result
   400                           	global	_TRISEbits
   401                           _TRISEbits	set	0xF96
   402  0000                     	global	_CCPR2
   403                           _CCPR2	set	0xFBB
   404  0000                     	global	_TMR3
   405                           _TMR3	set	0xFB2
   406  0000                     	global	_ADRES
   407                           _ADRES	set	0xFC3
   408  0000                     	global	_T3CONbits
   409                           _T3CONbits	set	0xFB1
   410  0000                     	global	_PIE2bits
   411                           _PIE2bits	set	0xFA0
   412  0000                     	global	_IPR2bits
   413                           _IPR2bits	set	0xFA2
   414  0000                     	global	_CCP2CONbits
   415                           _CCP2CONbits	set	0xFBA
   416  0000                     	global	_RCONbits
   417                           _RCONbits	set	0xFD0
   418  0000                     	global	_IPR1bits
   419                           _IPR1bits	set	0xF9F
   420  0000                     	global	_PIE1bits
   421                           _PIE1bits	set	0xF9D
   422  0000                     	global	_ADCON2bits
   423                           _ADCON2bits	set	0xFC0
   424  0000                     	global	_ADCON1bits
   425                           _ADCON1bits	set	0xFC1
   426  0000                     	global	_ADCON0bits
   427                           _ADCON0bits	set	0xFC2
   428  0000                     	global	_PIR2bits
   429                           _PIR2bits	set	0xFA1
   430  0000                     	global	_PIR1bits
   431                           _PIR1bits	set	0xF9E
   432  0000                     	global	_INTCONbits
   433                           _INTCONbits	set	0xFF2
   434  0000                     ; #config settings
   435                           global __CFG_OSC$INTIO67
   436                           __CFG_OSC$INTIO67 equ 0x0
   437  0000                     global __CFG_WDT$OFF
   438                           __CFG_WDT$OFF equ 0x0
   439  0000                     global __CFG_LVP$OFF
   440                           __CFG_LVP$OFF equ 0x0
   441  0000                     	file	"C:\Users\NIGHTK~1\AppData\Local\Temp\s3i4."
   442                           	line	#
   443                           psect	cinit,class=CODE,delta=1,reloc=2
   444                           global __pcinit
   445                           __pcinit:
   446  0000DA                     global start_initialization
   447                           start_initialization:
   448  0000DA                     
   449                           global __initialization
   450                           __initialization:
   451  0000DA                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   452                           global __pbssCOMRAM
   453                           __pbssCOMRAM:
   454  000001                     	global	_result
   455                           _result:
   456  000001                            ds      16
   457  000001                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
   458                           global __pdataCOMRAM
   459                           __pdataCOMRAM:
   460  000011                     	file	"newmain.c"
   461                           	line	10
   462                           	global	_count
   463                           _count:
   464  000011                            ds      2
   465  000011                     	file	"C:\Users\NIGHTK~1\AppData\Local\Temp\s3i4."
   466                           	line	#
   467                           psect	cinit
   468                           ; Initialize objects allocated to COMRAM (2 bytes)
   469                           	global __pidataCOMRAM
   470                           	; load TBLPTR registers with __pidataCOMRAM
   471                           	movlw	low (__pidataCOMRAM)
   472  0000DA  0E44               	movwf	tblptrl
   473  0000DC  6EF6               	movlw	high(__pidataCOMRAM)
   474  0000DE  0E01               	movwf	tblptrh
   475  0000E0  6EF7               	movlw	low highword(__pidataCOMRAM)
   476  0000E2  0E00               	movwf	tblptru
   477  0000E4  6EF8               	tblrd*+ ;fetch initializer
   478  0000E6  0009               	movff	tablat, __pdataCOMRAM+0		
   479  0000E8  CFF5 F011          	tblrd*+ ;fetch initializer
   480  0000EC  0009               	movff	tablat, __pdataCOMRAM+1		
   481  0000EE  CFF5 F012          	line	#
   482                           ; Clear objects allocated to COMRAM (16 bytes)
   483                           	global __pbssCOMRAM
   484                           lfsr	0,__pbssCOMRAM
   485  0000F2  EE00  F001         movlw	16
   486  0000F6  0E10               clear_0:
   487  0000F8                     clrf	postinc0,c
   488  0000F8  6AEE               decf	wreg
   489  0000FA  06E8               bnz	clear_0
   490  0000FC  E1FD               psect cinit,class=CODE,delta=1
   491                           global end_of_initialization,__end_of__initialization
   492                           
   493                           ;End of C runtime variable initialization code
   494                           
   495                           end_of_initialization:
   496  0000FE                     __end_of__initialization:
   497  0000FE                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   498  0000FE  9015               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   499  000100  9215               movlb 0
   500  000102  0100               goto _main	;jump to C main() function
   501  000104  EF90  F000         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   502                           global __pcstackCOMRAM
   503                           __pcstackCOMRAM:
   504  000013                     ?_adc_init:	; 1 bytes @ 0x0
   505  000013                     ?_ccp2_init:	; 1 bytes @ 0x0
   506  000013                     ?_tmr_init:	; 1 bytes @ 0x0
   507  000013                     ?_Hi_ISR:	; 1 bytes @ 0x0
   508  000013                     ??_Hi_ISR:	; 1 bytes @ 0x0
   509  000013                     ?_main:	; 1 bytes @ 0x0
   510  000013                     	ds   2
   511  000013                     ??_adc_init:	; 1 bytes @ 0x2
   512  000015                     ??_ccp2_init:	; 1 bytes @ 0x2
   513  000015                     ??_tmr_init:	; 1 bytes @ 0x2
   514  000015                     ??_main:	; 1 bytes @ 0x2
   515  000015                     ;!
   516                           ;!Data Sizes:
   517                           ;!    Strings     0
   518                           ;!    Constant    0
   519                           ;!    Data        2
   520                           ;!    BSS         16
   521                           ;!    Persistent  0
   522                           ;!    Stack       0
   523                           ;!
   524                           ;!Auto Spaces:
   525                           ;!    Space          Size  Autos    Used
   526                           ;!    COMRAM          126      2      20
   527                           ;!    BANK0           128      0       0
   528                           ;!    BANK1           256      0       0
   529                           ;!    BANK2           256      0       0
   530                           ;!    BANK3           256      0       0
   531                           ;!    BANK4           256      0       0
   532                           ;!    BANK5           244      0       0
   533                           
   534                           ;!
   535                           ;!Pointer List with Targets:
   536                           ;!
   537                           ;!    None.
   538                           
   539                           
   540                           ;!
   541                           ;!Critical Paths under _main in COMRAM
   542                           ;!
   543                           ;!    None.
   544                           ;!
   545                           ;!Critical Paths under _Hi_ISR in COMRAM
   546                           ;!
   547                           ;!    None.
   548                           ;!
   549                           ;!Critical Paths under _main in BANK0
   550                           ;!
   551                           ;!    None.
   552                           ;!
   553                           ;!Critical Paths under _Hi_ISR in BANK0
   554                           ;!
   555                           ;!    None.
   556                           ;!
   557                           ;!Critical Paths under _main in BANK1
   558                           ;!
   559                           ;!    None.
   560                           ;!
   561                           ;!Critical Paths under _Hi_ISR in BANK1
   562                           ;!
   563                           ;!    None.
   564                           ;!
   565                           ;!Critical Paths under _main in BANK2
   566                           ;!
   567                           ;!    None.
   568                           ;!
   569                           ;!Critical Paths under _Hi_ISR in BANK2
   570                           ;!
   571                           ;!    None.
   572                           ;!
   573                           ;!Critical Paths under _main in BANK3
   574                           ;!
   575                           ;!    None.
   576                           ;!
   577                           ;!Critical Paths under _Hi_ISR in BANK3
   578                           ;!
   579                           ;!    None.
   580                           ;!
   581                           ;!Critical Paths under _main in BANK4
   582                           ;!
   583                           ;!    None.
   584                           ;!
   585                           ;!Critical Paths under _Hi_ISR in BANK4
   586                           ;!
   587                           ;!    None.
   588                           ;!
   589                           ;!Critical Paths under _main in BANK5
   590                           ;!
   591                           ;!    None.
   592                           ;!
   593                           ;!Critical Paths under _Hi_ISR in BANK5
   594                           ;!
   595                           ;!    None.
   596                           
   597 ;;
   598 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   599 ;;
   600                           
   601                           ;!
   602                           ;!Call Graph Tables:
   603                           ;!
   604                           ;! ---------------------------------------------------------------------------------
   605                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   606                           ;! ---------------------------------------------------------------------------------
   607                           ;! (0) _main                                                 0     0      0       0
   608                           ;!                           _adc_init
   609                           ;!                          _ccp2_init
   610                           ;!                           _tmr_init
   611                           ;! ---------------------------------------------------------------------------------
   612                           ;! (1) _tmr_init                                             0     0      0       0
   613                           ;! ---------------------------------------------------------------------------------
   614                           ;! (1) _ccp2_init                                            0     0      0       0
   615                           ;! ---------------------------------------------------------------------------------
   616                           ;! (1) _adc_init                                             0     0      0       0
   617                           ;! ---------------------------------------------------------------------------------
   618                           ;! Estimated maximum stack depth 1
   619                           ;! ---------------------------------------------------------------------------------
   620                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   621                           ;! ---------------------------------------------------------------------------------
   622                           ;! (2) _Hi_ISR                                               2     2      0       0
   623                           ;!                                              0 COMRAM     2     2      0
   624                           ;! ---------------------------------------------------------------------------------
   625                           ;! Estimated maximum stack depth 2
   626                           ;! ---------------------------------------------------------------------------------
   627                           ;!
   628                           ;! Call Graph Graphs:
   629                           ;!
   630                           ;! _main (ROOT)
   631                           ;!   _adc_init
   632                           ;!   _ccp2_init
   633                           ;!   _tmr_init
   634                           ;!
   635                           ;! _Hi_ISR (ROOT)
   636                           ;!
   637                           
   638                           ;! Address spaces:
   639                           
   640                           ;!Name               Size   Autos  Total    Cost      Usage
   641                           ;!BIGRAM             5F3      0       0      16        0.0%
   642                           ;!EEDATA             100      0       0       0        0.0%
   643                           ;!BITBANK4           100      0       0      11        0.0%
   644                           ;!BANK4              100      0       0      12        0.0%
   645                           ;!BITBANK3           100      0       0       9        0.0%
   646                           ;!BANK3              100      0       0      10        0.0%
   647                           ;!BITBANK2           100      0       0       7        0.0%
   648                           ;!BANK2              100      0       0       8        0.0%
   649                           ;!BITBANK1           100      0       0       5        0.0%
   650                           ;!BANK1              100      0       0       6        0.0%
   651                           ;!BITBANK5            F4      0       0      15        0.0%
   652                           ;!BANK5               F4      0       0      13        0.0%
   653                           ;!BITBANK0            80      0       0       3        0.0%
   654                           ;!BANK0               80      0       0       4        0.0%
   655                           ;!BITCOMRAM           7E      0       0       0        0.0%
   656                           ;!COMRAM              7E      2      14       1       15.9%
   657                           ;!BITSFR_5             0      0       0     200        0.0%
   658                           ;!SFR_5                0      0       0     200        0.0%
   659                           ;!BITSFR_4             0      0       0     200        0.0%
   660                           ;!SFR_4                0      0       0     200        0.0%
   661                           ;!BITSFR_3             0      0       0     200        0.0%
   662                           ;!SFR_3                0      0       0     200        0.0%
   663                           ;!BITSFR_2             0      0       0     200        0.0%
   664                           ;!SFR_2                0      0       0     200        0.0%
   665                           ;!BITSFR_1             0      0       0     200        0.0%
   666                           ;!SFR_1                0      0       0     200        0.0%
   667                           ;!BITSFR               0      0       0     200        0.0%
   668                           ;!SFR                  0      0       0     200        0.0%
   669                           ;!STACK                0      0       0       2        0.0%
   670                           ;!NULL                 0      0       0       0        0.0%
   671                           ;!ABS                  0      0      14      14        0.0%
   672                           ;!DATA                 0      0      14      17        0.0%
   673                           ;!CODE                 0      0       0       0        0.0%
   674                           
   675                           	global	_main
   676                           
   677 ;; *************** function _main *****************
   678 ;; Defined at:
   679 ;;		line 32 in file "newmain.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, status,2, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   693 ;;      Params:         0       0       0       0       0       0       0
   694 ;;      Locals:         0       0       0       0       0       0       0
   695 ;;      Temps:          0       0       0       0       0       0       0
   696 ;;      Totals:         0       0       0       0       0       0       0
   697 ;;Total ram usage:        0 bytes
   698 ;; Hardware stack levels required when called:    2
   699 ;; This function calls:
   700 ;;		_adc_init
   701 ;;		_ccp2_init
   702 ;;		_tmr_init
   703 ;; This function is called by:
   704 ;;		Startup code after reset
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           psect	text0,class=CODE,space=0,reloc=2,group=0
   708                           	file	"newmain.c"
   709                           	line	32
   710                           global __ptext0
   711                           __ptext0:
   712  000120                     psect	text0
   713                           	file	"newmain.c"
   714                           	line	32
   715                           	global	__size_of_main
   716                           	__size_of_main	equ	__end_of_main-_main
   717  0000                     	
   718                           _main:
   719  000120                     ;incstack = 0
   720                           	opt	stack 29
   721                           	line	36
   722                           	
   723                           l805:
   724  000120                     ;newmain.c: 36: }
   725                           	call	_adc_init	;wreg free
   726  000120  EC52  F000         	line	37
   727                           ;newmain.c: 37: 
   728                           	call	_ccp2_init	;wreg free
   729  000124  EC84  F000         	line	38
   730                           ;newmain.c: 38: void adc_init(void){
   731                           	call	_tmr_init	;wreg free
   732  000128  EC9A  F000         	line	39
   733                           ;newmain.c: 39: 
   734                           	
   735                           l61:
   736  00012C                     	
   737                           l62:
   738  00012C                     	goto	l61
   739  00012C  EF96  F000         	
   740                           l63:
   741  000130                     	line	41
   742                           ;newmain.c: 40: 
   743                           	
   744                           l64:
   745  000130                     	global	start
   746                           	goto	start
   747  000130  EF07  F000         	opt stack 0
   748                           GLOBAL	__end_of_main
   749                           	__end_of_main:
   750  000134                     	signat	_main,89
   751                           	global	_tmr_init
   752                           
   753 ;; *************** function _tmr_init *****************
   754 ;; Defined at:
   755 ;;		line 84 in file "newmain.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, status,2
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   769 ;;      Params:         0       0       0       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0       0       0
   772 ;;      Totals:         0       0       0       0       0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; Hardware stack levels required when called:    1
   776 ;; This function calls:
   777 ;;		Nothing
   778 ;; This function is called by:
   779 ;;		_main
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           psect	text1,class=CODE,space=0,reloc=2,group=0
   783                           	line	84
   784                           global __ptext1
   785                           __ptext1:
   786  000134                     psect	text1
   787                           	file	"newmain.c"
   788                           	line	84
   789                           	global	__size_of_tmr_init
   790                           	__size_of_tmr_init	equ	__end_of_tmr_init-_tmr_init
   791  0000                     	
   792                           _tmr_init:
   793  000134                     ;incstack = 0
   794                           	opt	stack 29
   795                           	line	86
   796                           	
   797                           l777:
   798  000134                     ;newmain.c: 86:     T3CONbits.T3CCP2 = 0;
   799                           	bcf	((c:4017)),c,1	;volatile
   800  000134  92B1               	line	87
   801                           ;newmain.c: 87: 
   802                           	bsf	((c:4017)),c,7	;volatile
   803  000136  8EB1               	line	88
   804                           ;newmain.c: 88: }
   805                           	bsf	((c:4017)),c,0	;volatile
   806  000138  80B1               	line	89
   807                           	
   808                           l779:
   809  00013A                     	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
   810  00013A  0ECF               	andwf	((c:4017)),c	;volatile
   811  00013C  16B1               	line	90
   812                           	
   813                           l781:
   814  00013E                     	bsf	((c:4017)),c,3	;volatile
   815  00013E  86B1               	line	91
   816                           	
   817                           l783:
   818  000140                     	bcf	((c:4017)),c,6	;volatile
   819  000140  9CB1               	line	93
   820                           	
   821                           l73:
   822  000142                     	return	;funcret
   823  000142  0012               	opt stack 0
   824                           GLOBAL	__end_of_tmr_init
   825                           	__end_of_tmr_init:
   826  000144                     	signat	_tmr_init,89
   827                           	global	_ccp2_init
   828                           
   829 ;; *************** function _ccp2_init *****************
   830 ;; Defined at:
   831 ;;		line 73 in file "newmain.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   845 ;;      Params:         0       0       0       0       0       0       0
   846 ;;      Locals:         0       0       0       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0       0       0
   848 ;;      Totals:         0       0       0       0       0       0       0
   849 ;;Total ram usage:        0 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    1
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           psect	text2,class=CODE,space=0,reloc=2,group=0
   859                           	line	73
   860                           global __ptext2
   861                           __ptext2:
   862  000108                     psect	text2
   863                           	file	"newmain.c"
   864                           	line	73
   865                           	global	__size_of_ccp2_init
   866                           	__size_of_ccp2_init	equ	__end_of_ccp2_init-_ccp2_init
   867  0000                     	
   868                           _ccp2_init:
   869  000108                     ;incstack = 0
   870                           	opt	stack 29
   871                           	line	75
   872                           	
   873                           l769:
   874  000108                     ;newmain.c: 75: 
   875                           	movf	((c:4026)),c,w	;volatile
   876  000108  50BA               	andlw	not (((1<<4)-1)<<0)
   877  00010A  0BF0               	iorlw	(0Bh & ((1<<4)-1))<<0
   878  00010C  090B               	movwf	((c:4026)),c	;volatile
   879  00010E  6EBA               	line	77
   880                           	
   881                           l771:
   882  000110                     ;newmain.c: 77: }
   883                           	bsf	((c:4002)),c,0	;volatile
   884  000110  80A2               	line	78
   885                           	
   886                           l773:
   887  000112                     ;newmain.c: 78: 
   888                           	bcf	((c:4001)),c,0	;volatile
   889  000112  90A1               	line	79
   890                           	
   891                           l775:
   892  000114                     ;newmain.c: 79: void tmr_init(void){
   893                           	bsf	((c:4000)),c,0	;volatile
   894  000114  80A0               	line	81
   895                           ;newmain.c: 81:     T3CONbits.TMR3CS = 0;
   896                           	movlw	high(07A12h)
   897  000116  0E7A               	movwf	((c:4027+1)),c	;volatile
   898  000118  6EBC               	movlw	low(07A12h)
   899  00011A  0E12               	movwf	((c:4027)),c	;volatile
   900  00011C  6EBB               	line	82
   901                           	
   902                           l70:
   903  00011E                     	return	;funcret
   904  00011E  0012               	opt stack 0
   905                           GLOBAL	__end_of_ccp2_init
   906                           	__end_of_ccp2_init:
   907  000120                     	signat	_ccp2_init,89
   908                           	global	_adc_init
   909                           
   910 ;; *************** function _adc_init *****************
   911 ;; Defined at:
   912 ;;		line 43 in file "newmain.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, status,2
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   926 ;;      Params:         0       0       0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0       0       0
   929 ;;      Totals:         0       0       0       0       0       0       0
   930 ;;Total ram usage:        0 bytes
   931 ;; Hardware stack levels used:    1
   932 ;; Hardware stack levels required when called:    1
   933 ;; This function calls:
   934 ;;		Nothing
   935 ;; This function is called by:
   936 ;;		_main
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           psect	text3,class=CODE,space=0,reloc=2,group=0
   940                           	line	43
   941                           global __ptext3
   942                           __ptext3:
   943  0000A4                     psect	text3
   944                           	file	"newmain.c"
   945                           	line	43
   946                           	global	__size_of_adc_init
   947                           	__size_of_adc_init	equ	__end_of_adc_init-_adc_init
   948  0000                     	
   949                           _adc_init:
   950  0000A4                     ;incstack = 0
   951                           	opt	stack 29
   952                           	line	48
   953                           	
   954                           l749:
   955  0000A4                     ;newmain.c: 48: 
   956                           	movf	((c:4034)),c,w	;volatile
   957  0000A4  50C2               	andlw	not (((1<<4)-1)<<2)
   958  0000A6  0BC3               	iorlw	(07h & ((1<<4)-1))<<2
   959  0000A8  091C               	movwf	((c:4034)),c	;volatile
   960  0000AA  6EC2               	line	50
   961                           	
   962                           l751:
   963  0000AC                     ;newmain.c: 50:     ADCON1bits.PCFG = 0;
   964                           	bsf	((c:3990)),c,2	;volatile
   965  0000AC  8496               	line	52
   966                           	
   967                           l753:
   968  0000AE                     ;newmain.c: 52: 
   969                           	bsf	((c:4034)),c,0	;volatile
   970  0000AE  80C2               	line	54
   971                           ;newmain.c: 54: 
   972                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
   973  0000B0  0ECF               	andwf	((c:4033)),c	;volatile
   974  0000B2  16C1               	line	55
   975                           	
   976                           l755:
   977  0000B4                     ;newmain.c: 55:     ADCON2bits.ACQT = 1;
   978                           		
   979                           	bcf	((c:4033)),c, 0+0	;volatile
   980  0000B4  90C1               	bcf	((c:4033)),c, 0+1	;volatile
   981  0000B6  92C1               	bcf	((c:4033)),c, 0+2	;volatile
   982  0000B8  94C1               	bcf	((c:4033)),c, 0+3	;volatile
   983  0000BA  96C1               
   984                           	line	58
   985                           ;newmain.c: 58: 
   986                           	movf	((c:4032)),c,w	;volatile
   987  0000BC  50C0               	andlw	not (((1<<3)-1)<<0)
   988  0000BE  0BF8               	iorlw	(03h & ((1<<3)-1))<<0
   989  0000C0  0903               	movwf	((c:4032)),c	;volatile
   990  0000C2  6EC0               	line	60
   991                           ;newmain.c: 60:     PIR1bits.ADIF = 0;
   992                           	movf	((c:4032)),c,w	;volatile
   993  0000C4  50C0               	andlw	not (((1<<3)-1)<<3)
   994  0000C6  0BC7               	iorlw	(01h & ((1<<3)-1))<<3
   995  0000C8  0908               	movwf	((c:4032)),c	;volatile
   996  0000CA  6EC0               	line	62
   997                           	
   998                           l757:
   999  0000CC                     ;newmain.c: 62:     INTCONbits.GIE = 1;
  1000                           	bsf	((c:4032)),c,7	;volatile
  1001  0000CC  8EC0               	line	64
  1002                           	
  1003                           l759:
  1004  0000CE                     ;newmain.c: 64:     RCONbits.IPEN = 1;
  1005                           	bsf	((c:3997)),c,6	;volatile
  1006  0000CE  8C9D               	line	65
  1007                           	
  1008                           l761:
  1009  0000D0                     ;newmain.c: 65: 
  1010                           	bcf	((c:3998)),c,6	;volatile
  1011  0000D0  9C9E               	line	66
  1012                           	
  1013                           l763:
  1014  0000D2                     ;newmain.c: 66: }
  1015                           	bsf	((c:3999)),c,6	;volatile
  1016  0000D2  8C9F               	line	67
  1017                           	
  1018                           l765:
  1019  0000D4                     ;newmain.c: 67: 
  1020                           	bsf	((c:4082)),c,7	;volatile
  1021  0000D4  8EF2               	line	69
  1022                           	
  1023                           l767:
  1024  0000D6                     ;newmain.c: 69: 
  1025                           	bsf	((c:4048)),c,7	;volatile
  1026  0000D6  8ED0               	line	71
  1027                           	
  1028                           l67:
  1029  0000D8                     	return	;funcret
  1030  0000D8  0012               	opt stack 0
  1031                           GLOBAL	__end_of_adc_init
  1032                           	__end_of_adc_init:
  1033  0000DA                     	signat	_adc_init,89
  1034                           	global	_Hi_ISR
  1035                           
  1036 ;; *************** function _Hi_ISR *****************
  1037 ;; Defined at:
  1038 ;;		line 12 in file "newmain.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1052 ;;      Params:         0       0       0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0
  1054 ;;      Temps:          2       0       0       0       0       0       0
  1055 ;;      Totals:         2       0       0       0       0       0       0
  1056 ;;Total ram usage:        2 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		Interrupt level 2
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           psect	intcode,class=CODE,space=0,reloc=2
  1065                           global __pintcode
  1066                           __pintcode:
  1067  000008                     psect	intcode
  1068                           	file	"newmain.c"
  1069                           	line	12
  1070                           	global	__size_of_Hi_ISR
  1071                           	__size_of_Hi_ISR	equ	__end_of_Hi_ISR-_Hi_ISR
  1072  0000                     	
  1073                           _Hi_ISR:
  1074  000008                     ;incstack = 0
  1075                           	opt	stack 29
  1076                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  1077  000008  8215               	global	int_func
  1078                           	call	int_func,f	;refresh shadow registers
  1079  00000A  ED09  F000         psect	intcode_body,class=CODE,space=0,reloc=2
  1080                           global __pintcode_body
  1081                           __pintcode_body:
  1082  000012                     int_func:
  1083  000012                     
  1084                           	pop	; remove dummy address from shadow register refresh
  1085  000012  0006               	movff	fsr2l+0,??_Hi_ISR+0
  1086  000014  CFD9 F013          	movff	fsr2h+0,??_Hi_ISR+1
  1087  000018  CFDA F014          	line	15
  1088                           	
  1089                           i2l785:
  1090  00001C                     ;newmain.c: 15:         TMR3 = 0;
  1091                           	btfss	((c:3998)),c,6	;volatile
  1092  00001C  AC9E               	goto	i2u1_41
  1093  00001E  EF13  F000         	goto	i2u1_40
  1094  000022  EF15  F000         i2u1_41:
  1095  000026                     	goto	i2l51
  1096  000026  EF25  F000         i2u1_40:
  1097  00002A                     	line	16
  1098                           	
  1099                           i2l787:
  1100  00002A                     ;newmain.c: 16:         PIR2bits.CCP2IF = 0;
  1101                           	bcf	((c:3998)),c,6	;volatile
  1102  00002A  9C9E               	line	17
  1103                           	
  1104                           i2l789:
  1105  00002C                     ;newmain.c: 17:         if(count == 7) {
  1106                           	bcf	status,0
  1107  00002C  90D8               	rlcf	((c:_count)),c,w
  1108  00002E  3411               	movwf	fsr2l
  1109  000030  6ED9               	rlcf	((c:_count+1)),c,w
  1110  000032  3412               	movwf	fsr2h
  1111  000034  6EDA               	movlw	low(_result)
  1112  000036  0E01               	addwf	fsr2l
  1113  000038  26D9               	movlw	high(_result)
  1114  00003A  0E00               	addwfc	fsr2h
  1115  00003C  22DA               	movff	(c:4035),postinc2	;volatile
  1116  00003E  CFC3 FFDE          	movff	(c:4035+1),postdec2	;volatile
  1117  000042  CFC4 FFDD          	line	18
  1118                           ;newmain.c: 18:             count = 0;
  1119                           	goto	i2l56
  1120  000046  EF4C  F000         	line	19
  1121                           ;newmain.c: 19:             __nop();
  1122                           	
  1123                           i2l51:
  1124  00004A                     	btfss	((c:4001)),c,0	;volatile
  1125  00004A  A0A1               	goto	i2u2_41
  1126  00004C  EF2A  F000         	goto	i2u2_40
  1127  000050  EF2C  F000         i2u2_41:
  1128  000054                     	goto	i2l56
  1129  000054  EF4C  F000         i2u2_40:
  1130  000058                     	line	20
  1131                           	
  1132                           i2l791:
  1133  000058                     ;newmain.c: 20:         }
  1134                           	movlw	high(0)
  1135  000058  0E00               	movwf	((c:4018+1)),c	;volatile
  1136  00005A  6EB3               	movlw	low(0)
  1137  00005C  0E00               	movwf	((c:4018)),c	;volatile
  1138  00005E  6EB2               	line	21
  1139                           	
  1140                           i2l793:
  1141  000060                     ;newmain.c: 21:         else
  1142                           	bcf	((c:4001)),c,0	;volatile
  1143  000060  90A1               	line	22
  1144                           	
  1145                           i2l795:
  1146  000062                     ;newmain.c: 22:             ++count;
  1147                           		movlw	7
  1148  000062  0E07               	xorwf	((c:_count)),c,w
  1149  000064  1811               iorwf	((c:_count+1)),c,w
  1150  000066  1012               	btfss	status,2
  1151  000068  A4D8               	goto	i2u3_41
  1152  00006A  EF39  F000         	goto	i2u3_40
  1153  00006E  EF3B  F000         
  1154                           i2u3_41:
  1155  000072                     	goto	i2l801
  1156  000072  EF42  F000         i2u3_40:
  1157  000076                     	line	23
  1158                           	
  1159                           i2l797:
  1160  000076                     ;newmain.c: 23:     }
  1161                           	movlw	high(0)
  1162  000076  0E00               	movwf	((c:_count+1)),c
  1163  000078  6E12               	movlw	low(0)
  1164  00007A  0E00               	movwf	((c:_count)),c
  1165  00007C  6E11               	line	24
  1166                           	
  1167                           i2l799:
  1168  00007E                     ;newmain.c: 24:     return;
  1169                           	opt	asmopt_push
  1170                           	opt	asmopt_off
  1171                           	nop
  1172  00007E  F000               	opt	asmopt_pop
  1173                           	line	25
  1174                           ;newmain.c: 25: }
  1175                           	goto	i2l56
  1176  000080  EF4C  F000         	line	26
  1177                           ;newmain.c: 26: 
  1178                           	
  1179                           i2l54:
  1180  000084                     	line	27
  1181                           	
  1182                           i2l801:
  1183  000084                     ;newmain.c: 27: void main(void) {
  1184                           	infsnz	((c:_count)),c
  1185  000084  4A11               	incf	((c:_count+1)),c
  1186  000086  2A12               	goto	i2l56
  1187  000088  EF4C  F000         	
  1188                           i2l55:
  1189  00008C                     	goto	i2l56
  1190  00008C  EF4C  F000         	line	28
  1191                           ;newmain.c: 28: 
  1192                           	
  1193                           i2l53:
  1194  000090                     	goto	i2l56
  1195  000090  EF4C  F000         	
  1196                           i2l52:
  1197  000094                     	goto	i2l56
  1198  000094  EF4C  F000         	line	29
  1199                           	
  1200                           i2l803:
  1201  000098                     	line	30
  1202                           ;newmain.c: 29: 
  1203                           	
  1204                           i2l56:
  1205  000098                     	movff	??_Hi_ISR+1,fsr2h+0
  1206  000098  C014  FFDA         	movff	??_Hi_ISR+0,fsr2l+0
  1207  00009C  C013  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  1208  0000A0  9215               	retfie f
  1209  0000A2  0011               	opt stack 0
  1210                           GLOBAL	__end_of_Hi_ISR
  1211                           	__end_of_Hi_ISR:
  1212  0000A4                     	signat	_Hi_ISR,89
  1213                           	GLOBAL	__activetblptr
  1214                           __activetblptr	EQU	0
  1215  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  1216                           	PSECT	rparam,class=COMRAM,space=1,noexec
  1217                           	GLOBAL	__Lrparam
  1218                           	FNCONF	rparam,??,?
  1219                           	GLOBAL	___rparam_used
  1220                           	___rparam_used EQU 1
  1221  0000                     	GLOBAL	___param_bank
  1222                           	___param_bank EQU 0
  1223  0000                     GLOBAL	__Lparam, __Hparam
  1224                           GLOBAL	__Lrparam, __Hrparam
  1225                           __Lparam	EQU	__Lrparam
  1226  0000                     __Hparam	EQU	__Hrparam
  1227  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  1228                           	global	btemp
  1229                           btemp:
  1230  000015                     	ds	1
  1231  000015                     	global	int$flags
  1232                           	int$flags	set btemp
  1233  0000                     	global	wtemp8
  1234                           	wtemp8 set btemp+1
  1235  0000                     	global	ttemp5
  1236                           	ttemp5 set btemp+1
  1237  0000                     	global	ttemp6
  1238                           	ttemp6 set btemp+4
  1239  0000                     	global	ttemp7
  1240                           	ttemp7 set btemp+8
  1241  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      2      20
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _adc_init
                          _ccp2_init
                           _tmr_init
 ---------------------------------------------------------------------------------
 (1) _tmr_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ccp2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Hi_ISR                                               2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _ccp2_init
   _tmr_init

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      2      14       1       15.9%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      14        0.0%
DATA                 0      0      14      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Dec 10 19:15:34 2018

                     l61 012C                       l70 011E                       l62 012C  
                     l63 0130                       l64 0130                       l73 0142  
                     l67 00D8                      l805 0120                      l751 00AC  
                    l761 00D0                      l753 00AE                      l763 00D2  
                    l755 00B4                      l771 0110                      l765 00D4  
                    l757 00CC                      l749 00A4                      l773 0112  
                    l781 013E                      l767 00D6                      l759 00CE  
                    l775 0114                      l783 0140                      l769 0108  
                    l777 0134                      l779 013A                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     i2l51 004A  
                   i2l52 0094                     i2l53 0090                     i2l54 0084  
                   i2l55 008C                     i2l56 0098                     _TMR3 000FB2  
                   _main 0120                     fsr2h 000FDA                     fsr2l 000FD9  
                   btemp 0015                     start 000E             ___param_bank 000000  
                  ?_main 0013                    _ADRES 000FC3                    _CCPR2 000FBB  
                  i2l801 0084                    i2l803 0098                    i2l791 0058  
                  i2l793 0060                    i2l785 001C                    i2l795 0062  
                  i2l787 002A                    i2l797 0076                    i2l789 002C  
                  i2l799 007E                    _count 0011                    tablat 000FF5  
                  ttemp5 0016                    ttemp6 0019                    ttemp7 001D  
                  status 000FD8                    wtemp8 0016          __initialization 00DA  
           __end_of_main 0134                   ??_main 0015            __activetblptr 000000  
       __end_of_adc_init 00DA                   i2u1_40 002A                   i2u1_41 0026  
                 i2u2_40 0058                   i2u2_41 0054                   i2u3_40 0076  
                 i2u3_41 0072                   _Hi_ISR 0008                   clear_0 00F8  
                 _result 0001             __pdataCOMRAM 0011                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_of_tmr_init 0144  
     __size_of_ccp2_init 0018               __accesstop 0080  __end_of__initialization 00FE  
          ___rparam_used 000001           __pcstackCOMRAM 0013                  ?_Hi_ISR 0013  
      __end_of_ccp2_init 0120                ?_adc_init 0013          __size_of_Hi_ISR 009C  
                __Hparam 0000                  __Lparam 0000                ?_tmr_init 0013  
                __pcinit 00DA                  __ramtop 0600               ??_adc_init 0015  
                __ptext0 0120                  __ptext1 0134                  __ptext2 0108  
                __ptext3 00A4                _T3CONbits 000FB1           __pintcode_body 0012  
   end_of_initialization 00FE                  int_func 0012                  postdec2 000FDD  
                postinc0 000FEE                  postinc2 000FDE               ??_tmr_init 0015  
              _TRISEbits 000F96              _CCP2CONbits 000FBA           __end_of_Hi_ISR 00A4  
          __pidataCOMRAM 0144      start_initialization 00DA         __CFG_OSC$INTIO67 000000  
               ??_Hi_ISR 0013        __size_of_adc_init 0036              __pbssCOMRAM 0001  
              _ccp2_init 0108                __pintcode 0008        __size_of_tmr_init 0010  
             ?_ccp2_init 0013                 _IPR1bits 000F9F                 _IPR2bits 000FA2  
               _PIE1bits 000F9D                 _PIE2bits 000FA0                 _PIR1bits 000F9E  
               _PIR2bits 000FA1                 _RCONbits 000FD0               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0                 __Hrparam 0000  
               __Lrparam 0000                 _adc_init 00A4              ??_ccp2_init 0015  
          __size_of_main 0014                 int$flags 0015                 _tmr_init 0134  
             _INTCONbits 000FF2                 intlevel2 0000  
