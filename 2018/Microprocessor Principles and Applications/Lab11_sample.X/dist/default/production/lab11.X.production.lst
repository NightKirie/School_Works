

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Dec 07 19:32:17 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   384                           PORTA equ 0F80h ;# 
   385  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   386                           PORTB equ 0F81h ;# 
   387  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   388                           PORTC equ 0F82h ;# 
   389  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   390                           PORTD equ 0F83h ;# 
   391  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   392                           PORTE equ 0F84h ;# 
   393  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   394                           LATA equ 0F89h ;# 
   395  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   396                           LATB equ 0F8Ah ;# 
   397  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   398                           LATC equ 0F8Bh ;# 
   399  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   400                           LATD equ 0F8Ch ;# 
   401  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   402                           LATE equ 0F8Dh ;# 
   403  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   404                           TRISA equ 0F92h ;# 
   405  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   406                           DDRA equ 0F92h ;# 
   407  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   408                           TRISB equ 0F93h ;# 
   409  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   410                           DDRB equ 0F93h ;# 
   411  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   412                           TRISC equ 0F94h ;# 
   413  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   414                           DDRC equ 0F94h ;# 
   415  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   416                           TRISD equ 0F95h ;# 
   417  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   418                           DDRD equ 0F95h ;# 
   419  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   420                           TRISE equ 0F96h ;# 
   421  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   422                           DDRE equ 0F96h ;# 
   423  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   424                           OSCTUNE equ 0F9Bh ;# 
   425  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   426                           PIE1 equ 0F9Dh ;# 
   427  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   428                           PIR1 equ 0F9Eh ;# 
   429  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   430                           IPR1 equ 0F9Fh ;# 
   431  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   432                           PIE2 equ 0FA0h ;# 
   433  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   434                           PIR2 equ 0FA1h ;# 
   435  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   436                           IPR2 equ 0FA2h ;# 
   437  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   438                           EECON1 equ 0FA6h ;# 
   439  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   440                           EECON2 equ 0FA7h ;# 
   441  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   442                           EEDATA equ 0FA8h ;# 
   443  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   444                           EEADR equ 0FA9h ;# 
   445  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   446                           RCSTA equ 0FABh ;# 
   447  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   448                           RCSTA1 equ 0FABh ;# 
   449  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   450                           TXSTA equ 0FACh ;# 
   451  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   452                           TXSTA1 equ 0FACh ;# 
   453  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   454                           TXREG equ 0FADh ;# 
   455  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   456                           TXREG1 equ 0FADh ;# 
   457  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   458                           RCREG equ 0FAEh ;# 
   459  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   460                           RCREG1 equ 0FAEh ;# 
   461  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   462                           SPBRG equ 0FAFh ;# 
   463  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   464                           SPBRG1 equ 0FAFh ;# 
   465  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   466                           SPBRGH equ 0FB0h ;# 
   467  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   468                           T3CON equ 0FB1h ;# 
   469  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   470                           TMR3 equ 0FB2h ;# 
   471  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   472                           TMR3L equ 0FB2h ;# 
   473  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   474                           TMR3H equ 0FB3h ;# 
   475  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   476                           CMCON equ 0FB4h ;# 
   477  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   478                           CVRCON equ 0FB5h ;# 
   479  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   480                           ECCP1AS equ 0FB6h ;# 
   481  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   482                           ECCPAS equ 0FB6h ;# 
   483  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   484                           PWM1CON equ 0FB7h ;# 
   485  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   486                           ECCP1DEL equ 0FB7h ;# 
   487  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   488                           BAUDCON equ 0FB8h ;# 
   489  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   490                           BAUDCTL equ 0FB8h ;# 
   491  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   492                           CCP2CON equ 0FBAh ;# 
   493  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   494                           CCPR2 equ 0FBBh ;# 
   495  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   496                           CCPR2L equ 0FBBh ;# 
   497  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   498                           CCPR2H equ 0FBCh ;# 
   499  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   500                           CCP1CON equ 0FBDh ;# 
   501  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   502                           CCPR1 equ 0FBEh ;# 
   503  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   504                           CCPR1L equ 0FBEh ;# 
   505  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   506                           CCPR1H equ 0FBFh ;# 
   507  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   508                           ADCON2 equ 0FC0h ;# 
   509  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   510                           ADCON1 equ 0FC1h ;# 
   511  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   512                           ADCON0 equ 0FC2h ;# 
   513  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   514                           ADRES equ 0FC3h ;# 
   515  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   516                           ADRESL equ 0FC3h ;# 
   517  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   518                           ADRESH equ 0FC4h ;# 
   519  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   520                           SSPCON2 equ 0FC5h ;# 
   521  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   522                           SSPCON1 equ 0FC6h ;# 
   523  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   524                           SSPSTAT equ 0FC7h ;# 
   525  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   526                           SSPADD equ 0FC8h ;# 
   527  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   528                           SSPBUF equ 0FC9h ;# 
   529  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   530                           T2CON equ 0FCAh ;# 
   531  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   532                           PR2 equ 0FCBh ;# 
   533  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   534                           MEMCON equ 0FCBh ;# 
   535  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   536                           TMR2 equ 0FCCh ;# 
   537  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   538                           T1CON equ 0FCDh ;# 
   539  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   540                           TMR1 equ 0FCEh ;# 
   541  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   542                           TMR1L equ 0FCEh ;# 
   543  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   544                           TMR1H equ 0FCFh ;# 
   545  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   546                           RCON equ 0FD0h ;# 
   547  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   548                           WDTCON equ 0FD1h ;# 
   549  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   550                           HLVDCON equ 0FD2h ;# 
   551  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   552                           LVDCON equ 0FD2h ;# 
   553  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   554                           OSCCON equ 0FD3h ;# 
   555  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   556                           T0CON equ 0FD5h ;# 
   557  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   558                           TMR0 equ 0FD6h ;# 
   559  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   560                           TMR0L equ 0FD6h ;# 
   561  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   562                           TMR0H equ 0FD7h ;# 
   563  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   564                           STATUS equ 0FD8h ;# 
   565  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   566                           FSR2 equ 0FD9h ;# 
   567  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   568                           FSR2L equ 0FD9h ;# 
   569  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   570                           FSR2H equ 0FDAh ;# 
   571  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   572                           PLUSW2 equ 0FDBh ;# 
   573  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   574                           PREINC2 equ 0FDCh ;# 
   575  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   576                           POSTDEC2 equ 0FDDh ;# 
   577  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   578                           POSTINC2 equ 0FDEh ;# 
   579  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   580                           INDF2 equ 0FDFh ;# 
   581  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   582                           BSR equ 0FE0h ;# 
   583  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   584                           FSR1 equ 0FE1h ;# 
   585  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   586                           FSR1L equ 0FE1h ;# 
   587  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   588                           FSR1H equ 0FE2h ;# 
   589  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   590                           PLUSW1 equ 0FE3h ;# 
   591  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   592                           PREINC1 equ 0FE4h ;# 
   593  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   594                           POSTDEC1 equ 0FE5h ;# 
   595  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   596                           POSTINC1 equ 0FE6h ;# 
   597  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   598                           INDF1 equ 0FE7h ;# 
   599  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   600                           WREG equ 0FE8h ;# 
   601  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   602                           FSR0 equ 0FE9h ;# 
   603  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   604                           FSR0L equ 0FE9h ;# 
   605  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   606                           FSR0H equ 0FEAh ;# 
   607  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   608                           PLUSW0 equ 0FEBh ;# 
   609  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   610                           PREINC0 equ 0FECh ;# 
   611  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   612                           POSTDEC0 equ 0FEDh ;# 
   613  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   614                           POSTINC0 equ 0FEEh ;# 
   615  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   616                           INDF0 equ 0FEFh ;# 
   617  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   618                           INTCON3 equ 0FF0h ;# 
   619  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   620                           INTCON2 equ 0FF1h ;# 
   621  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   622                           INTCON equ 0FF2h ;# 
   623  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   624                           PROD equ 0FF3h ;# 
   625  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   626                           PRODL equ 0FF3h ;# 
   627  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   628                           PRODH equ 0FF4h ;# 
   629  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   630                           TABLAT equ 0FF5h ;# 
   631  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   632                           TBLPTR equ 0FF6h ;# 
   633  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   634                           TBLPTRL equ 0FF6h ;# 
   635  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   636                           TBLPTRH equ 0FF7h ;# 
   637  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   638                           TBLPTRU equ 0FF8h ;# 
   639  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   640                           PCLAT equ 0FF9h ;# 
   641  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   642                           PC equ 0FF9h ;# 
   643  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   644                           PCL equ 0FF9h ;# 
   645  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   646                           PCLATH equ 0FFAh ;# 
   647  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   648                           PCLATU equ 0FFBh ;# 
   649  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   650                           STKPTR equ 0FFCh ;# 
   651  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   652                           TOS equ 0FFDh ;# 
   653  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   654                           TOSL equ 0FFDh ;# 
   655  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   656                           TOSH equ 0FFEh ;# 
   657  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   658                           TOSU equ 0FFFh ;# 
   659  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   660                           PORTA equ 0F80h ;# 
   661  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   662                           PORTB equ 0F81h ;# 
   663  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   664                           PORTC equ 0F82h ;# 
   665  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   666                           PORTD equ 0F83h ;# 
   667  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   668                           PORTE equ 0F84h ;# 
   669  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   670                           LATA equ 0F89h ;# 
   671  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   672                           LATB equ 0F8Ah ;# 
   673  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   674                           LATC equ 0F8Bh ;# 
   675  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   676                           LATD equ 0F8Ch ;# 
   677  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   678                           LATE equ 0F8Dh ;# 
   679  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   680                           TRISA equ 0F92h ;# 
   681  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   682                           DDRA equ 0F92h ;# 
   683  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   684                           TRISB equ 0F93h ;# 
   685  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   686                           DDRB equ 0F93h ;# 
   687  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   688                           TRISC equ 0F94h ;# 
   689  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   690                           DDRC equ 0F94h ;# 
   691  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   692                           TRISD equ 0F95h ;# 
   693  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   694                           DDRD equ 0F95h ;# 
   695  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   696                           TRISE equ 0F96h ;# 
   697  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   698                           DDRE equ 0F96h ;# 
   699  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   700                           OSCTUNE equ 0F9Bh ;# 
   701  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   702                           PIE1 equ 0F9Dh ;# 
   703  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   704                           PIR1 equ 0F9Eh ;# 
   705  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   706                           IPR1 equ 0F9Fh ;# 
   707  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   708                           PIE2 equ 0FA0h ;# 
   709  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   710                           PIR2 equ 0FA1h ;# 
   711  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   712                           IPR2 equ 0FA2h ;# 
   713  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   714                           EECON1 equ 0FA6h ;# 
   715  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   716                           EECON2 equ 0FA7h ;# 
   717  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   718                           EEDATA equ 0FA8h ;# 
   719  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   720                           EEADR equ 0FA9h ;# 
   721  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   722                           RCSTA equ 0FABh ;# 
   723  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   724                           RCSTA1 equ 0FABh ;# 
   725  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   726                           TXSTA equ 0FACh ;# 
   727  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   728                           TXSTA1 equ 0FACh ;# 
   729  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   730                           TXREG equ 0FADh ;# 
   731  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   732                           TXREG1 equ 0FADh ;# 
   733  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   734                           RCREG equ 0FAEh ;# 
   735  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   736                           RCREG1 equ 0FAEh ;# 
   737  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   738                           SPBRG equ 0FAFh ;# 
   739  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   740                           SPBRG1 equ 0FAFh ;# 
   741  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   742                           SPBRGH equ 0FB0h ;# 
   743  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   744                           T3CON equ 0FB1h ;# 
   745  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   746                           TMR3 equ 0FB2h ;# 
   747  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   748                           TMR3L equ 0FB2h ;# 
   749  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   750                           TMR3H equ 0FB3h ;# 
   751  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   752                           CMCON equ 0FB4h ;# 
   753  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   754                           CVRCON equ 0FB5h ;# 
   755  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   756                           ECCP1AS equ 0FB6h ;# 
   757  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   758                           ECCPAS equ 0FB6h ;# 
   759  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   760                           PWM1CON equ 0FB7h ;# 
   761  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   762                           ECCP1DEL equ 0FB7h ;# 
   763  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   764                           BAUDCON equ 0FB8h ;# 
   765  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   766                           BAUDCTL equ 0FB8h ;# 
   767  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   768                           CCP2CON equ 0FBAh ;# 
   769  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   770                           CCPR2 equ 0FBBh ;# 
   771  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   772                           CCPR2L equ 0FBBh ;# 
   773  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   774                           CCPR2H equ 0FBCh ;# 
   775  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   776                           CCP1CON equ 0FBDh ;# 
   777  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   778                           CCPR1 equ 0FBEh ;# 
   779  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   780                           CCPR1L equ 0FBEh ;# 
   781  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   782                           CCPR1H equ 0FBFh ;# 
   783  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   784                           ADCON2 equ 0FC0h ;# 
   785  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   786                           ADCON1 equ 0FC1h ;# 
   787  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   788                           ADCON0 equ 0FC2h ;# 
   789  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   790                           ADRES equ 0FC3h ;# 
   791  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   792                           ADRESL equ 0FC3h ;# 
   793  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   794                           ADRESH equ 0FC4h ;# 
   795  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   796                           SSPCON2 equ 0FC5h ;# 
   797  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   798                           SSPCON1 equ 0FC6h ;# 
   799  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   800                           SSPSTAT equ 0FC7h ;# 
   801  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   802                           SSPADD equ 0FC8h ;# 
   803  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   804                           SSPBUF equ 0FC9h ;# 
   805  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   806                           T2CON equ 0FCAh ;# 
   807  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   808                           PR2 equ 0FCBh ;# 
   809  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   810                           MEMCON equ 0FCBh ;# 
   811  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   812                           TMR2 equ 0FCCh ;# 
   813  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   814                           T1CON equ 0FCDh ;# 
   815  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   816                           TMR1 equ 0FCEh ;# 
   817  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   818                           TMR1L equ 0FCEh ;# 
   819  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   820                           TMR1H equ 0FCFh ;# 
   821  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   822                           RCON equ 0FD0h ;# 
   823  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   824                           WDTCON equ 0FD1h ;# 
   825  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   826                           HLVDCON equ 0FD2h ;# 
   827  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   828                           LVDCON equ 0FD2h ;# 
   829  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   830                           OSCCON equ 0FD3h ;# 
   831  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   832                           T0CON equ 0FD5h ;# 
   833  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   834                           TMR0 equ 0FD6h ;# 
   835  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   836                           TMR0L equ 0FD6h ;# 
   837  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   838                           TMR0H equ 0FD7h ;# 
   839  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   840                           STATUS equ 0FD8h ;# 
   841  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   842                           FSR2 equ 0FD9h ;# 
   843  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   844                           FSR2L equ 0FD9h ;# 
   845  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   846                           FSR2H equ 0FDAh ;# 
   847  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   848                           PLUSW2 equ 0FDBh ;# 
   849  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   850                           PREINC2 equ 0FDCh ;# 
   851  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   852                           POSTDEC2 equ 0FDDh ;# 
   853  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   854                           POSTINC2 equ 0FDEh ;# 
   855  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   856                           INDF2 equ 0FDFh ;# 
   857  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   858                           BSR equ 0FE0h ;# 
   859  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   860                           FSR1 equ 0FE1h ;# 
   861  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   862                           FSR1L equ 0FE1h ;# 
   863  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   864                           FSR1H equ 0FE2h ;# 
   865  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   866                           PLUSW1 equ 0FE3h ;# 
   867  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   868                           PREINC1 equ 0FE4h ;# 
   869  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   870                           POSTDEC1 equ 0FE5h ;# 
   871  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   872                           POSTINC1 equ 0FE6h ;# 
   873  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   874                           INDF1 equ 0FE7h ;# 
   875  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   876                           WREG equ 0FE8h ;# 
   877  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   878                           FSR0 equ 0FE9h ;# 
   879  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   880                           FSR0L equ 0FE9h ;# 
   881  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   882                           FSR0H equ 0FEAh ;# 
   883  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   884                           PLUSW0 equ 0FEBh ;# 
   885  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   886                           PREINC0 equ 0FECh ;# 
   887  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   888                           POSTDEC0 equ 0FEDh ;# 
   889  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   890                           POSTINC0 equ 0FEEh ;# 
   891  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   892                           INDF0 equ 0FEFh ;# 
   893  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   894                           INTCON3 equ 0FF0h ;# 
   895  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   896                           INTCON2 equ 0FF1h ;# 
   897  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   898                           INTCON equ 0FF2h ;# 
   899  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   900                           PROD equ 0FF3h ;# 
   901  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   902                           PRODL equ 0FF3h ;# 
   903  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   904                           PRODH equ 0FF4h ;# 
   905  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   906                           TABLAT equ 0FF5h ;# 
   907  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   908                           TBLPTR equ 0FF6h ;# 
   909  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   910                           TBLPTRL equ 0FF6h ;# 
   911  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   912                           TBLPTRH equ 0FF7h ;# 
   913  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   914                           TBLPTRU equ 0FF8h ;# 
   915  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   916                           PCLAT equ 0FF9h ;# 
   917  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   918                           PC equ 0FF9h ;# 
   919  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   920                           PCL equ 0FF9h ;# 
   921  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   922                           PCLATH equ 0FFAh ;# 
   923  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   924                           PCLATU equ 0FFBh ;# 
   925  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   926                           STKPTR equ 0FFCh ;# 
   927  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   928                           TOS equ 0FFDh ;# 
   929  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   930                           TOSL equ 0FFDh ;# 
   931  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   932                           TOSH equ 0FFEh ;# 
   933  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   934                           TOSU equ 0FFFh ;# 
   935  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   936                           PORTA equ 0F80h ;# 
   937  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   938                           PORTB equ 0F81h ;# 
   939  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   940                           PORTC equ 0F82h ;# 
   941  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   942                           PORTD equ 0F83h ;# 
   943  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   944                           PORTE equ 0F84h ;# 
   945  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   946                           LATA equ 0F89h ;# 
   947  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   948                           LATB equ 0F8Ah ;# 
   949  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   950                           LATC equ 0F8Bh ;# 
   951  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   952                           LATD equ 0F8Ch ;# 
   953  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   954                           LATE equ 0F8Dh ;# 
   955  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   956                           TRISA equ 0F92h ;# 
   957  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   958                           DDRA equ 0F92h ;# 
   959  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   960                           TRISB equ 0F93h ;# 
   961  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   962                           DDRB equ 0F93h ;# 
   963  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   964                           TRISC equ 0F94h ;# 
   965  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   966                           DDRC equ 0F94h ;# 
   967  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   968                           TRISD equ 0F95h ;# 
   969  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   970                           DDRD equ 0F95h ;# 
   971  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   972                           TRISE equ 0F96h ;# 
   973  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   974                           DDRE equ 0F96h ;# 
   975  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   976                           OSCTUNE equ 0F9Bh ;# 
   977  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   978                           PIE1 equ 0F9Dh ;# 
   979  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   980                           PIR1 equ 0F9Eh ;# 
   981  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   982                           IPR1 equ 0F9Fh ;# 
   983  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   984                           PIE2 equ 0FA0h ;# 
   985  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   986                           PIR2 equ 0FA1h ;# 
   987  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   988                           IPR2 equ 0FA2h ;# 
   989  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   990                           EECON1 equ 0FA6h ;# 
   991  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   992                           EECON2 equ 0FA7h ;# 
   993  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   994                           EEDATA equ 0FA8h ;# 
   995  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   996                           EEADR equ 0FA9h ;# 
   997  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   998                           RCSTA equ 0FABh ;# 
   999  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1000                           RCSTA1 equ 0FABh ;# 
  1001  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1002                           TXSTA equ 0FACh ;# 
  1003  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1004                           TXSTA1 equ 0FACh ;# 
  1005  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1006                           TXREG equ 0FADh ;# 
  1007  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1008                           TXREG1 equ 0FADh ;# 
  1009  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1010                           RCREG equ 0FAEh ;# 
  1011  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1012                           RCREG1 equ 0FAEh ;# 
  1013  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1014                           SPBRG equ 0FAFh ;# 
  1015  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1016                           SPBRG1 equ 0FAFh ;# 
  1017  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1018                           SPBRGH equ 0FB0h ;# 
  1019  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1020                           T3CON equ 0FB1h ;# 
  1021  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1022                           TMR3 equ 0FB2h ;# 
  1023  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1024                           TMR3L equ 0FB2h ;# 
  1025  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1026                           TMR3H equ 0FB3h ;# 
  1027  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1028                           CMCON equ 0FB4h ;# 
  1029  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1030                           CVRCON equ 0FB5h ;# 
  1031  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1032                           ECCP1AS equ 0FB6h ;# 
  1033  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1034                           ECCPAS equ 0FB6h ;# 
  1035  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1036                           PWM1CON equ 0FB7h ;# 
  1037  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1038                           ECCP1DEL equ 0FB7h ;# 
  1039  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1040                           BAUDCON equ 0FB8h ;# 
  1041  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1042                           BAUDCTL equ 0FB8h ;# 
  1043  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1044                           CCP2CON equ 0FBAh ;# 
  1045  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1046                           CCPR2 equ 0FBBh ;# 
  1047  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1048                           CCPR2L equ 0FBBh ;# 
  1049  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1050                           CCPR2H equ 0FBCh ;# 
  1051  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1052                           CCP1CON equ 0FBDh ;# 
  1053  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1054                           CCPR1 equ 0FBEh ;# 
  1055  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1056                           CCPR1L equ 0FBEh ;# 
  1057  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1058                           CCPR1H equ 0FBFh ;# 
  1059  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1060                           ADCON2 equ 0FC0h ;# 
  1061  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1062                           ADCON1 equ 0FC1h ;# 
  1063  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1064                           ADCON0 equ 0FC2h ;# 
  1065  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1066                           ADRES equ 0FC3h ;# 
  1067  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1068                           ADRESL equ 0FC3h ;# 
  1069  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1070                           ADRESH equ 0FC4h ;# 
  1071  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1072                           SSPCON2 equ 0FC5h ;# 
  1073  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1074                           SSPCON1 equ 0FC6h ;# 
  1075  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1076                           SSPSTAT equ 0FC7h ;# 
  1077  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1078                           SSPADD equ 0FC8h ;# 
  1079  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1080                           SSPBUF equ 0FC9h ;# 
  1081  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1082                           T2CON equ 0FCAh ;# 
  1083  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1084                           PR2 equ 0FCBh ;# 
  1085  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1086                           MEMCON equ 0FCBh ;# 
  1087  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1088                           TMR2 equ 0FCCh ;# 
  1089  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1090                           T1CON equ 0FCDh ;# 
  1091  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1092                           TMR1 equ 0FCEh ;# 
  1093  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1094                           TMR1L equ 0FCEh ;# 
  1095  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1096                           TMR1H equ 0FCFh ;# 
  1097  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1098                           RCON equ 0FD0h ;# 
  1099  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1100                           WDTCON equ 0FD1h ;# 
  1101  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1102                           HLVDCON equ 0FD2h ;# 
  1103  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1104                           LVDCON equ 0FD2h ;# 
  1105  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1106                           OSCCON equ 0FD3h ;# 
  1107  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1108                           T0CON equ 0FD5h ;# 
  1109  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1110                           TMR0 equ 0FD6h ;# 
  1111  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1112                           TMR0L equ 0FD6h ;# 
  1113  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1114                           TMR0H equ 0FD7h ;# 
  1115  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1116                           STATUS equ 0FD8h ;# 
  1117  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1118                           FSR2 equ 0FD9h ;# 
  1119  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1120                           FSR2L equ 0FD9h ;# 
  1121  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1122                           FSR2H equ 0FDAh ;# 
  1123  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1124                           PLUSW2 equ 0FDBh ;# 
  1125  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1126                           PREINC2 equ 0FDCh ;# 
  1127  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1128                           POSTDEC2 equ 0FDDh ;# 
  1129  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1130                           POSTINC2 equ 0FDEh ;# 
  1131  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1132                           INDF2 equ 0FDFh ;# 
  1133  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1134                           BSR equ 0FE0h ;# 
  1135  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1136                           FSR1 equ 0FE1h ;# 
  1137  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1138                           FSR1L equ 0FE1h ;# 
  1139  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1140                           FSR1H equ 0FE2h ;# 
  1141  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1142                           PLUSW1 equ 0FE3h ;# 
  1143  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1144                           PREINC1 equ 0FE4h ;# 
  1145  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1146                           POSTDEC1 equ 0FE5h ;# 
  1147  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1148                           POSTINC1 equ 0FE6h ;# 
  1149  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1150                           INDF1 equ 0FE7h ;# 
  1151  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1152                           WREG equ 0FE8h ;# 
  1153  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1154                           FSR0 equ 0FE9h ;# 
  1155  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1156                           FSR0L equ 0FE9h ;# 
  1157  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1158                           FSR0H equ 0FEAh ;# 
  1159  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1160                           PLUSW0 equ 0FEBh ;# 
  1161  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1162                           PREINC0 equ 0FECh ;# 
  1163  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1164                           POSTDEC0 equ 0FEDh ;# 
  1165  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1166                           POSTINC0 equ 0FEEh ;# 
  1167  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1168                           INDF0 equ 0FEFh ;# 
  1169  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1170                           INTCON3 equ 0FF0h ;# 
  1171  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1172                           INTCON2 equ 0FF1h ;# 
  1173  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1174                           INTCON equ 0FF2h ;# 
  1175  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1176                           PROD equ 0FF3h ;# 
  1177  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1178                           PRODL equ 0FF3h ;# 
  1179  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1180                           PRODH equ 0FF4h ;# 
  1181  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1182                           TABLAT equ 0FF5h ;# 
  1183  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1184                           TBLPTR equ 0FF6h ;# 
  1185  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1186                           TBLPTRL equ 0FF6h ;# 
  1187  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1188                           TBLPTRH equ 0FF7h ;# 
  1189  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1190                           TBLPTRU equ 0FF8h ;# 
  1191  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1192                           PCLAT equ 0FF9h ;# 
  1193  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1194                           PC equ 0FF9h ;# 
  1195  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1196                           PCL equ 0FF9h ;# 
  1197  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1198                           PCLATH equ 0FFAh ;# 
  1199  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1200                           PCLATU equ 0FFBh ;# 
  1201  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1202                           STKPTR equ 0FFCh ;# 
  1203  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1204                           TOS equ 0FFDh ;# 
  1205  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1206                           TOSL equ 0FFDh ;# 
  1207  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1208                           TOSH equ 0FFEh ;# 
  1209  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1210                           TOSU equ 0FFFh ;# 
  1211  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1212                           PORTA equ 0F80h ;# 
  1213  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1214                           PORTB equ 0F81h ;# 
  1215  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1216                           PORTC equ 0F82h ;# 
  1217  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1218                           PORTD equ 0F83h ;# 
  1219  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1220                           PORTE equ 0F84h ;# 
  1221  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1222                           LATA equ 0F89h ;# 
  1223  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1224                           LATB equ 0F8Ah ;# 
  1225  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1226                           LATC equ 0F8Bh ;# 
  1227  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1228                           LATD equ 0F8Ch ;# 
  1229  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1230                           LATE equ 0F8Dh ;# 
  1231  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1232                           TRISA equ 0F92h ;# 
  1233  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1234                           DDRA equ 0F92h ;# 
  1235  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1236                           TRISB equ 0F93h ;# 
  1237  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1238                           DDRB equ 0F93h ;# 
  1239  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1240                           TRISC equ 0F94h ;# 
  1241  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1242                           DDRC equ 0F94h ;# 
  1243  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1244                           TRISD equ 0F95h ;# 
  1245  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1246                           DDRD equ 0F95h ;# 
  1247  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1248                           TRISE equ 0F96h ;# 
  1249  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1250                           DDRE equ 0F96h ;# 
  1251  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1252                           OSCTUNE equ 0F9Bh ;# 
  1253  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1254                           PIE1 equ 0F9Dh ;# 
  1255  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1256                           PIR1 equ 0F9Eh ;# 
  1257  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1258                           IPR1 equ 0F9Fh ;# 
  1259  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1260                           PIE2 equ 0FA0h ;# 
  1261  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1262                           PIR2 equ 0FA1h ;# 
  1263  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1264                           IPR2 equ 0FA2h ;# 
  1265  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1266                           EECON1 equ 0FA6h ;# 
  1267  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1268                           EECON2 equ 0FA7h ;# 
  1269  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1270                           EEDATA equ 0FA8h ;# 
  1271  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1272                           EEADR equ 0FA9h ;# 
  1273  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1274                           RCSTA equ 0FABh ;# 
  1275  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1276                           RCSTA1 equ 0FABh ;# 
  1277  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1278                           TXSTA equ 0FACh ;# 
  1279  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1280                           TXSTA1 equ 0FACh ;# 
  1281  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1282                           TXREG equ 0FADh ;# 
  1283  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1284                           TXREG1 equ 0FADh ;# 
  1285  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1286                           RCREG equ 0FAEh ;# 
  1287  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1288                           RCREG1 equ 0FAEh ;# 
  1289  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1290                           SPBRG equ 0FAFh ;# 
  1291  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1292                           SPBRG1 equ 0FAFh ;# 
  1293  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1294                           SPBRGH equ 0FB0h ;# 
  1295  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1296                           T3CON equ 0FB1h ;# 
  1297  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1298                           TMR3 equ 0FB2h ;# 
  1299  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1300                           TMR3L equ 0FB2h ;# 
  1301  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1302                           TMR3H equ 0FB3h ;# 
  1303  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1304                           CMCON equ 0FB4h ;# 
  1305  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1306                           CVRCON equ 0FB5h ;# 
  1307  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1308                           ECCP1AS equ 0FB6h ;# 
  1309  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1310                           ECCPAS equ 0FB6h ;# 
  1311  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1312                           PWM1CON equ 0FB7h ;# 
  1313  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1314                           ECCP1DEL equ 0FB7h ;# 
  1315  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1316                           BAUDCON equ 0FB8h ;# 
  1317  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1318                           BAUDCTL equ 0FB8h ;# 
  1319  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1320                           CCP2CON equ 0FBAh ;# 
  1321  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1322                           CCPR2 equ 0FBBh ;# 
  1323  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1324                           CCPR2L equ 0FBBh ;# 
  1325  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1326                           CCPR2H equ 0FBCh ;# 
  1327  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1328                           CCP1CON equ 0FBDh ;# 
  1329  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1330                           CCPR1 equ 0FBEh ;# 
  1331  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1332                           CCPR1L equ 0FBEh ;# 
  1333  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1334                           CCPR1H equ 0FBFh ;# 
  1335  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1336                           ADCON2 equ 0FC0h ;# 
  1337  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1338                           ADCON1 equ 0FC1h ;# 
  1339  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1340                           ADCON0 equ 0FC2h ;# 
  1341  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1342                           ADRES equ 0FC3h ;# 
  1343  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1344                           ADRESL equ 0FC3h ;# 
  1345  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1346                           ADRESH equ 0FC4h ;# 
  1347  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1348                           SSPCON2 equ 0FC5h ;# 
  1349  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1350                           SSPCON1 equ 0FC6h ;# 
  1351  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1352                           SSPSTAT equ 0FC7h ;# 
  1353  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1354                           SSPADD equ 0FC8h ;# 
  1355  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1356                           SSPBUF equ 0FC9h ;# 
  1357  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1358                           T2CON equ 0FCAh ;# 
  1359  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1360                           PR2 equ 0FCBh ;# 
  1361  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1362                           MEMCON equ 0FCBh ;# 
  1363  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1364                           TMR2 equ 0FCCh ;# 
  1365  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1366                           T1CON equ 0FCDh ;# 
  1367  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1368                           TMR1 equ 0FCEh ;# 
  1369  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1370                           TMR1L equ 0FCEh ;# 
  1371  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1372                           TMR1H equ 0FCFh ;# 
  1373  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1374                           RCON equ 0FD0h ;# 
  1375  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1376                           WDTCON equ 0FD1h ;# 
  1377  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1378                           HLVDCON equ 0FD2h ;# 
  1379  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1380                           LVDCON equ 0FD2h ;# 
  1381  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1382                           OSCCON equ 0FD3h ;# 
  1383  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1384                           T0CON equ 0FD5h ;# 
  1385  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1386                           TMR0 equ 0FD6h ;# 
  1387  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1388                           TMR0L equ 0FD6h ;# 
  1389  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1390                           TMR0H equ 0FD7h ;# 
  1391  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1392                           STATUS equ 0FD8h ;# 
  1393  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1394                           FSR2 equ 0FD9h ;# 
  1395  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1396                           FSR2L equ 0FD9h ;# 
  1397  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1398                           FSR2H equ 0FDAh ;# 
  1399  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1400                           PLUSW2 equ 0FDBh ;# 
  1401  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1402                           PREINC2 equ 0FDCh ;# 
  1403  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1404                           POSTDEC2 equ 0FDDh ;# 
  1405  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1406                           POSTINC2 equ 0FDEh ;# 
  1407  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1408                           INDF2 equ 0FDFh ;# 
  1409  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1410                           BSR equ 0FE0h ;# 
  1411  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1412                           FSR1 equ 0FE1h ;# 
  1413  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1414                           FSR1L equ 0FE1h ;# 
  1415  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1416                           FSR1H equ 0FE2h ;# 
  1417  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1418                           PLUSW1 equ 0FE3h ;# 
  1419  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1420                           PREINC1 equ 0FE4h ;# 
  1421  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1422                           POSTDEC1 equ 0FE5h ;# 
  1423  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1424                           POSTINC1 equ 0FE6h ;# 
  1425  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1426                           INDF1 equ 0FE7h ;# 
  1427  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1428                           WREG equ 0FE8h ;# 
  1429  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1430                           FSR0 equ 0FE9h ;# 
  1431  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1432                           FSR0L equ 0FE9h ;# 
  1433  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1434                           FSR0H equ 0FEAh ;# 
  1435  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1436                           PLUSW0 equ 0FEBh ;# 
  1437  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1438                           PREINC0 equ 0FECh ;# 
  1439  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1440                           POSTDEC0 equ 0FEDh ;# 
  1441  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1442                           POSTINC0 equ 0FEEh ;# 
  1443  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1444                           INDF0 equ 0FEFh ;# 
  1445  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1446                           INTCON3 equ 0FF0h ;# 
  1447  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1448                           INTCON2 equ 0FF1h ;# 
  1449  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1450                           INTCON equ 0FF2h ;# 
  1451  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1452                           PROD equ 0FF3h ;# 
  1453  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1454                           PRODL equ 0FF3h ;# 
  1455  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1456                           PRODH equ 0FF4h ;# 
  1457  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1458                           TABLAT equ 0FF5h ;# 
  1459  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1460                           TBLPTR equ 0FF6h ;# 
  1461  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1462                           TBLPTRL equ 0FF6h ;# 
  1463  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1464                           TBLPTRH equ 0FF7h ;# 
  1465  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1466                           TBLPTRU equ 0FF8h ;# 
  1467  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1468                           PCLAT equ 0FF9h ;# 
  1469  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1470                           PC equ 0FF9h ;# 
  1471  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1472                           PCL equ 0FF9h ;# 
  1473  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1474                           PCLATH equ 0FFAh ;# 
  1475  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1476                           PCLATU equ 0FFBh ;# 
  1477  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1478                           STKPTR equ 0FFCh ;# 
  1479  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1480                           TOS equ 0FFDh ;# 
  1481  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1482                           TOSL equ 0FFDh ;# 
  1483  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1484                           TOSH equ 0FFEh ;# 
  1485  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1486                           TOSU equ 0FFFh ;# 
  1487  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1488                           PORTA equ 0F80h ;# 
  1489  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1490                           PORTB equ 0F81h ;# 
  1491  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1492                           PORTC equ 0F82h ;# 
  1493  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1494                           PORTD equ 0F83h ;# 
  1495  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1496                           PORTE equ 0F84h ;# 
  1497  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1498                           LATA equ 0F89h ;# 
  1499  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1500                           LATB equ 0F8Ah ;# 
  1501  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1502                           LATC equ 0F8Bh ;# 
  1503  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1504                           LATD equ 0F8Ch ;# 
  1505  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1506                           LATE equ 0F8Dh ;# 
  1507  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1508                           TRISA equ 0F92h ;# 
  1509  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1510                           DDRA equ 0F92h ;# 
  1511  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1512                           TRISB equ 0F93h ;# 
  1513  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1514                           DDRB equ 0F93h ;# 
  1515  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1516                           TRISC equ 0F94h ;# 
  1517  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1518                           DDRC equ 0F94h ;# 
  1519  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1520                           TRISD equ 0F95h ;# 
  1521  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1522                           DDRD equ 0F95h ;# 
  1523  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1524                           TRISE equ 0F96h ;# 
  1525  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1526                           DDRE equ 0F96h ;# 
  1527  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1528                           OSCTUNE equ 0F9Bh ;# 
  1529  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1530                           PIE1 equ 0F9Dh ;# 
  1531  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1532                           PIR1 equ 0F9Eh ;# 
  1533  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1534                           IPR1 equ 0F9Fh ;# 
  1535  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1536                           PIE2 equ 0FA0h ;# 
  1537  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1538                           PIR2 equ 0FA1h ;# 
  1539  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1540                           IPR2 equ 0FA2h ;# 
  1541  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1542                           EECON1 equ 0FA6h ;# 
  1543  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1544                           EECON2 equ 0FA7h ;# 
  1545  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1546                           EEDATA equ 0FA8h ;# 
  1547  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1548                           EEADR equ 0FA9h ;# 
  1549  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1550                           RCSTA equ 0FABh ;# 
  1551  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1552                           RCSTA1 equ 0FABh ;# 
  1553  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1554                           TXSTA equ 0FACh ;# 
  1555  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1556                           TXSTA1 equ 0FACh ;# 
  1557  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1558                           TXREG equ 0FADh ;# 
  1559  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1560                           TXREG1 equ 0FADh ;# 
  1561  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1562                           RCREG equ 0FAEh ;# 
  1563  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1564                           RCREG1 equ 0FAEh ;# 
  1565  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1566                           SPBRG equ 0FAFh ;# 
  1567  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1568                           SPBRG1 equ 0FAFh ;# 
  1569  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1570                           SPBRGH equ 0FB0h ;# 
  1571  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1572                           T3CON equ 0FB1h ;# 
  1573  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1574                           TMR3 equ 0FB2h ;# 
  1575  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1576                           TMR3L equ 0FB2h ;# 
  1577  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1578                           TMR3H equ 0FB3h ;# 
  1579  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1580                           CMCON equ 0FB4h ;# 
  1581  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1582                           CVRCON equ 0FB5h ;# 
  1583  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1584                           ECCP1AS equ 0FB6h ;# 
  1585  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1586                           ECCPAS equ 0FB6h ;# 
  1587  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1588                           PWM1CON equ 0FB7h ;# 
  1589  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1590                           ECCP1DEL equ 0FB7h ;# 
  1591  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1592                           BAUDCON equ 0FB8h ;# 
  1593  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1594                           BAUDCTL equ 0FB8h ;# 
  1595  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1596                           CCP2CON equ 0FBAh ;# 
  1597  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1598                           CCPR2 equ 0FBBh ;# 
  1599  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1600                           CCPR2L equ 0FBBh ;# 
  1601  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1602                           CCPR2H equ 0FBCh ;# 
  1603  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1604                           CCP1CON equ 0FBDh ;# 
  1605  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1606                           CCPR1 equ 0FBEh ;# 
  1607  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1608                           CCPR1L equ 0FBEh ;# 
  1609  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1610                           CCPR1H equ 0FBFh ;# 
  1611  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1612                           ADCON2 equ 0FC0h ;# 
  1613  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1614                           ADCON1 equ 0FC1h ;# 
  1615  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1616                           ADCON0 equ 0FC2h ;# 
  1617  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1618                           ADRES equ 0FC3h ;# 
  1619  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1620                           ADRESL equ 0FC3h ;# 
  1621  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1622                           ADRESH equ 0FC4h ;# 
  1623  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1624                           SSPCON2 equ 0FC5h ;# 
  1625  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1626                           SSPCON1 equ 0FC6h ;# 
  1627  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1628                           SSPSTAT equ 0FC7h ;# 
  1629  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1630                           SSPADD equ 0FC8h ;# 
  1631  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1632                           SSPBUF equ 0FC9h ;# 
  1633  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1634                           T2CON equ 0FCAh ;# 
  1635  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1636                           PR2 equ 0FCBh ;# 
  1637  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1638                           MEMCON equ 0FCBh ;# 
  1639  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1640                           TMR2 equ 0FCCh ;# 
  1641  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1642                           T1CON equ 0FCDh ;# 
  1643  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1644                           TMR1 equ 0FCEh ;# 
  1645  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1646                           TMR1L equ 0FCEh ;# 
  1647  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1648                           TMR1H equ 0FCFh ;# 
  1649  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1650                           RCON equ 0FD0h ;# 
  1651  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1652                           WDTCON equ 0FD1h ;# 
  1653  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1654                           HLVDCON equ 0FD2h ;# 
  1655  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1656                           LVDCON equ 0FD2h ;# 
  1657  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1658                           OSCCON equ 0FD3h ;# 
  1659  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1660                           T0CON equ 0FD5h ;# 
  1661  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1662                           TMR0 equ 0FD6h ;# 
  1663  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1664                           TMR0L equ 0FD6h ;# 
  1665  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1666                           TMR0H equ 0FD7h ;# 
  1667  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1668                           STATUS equ 0FD8h ;# 
  1669  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1670                           FSR2 equ 0FD9h ;# 
  1671  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1672                           FSR2L equ 0FD9h ;# 
  1673  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1674                           FSR2H equ 0FDAh ;# 
  1675  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1676                           PLUSW2 equ 0FDBh ;# 
  1677  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1678                           PREINC2 equ 0FDCh ;# 
  1679  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1680                           POSTDEC2 equ 0FDDh ;# 
  1681  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1682                           POSTINC2 equ 0FDEh ;# 
  1683  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1684                           INDF2 equ 0FDFh ;# 
  1685  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1686                           BSR equ 0FE0h ;# 
  1687  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1688                           FSR1 equ 0FE1h ;# 
  1689  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1690                           FSR1L equ 0FE1h ;# 
  1691  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1692                           FSR1H equ 0FE2h ;# 
  1693  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1694                           PLUSW1 equ 0FE3h ;# 
  1695  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1696                           PREINC1 equ 0FE4h ;# 
  1697  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1698                           POSTDEC1 equ 0FE5h ;# 
  1699  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1700                           POSTINC1 equ 0FE6h ;# 
  1701  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1702                           INDF1 equ 0FE7h ;# 
  1703  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1704                           WREG equ 0FE8h ;# 
  1705  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1706                           FSR0 equ 0FE9h ;# 
  1707  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1708                           FSR0L equ 0FE9h ;# 
  1709  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1710                           FSR0H equ 0FEAh ;# 
  1711  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1712                           PLUSW0 equ 0FEBh ;# 
  1713  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1714                           PREINC0 equ 0FECh ;# 
  1715  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1716                           POSTDEC0 equ 0FEDh ;# 
  1717  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1718                           POSTINC0 equ 0FEEh ;# 
  1719  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1720                           INDF0 equ 0FEFh ;# 
  1721  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1722                           INTCON3 equ 0FF0h ;# 
  1723  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1724                           INTCON2 equ 0FF1h ;# 
  1725  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1726                           INTCON equ 0FF2h ;# 
  1727  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1728                           PROD equ 0FF3h ;# 
  1729  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1730                           PRODL equ 0FF3h ;# 
  1731  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1732                           PRODH equ 0FF4h ;# 
  1733  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1734                           TABLAT equ 0FF5h ;# 
  1735  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1736                           TBLPTR equ 0FF6h ;# 
  1737  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1738                           TBLPTRL equ 0FF6h ;# 
  1739  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1740                           TBLPTRH equ 0FF7h ;# 
  1741  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1742                           TBLPTRU equ 0FF8h ;# 
  1743  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1744                           PCLAT equ 0FF9h ;# 
  1745  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1746                           PC equ 0FF9h ;# 
  1747  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1748                           PCL equ 0FF9h ;# 
  1749  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1750                           PCLATH equ 0FFAh ;# 
  1751  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1752                           PCLATU equ 0FFBh ;# 
  1753  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1754                           STKPTR equ 0FFCh ;# 
  1755  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1756                           TOS equ 0FFDh ;# 
  1757  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1758                           TOSL equ 0FFDh ;# 
  1759  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1760                           TOSH equ 0FFEh ;# 
  1761  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1762                           TOSU equ 0FFFh ;# 
  1763  0000                     	FNCALL	_main,_ClearBuffer
  1764                           	FNCALL	_main,_GetString
  1765                           	FNCALL	_main,_Mode1
  1766                           	FNCALL	_main,_Mode2
  1767                           	FNCALL	_main,_Mode3
  1768                           	FNCALL	_main,_SYSTEM_Initialize
  1769                           	FNCALL	_main,_strstr
  1770                           	FNCALL	_SYSTEM_Initialize,_ADC_Initialize
  1771                           	FNCALL	_SYSTEM_Initialize,_CCP1_Initialize
  1772                           	FNCALL	_SYSTEM_Initialize,_INTERRUPT_Initialize
  1773                           	FNCALL	_SYSTEM_Initialize,_UART_Initialize
  1774                           	FNCALL	_Mode3,_ADC_Read
  1775                           	FNCALL	_Mode3,_ClearBuffer
  1776                           	FNCALL	_Mode3,_GetString
  1777                           	FNCALL	_Mode3,_PrintBuffer
  1778                           	FNCALL	_Mode3,___flmul
  1779                           	FNCALL	_Mode3,___xxtofl
  1780                           	FNCALL	_Mode3,_sprintf
  1781                           	FNCALL	_Mode3,_strcat
  1782                           	FNCALL	_Mode3,_strstr
  1783                           	FNCALL	_strstr,_strchr
  1784                           	FNCALL	_strstr,_strlen
  1785                           	FNCALL	_strstr,_strncmp
  1786                           	FNCALL	_strcat,_strcpy
  1787                           	FNCALL	_strcat,_strlen
  1788                           	FNCALL	_sprintf,_vfprintf
  1789                           	FNCALL	_vfprintf,_vfpfcnvrt
  1790                           	FNCALL	_vfpfcnvrt,_atoi
  1791                           	FNCALL	_vfpfcnvrt,_efgtoa
  1792                           	FNCALL	_vfpfcnvrt,_fputc
  1793                           	FNCALL	_vfpfcnvrt,_isdigit
  1794                           	FNCALL	_vfpfcnvrt,_isupper
  1795                           	FNCALL	_vfpfcnvrt,_strncmp
  1796                           	FNCALL	_vfpfcnvrt,_tolower
  1797                           	FNCALL	_efgtoa,___awdiv
  1798                           	FNCALL	_efgtoa,___awmod
  1799                           	FNCALL	_efgtoa,___fladd
  1800                           	FNCALL	_efgtoa,___fldiv
  1801                           	FNCALL	_efgtoa,___fleq
  1802                           	FNCALL	_efgtoa,___flge
  1803                           	FNCALL	_efgtoa,___flmul
  1804                           	FNCALL	_efgtoa,___flneg
  1805                           	FNCALL	_efgtoa,___flsub
  1806                           	FNCALL	_efgtoa,___fltol
  1807                           	FNCALL	_efgtoa,___fpclassifyf
  1808                           	FNCALL	_efgtoa,_floorf
  1809                           	FNCALL	_efgtoa,_isupper
  1810                           	FNCALL	_efgtoa,_pad
  1811                           	FNCALL	_efgtoa,_strcpy
  1812                           	FNCALL	_efgtoa,_tolower
  1813                           	FNCALL	_tolower,_isupper
  1814                           	FNCALL	_pad,_fputc
  1815                           	FNCALL	_pad,_fputs
  1816                           	FNCALL	_pad,_strlen
  1817                           	FNCALL	_fputs,_fputc
  1818                           	FNCALL	_fputc,_putch
  1819                           	FNCALL	___flsub,___fladd
  1820                           	FNCALL	_Mode2,_ClearBuffer
  1821                           	FNCALL	_Mode2,_GetString
  1822                           	FNCALL	_Mode2,_PrintBuffer
  1823                           	FNCALL	_Mode2,_atoi
  1824                           	FNCALL	_Mode2,_strtok
  1825                           	FNCALL	_strtok,_strcspn
  1826                           	FNCALL	_strtok,_strspn
  1827                           	FNCALL	_strspn,_strchr
  1828                           	FNCALL	_strcspn,_strchr
  1829                           	FNCALL	_atoi,___wmul
  1830                           	FNCALL	_atoi,_isdigit
  1831                           	FNCALL	_atoi,_isspace
  1832                           	FNCALL	_Mode1,_ClearBuffer
  1833                           	FNCALL	_Mode1,_PrintBuffer
  1834                           	FNROOT	_main
  1835                           	FNCALL	_Lo_ISR,_MyusartRead
  1836                           	FNCALL	_MyusartRead,_UART_Write_Text
  1837                           	FNCALL	_MyusartRead,i1___awmod
  1838                           	FNCALL	_UART_Write_Text,_UART_Write
  1839                           	FNCALL	intlevel1,_Lo_ISR
  1840                           	global	intlevel1
  1841                           	FNROOT	intlevel1
  1842                           	global	floorf@F520
  1843                           	global	___fpclassifyf@F459
  1844                           	global	strtok@p
  1845                           	global	_nout
  1846                           	global	_width
  1847                           	global	_prec
  1848                           	global	_flags
  1849                           	global	_lenStr
  1850                           	global	_mystring
  1851                           	global	_str
  1852                           	global	_dbuf
  1853                           	global	_CCPR1
  1854                           _CCPR1	set	0xFBE
  1855  0000                     	global	_TMR3
  1856                           _TMR3	set	0xFB2
  1857  0000                     	global	_ADCON0bits
  1858                           _ADCON0bits	set	0xFC2
  1859  0000                     	global	_ADCON0
  1860                           _ADCON0	set	0xFC2
  1861  0000                     	global	_ADRESL
  1862                           _ADRESL	set	0xFC3
  1863  0000                     	global	_ADRESH
  1864                           _ADRESH	set	0xFC4
  1865  0000                     	global	_ADCON2
  1866                           _ADCON2	set	0xFC0
  1867  0000                     	global	_ADCON1
  1868                           _ADCON1	set	0xFC1
  1869  0000                     	global	_TRISA
  1870                           _TRISA	set	0xF92
  1871  0000                     	global	_CCP1CON
  1872                           _CCP1CON	set	0xFBD
  1873  0000                     	global	_INTCONbits
  1874                           _INTCONbits	set	0xFF2
  1875  0000                     	global	_RCONbits
  1876                           _RCONbits	set	0xFD0
  1877  0000                     	global	_TXREG
  1878                           _TXREG	set	0xFAD
  1879  0000                     	global	_IPR1bits
  1880                           _IPR1bits	set	0xF9F
  1881  0000                     	global	_PIE1bits
  1882                           _PIE1bits	set	0xF9D
  1883  0000                     	global	_SPBRG
  1884                           _SPBRG	set	0xFAF
  1885  0000                     	global	_BAUDCONbits
  1886                           _BAUDCONbits	set	0xFB8
  1887  0000                     	global	_TXSTAbits
  1888                           _TXSTAbits	set	0xFAC
  1889  0000                     	global	_TRISCbits
  1890                           _TRISCbits	set	0xF94
  1891  0000                     	global	_RCON
  1892                           _RCON	set	0xFD0
  1893  0000                     	global	_RCSTAbits
  1894                           _RCSTAbits	set	0xFAB
  1895  0000                     	global	_PIR1bits
  1896                           _PIR1bits	set	0xF9E
  1897  0000                     	global	_T3CONbits
  1898                           _T3CONbits	set	0xFB1
  1899  0000                     	global	_RCREG
  1900                           _RCREG	set	0xFAE
  1901  0000                     	global	_T3CON
  1902                           _T3CON	set	0xFB1
  1903  0000                     	global	_GO
  1904                           _GO	set	0x7E11
  1905  0000                     	global	_ADON
  1906                           _ADON	set	0x7E10
  1907  0000                     	global	_IRCF0
  1908                           _IRCF0	set	0x7E9C
  1909  0000                     	global	_IRCF1
  1910                           _IRCF1	set	0x7E9D
  1911  0000                     	global	_IRCF2
  1912                           _IRCF2	set	0x7E9E
  1913  0000                     	global	_CREN
  1914                           _CREN	set	0x7D5C
  1915  0000                     	global	_RCIF
  1916                           _RCIF	set	0x7CF5
  1917  0000                     	global	_RC2
  1918                           _RC2	set	0x7C12
  1919  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
  1920                           global __psmallconst
  1921                           __psmallconst:
  1922  0000'                    	db	0
  1923  0000' 00                 	
  1924                           STR_1:
  1925  0001'                    	db	72	;'H'
  1926  0001' 48                 	db	101	;'e'
  1927  0002' 65                 	db	108	;'l'
  1928  0003' 6C                 	db	108	;'l'
  1929  0004' 6C                 	db	111	;'o'
  1930  0005' 6F                 	db	32
  1931  0006' 20                 	db	119	;'w'
  1932  0007' 77                 	db	111	;'o'
  1933  0008' 6F                 	db	114	;'r'
  1934  0009' 72                 	db	108	;'l'
  1935  000A' 6C                 	db	100	;'d'
  1936  000B' 64                 	db	33
  1937  000C' 21                 	db	10
  1938  000D' 0A                 	db	0
  1939  000E' 00                 	
  1940                           STR_12:
  1941  000F'                    	db	109	;'m'
  1942  000F' 6D                 	db	111	;'o'
  1943  0010' 6F                 	db	100	;'d'
  1944  0011' 64                 	db	101	;'e'
  1945  0012' 65                 	db	49	;'1'
  1946  0013' 31                 	db	0
  1947  0014' 00                 	
  1948                           STR_14:
  1949  0015'                    	db	109	;'m'
  1950  0015' 6D                 	db	111	;'o'
  1951  0016' 6F                 	db	100	;'d'
  1952  0017' 64                 	db	101	;'e'
  1953  0018' 65                 	db	50	;'2'
  1954  0019' 32                 	db	0
  1955  001A' 00                 	
  1956                           STR_16:
  1957  001B'                    	db	109	;'m'
  1958  001B' 6D                 	db	111	;'o'
  1959  001C' 6F                 	db	100	;'d'
  1960  001D' 64                 	db	101	;'e'
  1961  001E' 65                 	db	51	;'3'
  1962  001F' 33                 	db	0
  1963  0020' 00                 	
  1964                           STR_5:
  1965  0021'                    	db	70	;'F'
  1966  0021' 46                 	db	97	;'a'
  1967  0022' 61                 	db	108	;'l'
  1968  0023' 6C                 	db	115	;'s'
  1969  0024' 73                 	db	101	;'e'
  1970  0025' 65                 	db	0
  1971  0026' 00                 	
  1972                           STR_10:
  1973  0027'                    	db	99	;'c'
  1974  0027' 63                 	db	108	;'l'
  1975  0028' 6C                 	db	101	;'e'
  1976  0029' 65                 	db	97	;'a'
  1977  002A' 61                 	db	114	;'r'
  1978  002B' 72                 	db	0
  1979  002C' 00                 	
  1980                           STR_4:
  1981  002D'                    	db	84	;'T'
  1982  002D' 54                 	db	114	;'r'
  1983  002E' 72                 	db	117	;'u'
  1984  002F' 75                 	db	101	;'e'
  1985  0030' 65                 	db	0
  1986  0031' 00                 	
  1987                           STR_8:
  1988  0032'                    	db	37
  1989  0032' 25                 	db	46
  1990  0033' 2E                 	db	50	;'2'
  1991  0034' 32                 	db	102	;'f'
  1992  0035' 66                 	db	0
  1993  0036' 00                 	
  1994                           STR_6:
  1995  0037'                    	db	101	;'e'
  1996  0037' 65                 	db	120	;'x'
  1997  0038' 78                 	db	105	;'i'
  1998  0039' 69                 	db	116	;'t'
  1999  003A' 74                 	db	0
  2000  003B' 00                 	
  2001                           STR_18:
  2002  003C'                    	db	73	;'I'
  2003  003C' 49                 	db	78	;'N'
  2004  003D' 4E                 	db	70	;'F'
  2005  003E' 46                 	db	0
  2006  003F' 00                 	
  2007                           STR_22:
  2008  0040'                    	db	78	;'N'
  2009  0040' 4E                 	db	65	;'A'
  2010  0041' 41                 	db	78	;'N'
  2011  0042' 4E                 	db	0
  2012  0043' 00                 	
  2013                           STR_19:
  2014  0044'                    	db	105	;'i'
  2015  0044' 69                 	db	110	;'n'
  2016  0045' 6E                 	db	102	;'f'
  2017  0046' 66                 	db	0
  2018  0047' 00                 	
  2019                           STR_23:
  2020  0048'                    	db	110	;'n'
  2021  0048' 6E                 	db	97	;'a'
  2022  0049' 61                 	db	110	;'n'
  2023  004A' 6E                 	db	0
  2024  004B' 00                 	
  2025                           STR_26:
  2026  004C'                    	db	108	;'l'
  2027  004C' 6C                 	db	102	;'f'
  2028  004D' 66                 	db	0
  2029  004E' 00                 	
  2030                           STR_9:
  2031  004F'                    	db	32
  2032  004F' 20                 	db	86	;'V'
  2033  0050' 56                 	db	0
  2034  0051' 00                 	
  2035                           STR_2:
  2036  0052'                    	db	36
  2037  0052' 24                 	db	0
  2038  0053' 00                 STR_7	equ	STR_6+0
  2039  0000                     STR_11	equ	STR_10+0
  2040  0000                     STR_20	equ	STR_19+0
  2041  0000                     STR_21	equ	STR_19+0
  2042  0000                     STR_24	equ	STR_19+0
  2043  0000                     STR_25	equ	STR_19+0
  2044  0000                     STR_27	equ	STR_26+0
  2045  0000                     STR_28	equ	STR_26+0
  2046  0000                     STR_29	equ	STR_26+0
  2047  0000                     STR_30	equ	STR_26+0
  2048  0000                     STR_17	equ	STR_16+0
  2049  0000                     STR_15	equ	STR_14+0
  2050  0000                     STR_13	equ	STR_12+0
  2051  0000                     STR_3	equ	STR_2+0
  2052  0000                     ; #config settings
  2053                           global __CFG_OSC$INTIO67
  2054                           __CFG_OSC$INTIO67 equ 0x0
  2055  0000                     global __CFG_FCMEN$OFF
  2056                           __CFG_FCMEN$OFF equ 0x0
  2057  0000                     global __CFG_IESO$ON
  2058                           __CFG_IESO$ON equ 0x0
  2059  0000                     global __CFG_PWRT$OFF
  2060                           __CFG_PWRT$OFF equ 0x0
  2061  0000                     global __CFG_BOREN$SBORDIS
  2062                           __CFG_BOREN$SBORDIS equ 0x0
  2063  0000                     global __CFG_BORV$3
  2064                           __CFG_BORV$3 equ 0x0
  2065  0000                     global __CFG_WDT$OFF
  2066                           __CFG_WDT$OFF equ 0x0
  2067  0000                     global __CFG_WDTPS$1
  2068                           __CFG_WDTPS$1 equ 0x0
  2069  0000                     global __CFG_CCP2MX$PORTC
  2070                           __CFG_CCP2MX$PORTC equ 0x0
  2071  0000                     global __CFG_PBADEN$ON
  2072                           __CFG_PBADEN$ON equ 0x0
  2073  0000                     global __CFG_LPT1OSC$OFF
  2074                           __CFG_LPT1OSC$OFF equ 0x0
  2075  0000                     global __CFG_MCLRE$ON
  2076                           __CFG_MCLRE$ON equ 0x0
  2077  0000                     global __CFG_STVREN$ON
  2078                           __CFG_STVREN$ON equ 0x0
  2079  0000                     global __CFG_LVP$OFF
  2080                           __CFG_LVP$OFF equ 0x0
  2081  0000                     global __CFG_XINST$OFF
  2082                           __CFG_XINST$OFF equ 0x0
  2083  0000                     global __CFG_CP0$OFF
  2084                           __CFG_CP0$OFF equ 0x0
  2085  0000                     global __CFG_CP1$OFF
  2086                           __CFG_CP1$OFF equ 0x0
  2087  0000                     global __CFG_CP2$OFF
  2088                           __CFG_CP2$OFF equ 0x0
  2089  0000                     global __CFG_CP3$OFF
  2090                           __CFG_CP3$OFF equ 0x0
  2091  0000                     global __CFG_CPB$OFF
  2092                           __CFG_CPB$OFF equ 0x0
  2093  0000                     global __CFG_CPD$OFF
  2094                           __CFG_CPD$OFF equ 0x0
  2095  0000                     global __CFG_WRT0$OFF
  2096                           __CFG_WRT0$OFF equ 0x0
  2097  0000                     global __CFG_WRT1$OFF
  2098                           __CFG_WRT1$OFF equ 0x0
  2099  0000                     global __CFG_WRT2$OFF
  2100                           __CFG_WRT2$OFF equ 0x0
  2101  0000                     global __CFG_WRT3$OFF
  2102                           __CFG_WRT3$OFF equ 0x0
  2103  0000                     global __CFG_WRTC$OFF
  2104                           __CFG_WRTC$OFF equ 0x0
  2105  0000                     global __CFG_WRTB$OFF
  2106                           __CFG_WRTB$OFF equ 0x0
  2107  0000                     global __CFG_WRTD$OFF
  2108                           __CFG_WRTD$OFF equ 0x0
  2109  0000                     global __CFG_EBTR0$OFF
  2110                           __CFG_EBTR0$OFF equ 0x0
  2111  0000                     global __CFG_EBTR1$OFF
  2112                           __CFG_EBTR1$OFF equ 0x0
  2113  0000                     global __CFG_EBTR2$OFF
  2114                           __CFG_EBTR2$OFF equ 0x0
  2115  0000                     global __CFG_EBTR3$OFF
  2116                           __CFG_EBTR3$OFF equ 0x0
  2117  0000                     global __CFG_EBTRB$OFF
  2118                           __CFG_EBTRB$OFF equ 0x0
  2119  0000                     	file	"C:\Users\honghen\AppData\Local\Temp\sjb8."
  2120                           	line	#
  2121                           psect	cinit,class=CODE,delta=1,reloc=2
  2122                           global __pcinit
  2123                           __pcinit:
  2124  0000'                    global start_initialization
  2125                           start_initialization:
  2126  0000'                    
  2127                           global __initialization
  2128                           __initialization:
  2129  0000'                    psect	bssCOMRAM,class=COMRAM,space=1,noexec
  2130                           global __pbssCOMRAM
  2131                           __pbssCOMRAM:
  2132  0000'                    floorf@F520:
  2133  0000'                           ds      4
  2134  0000'                    ___fpclassifyf@F459:
  2135  0004'                           ds      4
  2136  0004'                    strtok@p:
  2137  0008'                           ds      2
  2138  0008'                    _nout:
  2139  000A'                           ds      2
  2140  000A'                    _width:
  2141  000C'                           ds      2
  2142  000C'                    _prec:
  2143  000E'                           ds      2
  2144  000E'                    _flags:
  2145  0010'                           ds      2
  2146  0010'                    	global	_lenStr
  2147                           _lenStr:
  2148  0012'                           ds      2
  2149  0012'                    psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
  2150                           global __pbssBANK0
  2151                           __pbssBANK0:
  2152  0000'                    	global	_mystring
  2153                           _mystring:
  2154  0000'                           ds      10
  2155  0000'                    	global	_str
  2156                           _str:
  2157  000A'                           ds      10
  2158  000A'                    psect	bssBANK1,class=BANK1,space=1,noexec,lowdata
  2159                           global __pbssBANK1
  2160                           __pbssBANK1:
  2161  0000'                    _dbuf:
  2162  0000'                           ds      80
  2163  0000'                    	file	"C:\Users\honghen\AppData\Local\Temp\sjb8."
  2164                           	line	#
  2165                           psect	cinit
  2166                           ; Clear objects allocated to BANK1 (80 bytes)
  2167                           	global __pbssBANK1
  2168                           lfsr	0,__pbssBANK1
  2169  0000' EE00' F000'        movlw	80
  2170  0004' 0E50               clear_0:
  2171  0006'                    clrf	postinc0,c
  2172  0006' 6AEE               decf	wreg
  2173  0008' 06E8               bnz	clear_0
  2174  000A' E1FD               ; Clear objects allocated to BANK0 (20 bytes)
  2175                           	global __pbssBANK0
  2176                           lfsr	0,__pbssBANK0
  2177  000C' EE00' F000'        movlw	20
  2178  0010' 0E14               clear_1:
  2179  0012'                    clrf	postinc0,c
  2180  0012' 6AEE               decf	wreg
  2181  0014' 06E8               bnz	clear_1
  2182  0016' E1FD               ; Clear objects allocated to COMRAM (20 bytes)
  2183                           	global __pbssCOMRAM
  2184                           lfsr	0,__pbssCOMRAM
  2185  0018' EE00' F000'        movlw	20
  2186  001C' 0E14               clear_2:
  2187  001E'                    clrf	postinc0,c
  2188  001E' 6AEE               decf	wreg
  2189  0020' 06E8               bnz	clear_2
  2190  0022' E1FD               psect cinit,class=CODE,delta=1
  2191                           global end_of_initialization,__end_of__initialization
  2192                           
  2193                           ;End of C runtime variable initialization code
  2194                           
  2195                           end_of_initialization:
  2196  0024'                    __end_of__initialization:
  2197  0024'                    	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  2198  0024' 9000'              	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  2199  0026' 9200'              	GLOBAL	__Lmediumconst
  2200                           	movlw	low highword(__Lmediumconst)
  2201  0028' 0E00'              	movwf	tblptru
  2202  002A' 6EF8               movlb 0
  2203  002C' 0100               goto _main	;jump to C main() function
  2204  002E' EF00' F000'        psect	cstackBANK0,class=BANK0,space=1,noexec
  2205                           global __pcstackBANK0
  2206                           __pcstackBANK0:
  2207  0000'                    	global	efgtoa@ou
  2208                           efgtoa@ou:	; 4 bytes @ 0x0
  2209  0000'                    	ds   4
  2210  0000'                    	global	_efgtoa$964
  2211                           _efgtoa$964:	; 2 bytes @ 0x4
  2212  0004'                    	ds   2
  2213  0004'                    	global	_efgtoa$965
  2214                           _efgtoa$965:	; 2 bytes @ 0x6
  2215  0006'                    	ds   2
  2216  0006'                    	global	_efgtoa$970
  2217                           _efgtoa$970:	; 2 bytes @ 0x8
  2218  0008'                    	ds   2
  2219  0008'                    	global	_efgtoa$974
  2220                           _efgtoa$974:	; 2 bytes @ 0xA
  2221  000A'                    	ds   2
  2222  000A'                    	global	_efgtoa$975
  2223                           _efgtoa$975:	; 2 bytes @ 0xC
  2224  000C'                    	ds   2
  2225  000C'                    	global	_efgtoa$976
  2226                           _efgtoa$976:	; 2 bytes @ 0xE
  2227  000E'                    	ds   2
  2228  000E'                    	global	efgtoa@t
  2229                           efgtoa@t:	; 2 bytes @ 0x10
  2230  0010'                    	ds   2
  2231  0010'                    	global	efgtoa@pp
  2232                           efgtoa@pp:	; 2 bytes @ 0x12
  2233  0012'                    	ds   2
  2234  0012'                    	global	efgtoa@m
  2235                           efgtoa@m:	; 2 bytes @ 0x14
  2236  0014'                    	ds   2
  2237  0014'                    	global	efgtoa@ne
  2238                           efgtoa@ne:	; 2 bytes @ 0x16
  2239  0016'                    	ds   2
  2240  0016'                    	global	efgtoa@d
  2241                           efgtoa@d:	; 2 bytes @ 0x18
  2242  0018'                    	ds   2
  2243  0018'                    	global	efgtoa@sign
  2244                           efgtoa@sign:	; 2 bytes @ 0x1A
  2245  001A'                    	ds   2
  2246  001A'                    	global	efgtoa@p
  2247                           efgtoa@p:	; 2 bytes @ 0x1C
  2248  001C'                    	ds   2
  2249  001C'                    	global	efgtoa@nmode
  2250                           efgtoa@nmode:	; 1 bytes @ 0x1E
  2251  001E'                    	ds   1
  2252  001E'                    	global	efgtoa@w
  2253                           efgtoa@w:	; 2 bytes @ 0x1F
  2254  001F'                    	ds   2
  2255  001F'                    	global	efgtoa@mode
  2256                           efgtoa@mode:	; 1 bytes @ 0x21
  2257  0021'                    	ds   1
  2258  0021'                    	global	efgtoa@h
  2259                           efgtoa@h:	; 4 bytes @ 0x22
  2260  0022'                    	ds   4
  2261  0022'                    	global	efgtoa@l
  2262                           efgtoa@l:	; 4 bytes @ 0x26
  2263  0026'                    	ds   4
  2264  0026'                    	global	efgtoa@i
  2265                           efgtoa@i:	; 2 bytes @ 0x2A
  2266  002A'                    	ds   2
  2267  002A'                    	global	efgtoa@g
  2268                           efgtoa@g:	; 4 bytes @ 0x2C
  2269  002C'                    	ds   4
  2270  002C'                    	global	efgtoa@e
  2271                           efgtoa@e:	; 2 bytes @ 0x30
  2272  0030'                    	ds   2
  2273  0030'                    	global	efgtoa@n
  2274                           efgtoa@n:	; 2 bytes @ 0x32
  2275  0032'                    	ds   2
  2276  0032'                    	global	efgtoa@u
  2277                           efgtoa@u:	; 4 bytes @ 0x34
  2278  0034'                    	ds   4
  2279  0034'                    	global	_vfpfcnvrt$990
  2280                           _vfpfcnvrt$990:	; 2 bytes @ 0x38
  2281  0038'                    	ds   2
  2282  0038'                    	global	_vfpfcnvrt$994
  2283                           _vfpfcnvrt$994:	; 2 bytes @ 0x3A
  2284  003A'                    	ds   2
  2285  003A'                    	global	vfpfcnvrt@f
  2286                           vfpfcnvrt@f:	; 4 bytes @ 0x3C
  2287  003C'                    	ds   4
  2288  003C'                    	global	vfpfcnvrt@ct
  2289                           vfpfcnvrt@ct:	; 3 bytes @ 0x40
  2290  0040'                    	ds   3
  2291  0040'                    	global	vfpfcnvrt@c
  2292                           vfpfcnvrt@c:	; 1 bytes @ 0x43
  2293  0043'                    	ds   1
  2294  0043'                    	global	vfprintf@cfmt
  2295                           vfprintf@cfmt:	; 2 bytes @ 0x44
  2296  0044'                    	ds   2
  2297  0044'                    	global	?_sprintf
  2298                           ?_sprintf:	; 2 bytes @ 0x46
  2299  0046'                    	global	sprintf@s
  2300                           sprintf@s:	; 2 bytes @ 0x46
  2301  0046'                    	ds   2
  2302  0046'                    	global	sprintf@fmt
  2303                           sprintf@fmt:	; 2 bytes @ 0x48
  2304  0048'                    	ds   6
  2305  0048'                    	global	sprintf@ret
  2306                           sprintf@ret:	; 2 bytes @ 0x4E
  2307  004E'                    	ds   2
  2308  004E'                    	global	sprintf@ap
  2309                           sprintf@ap:	; 2 bytes @ 0x50
  2310  0050'                    	ds   2
  2311  0050'                    	global	sprintf@f
  2312                           sprintf@f:	; 6 bytes @ 0x52
  2313  0052'                    	ds   6
  2314  0052'                    	global	Mode3@i
  2315                           Mode3@i:	; 2 bytes @ 0x58
  2316  0058'                    	ds   2
  2317  0058'                    	global	Mode3@voltage
  2318                           Mode3@voltage:	; 4 bytes @ 0x5A
  2319  005A'                    	ds   4
  2320  005A'                    	global	Mode3@digital
  2321                           Mode3@digital:	; 2 bytes @ 0x5E
  2322  005E'                    	ds   2
  2323  005E'                    psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  2324                           global __pcstackCOMRAM
  2325                           __pcstackCOMRAM:
  2326  0000'                    ?_ClearBuffer:	; 1 bytes @ 0x0
  2327  0000'                    ??_PrintBuffer:	; 1 bytes @ 0x0
  2328  0000'                    ?_SYSTEM_Initialize:	; 1 bytes @ 0x0
  2329  0000'                    ?_MyusartRead:	; 1 bytes @ 0x0
  2330  0000'                    ?_INTERRUPT_Initialize:	; 1 bytes @ 0x0
  2331  0000'                    ?_UART_Initialize:	; 1 bytes @ 0x0
  2332  0000'                    ?_CCP1_Initialize:	; 1 bytes @ 0x0
  2333  0000'                    ?_ADC_Initialize:	; 1 bytes @ 0x0
  2334  0000'                    ?_putch:	; 1 bytes @ 0x0
  2335  0000'                    ?_Mode1:	; 1 bytes @ 0x0
  2336  0000'                    ?_Mode2:	; 1 bytes @ 0x0
  2337  0000'                    ?_Mode3:	; 1 bytes @ 0x0
  2338  0000'                    ?_main:	; 1 bytes @ 0x0
  2339  0000'                    ?_Lo_ISR:	; 1 bytes @ 0x0
  2340  0000'                    ?_UART_Write:	; 1 bytes @ 0x0
  2341  0000'                    ??_UART_Write:	; 1 bytes @ 0x0
  2342  0000'                    	global	?_PrintBuffer
  2343                           ?_PrintBuffer:	; 2 bytes @ 0x0
  2344  0000'                    	global	?i1___awmod
  2345                           ?i1___awmod:	; 2 bytes @ 0x0
  2346  0000'                    	global	UART_Write@data
  2347                           UART_Write@data:	; 1 bytes @ 0x0
  2348  0000'                    putch@c:	; 1 bytes @ 0x0
  2349  0000'                    	global	i1___awmod@dividend
  2350                           i1___awmod@dividend:	; 2 bytes @ 0x0
  2351  0000'                    	ds   1
  2352  0000'                    ?_UART_Write_Text:	; 1 bytes @ 0x1
  2353  0001'                    	global	UART_Write_Text@text
  2354                           UART_Write_Text@text:	; 2 bytes @ 0x1
  2355  0001'                    	ds   1
  2356  0001'                    	global	i1___awmod@divisor
  2357                           i1___awmod@divisor:	; 2 bytes @ 0x2
  2358  0002'                    	ds   1
  2359  0002'                    ??_UART_Write_Text:	; 1 bytes @ 0x3
  2360  0003'                    	global	UART_Write_Text@i
  2361                           UART_Write_Text@i:	; 2 bytes @ 0x3
  2362  0003'                    	ds   1
  2363  0003'                    ??i1___awmod:	; 1 bytes @ 0x4
  2364  0004'                    	global	i1___awmod@counter
  2365                           i1___awmod@counter:	; 1 bytes @ 0x4
  2366  0004'                    	ds   1
  2367  0004'                    	global	i1___awmod@sign
  2368                           i1___awmod@sign:	; 1 bytes @ 0x5
  2369  0005'                    	ds   1
  2370  0005'                    ??_MyusartRead:	; 1 bytes @ 0x6
  2371  0006'                    	ds   2
  2372  0006'                    ??_Lo_ISR:	; 1 bytes @ 0x8
  2373  0008'                    	ds   5
  2374  0008'                    ?___fleq:	; 1 bit 
  2375  000D'                    ??_ClearBuffer:	; 1 bytes @ 0xD
  2376  000D'                    ??_SYSTEM_Initialize:	; 1 bytes @ 0xD
  2377  000D'                    ??_INTERRUPT_Initialize:	; 1 bytes @ 0xD
  2378  000D'                    ??_UART_Initialize:	; 1 bytes @ 0xD
  2379  000D'                    ??_CCP1_Initialize:	; 1 bytes @ 0xD
  2380  000D'                    ??_ADC_Initialize:	; 1 bytes @ 0xD
  2381  000D'                    ??_putch:	; 1 bytes @ 0xD
  2382  000D'                    	global	?_GetString
  2383                           ?_GetString:	; 2 bytes @ 0xD
  2384  000D'                    	global	?_ADC_Read
  2385                           ?_ADC_Read:	; 2 bytes @ 0xD
  2386  000D'                    ?_fputc:	; 2 bytes @ 0xD
  2387  000D'                    	global	?_strlen
  2388                           ?_strlen:	; 2 bytes @ 0xD
  2389  000D'                    	global	?___fpclassifyf
  2390                           ?___fpclassifyf:	; 2 bytes @ 0xD
  2391  000D'                    	global	?_isupper
  2392                           ?_isupper:	; 2 bytes @ 0xD
  2393  000D'                    	global	?_isdigit
  2394                           ?_isdigit:	; 2 bytes @ 0xD
  2395  000D'                    	global	?_strncmp
  2396                           ?_strncmp:	; 2 bytes @ 0xD
  2397  000D'                    	global	?_isspace
  2398                           ?_isspace:	; 2 bytes @ 0xD
  2399  000D'                    	global	?_strchr
  2400                           ?_strchr:	; 2 bytes @ 0xD
  2401  000D'                    	global	?___wmul
  2402                           ?___wmul:	; 2 bytes @ 0xD
  2403  000D'                    	global	?___awdiv
  2404                           ?___awdiv:	; 2 bytes @ 0xD
  2405  000D'                    	global	?___awmod
  2406                           ?___awmod:	; 2 bytes @ 0xD
  2407  000D'                    	global	?___fladd
  2408                           ?___fladd:	; 4 bytes @ 0xD
  2409  000D'                    	global	?___fldiv
  2410                           ?___fldiv:	; 4 bytes @ 0xD
  2411  000D'                    	global	?___flneg
  2412                           ?___flneg:	; 4 bytes @ 0xD
  2413  000D'                    	global	?___fltol
  2414                           ?___fltol:	; 4 bytes @ 0xD
  2415  000D'                    	global	?___xxtofl
  2416                           ?___xxtofl:	; 4 bytes @ 0xD
  2417  000D'                    	global	ClearBuffer@i
  2418                           ClearBuffer@i:	; 2 bytes @ 0xD
  2419  000D'                    	global	ADC_Read@channel
  2420                           ADC_Read@channel:	; 2 bytes @ 0xD
  2421  000D'                    	global	___wmul@multiplier
  2422                           ___wmul@multiplier:	; 2 bytes @ 0xD
  2423  000D'                    	global	___awdiv@dividend
  2424                           ___awdiv@dividend:	; 2 bytes @ 0xD
  2425  000D'                    	global	___awmod@dividend
  2426                           ___awmod@dividend:	; 2 bytes @ 0xD
  2427  000D'                    	global	isdigit@c
  2428                           isdigit@c:	; 2 bytes @ 0xD
  2429  000D'                    	global	isspace@c
  2430                           isspace@c:	; 2 bytes @ 0xD
  2431  000D'                    	global	isupper@c
  2432                           isupper@c:	; 2 bytes @ 0xD
  2433  000D'                    	global	fputc@c
  2434                           fputc@c:	; 2 bytes @ 0xD
  2435  000D'                    	global	strlen@s
  2436                           strlen@s:	; 2 bytes @ 0xD
  2437  000D'                    	global	strncmp@_l
  2438                           strncmp@_l:	; 2 bytes @ 0xD
  2439  000D'                    	global	strchr@s
  2440                           strchr@s:	; 2 bytes @ 0xD
  2441  000D'                    	global	___fleq@ff1
  2442                           ___fleq@ff1:	; 4 bytes @ 0xD
  2443  000D'                    	global	___flneg@f1
  2444                           ___flneg@f1:	; 4 bytes @ 0xD
  2445  000D'                    	global	___fltol@f1
  2446                           ___fltol@f1:	; 4 bytes @ 0xD
  2447  000D'                    	global	___fladd@b
  2448                           ___fladd@b:	; 4 bytes @ 0xD
  2449  000D'                    	global	___fldiv@b
  2450                           ___fldiv@b:	; 4 bytes @ 0xD
  2451  000D'                    	global	___xxtofl@val
  2452                           ___xxtofl@val:	; 4 bytes @ 0xD
  2453  000D'                    	global	___fpclassifyf@x
  2454                           ___fpclassifyf@x:	; 4 bytes @ 0xD
  2455  000D'                    	ds   2
  2456  000D'                    ??_GetString:	; 1 bytes @ 0xF
  2457  000F'                    ??_ADC_Read:	; 1 bytes @ 0xF
  2458  000F'                    ??_strlen:	; 1 bytes @ 0xF
  2459  000F'                    ??_isupper:	; 1 bytes @ 0xF
  2460  000F'                    ??_isdigit:	; 1 bytes @ 0xF
  2461  000F'                    ??_isspace:	; 1 bytes @ 0xF
  2462  000F'                    ??_Mode1:	; 1 bytes @ 0xF
  2463  000F'                    	global	___wmul@multiplicand
  2464                           ___wmul@multiplicand:	; 2 bytes @ 0xF
  2465  000F'                    	global	___awdiv@divisor
  2466                           ___awdiv@divisor:	; 2 bytes @ 0xF
  2467  000F'                    	global	___awmod@divisor
  2468                           ___awmod@divisor:	; 2 bytes @ 0xF
  2469  000F'                    	global	fputc@fp
  2470                           fputc@fp:	; 2 bytes @ 0xF
  2471  000F'                    	global	strncmp@_r
  2472                           strncmp@_r:	; 2 bytes @ 0xF
  2473  000F'                    	global	strchr@c
  2474                           strchr@c:	; 2 bytes @ 0xF
  2475  000F'                    	ds   2
  2476  000F'                    ??_fputc:	; 1 bytes @ 0x11
  2477  0011'                    ??___fpclassifyf:	; 1 bytes @ 0x11
  2478  0011'                    ??_strchr:	; 1 bytes @ 0x11
  2479  0011'                    ??___wmul:	; 1 bytes @ 0x11
  2480  0011'                    ??___awdiv:	; 1 bytes @ 0x11
  2481  0011'                    ??___awmod:	; 1 bytes @ 0x11
  2482  0011'                    ??___flneg:	; 1 bytes @ 0x11
  2483  0011'                    ??___fltol:	; 1 bytes @ 0x11
  2484  0011'                    ??___xxtofl:	; 1 bytes @ 0x11
  2485  0011'                    	global	___awdiv@counter
  2486                           ___awdiv@counter:	; 1 bytes @ 0x11
  2487  0011'                    	global	___awmod@counter
  2488                           ___awmod@counter:	; 1 bytes @ 0x11
  2489  0011'                    	global	___wmul@product
  2490                           ___wmul@product:	; 2 bytes @ 0x11
  2491  0011'                    	global	strlen@a
  2492                           strlen@a:	; 2 bytes @ 0x11
  2493  0011'                    	global	strncmp@n
  2494                           strncmp@n:	; 2 bytes @ 0x11
  2495  0011'                    	global	___fleq@ff2
  2496                           ___fleq@ff2:	; 4 bytes @ 0x11
  2497  0011'                    	global	___fladd@a
  2498                           ___fladd@a:	; 4 bytes @ 0x11
  2499  0011'                    	global	___fldiv@a
  2500                           ___fldiv@a:	; 4 bytes @ 0x11
  2501  0011'                    	ds   1
  2502  0011'                    	global	___awdiv@sign
  2503                           ___awdiv@sign:	; 1 bytes @ 0x12
  2504  0012'                    	global	___awmod@sign
  2505                           ___awmod@sign:	; 1 bytes @ 0x12
  2506  0012'                    	ds   1
  2507  0012'                    ??_strncmp:	; 1 bytes @ 0x13
  2508  0013'                    ?_strcpy:	; 2 bytes @ 0x13
  2509  0013'                    	global	?_tolower
  2510                           ?_tolower:	; 2 bytes @ 0x13
  2511  0013'                    	global	?_strspn
  2512                           ?_strspn:	; 2 bytes @ 0x13
  2513  0013'                    	global	?_strcspn
  2514                           ?_strcspn:	; 2 bytes @ 0x13
  2515  0013'                    	global	_isspace$1496
  2516                           _isspace$1496:	; 1 bytes @ 0x13
  2517  0013'                    	global	ADC_Read@digital
  2518                           ADC_Read@digital:	; 2 bytes @ 0x13
  2519  0013'                    	global	___awdiv@quotient
  2520                           ___awdiv@quotient:	; 2 bytes @ 0x13
  2521  0013'                    	global	strcpy@dest
  2522                           strcpy@dest:	; 2 bytes @ 0x13
  2523  0013'                    	global	tolower@c
  2524                           tolower@c:	; 2 bytes @ 0x13
  2525  0013'                    	global	strcspn@s
  2526                           strcspn@s:	; 2 bytes @ 0x13
  2527  0013'                    	global	strspn@s
  2528                           strspn@s:	; 2 bytes @ 0x13
  2529  0013'                    	ds   2
  2530  0013'                    ??_tolower:	; 1 bytes @ 0x15
  2531  0015'                    ??___fladd:	; 1 bytes @ 0x15
  2532  0015'                    ??___fldiv:	; 1 bytes @ 0x15
  2533  0015'                    ??___fleq:	; 1 bytes @ 0x15
  2534  0015'                    	global	___fltol@sign1
  2535                           ___fltol@sign1:	; 1 bytes @ 0x15
  2536  0015'                    	global	___xxtofl@sign
  2537                           ___xxtofl@sign:	; 1 bytes @ 0x15
  2538  0015'                    	global	___fpclassifyf@e
  2539                           ___fpclassifyf@e:	; 2 bytes @ 0x15
  2540  0015'                    	global	strcpy@src
  2541                           strcpy@src:	; 2 bytes @ 0x15
  2542  0015'                    	global	strcspn@c
  2543                           strcspn@c:	; 2 bytes @ 0x15
  2544  0015'                    	global	strspn@c
  2545                           strspn@c:	; 2 bytes @ 0x15
  2546  0015'                    	ds   1
  2547  0015'                    ?_fputs:	; 2 bytes @ 0x16
  2548  0016'                    	global	___fltol@exp1
  2549                           ___fltol@exp1:	; 1 bytes @ 0x16
  2550  0016'                    	global	___xxtofl@exp
  2551                           ___xxtofl@exp:	; 1 bytes @ 0x16
  2552  0016'                    	global	fputs@s
  2553                           fputs@s:	; 2 bytes @ 0x16
  2554  0016'                    	global	strncmp@l
  2555                           strncmp@l:	; 2 bytes @ 0x16
  2556  0016'                    	ds   1
  2557  0016'                    ??_strcpy:	; 1 bytes @ 0x17
  2558  0017'                    ??_strspn:	; 1 bytes @ 0x17
  2559  0017'                    ??_strcspn:	; 1 bytes @ 0x17
  2560  0017'                    	global	___xxtofl@arg
  2561                           ___xxtofl@arg:	; 4 bytes @ 0x17
  2562  0017'                    	global	___fpclassifyf@u
  2563                           ___fpclassifyf@u:	; 4 bytes @ 0x17
  2564  0017'                    	ds   1
  2565  0017'                    	global	fputs@fp
  2566                           fputs@fp:	; 2 bytes @ 0x18
  2567  0018'                    	global	strncmp@r
  2568                           strncmp@r:	; 2 bytes @ 0x18
  2569  0018'                    	global	strcspn@i
  2570                           strcspn@i:	; 2 bytes @ 0x18
  2571  0018'                    	global	strspn@i
  2572                           strspn@i:	; 2 bytes @ 0x18
  2573  0018'                    	ds   1
  2574  0018'                    	global	strcpy@s
  2575                           strcpy@s:	; 2 bytes @ 0x19
  2576  0019'                    	global	_tolower$1617
  2577                           _tolower$1617:	; 2 bytes @ 0x19
  2578  0019'                    	global	___fldiv@rem
  2579                           ___fldiv@rem:	; 4 bytes @ 0x19
  2580  0019'                    	ds   1
  2581  0019'                    ??_fputs:	; 1 bytes @ 0x1A
  2582  001A'                    	global	?_strtok
  2583                           ?_strtok:	; 2 bytes @ 0x1A
  2584  001A'                    	global	?_strstr
  2585                           ?_strstr:	; 2 bytes @ 0x1A
  2586  001A'                    	global	fputs@c
  2587                           fputs@c:	; 1 bytes @ 0x1A
  2588  001A'                    	global	strstr@h
  2589                           strstr@h:	; 2 bytes @ 0x1A
  2590  001A'                    	global	strtok@s
  2591                           strtok@s:	; 2 bytes @ 0x1A
  2592  001A'                    	ds   1
  2593  001A'                    	global	?___flmul
  2594                           ?___flmul:	; 4 bytes @ 0x1B
  2595  001B'                    	global	fputs@i
  2596                           fputs@i:	; 2 bytes @ 0x1B
  2597  001B'                    	global	strcpy@d
  2598                           strcpy@d:	; 2 bytes @ 0x1B
  2599  001B'                    	global	___flmul@b
  2600                           ___flmul@b:	; 4 bytes @ 0x1B
  2601  001B'                    	ds   1
  2602  001B'                    	global	strstr@n
  2603                           strstr@n:	; 2 bytes @ 0x1C
  2604  001C'                    	global	strtok@sep
  2605                           strtok@sep:	; 2 bytes @ 0x1C
  2606  001C'                    	ds   1
  2607  001C'                    ?_strcat:	; 2 bytes @ 0x1D
  2608  001D'                    	global	?_pad
  2609                           ?_pad:	; 2 bytes @ 0x1D
  2610  001D'                    	global	___fladd@signs
  2611                           ___fladd@signs:	; 1 bytes @ 0x1D
  2612  001D'                    	global	___fldiv@sign
  2613                           ___fldiv@sign:	; 1 bytes @ 0x1D
  2614  001D'                    	global	pad@fp
  2615                           pad@fp:	; 2 bytes @ 0x1D
  2616  001D'                    	global	strcat@dest
  2617                           strcat@dest:	; 2 bytes @ 0x1D
  2618  001D'                    	ds   1
  2619  001D'                    ??_strtok:	; 1 bytes @ 0x1E
  2620  001E'                    ??_strstr:	; 1 bytes @ 0x1E
  2621  001E'                    	global	?_atoi
  2622                           ?_atoi:	; 2 bytes @ 0x1E
  2623  001E'                    	global	___fladd@aexp
  2624                           ___fladd@aexp:	; 1 bytes @ 0x1E
  2625  001E'                    	global	___fldiv@new_exp
  2626                           ___fldiv@new_exp:	; 2 bytes @ 0x1E
  2627  001E'                    	global	atoi@s
  2628                           atoi@s:	; 2 bytes @ 0x1E
  2629  001E'                    	global	strstr@nl
  2630                           strstr@nl:	; 2 bytes @ 0x1E
  2631  001E'                    	ds   1
  2632  001E'                    	global	___fladd@bexp
  2633                           ___fladd@bexp:	; 1 bytes @ 0x1F
  2634  001F'                    	global	pad@buf
  2635                           pad@buf:	; 2 bytes @ 0x1F
  2636  001F'                    	global	strcat@src
  2637                           strcat@src:	; 2 bytes @ 0x1F
  2638  001F'                    	global	___flmul@a
  2639                           ___flmul@a:	; 4 bytes @ 0x1F
  2640  001F'                    	ds   1
  2641  001F'                    ??_atoi:	; 1 bytes @ 0x20
  2642  0020'                    	global	___fladd@grs
  2643                           ___fladd@grs:	; 1 bytes @ 0x20
  2644  0020'                    	global	___fldiv@grs
  2645                           ___fldiv@grs:	; 4 bytes @ 0x20
  2646  0020'                    	ds   1
  2647  0020'                    ??_strcat:	; 1 bytes @ 0x21
  2648  0021'                    	global	pad@p
  2649                           pad@p:	; 2 bytes @ 0x21
  2650  0021'                    	ds   2
  2651  0021'                    ??___flmul:	; 1 bytes @ 0x23
  2652  0023'                    ??_pad:	; 1 bytes @ 0x23
  2653  0023'                    	ds   1
  2654  0023'                    	global	___fldiv@bexp
  2655                           ___fldiv@bexp:	; 1 bytes @ 0x24
  2656  0024'                    	global	pad@i
  2657                           pad@i:	; 2 bytes @ 0x24
  2658  0024'                    	global	atoi@neg
  2659                           atoi@neg:	; 2 bytes @ 0x24
  2660  0024'                    	ds   1
  2661  0024'                    	global	___fldiv@aexp
  2662                           ___fldiv@aexp:	; 1 bytes @ 0x25
  2663  0025'                    	ds   1
  2664  0025'                    	global	?_floorf
  2665                           ?_floorf:	; 4 bytes @ 0x26
  2666  0026'                    	global	pad@w
  2667                           pad@w:	; 2 bytes @ 0x26
  2668  0026'                    	global	_atoi$1465
  2669                           _atoi$1465:	; 2 bytes @ 0x26
  2670  0026'                    	global	floorf@x
  2671                           floorf@x:	; 4 bytes @ 0x26
  2672  0026'                    	ds   1
  2673  0026'                    	global	___flmul@sign
  2674                           ___flmul@sign:	; 1 bytes @ 0x27
  2675  0027'                    	ds   1
  2676  0027'                    	global	___flmul@aexp
  2677                           ___flmul@aexp:	; 1 bytes @ 0x28
  2678  0028'                    	global	_atoi$1467
  2679                           _atoi$1467:	; 2 bytes @ 0x28
  2680  0028'                    	ds   1
  2681  0028'                    	global	___flmul@grs
  2682                           ___flmul@grs:	; 4 bytes @ 0x29
  2683  0029'                    	ds   1
  2684  0029'                    ??_floorf:	; 1 bytes @ 0x2A
  2685  002A'                    	global	_atoi$1466
  2686                           _atoi$1466:	; 1 bytes @ 0x2A
  2687  002A'                    	ds   1
  2688  002A'                    	global	atoi@n
  2689                           atoi@n:	; 2 bytes @ 0x2B
  2690  002B'                    	ds   2
  2691  002B'                    ??_Mode2:	; 1 bytes @ 0x2D
  2692  002D'                    	global	___flmul@bexp
  2693                           ___flmul@bexp:	; 1 bytes @ 0x2D
  2694  002D'                    	ds   1
  2695  002D'                    	global	___flmul@prod
  2696                           ___flmul@prod:	; 4 bytes @ 0x2E
  2697  002E'                    	ds   2
  2698  002E'                    	global	floorf@m
  2699                           floorf@m:	; 4 bytes @ 0x30
  2700  0030'                    	ds   2
  2701  0030'                    	global	___flmul@temp
  2702                           ___flmul@temp:	; 2 bytes @ 0x32
  2703  0032'                    	ds   2
  2704  0032'                    ?___flge:	; 1 bit 
  2705  0034'                    	global	?___flsub
  2706                           ?___flsub:	; 4 bytes @ 0x34
  2707  0034'                    	global	floorf@e
  2708                           floorf@e:	; 2 bytes @ 0x34
  2709  0034'                    	global	___flge@ff1
  2710                           ___flge@ff1:	; 4 bytes @ 0x34
  2711  0034'                    	global	___flsub@b
  2712                           ___flsub@b:	; 4 bytes @ 0x34
  2713  0034'                    	ds   2
  2714  0034'                    	global	floorf@u
  2715                           floorf@u:	; 4 bytes @ 0x36
  2716  0036'                    	ds   2
  2717  0036'                    	global	___flge@ff2
  2718                           ___flge@ff2:	; 4 bytes @ 0x38
  2719  0038'                    	global	___flsub@a
  2720                           ___flsub@a:	; 4 bytes @ 0x38
  2721  0038'                    	ds   4
  2722  0038'                    ??___flsub:	; 1 bytes @ 0x3C
  2723  003C'                    ??___flge:	; 1 bytes @ 0x3C
  2724  003C'                    	ds   4
  2725  003C'                    	global	?_efgtoa
  2726                           ?_efgtoa:	; 2 bytes @ 0x40
  2727  0040'                    	global	efgtoa@fp
  2728                           efgtoa@fp:	; 2 bytes @ 0x40
  2729  0040'                    	ds   2
  2730  0040'                    	global	efgtoa@f
  2731                           efgtoa@f:	; 4 bytes @ 0x42
  2732  0042'                    	ds   4
  2733  0042'                    	global	efgtoa@c
  2734                           efgtoa@c:	; 1 bytes @ 0x46
  2735  0046'                    	ds   1
  2736  0046'                    ??_efgtoa:	; 1 bytes @ 0x47
  2737  0047'                    	ds   5
  2738  0047'                    	global	?_vfpfcnvrt
  2739                           ?_vfpfcnvrt:	; 2 bytes @ 0x4C
  2740  004C'                    	global	vfpfcnvrt@fp
  2741                           vfpfcnvrt@fp:	; 2 bytes @ 0x4C
  2742  004C'                    	ds   2
  2743  004C'                    	global	vfpfcnvrt@fmt
  2744                           vfpfcnvrt@fmt:	; 2 bytes @ 0x4E
  2745  004E'                    	ds   2
  2746  004E'                    	global	vfpfcnvrt@ap
  2747                           vfpfcnvrt@ap:	; 2 bytes @ 0x50
  2748  0050'                    	ds   2
  2749  0050'                    ??_vfpfcnvrt:	; 1 bytes @ 0x52
  2750  0052'                    	ds   4
  2751  0052'                    	global	?_vfprintf
  2752                           ?_vfprintf:	; 2 bytes @ 0x56
  2753  0056'                    	global	vfprintf@fp
  2754                           vfprintf@fp:	; 2 bytes @ 0x56
  2755  0056'                    	ds   2
  2756  0056'                    	global	vfprintf@fmt
  2757                           vfprintf@fmt:	; 2 bytes @ 0x58
  2758  0058'                    	ds   2
  2759  0058'                    	global	vfprintf@ap
  2760                           vfprintf@ap:	; 2 bytes @ 0x5A
  2761  005A'                    	ds   2
  2762  005A'                    ??_sprintf:	; 1 bytes @ 0x5C
  2763  005C'                    ??_Mode3:	; 1 bytes @ 0x5C
  2764  005C'                    ??_main:	; 1 bytes @ 0x5C
  2765  005C'                    ??_vfprintf:	; 1 bytes @ 0x5C
  2766  005C'                    ;!
  2767                           ;!Data Sizes:
  2768                           ;!    Strings     83
  2769                           ;!    Constant    0
  2770                           ;!    Data        0
  2771                           ;!    BSS         120
  2772                           ;!    Persistent  0
  2773                           ;!    Stack       0
  2774                           ;!
  2775                           ;!Auto Spaces:
  2776                           ;!    Space          Size  Autos    Used
  2777                           ;!    COMRAM          126     92     112
  2778                           ;!    BANK0           128     96     116
  2779                           ;!    BANK1           256      0      80
  2780                           ;!    BANK2           256      0       0
  2781                           ;!    BANK3           256      0       0
  2782                           ;!    BANK4           256      0       0
  2783                           ;!    BANK5           256      0       0
  2784                           
  2785                           ;!
  2786                           ;!Pointer List with Targets:
  2787                           ;!
  2788                           ;!    strspn@c	PTR const unsigned char  size(2) Largest target is 2
  2789                           ;!		 -> STR_3(CODE[2]), STR_2(CODE[2]), 
  2790                           ;!
  2791                           ;!    strspn@s	PTR const unsigned char  size(2) Largest target is 10
  2792                           ;!		 -> mystring(BANK0[10]), NULL(NULL[0]), 
  2793                           ;!
  2794                           ;!    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
  2795                           ;!		 -> STR_3(CODE[2]), STR_2(CODE[2]), 
  2796                           ;!
  2797                           ;!    strcspn@s	PTR const unsigned char  size(2) Largest target is 10
  2798                           ;!		 -> mystring(BANK0[10]), NULL(NULL[0]), 
  2799                           ;!
  2800                           ;!    strchr@s	PTR const unsigned char  size(2) Largest target is 10
  2801                           ;!		 -> mystring(BANK0[10]), NULL(NULL[0]), STR_3(CODE[2]), STR_2(CODE[2]), 
  2802                           ;!
  2803                           ;!    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
  2804                           ;!		 -> STR_3(CODE[2]), STR_2(CODE[2]), 
  2805                           ;!
  2806                           ;!    strtok@p	PTR unsigned char  size(2) Largest target is 10
  2807                           ;!		 -> mystring(BANK0[10]), NULL(NULL[0]), 
  2808                           ;!
  2809                           ;!    strtok@s	PTR unsigned char  size(2) Largest target is 10
  2810                           ;!		 -> mystring(BANK0[10]), NULL(NULL[0]), 
  2811                           ;!
  2812                           ;!    sp__strchr	PTR unsigned char  size(2) Largest target is 10
  2813                           ;!		 -> mystring(BANK0[10]), NULL(NULL[0]), STR_3(CODE[2]), STR_2(CODE[2]), 
  2814                           ;!
  2815                           ;!    strstr@h	PTR const unsigned char  size(2) Largest target is 10
  2816                           ;!		 -> mystring(BANK0[10]), NULL(NULL[0]), STR_3(CODE[2]), STR_2(CODE[2]), 
  2817                           ;!
  2818                           ;!    strstr@n	PTR const unsigned char  size(2) Largest target is 6
  2819                           ;!		 -> STR_17(CODE[6]), STR_15(CODE[6]), STR_13(CODE[6]), STR_11(CODE[6]), 
  2820                           ;!		 -> STR_7(CODE[5]), 
  2821                           ;!
  2822                           ;!    strncmp@_r	PTR const unsigned char  size(2) Largest target is 6
  2823                           ;!		 -> STR_28(CODE[3]), STR_17(CODE[6]), STR_15(CODE[6]), STR_13(CODE[6]), 
  2824                           ;!		 -> STR_11(CODE[6]), STR_7(CODE[5]), 
  2825                           ;!
  2826                           ;!    strncmp@r	PTR const unsigned char  size(2) Largest target is 6
  2827                           ;!		 -> STR_28(CODE[3]), STR_17(CODE[6]), STR_15(CODE[6]), STR_13(CODE[6]), 
  2828                           ;!		 -> STR_11(CODE[6]), STR_7(CODE[5]), 
  2829                           ;!
  2830                           ;!    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
  2831                           ;!		 -> vfpfcnvrt@ct(BANK0[3]), mystring(BANK0[10]), NULL(NULL[0]), STR_3(CODE[2]), 
  2832                           ;!		 -> STR_2(CODE[2]), 
  2833                           ;!
  2834                           ;!    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
  2835                           ;!		 -> vfpfcnvrt@ct(BANK0[3]), mystring(BANK0[10]), NULL(NULL[0]), STR_3(CODE[2]), 
  2836                           ;!		 -> STR_2(CODE[2]), 
  2837                           ;!
  2838                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 80
  2839                           ;!		 -> dbuf(BANK1[80]), STR_17(CODE[6]), STR_15(CODE[6]), STR_13(CODE[6]), 
  2840                           ;!		 -> STR_11(CODE[6]), STR_7(CODE[5]), str(BANK0[10]), 
  2841                           ;!
  2842                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 80
  2843                           ;!		 -> dbuf(BANK1[80]), STR_17(CODE[6]), STR_15(CODE[6]), STR_13(CODE[6]), 
  2844                           ;!		 -> STR_11(CODE[6]), STR_7(CODE[5]), str(BANK0[10]), 
  2845                           ;!
  2846                           ;!    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
  2847                           ;!		 -> dbuf(BANK1[80]), str(BANK0[10]), 
  2848                           ;!
  2849                           ;!    strcpy@d	PTR unsigned char  size(2) Largest target is 80
  2850                           ;!		 -> dbuf(BANK1[80]), str(BANK0[10]), 
  2851                           ;!
  2852                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
  2853                           ;!		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), 
  2854                           ;!		 -> dbuf(BANK1[80]), STR_9(CODE[3]), 
  2855                           ;!
  2856                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
  2857                           ;!		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), 
  2858                           ;!		 -> dbuf(BANK1[80]), STR_9(CODE[3]), 
  2859                           ;!
  2860                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 3
  2861                           ;!		 -> STR_9(CODE[3]), 
  2862                           ;!
  2863                           ;!    strcat@dest	PTR unsigned char  size(2) Largest target is 10
  2864                           ;!		 -> str(BANK0[10]), 
  2865                           ;!
  2866                           ;!    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
  2867                           ;!		 -> STR_8(CODE[5]), 
  2868                           ;!
  2869                           ;!    sprintf@s	PTR unsigned char  size(2) Largest target is 10
  2870                           ;!		 -> str(BANK0[10]), 
  2871                           ;!
  2872                           ;!    sprintf@ap	PTR void [1] size(2) Largest target is 2
  2873                           ;!		 -> ?_sprintf(BANK0[2]), 
  2874                           ;!
  2875                           ;!    f.buffer	PTR unsigned char  size(2) Largest target is 10
  2876                           ;!		 -> str(BANK0[10]), 
  2877                           ;!
  2878                           ;!    fputs@s	PTR const unsigned char  size(2) Largest target is 80
  2879                           ;!		 -> dbuf(BANK1[80]), 
  2880                           ;!
  2881                           ;!    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
  2882                           ;!		 -> sprintf@f(BANK0[6]), 
  2883                           ;!
  2884                           ;!    S1509_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
  2885                           ;!		 -> str(BANK0[10]), 
  2886                           ;!
  2887                           ;!    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
  2888                           ;!		 -> str(BANK0[10]), 
  2889                           ;!
  2890                           ;!    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
  2891                           ;!		 -> sprintf@f(BANK0[6]), 
  2892                           ;!
  2893                           ;!    atoi@s	PTR const unsigned char  size(2) Largest target is 10
  2894                           ;!		 -> mystring(BANK0[10]), NULL(NULL[0]), STR_8(CODE[5]), 
  2895                           ;!
  2896                           ;!    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
  2897                           ;!		 -> sprintf@ap(BANK0[2]), 
  2898                           ;!
  2899                           ;!    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
  2900                           ;!		 -> sprintf@f(BANK0[6]), 
  2901                           ;!
  2902                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
  2903                           ;!		 -> STR_8(CODE[5]), 
  2904                           ;!
  2905                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
  2906                           ;!		 -> STR_8(CODE[5]), 
  2907                           ;!
  2908                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
  2909                           ;!		 -> sprintf@f(BANK0[6]), 
  2910                           ;!
  2911                           ;!    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
  2912                           ;!		 -> sprintf@ap(BANK0[2]), 
  2913                           ;!
  2914                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
  2915                           ;!		 -> vfprintf@cfmt(BANK0[2]), 
  2916                           ;!
  2917                           ;!    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
  2918                           ;!		 -> sprintf@f(BANK0[6]), 
  2919                           ;!
  2920                           ;!    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
  2921                           ;!		 -> dbuf(BANK1[80]), str(BANK0[10]), 
  2922                           ;!
  2923                           ;!    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
  2924                           ;!		 -> sprintf@f(BANK0[6]), 
  2925                           ;!
  2926                           ;!    pad@buf	PTR unsigned char  size(2) Largest target is 80
  2927                           ;!		 -> dbuf(BANK1[80]), 
  2928                           ;!
  2929                           ;!    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 1535
  2930                           ;!		 -> RAM(DATA[1535]), 
  2931                           ;!
  2932                           ;!    sp__strstr	PTR unsigned char  size(2) Largest target is 10
  2933                           ;!		 -> mystring(BANK0[10]), NULL(NULL[0]), STR_3(CODE[2]), STR_2(CODE[2]), 
  2934                           ;!
  2935                           ;!    sp__strcat	PTR unsigned char  size(2) Largest target is 10
  2936                           ;!		 -> str(BANK0[10]), 
  2937                           ;!
  2938                           ;!    sp__strtok	PTR unsigned char  size(2) Largest target is 10
  2939                           ;!		 -> mystring(BANK0[10]), NULL(NULL[0]), 
  2940                           ;!
  2941                           ;!    sp__GetString	PTR unsigned char  size(2) Largest target is 10
  2942                           ;!		 -> mystring(BANK0[10]), 
  2943                           ;!
  2944                           
  2945                           
  2946                           ;!
  2947                           ;!Critical Paths under _main in COMRAM
  2948                           ;!
  2949                           ;!    _strstr->_strncmp
  2950                           ;!    _strcat->_strcpy
  2951                           ;!    _sprintf->_vfprintf
  2952                           ;!    _vfprintf->_vfpfcnvrt
  2953                           ;!    _vfpfcnvrt->_efgtoa
  2954                           ;!    _efgtoa->___flge
  2955                           ;!    _tolower->_isupper
  2956                           ;!    _strcpy->_strlen
  2957                           ;!    _pad->_fputs
  2958                           ;!    _fputs->_fputc
  2959                           ;!    _floorf->___fldiv
  2960                           ;!    ___flsub->___flmul
  2961                           ;!    ___flmul->___xxtofl
  2962                           ;!    ___flge->___flmul
  2963                           ;!    _Mode2->_atoi
  2964                           ;!    _strtok->_strcspn
  2965                           ;!    _strtok->_strspn
  2966                           ;!    _strspn->_strchr
  2967                           ;!    _strcspn->_strchr
  2968                           ;!    _atoi->_strtok
  2969                           ;!    _Mode1->_ClearBuffer
  2970                           ;!
  2971                           ;!Critical Paths under _Lo_ISR in COMRAM
  2972                           ;!
  2973                           ;!    _Lo_ISR->_MyusartRead
  2974                           ;!    _MyusartRead->i1___awmod
  2975                           ;!    _UART_Write_Text->_UART_Write
  2976                           ;!
  2977                           ;!Critical Paths under _main in BANK0
  2978                           ;!
  2979                           ;!    _main->_Mode3
  2980                           ;!    _Mode3->_sprintf
  2981                           ;!    _sprintf->_vfprintf
  2982                           ;!    _vfprintf->_vfpfcnvrt
  2983                           ;!    _vfpfcnvrt->_efgtoa
  2984                           ;!
  2985                           ;!Critical Paths under _Lo_ISR in BANK0
  2986                           ;!
  2987                           ;!    None.
  2988                           ;!
  2989                           ;!Critical Paths under _main in BANK1
  2990                           ;!
  2991                           ;!    None.
  2992                           ;!
  2993                           ;!Critical Paths under _Lo_ISR in BANK1
  2994                           ;!
  2995                           ;!    None.
  2996                           ;!
  2997                           ;!Critical Paths under _main in BANK2
  2998                           ;!
  2999                           ;!    None.
  3000                           ;!
  3001                           ;!Critical Paths under _Lo_ISR in BANK2
  3002                           ;!
  3003                           ;!    None.
  3004                           ;!
  3005                           ;!Critical Paths under _main in BANK3
  3006                           ;!
  3007                           ;!    None.
  3008                           ;!
  3009                           ;!Critical Paths under _Lo_ISR in BANK3
  3010                           ;!
  3011                           ;!    None.
  3012                           ;!
  3013                           ;!Critical Paths under _main in BANK4
  3014                           ;!
  3015                           ;!    None.
  3016                           ;!
  3017                           ;!Critical Paths under _Lo_ISR in BANK4
  3018                           ;!
  3019                           ;!    None.
  3020                           ;!
  3021                           ;!Critical Paths under _main in BANK5
  3022                           ;!
  3023                           ;!    None.
  3024                           ;!
  3025                           ;!Critical Paths under _Lo_ISR in BANK5
  3026                           ;!
  3027                           ;!    None.
  3028                           
  3029 ;;
  3030 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3031 ;;
  3032                           
  3033                           ;!
  3034                           ;!Call Graph Tables:
  3035                           ;!
  3036                           ;! ---------------------------------------------------------------------------------
  3037                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3038                           ;! ---------------------------------------------------------------------------------
  3039                           ;! (0) _main                                                 0     0      0   53609
  3040                           ;!                        _ClearBuffer
  3041                           ;!                          _GetString
  3042                           ;!                              _Mode1
  3043                           ;!                              _Mode2
  3044                           ;!                              _Mode3
  3045                           ;!                  _SYSTEM_Initialize
  3046                           ;!                             _strstr
  3047                           ;! ---------------------------------------------------------------------------------
  3048                           ;! (1) _SYSTEM_Initialize                                    0     0      0       0
  3049                           ;!                     _ADC_Initialize
  3050                           ;!                    _CCP1_Initialize
  3051                           ;!               _INTERRUPT_Initialize
  3052                           ;!                    _UART_Initialize
  3053                           ;! ---------------------------------------------------------------------------------
  3054                           ;! (2) _UART_Initialize                                      0     0      0       0
  3055                           ;! ---------------------------------------------------------------------------------
  3056                           ;! (2) _INTERRUPT_Initialize                                 0     0      0       0
  3057                           ;! ---------------------------------------------------------------------------------
  3058                           ;! (2) _CCP1_Initialize                                      0     0      0       0
  3059                           ;! ---------------------------------------------------------------------------------
  3060                           ;! (2) _ADC_Initialize                                       0     0      0       0
  3061                           ;! ---------------------------------------------------------------------------------
  3062                           ;! (1) _Mode3                                                8     8      0   46719
  3063                           ;!                                             88 BANK0      8     8      0
  3064                           ;!                           _ADC_Read
  3065                           ;!                        _ClearBuffer
  3066                           ;!                          _GetString
  3067                           ;!                        _PrintBuffer
  3068                           ;!                            ___flmul
  3069                           ;!                           ___xxtofl
  3070                           ;!                            _sprintf
  3071                           ;!                             _strcat
  3072                           ;!                             _strstr
  3073                           ;! ---------------------------------------------------------------------------------
  3074                           ;! (1) _strstr                                               6     2      4    3025
  3075                           ;!                                             26 COMRAM     6     2      4
  3076                           ;!                          _GetString (ARG)
  3077                           ;!                             _strchr
  3078                           ;!                             _strlen
  3079                           ;!                            _strncmp
  3080                           ;! ---------------------------------------------------------------------------------
  3081                           ;! (2) _strcat                                               4     0      4    1897
  3082                           ;!                                             29 COMRAM     4     0      4
  3083                           ;!                             _strcpy
  3084                           ;!                             _strlen
  3085                           ;! ---------------------------------------------------------------------------------
  3086                           ;! (2) _sprintf                                             18    10      8   37717
  3087                           ;!                                             70 BANK0     18    10      8
  3088                           ;!                           _vfprintf
  3089                           ;! ---------------------------------------------------------------------------------
  3090                           ;! (3) _vfprintf                                             8     2      6   37213
  3091                           ;!                                             86 COMRAM     6     0      6
  3092                           ;!                                             68 BANK0      2     2      0
  3093                           ;!                          _vfpfcnvrt
  3094                           ;! ---------------------------------------------------------------------------------
  3095                           ;! (4) _vfpfcnvrt                                           48    42      6   36686
  3096                           ;!                                             76 COMRAM    10     4      6
  3097                           ;!                                             56 BANK0     12    12      0
  3098                           ;!                               _atoi
  3099                           ;!                             _efgtoa
  3100                           ;!                              _fputc
  3101                           ;!                            _isdigit
  3102                           ;!                            _isupper
  3103                           ;!                            _strncmp
  3104                           ;!                            _tolower
  3105                           ;! ---------------------------------------------------------------------------------
  3106                           ;! (2) _strncmp                                             13     7      6     865
  3107                           ;!                                             13 COMRAM    13     7      6
  3108                           ;! ---------------------------------------------------------------------------------
  3109                           ;! (5) _efgtoa                                              68    61      7   29517
  3110                           ;!                                             64 COMRAM    12     5      7
  3111                           ;!                                              0 BANK0     56    56      0
  3112                           ;!                            ___awdiv
  3113                           ;!                            ___awmod
  3114                           ;!                            ___fladd
  3115                           ;!                            ___fldiv
  3116                           ;!                             ___fleq
  3117                           ;!                             ___flge
  3118                           ;!                            ___flmul
  3119                           ;!                            ___flneg
  3120                           ;!                            ___flsub
  3121                           ;!                            ___fltol
  3122                           ;!                      ___fpclassifyf
  3123                           ;!                             _floorf
  3124                           ;!                            _isupper
  3125                           ;!                                _pad
  3126                           ;!                             _strcpy
  3127                           ;!                            _tolower
  3128                           ;! ---------------------------------------------------------------------------------
  3129                           ;! (5) _tolower                                              8     6      2    1142
  3130                           ;!                                             19 COMRAM     8     6      2
  3131                           ;!                            _isupper
  3132                           ;! ---------------------------------------------------------------------------------
  3133                           ;! (6) _isupper                                              6     4      2     551
  3134                           ;!                                             13 COMRAM     6     4      2
  3135                           ;! ---------------------------------------------------------------------------------
  3136                           ;! (3) _strcpy                                              10     6      4    1217
  3137                           ;!                                             19 COMRAM    10     6      4
  3138                           ;!                             _strlen (ARG)
  3139                           ;! ---------------------------------------------------------------------------------
  3140                           ;! (6) _pad                                                 11     5      6    4137
  3141                           ;!                                             29 COMRAM    11     5      6
  3142                           ;!                              _fputc
  3143                           ;!                              _fputs
  3144                           ;!                             _strlen
  3145                           ;! ---------------------------------------------------------------------------------
  3146                           ;! (2) _strlen                                               6     4      2     400
  3147                           ;!                                             13 COMRAM     6     4      2
  3148                           ;! ---------------------------------------------------------------------------------
  3149                           ;! (7) _fputs                                                7     3      4    1537
  3150                           ;!                                             22 COMRAM     7     3      4
  3151                           ;!                              _fputc
  3152                           ;! ---------------------------------------------------------------------------------
  3153                           ;! (5) _fputc                                                9     5      4    1037
  3154                           ;!                                             13 COMRAM     9     5      4
  3155                           ;!                              _putch
  3156                           ;! ---------------------------------------------------------------------------------
  3157                           ;! (6) _putch                                                1     1      0       0
  3158                           ;! ---------------------------------------------------------------------------------
  3159                           ;! (6) _floorf                                              20    16      4     669
  3160                           ;!                                             38 COMRAM    20    16      4
  3161                           ;!                            ___fldiv (ARG)
  3162                           ;! ---------------------------------------------------------------------------------
  3163                           ;! (6) ___fpclassifyf                                       14    10      4     375
  3164                           ;!                                             13 COMRAM    14    10      4
  3165                           ;! ---------------------------------------------------------------------------------
  3166                           ;! (6) ___fltol                                             10     6      4     517
  3167                           ;!                                             13 COMRAM    10     6      4
  3168                           ;! ---------------------------------------------------------------------------------
  3169                           ;! (6) ___flsub                                              8     0      8    4007
  3170                           ;!                                             52 COMRAM     8     0      8
  3171                           ;!                            ___fladd
  3172                           ;!                            ___flmul (ARG)
  3173                           ;! ---------------------------------------------------------------------------------
  3174                           ;! (7) ___fladd                                             20    12      8    3442
  3175                           ;!                                             13 COMRAM    20    12      8
  3176                           ;! ---------------------------------------------------------------------------------
  3177                           ;! (6) ___flneg                                              4     0      4     155
  3178                           ;!                                             13 COMRAM     4     0      4
  3179                           ;! ---------------------------------------------------------------------------------
  3180                           ;! (6) ___flmul                                             25    17      8    3413
  3181                           ;!                                             27 COMRAM    25    17      8
  3182                           ;!                           ___xxtofl (ARG)
  3183                           ;! ---------------------------------------------------------------------------------
  3184                           ;! (6) ___flge                                              12     4      8     806
  3185                           ;!                                             52 COMRAM    12     4      8
  3186                           ;!                            ___flmul (ARG)
  3187                           ;! ---------------------------------------------------------------------------------
  3188                           ;! (6) ___fleq                                              12     4      8     770
  3189                           ;!                                             13 COMRAM    12     4      8
  3190                           ;! ---------------------------------------------------------------------------------
  3191                           ;! (6) ___fldiv                                             25    17      8    2723
  3192                           ;!                                             13 COMRAM    25    17      8
  3193                           ;! ---------------------------------------------------------------------------------
  3194                           ;! (6) ___awmod                                              6     2      4     723
  3195                           ;!                                             13 COMRAM     6     2      4
  3196                           ;! ---------------------------------------------------------------------------------
  3197                           ;! (6) ___awdiv                                              8     4      4     625
  3198                           ;!                                             13 COMRAM     8     4      4
  3199                           ;! ---------------------------------------------------------------------------------
  3200                           ;! (2) ___xxtofl                                            14    10      4     398
  3201                           ;!                                             13 COMRAM    14    10      4
  3202                           ;! ---------------------------------------------------------------------------------
  3203                           ;! (2) _ADC_Read                                             8     6      2     121
  3204                           ;!                                             13 COMRAM     8     6      2
  3205                           ;! ---------------------------------------------------------------------------------
  3206                           ;! (1) _Mode2                                                0     0      0    3729
  3207                           ;!                        _ClearBuffer
  3208                           ;!                          _GetString
  3209                           ;!                        _PrintBuffer
  3210                           ;!                               _atoi
  3211                           ;!                             _strtok
  3212                           ;! ---------------------------------------------------------------------------------
  3213                           ;! (2) _strtok                                               4     0      4    2056
  3214                           ;!                                             26 COMRAM     4     0      4
  3215                           ;!                          _GetString (ARG)
  3216                           ;!                            _strcspn
  3217                           ;!                             _strspn
  3218                           ;! ---------------------------------------------------------------------------------
  3219                           ;! (3) _strspn                                               7     3      4     787
  3220                           ;!                                             19 COMRAM     7     3      4
  3221                           ;!                             _strchr
  3222                           ;! ---------------------------------------------------------------------------------
  3223                           ;! (3) _strcspn                                              7     3      4     787
  3224                           ;!                                             19 COMRAM     7     3      4
  3225                           ;!                             _strchr
  3226                           ;! ---------------------------------------------------------------------------------
  3227                           ;! (2) _strchr                                               6     2      4     544
  3228                           ;!                                             13 COMRAM     6     2      4
  3229                           ;! ---------------------------------------------------------------------------------
  3230                           ;! (5) _atoi                                                15    13      2    1605
  3231                           ;!                                             30 COMRAM    15    13      2
  3232                           ;!                          _GetString (ARG)
  3233                           ;!                             ___wmul
  3234                           ;!                            _isdigit
  3235                           ;!                            _isspace
  3236                           ;!                             _strtok (ARG)
  3237                           ;! ---------------------------------------------------------------------------------
  3238                           ;! (6) _isspace                                              7     5      2     259
  3239                           ;!                                             13 COMRAM     7     5      2
  3240                           ;! ---------------------------------------------------------------------------------
  3241                           ;! (5) _isdigit                                              6     4      2     281
  3242                           ;!                                             13 COMRAM     6     4      2
  3243                           ;! ---------------------------------------------------------------------------------
  3244                           ;! (6) ___wmul                                               6     2      4     412
  3245                           ;!                                             13 COMRAM     6     2      4
  3246                           ;! ---------------------------------------------------------------------------------
  3247                           ;! (2) _GetString                                            2     0      2       0
  3248                           ;!                                             13 COMRAM     2     0      2
  3249                           ;! ---------------------------------------------------------------------------------
  3250                           ;! (1) _Mode1                                                0     0      0      68
  3251                           ;!                        _ClearBuffer
  3252                           ;!                        _PrintBuffer
  3253                           ;! ---------------------------------------------------------------------------------
  3254                           ;! (2) _PrintBuffer                                          2     0      2       0
  3255                           ;! ---------------------------------------------------------------------------------
  3256                           ;! (2) _ClearBuffer                                          2     2      0      68
  3257                           ;!                                             13 COMRAM     2     2      0
  3258                           ;! ---------------------------------------------------------------------------------
  3259                           ;! Estimated maximum stack depth 7
  3260                           ;! ---------------------------------------------------------------------------------
  3261                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3262                           ;! ---------------------------------------------------------------------------------
  3263                           ;! (10) _Lo_ISR                                              5     5      0     536
  3264                           ;!                                              8 COMRAM     5     5      0
  3265                           ;!                        _MyusartRead
  3266                           ;! ---------------------------------------------------------------------------------
  3267                           ;! (11) _MyusartRead                                         2     2      0     536
  3268                           ;!                                              6 COMRAM     2     2      0
  3269                           ;!                    _UART_Write_Text
  3270                           ;!                          i1___awmod
  3271                           ;! ---------------------------------------------------------------------------------
  3272                           ;! (12) i1___awmod                                           6     2      4     348
  3273                           ;!                                              0 COMRAM     6     2      4
  3274                           ;! ---------------------------------------------------------------------------------
  3275                           ;! (12) _UART_Write_Text                                     4     2      2     188
  3276                           ;!                                              1 COMRAM     4     2      2
  3277                           ;!                         _UART_Write
  3278                           ;! ---------------------------------------------------------------------------------
  3279                           ;! (13) _UART_Write                                          1     1      0      22
  3280                           ;!                                              0 COMRAM     1     1      0
  3281                           ;! ---------------------------------------------------------------------------------
  3282                           ;! Estimated maximum stack depth 13
  3283                           ;! ---------------------------------------------------------------------------------
  3284                           ;!
  3285                           ;! Call Graph Graphs:
  3286                           ;!
  3287                           ;! _main (ROOT)
  3288                           ;!   _ClearBuffer
  3289                           ;!   _GetString
  3290                           ;!   _Mode1
  3291                           ;!     _ClearBuffer
  3292                           ;!     _PrintBuffer
  3293                           ;!   _Mode2
  3294                           ;!     _ClearBuffer
  3295                           ;!     _GetString
  3296                           ;!     _PrintBuffer
  3297                           ;!     _atoi
  3298                           ;!       _GetString (ARG)
  3299                           ;!       ___wmul (ARG)
  3300                           ;!       _isdigit (ARG)
  3301                           ;!       _isspace (ARG)
  3302                           ;!       _strtok (ARG)
  3303                           ;!         _GetString (ARG)
  3304                           ;!         _strcspn (ARG)
  3305                           ;!           _strchr
  3306                           ;!         _strspn (ARG)
  3307                           ;!           _strchr
  3308                           ;!     _strtok
  3309                           ;!       _GetString (ARG)
  3310                           ;!       _strcspn (ARG)
  3311                           ;!         _strchr
  3312                           ;!       _strspn (ARG)
  3313                           ;!         _strchr
  3314                           ;!   _Mode3
  3315                           ;!     _ADC_Read
  3316                           ;!     _ClearBuffer
  3317                           ;!     _GetString
  3318                           ;!     _PrintBuffer
  3319                           ;!     ___flmul
  3320                           ;!       ___xxtofl (ARG)
  3321                           ;!     ___xxtofl
  3322                           ;!     _sprintf
  3323                           ;!       _vfprintf
  3324                           ;!         _vfpfcnvrt
  3325                           ;!           _atoi
  3326                           ;!             _GetString (ARG)
  3327                           ;!             ___wmul (ARG)
  3328                           ;!             _isdigit (ARG)
  3329                           ;!             _isspace (ARG)
  3330                           ;!             _strtok (ARG)
  3331                           ;!               _GetString (ARG)
  3332                           ;!               _strcspn (ARG)
  3333                           ;!                 _strchr
  3334                           ;!               _strspn (ARG)
  3335                           ;!                 _strchr
  3336                           ;!           _efgtoa
  3337                           ;!             ___awdiv
  3338                           ;!             ___awmod
  3339                           ;!             ___fladd
  3340                           ;!             ___fldiv
  3341                           ;!             ___fleq
  3342                           ;!             ___flge
  3343                           ;!               ___flmul (ARG)
  3344                           ;!                 ___xxtofl (ARG)
  3345                           ;!             ___flmul
  3346                           ;!               ___xxtofl (ARG)
  3347                           ;!             ___flneg
  3348                           ;!             ___flsub
  3349                           ;!               ___fladd
  3350                           ;!               ___flmul (ARG)
  3351                           ;!                 ___xxtofl (ARG)
  3352                           ;!             ___fltol
  3353                           ;!             ___fpclassifyf
  3354                           ;!             _floorf
  3355                           ;!               ___fldiv (ARG)
  3356                           ;!             _isupper
  3357                           ;!             _pad
  3358                           ;!               _fputc
  3359                           ;!                 _putch
  3360                           ;!               _fputs
  3361                           ;!                 _fputc
  3362                           ;!                   _putch
  3363                           ;!               _strlen
  3364                           ;!             _strcpy
  3365                           ;!               _strlen (ARG)
  3366                           ;!             _tolower
  3367                           ;!               _isupper
  3368                           ;!           _fputc
  3369                           ;!             _putch
  3370                           ;!           _isdigit
  3371                           ;!           _isupper
  3372                           ;!           _strncmp
  3373                           ;!           _tolower
  3374                           ;!             _isupper
  3375                           ;!     _strcat
  3376                           ;!       _strcpy
  3377                           ;!         _strlen (ARG)
  3378                           ;!       _strlen
  3379                           ;!     _strstr
  3380                           ;!       _GetString (ARG)
  3381                           ;!       _strchr (ARG)
  3382                           ;!       _strlen (ARG)
  3383                           ;!       _strncmp (ARG)
  3384                           ;!   _SYSTEM_Initialize
  3385                           ;!     _ADC_Initialize
  3386                           ;!     _CCP1_Initialize
  3387                           ;!     _INTERRUPT_Initialize
  3388                           ;!     _UART_Initialize
  3389                           ;!   _strstr
  3390                           ;!     _GetString (ARG)
  3391                           ;!     _strchr (ARG)
  3392                           ;!     _strlen (ARG)
  3393                           ;!     _strncmp (ARG)
  3394                           ;!
  3395                           ;! _Lo_ISR (ROOT)
  3396                           ;!   _MyusartRead
  3397                           ;!     _UART_Write_Text
  3398                           ;!       _UART_Write
  3399                           ;!     i1___awmod
  3400                           ;!
  3401                           
  3402                           ;! Address spaces:
  3403                           
  3404                           ;!Name               Size   Autos  Total    Cost      Usage
  3405                           ;!BIGRAM             5FF      0       0      17        0.0%
  3406                           ;!EEDATA             100      0       0       0        0.0%
  3407                           ;!BITBANK5           100      0       0      16        0.0%
  3408                           ;!BANK5              100      0       0      14        0.0%
  3409                           ;!BITBANK4           100      0       0      12        0.0%
  3410                           ;!BANK4              100      0       0      13        0.0%
  3411                           ;!BITBANK3           100      0       0      10        0.0%
  3412                           ;!BANK3              100      0       0      11        0.0%
  3413                           ;!BITBANK2           100      0       0       8        0.0%
  3414                           ;!BANK2              100      0       0       9        0.0%
  3415                           ;!BITBANK1           100      0       0       6        0.0%
  3416                           ;!BANK1              100      0      50       7       31.3%
  3417                           ;!BITBANK0            80      0       0       4        0.0%
  3418                           ;!BANK0               80     60      74       5       90.6%
  3419                           ;!BITCOMRAM           7E      0       0       0        0.0%
  3420                           ;!COMRAM              7E     5C      70       1       88.9%
  3421                           ;!BITSFR               0      0       0     200        0.0%
  3422                           ;!SFR                  0      0       0     200        0.0%
  3423                           ;!STACK                0      0       0       2        0.0%
  3424                           ;!NULL                 0      0       0       0        0.0%
  3425                           ;!ABS                  0      0     134      15        0.0%
  3426                           ;!DATA                 0      0     134       3        0.0%
  3427                           ;!CODE                 0      0       0       0        0.0%
  3428                           
  3429                           	global	_main
  3430                           
  3431 ;; *************** function _main *****************
  3432 ;; Defined at:
  3433 ;;		line 53 in file "main.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;		None
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
       temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
       , btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
       , btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3447 ;;      Params:         0       0       0       0       0       0       0
  3448 ;;      Locals:         0       0       0       0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0       0       0
  3450 ;;      Totals:         0       0       0       0       0       0       0
  3451 ;;Total ram usage:        0 bytes
  3452 ;; Hardware stack levels required when called:   13
  3453 ;; This function calls:
  3454 ;;		_ClearBuffer
  3455 ;;		_GetString
  3456 ;;		_Mode1
  3457 ;;		_Mode2
  3458 ;;		_Mode3
  3459 ;;		_SYSTEM_Initialize
  3460 ;;		_strstr
  3461 ;; This function is called by:
  3462 ;;		Startup code after reset
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           psect	text0,class=CODE,space=0,reloc=2,group=0
  3466                           	file	"main.c"
  3467                           	line	53
  3468                           global __ptext0
  3469                           __ptext0:
  3470  0000'                    psect	text0
  3471                           	file	"main.c"
  3472                           	line	53
  3473                           	global	__size_of_main
  3474                           	__size_of_main	equ	__end_of_main-_main
  3475  0000                     	
  3476                           _main:
  3477  0000'                    ;incstack = 0
  3478                           	opt	stack 18
  3479                           	line	56
  3480                           	
  3481                           l5777:
  3482  0000'                    ;main.c: 56:     SYSTEM_Initialize() ;
  3483                           	call	_SYSTEM_Initialize	;wreg free
  3484  0000' EC00' F000'        	goto	l5779
  3485  0004' EF00' F000'        	line	58
  3486                           ;main.c: 58:     while(1) {
  3487                           	
  3488                           l76:
  3489  0008'                    	line	65
  3490                           	
  3491                           l5779:
  3492  0008'                    ;main.c: 65:         if(strstr(GetString(), "clear"))
  3493                           	call	_GetString	;wreg free
  3494  0008' EC00' F000'        	movff	0+?_GetString,(c:strstr@h)
  3495  000C' C00D' F01A'        	movff	1+?_GetString,(c:strstr@h+1)
  3496  0010' C00E' F01B'        		movlw	low(STR_11)
  3497  0014' 0E00'              	movwf	((c:strstr@n)),c
  3498  0016' 6E1C'              	movlw	high(STR_11)
  3499  0018' 0E00'              	movwf	((c:strstr@n+1)),c
  3500  001A' 6E1D'              
  3501                           	call	_strstr	;wreg free
  3502  001C' EC00' F000'        	movf	(0+?_strstr),c,w
  3503  0020' 501A'              iorwf	(1+?_strstr),c,w
  3504  0022' 101B'              	btfsc	status,2
  3505  0024' B4D8               	goto	u8291
  3506  0026' EF00' F000'        	goto	u8290
  3507  002A' EF00' F000'        
  3508                           u8291:
  3509  002E'                    	goto	l5783
  3510  002E' EF00' F000'        u8290:
  3511  0032'                    	line	66
  3512                           	
  3513                           l5781:
  3514  0032'                    ;main.c: 66:             ClearBuffer();
  3515                           	call	_ClearBuffer	;wreg free
  3516  0032' EC00' F000'        	goto	l5779
  3517  0036' EF00' F000'        	line	67
  3518                           ;main.c: 67:         else if (strstr(GetString(), "mode1"))
  3519                           	
  3520                           l77:
  3521  003A'                    	
  3522                           l5783:
  3523  003A'                    	call	_GetString	;wreg free
  3524  003A' EC00' F000'        	movff	0+?_GetString,(c:strstr@h)
  3525  003E' C00D' F01A'        	movff	1+?_GetString,(c:strstr@h+1)
  3526  0042' C00E' F01B'        		movlw	low(STR_13)
  3527  0046' 0E00'              	movwf	((c:strstr@n)),c
  3528  0048' 6E1C'              	movlw	high(STR_13)
  3529  004A' 0E00'              	movwf	((c:strstr@n+1)),c
  3530  004C' 6E1D'              
  3531                           	call	_strstr	;wreg free
  3532  004E' EC00' F000'        	movf	(0+?_strstr),c,w
  3533  0052' 501A'              iorwf	(1+?_strstr),c,w
  3534  0054' 101B'              	btfsc	status,2
  3535  0056' B4D8               	goto	u8301
  3536  0058' EF00' F000'        	goto	u8300
  3537  005C' EF00' F000'        
  3538                           u8301:
  3539  0060'                    	goto	l5787
  3540  0060' EF00' F000'        u8300:
  3541  0064'                    	line	68
  3542                           	
  3543                           l5785:
  3544  0064'                    ;main.c: 68:             Mode1();
  3545                           	call	_Mode1	;wreg free
  3546  0064' EC00' F000'        	goto	l5779
  3547  0068' EF00' F000'        	line	69
  3548                           ;main.c: 69:         else if (strstr(GetString(), "mode2"))
  3549                           	
  3550                           l79:
  3551  006C'                    	
  3552                           l5787:
  3553  006C'                    	call	_GetString	;wreg free
  3554  006C' EC00' F000'        	movff	0+?_GetString,(c:strstr@h)
  3555  0070' C00D' F01A'        	movff	1+?_GetString,(c:strstr@h+1)
  3556  0074' C00E' F01B'        		movlw	low(STR_15)
  3557  0078' 0E00'              	movwf	((c:strstr@n)),c
  3558  007A' 6E1C'              	movlw	high(STR_15)
  3559  007C' 0E00'              	movwf	((c:strstr@n+1)),c
  3560  007E' 6E1D'              
  3561                           	call	_strstr	;wreg free
  3562  0080' EC00' F000'        	movf	(0+?_strstr),c,w
  3563  0084' 501A'              iorwf	(1+?_strstr),c,w
  3564  0086' 101B'              	btfsc	status,2
  3565  0088' B4D8               	goto	u8311
  3566  008A' EF00' F000'        	goto	u8310
  3567  008E' EF00' F000'        
  3568                           u8311:
  3569  0092'                    	goto	l5791
  3570  0092' EF00' F000'        u8310:
  3571  0096'                    	line	70
  3572                           	
  3573                           l5789:
  3574  0096'                    ;main.c: 70:             Mode2();
  3575                           	call	_Mode2	;wreg free
  3576  0096' EC00' F000'        	goto	l5779
  3577  009A' EF00' F000'        	line	71
  3578                           ;main.c: 71:         else if (strstr(GetString(), "mode3"))
  3579                           	
  3580                           l81:
  3581  009E'                    	
  3582                           l5791:
  3583  009E'                    	call	_GetString	;wreg free
  3584  009E' EC00' F000'        	movff	0+?_GetString,(c:strstr@h)
  3585  00A2' C00D' F01A'        	movff	1+?_GetString,(c:strstr@h+1)
  3586  00A6' C00E' F01B'        		movlw	low(STR_17)
  3587  00AA' 0E00'              	movwf	((c:strstr@n)),c
  3588  00AC' 6E1C'              	movlw	high(STR_17)
  3589  00AE' 0E00'              	movwf	((c:strstr@n+1)),c
  3590  00B0' 6E1D'              
  3591                           	call	_strstr	;wreg free
  3592  00B2' EC00' F000'        	movf	(0+?_strstr),c,w
  3593  00B6' 501A'              iorwf	(1+?_strstr),c,w
  3594  00B8' 101B'              	btfsc	status,2
  3595  00BA' B4D8               	goto	u8321
  3596  00BC' EF00' F000'        	goto	u8320
  3597  00C0' EF00' F000'        
  3598                           u8321:
  3599  00C4'                    	goto	l5779
  3600  00C4' EF00' F000'        u8320:
  3601  00C8'                    	line	72
  3602                           	
  3603                           l5793:
  3604  00C8'                    ;main.c: 72:             Mode3();
  3605                           	call	_Mode3	;wreg free
  3606  00C8' EC00' F000'        	goto	l5779
  3607  00CC' EF00' F000'        	
  3608                           l83:
  3609  00D0'                    	goto	l5779
  3610  00D0' EF00' F000'        	
  3611                           l82:
  3612  00D4'                    	goto	l5779
  3613  00D4' EF00' F000'        	
  3614                           l80:
  3615  00D8'                    	goto	l5779
  3616  00D8' EF00' F000'        	
  3617                           l78:
  3618  00DC'                    	goto	l5779
  3619  00DC' EF00' F000'        	line	73
  3620                           ;main.c: 73:     }
  3621                           	
  3622                           l84:
  3623  00E0'                    	goto	l5779
  3624  00E0' EF00' F000'        	
  3625                           l85:
  3626  00E4'                    	line	76
  3627                           ;main.c: 74:     return;
  3628                           	
  3629                           l86:
  3630  00E4'                    	global	start
  3631                           	goto	start
  3632  00E4' EF00' F000'        	opt stack 0
  3633                           GLOBAL	__end_of_main
  3634                           	__end_of_main:
  3635  00E8'                    	signat	_main,89
  3636                           	global	_SYSTEM_Initialize
  3637                           
  3638 ;; *************** function _SYSTEM_Initialize *****************
  3639 ;; Defined at:
  3640 ;;		line 60 in file "setting_hardaware/setting.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3654 ;;      Params:         0       0       0       0       0       0       0
  3655 ;;      Locals:         0       0       0       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0       0       0
  3657 ;;      Totals:         0       0       0       0       0       0       0
  3658 ;;Total ram usage:        0 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    5
  3661 ;; This function calls:
  3662 ;;		_ADC_Initialize
  3663 ;;		_CCP1_Initialize
  3664 ;;		_INTERRUPT_Initialize
  3665 ;;		_UART_Initialize
  3666 ;; This function is called by:
  3667 ;;		_main
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           psect	text1,class=CODE,space=0,reloc=2,group=0
  3671                           	file	"setting_hardaware/setting.c"
  3672                           	line	60
  3673                           global __ptext1
  3674                           __ptext1:
  3675  0000'                    psect	text1
  3676                           	file	"setting_hardaware/setting.c"
  3677                           	line	60
  3678                           	global	__size_of_SYSTEM_Initialize
  3679                           	__size_of_SYSTEM_Initialize	equ	__end_of_SYSTEM_Initialize-_SYSTEM_Initialize
  3680  0000                     	
  3681                           _SYSTEM_Initialize:
  3682  0000'                    ;incstack = 0
  3683                           	opt	stack 25
  3684                           	line	67
  3685                           	
  3686                           l2799:
  3687  0000'                    ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  3688                           	call	_INTERRUPT_Initialize	;wreg free
  3689  0000' EC00' F000'        	line	68
  3690                           	
  3691                           l2801:
  3692  0004'                    ;setting_hardaware/setting.c: 68:     UART_Initialize();
  3693                           	call	_UART_Initialize	;wreg free
  3694  0004' EC00' F000'        	line	69
  3695                           	
  3696                           l2803:
  3697  0008'                    ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
  3698                           	call	_CCP1_Initialize	;wreg free
  3699  0008' EC00' F000'        	line	70
  3700                           	
  3701                           l2805:
  3702  000C'                    ;setting_hardaware/setting.c: 70:     ADC_Initialize();
  3703                           	call	_ADC_Initialize	;wreg free
  3704  000C' EC00' F000'        	line	71
  3705                           	
  3706                           l112:
  3707  0010'                    	return	;funcret
  3708  0010' 0012               	opt stack 0
  3709                           GLOBAL	__end_of_SYSTEM_Initialize
  3710                           	__end_of_SYSTEM_Initialize:
  3711  0012'                    	signat	_SYSTEM_Initialize,89
  3712                           	global	_UART_Initialize
  3713                           
  3714 ;; *************** function _UART_Initialize *****************
  3715 ;; Defined at:
  3716 ;;		line 7 in file "setting_hardaware/uart.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3730 ;;      Params:         0       0       0       0       0       0       0
  3731 ;;      Locals:         0       0       0       0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0       0       0
  3733 ;;      Totals:         0       0       0       0       0       0       0
  3734 ;;Total ram usage:        0 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    4
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_SYSTEM_Initialize
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           psect	text2,class=CODE,space=0,reloc=2,group=0
  3744                           	file	"setting_hardaware/uart.c"
  3745                           	line	7
  3746                           global __ptext2
  3747                           __ptext2:
  3748  0000'                    psect	text2
  3749                           	file	"setting_hardaware/uart.c"
  3750                           	line	7
  3751                           	global	__size_of_UART_Initialize
  3752                           	__size_of_UART_Initialize	equ	__end_of_UART_Initialize-_UART_Initialize
  3753  0000                     	
  3754                           _UART_Initialize:
  3755  0000'                    ;incstack = 0
  3756                           	opt	stack 25
  3757                           	line	10
  3758                           	
  3759                           l2623:
  3760  0000'                    ;setting_hardaware/uart.c: 10:     TRISCbits.TRISC6 = 1;
  3761                           	bsf	((c:3988)),c,6	;volatile
  3762  0000' 8C94               	line	11
  3763                           ;setting_hardaware/uart.c: 11:     TRISCbits.TRISC7 = 1;
  3764                           	bsf	((c:3988)),c,7	;volatile
  3765  0002' 8E94               	line	22
  3766                           ;setting_hardaware/uart.c: 22:     TXSTAbits.SYNC = 0;
  3767                           	bcf	((c:4012)),c,4	;volatile
  3768  0004' 98AC               	line	23
  3769                           ;setting_hardaware/uart.c: 23:     BAUDCONbits.BRG16 = 0 ;
  3770                           	bcf	((c:4024)),c,3	;volatile
  3771  0006' 96B8               	line	24
  3772                           ;setting_hardaware/uart.c: 24:     TXSTAbits.BRGH = 1;
  3773                           	bsf	((c:4012)),c,2	;volatile
  3774  0008' 84AC               	line	25
  3775                           	
  3776                           l2625:
  3777  000A'                    ;setting_hardaware/uart.c: 25:     SPBRG = 51;
  3778                           	movlw	low(033h)
  3779  000A' 0E33               	movwf	((c:4015)),c	;volatile
  3780  000C' 6EAF               	line	28
  3781                           	
  3782                           l2627:
  3783  000E'                    ;setting_hardaware/uart.c: 28:     RCSTAbits.SPEN = 1;
  3784                           	bsf	((c:4011)),c,7	;volatile
  3785  000E' 8EAB               	line	29
  3786                           	
  3787                           l2629:
  3788  0010'                    ;setting_hardaware/uart.c: 29:     PIR1bits.TXIF = 0;
  3789                           	bcf	((c:3998)),c,4	;volatile
  3790  0010' 989E               	line	30
  3791                           	
  3792                           l2631:
  3793  0012'                    ;setting_hardaware/uart.c: 30:     PIR1bits.RCIF = 0;
  3794                           	bcf	((c:3998)),c,5	;volatile
  3795  0012' 9A9E               	line	31
  3796                           	
  3797                           l2633:
  3798  0014'                    ;setting_hardaware/uart.c: 31:     TXSTAbits.TXEN = 1;
  3799                           	bsf	((c:4012)),c,5	;volatile
  3800  0014' 8AAC               	line	32
  3801                           	
  3802                           l2635:
  3803  0016'                    ;setting_hardaware/uart.c: 32:     RCSTAbits.CREN = 1;
  3804                           	bsf	((c:4011)),c,4	;volatile
  3805  0016' 88AB               	line	34
  3806                           	
  3807                           l2637:
  3808  0018'                    ;setting_hardaware/uart.c: 34:     PIE1bits.TXIE = 0;
  3809                           	bcf	((c:3997)),c,4	;volatile
  3810  0018' 989D               	line	35
  3811                           	
  3812                           l2639:
  3813  001A'                    ;setting_hardaware/uart.c: 35:     IPR1bits.TXIP = 0;
  3814                           	bcf	((c:3999)),c,4	;volatile
  3815  001A' 989F               	line	36
  3816                           	
  3817                           l2641:
  3818  001C'                    ;setting_hardaware/uart.c: 36:     PIE1bits.RCIE = 1;
  3819                           	bsf	((c:3997)),c,5	;volatile
  3820  001C' 8A9D               	line	37
  3821                           	
  3822                           l2643:
  3823  001E'                    ;setting_hardaware/uart.c: 37:     IPR1bits.RCIP = 0;
  3824                           	bcf	((c:3999)),c,5	;volatile
  3825  001E' 9A9F               	line	38
  3826                           	
  3827                           l142:
  3828  0020'                    	return	;funcret
  3829  0020' 0012               	opt stack 0
  3830                           GLOBAL	__end_of_UART_Initialize
  3831                           	__end_of_UART_Initialize:
  3832  0022'                    	signat	_UART_Initialize,89
  3833                           	global	_INTERRUPT_Initialize
  3834                           
  3835 ;; *************** function _INTERRUPT_Initialize *****************
  3836 ;; Defined at:
  3837 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		None
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3851 ;;      Params:         0       0       0       0       0       0       0
  3852 ;;      Locals:         0       0       0       0       0       0       0
  3853 ;;      Temps:          0       0       0       0       0       0       0
  3854 ;;      Totals:         0       0       0       0       0       0       0
  3855 ;;Total ram usage:        0 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    4
  3858 ;; This function calls:
  3859 ;;		Nothing
  3860 ;; This function is called by:
  3861 ;;		_SYSTEM_Initialize
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           psect	text3,class=CODE,space=0,reloc=2,group=0
  3865                           	file	"setting_hardaware/interrupt_manager.c"
  3866                           	line	3
  3867                           global __ptext3
  3868                           __ptext3:
  3869  0000'                    psect	text3
  3870                           	file	"setting_hardaware/interrupt_manager.c"
  3871                           	line	3
  3872                           	global	__size_of_INTERRUPT_Initialize
  3873                           	__size_of_INTERRUPT_Initialize	equ	__end_of_INTERRUPT_Initialize-_INTERRUPT_Initialize

  3874  0000                     	
  3875                           _INTERRUPT_Initialize:
  3876  0000'                    ;incstack = 0
  3877                           	opt	stack 25
  3878                           	line	5
  3879                           	
  3880                           l2621:
  3881  0000'                    ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  3882                           	bsf	((c:4048)),c,7	;volatile
  3883  0000' 8ED0               	line	6
  3884                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  3885                           	bsf	((c:4082)),c,7	;volatile
  3886  0002' 8EF2               	line	7
  3887                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  3888                           	bsf	((c:4082)),c,6	;volatile
  3889  0004' 8CF2               	line	8
  3890                           	
  3891                           l172:
  3892  0006'                    	return	;funcret
  3893  0006' 0012               	opt stack 0
  3894                           GLOBAL	__end_of_INTERRUPT_Initialize
  3895                           	__end_of_INTERRUPT_Initialize:
  3896  0008'                    	signat	_INTERRUPT_Initialize,89
  3897                           	global	_CCP1_Initialize
  3898                           
  3899 ;; *************** function _CCP1_Initialize *****************
  3900 ;; Defined at:
  3901 ;;		line 3 in file "setting_hardaware/ccp1.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;		None
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;		None
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3915 ;;      Params:         0       0       0       0       0       0       0
  3916 ;;      Locals:         0       0       0       0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0
  3918 ;;      Totals:         0       0       0       0       0       0       0
  3919 ;;Total ram usage:        0 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    4
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_SYSTEM_Initialize
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           psect	text4,class=CODE,space=0,reloc=2,group=0
  3929                           	file	"setting_hardaware/ccp1.c"
  3930                           	line	3
  3931                           global __ptext4
  3932                           __ptext4:
  3933  0000'                    psect	text4
  3934                           	file	"setting_hardaware/ccp1.c"
  3935                           	line	3
  3936                           	global	__size_of_CCP1_Initialize
  3937                           	__size_of_CCP1_Initialize	equ	__end_of_CCP1_Initialize-_CCP1_Initialize
  3938  0000                     	
  3939                           _CCP1_Initialize:
  3940  0000'                    ;incstack = 0
  3941                           	opt	stack 25
  3942                           	line	4
  3943                           	
  3944                           l2645:
  3945  0000'                    ;setting_hardaware/ccp1.c: 4:     TRISCbits.TRISC2=0;
  3946                           	bcf	((c:3988)),c,2	;volatile
  3947  0000' 9494               	line	5
  3948                           	
  3949                           l2647:
  3950  0002'                    ;setting_hardaware/ccp1.c: 5:     CCP1CON=9;
  3951                           	movlw	low(09h)
  3952  0002' 0E09               	movwf	((c:4029)),c	;volatile
  3953  0004' 6EBD               	line	6
  3954                           	
  3955                           l2649:
  3956  0006'                    ;setting_hardaware/ccp1.c: 6:     PIR1bits.CCP1IF=0;
  3957                           	bcf	((c:3998)),c,2	;volatile
  3958  0006' 949E               	line	7
  3959                           	
  3960                           l181:
  3961  0008'                    	return	;funcret
  3962  0008' 0012               	opt stack 0
  3963                           GLOBAL	__end_of_CCP1_Initialize
  3964                           	__end_of_CCP1_Initialize:
  3965  000A'                    	signat	_CCP1_Initialize,89
  3966                           	global	_ADC_Initialize
  3967                           
  3968 ;; *************** function _ADC_Initialize *****************
  3969 ;; Defined at:
  3970 ;;		line 3 in file "setting_hardaware/adc.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3984 ;;      Params:         0       0       0       0       0       0       0
  3985 ;;      Locals:         0       0       0       0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0
  3987 ;;      Totals:         0       0       0       0       0       0       0
  3988 ;;Total ram usage:        0 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    4
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_SYSTEM_Initialize
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           psect	text5,class=CODE,space=0,reloc=2,group=0
  3998                           	file	"setting_hardaware/adc.c"
  3999                           	line	3
  4000                           global __ptext5
  4001                           __ptext5:
  4002  0000'                    psect	text5
  4003                           	file	"setting_hardaware/adc.c"
  4004                           	line	3
  4005                           	global	__size_of_ADC_Initialize
  4006                           	__size_of_ADC_Initialize	equ	__end_of_ADC_Initialize-_ADC_Initialize
  4007  0000                     	
  4008                           _ADC_Initialize:
  4009  0000'                    ;incstack = 0
  4010                           	opt	stack 25
  4011                           	line	4
  4012                           	
  4013                           l2651:
  4014  0000'                    ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
  4015                           	setf	((c:3986)),c	;volatile
  4016  0000' 6892               	line	5
  4017                           	
  4018                           l2653:
  4019  0002'                    ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
  4020                           	movlw	low(0Eh)
  4021  0002' 0E0E               	movwf	((c:4033)),c	;volatile
  4022  0004' 6EC1               	line	6
  4023                           ;setting_hardaware/adc.c: 6:     ADCON2 = 0x92;
  4024                           	movlw	low(092h)
  4025  0006' 0E92               	movwf	((c:4032)),c	;volatile
  4026  0008' 6EC0               	line	7
  4027                           ;setting_hardaware/adc.c: 7:     ADRESH=0;
  4028                           	movlw	low(0)
  4029  000A' 0E00               	movwf	((c:4036)),c	;volatile
  4030  000C' 6EC4               	line	8
  4031                           ;setting_hardaware/adc.c: 8:     ADRESL=0;
  4032                           	movlw	low(0)
  4033  000E' 0E00               	movwf	((c:4035)),c	;volatile
  4034  0010' 6EC3               	line	9
  4035                           	
  4036                           l202:
  4037  0012'                    	return	;funcret
  4038  0012' 0012               	opt stack 0
  4039                           GLOBAL	__end_of_ADC_Initialize
  4040                           	__end_of_ADC_Initialize:
  4041  0014'                    	signat	_ADC_Initialize,89
  4042                           	global	_Mode3
  4043                           
  4044 ;; *************** function _Mode3 *****************
  4045 ;; Defined at:
  4046 ;;		line 36 in file "main.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;		None
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  i               2   88[BANK0 ] int 
  4051 ;;  voltage         4   90[BANK0 ] float 
  4052 ;;  digital         2   94[BANK0 ] int 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
       temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
       , btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
       , btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4062 ;;      Params:         0       0       0       0       0       0       0
  4063 ;;      Locals:         0       8       0       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0       0       0
  4065 ;;      Totals:         0       8       0       0       0       0       0
  4066 ;;Total ram usage:        8 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:   12
  4069 ;; This function calls:
  4070 ;;		_ADC_Read
  4071 ;;		_ClearBuffer
  4072 ;;		_GetString
  4073 ;;		_PrintBuffer
  4074 ;;		___flmul
  4075 ;;		___xxtofl
  4076 ;;		_sprintf
  4077 ;;		_strcat
  4078 ;;		_strstr
  4079 ;; This function is called by:
  4080 ;;		_main
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           psect	text6,class=CODE,space=0,reloc=2,group=0
  4084                           	file	"main.c"
  4085                           	line	36
  4086                           global __ptext6
  4087                           __ptext6:
  4088  0000'                    psect	text6
  4089                           	file	"main.c"
  4090                           	line	36
  4091                           	global	__size_of_Mode3
  4092                           	__size_of_Mode3	equ	__end_of_Mode3-_Mode3
  4093  0000                     	
  4094                           _Mode3:
  4095  0000'                    ;incstack = 0
  4096                           	opt	stack 18
  4097                           	line	37
  4098                           	
  4099                           l5751:
  4100  0000'                    ;main.c: 37:     ClearBuffer();
  4101                           	call	_ClearBuffer	;wreg free
  4102  0000' EC00' F000'        	line	38
  4103                           	
  4104                           l5753:
  4105  0004'                    ;main.c: 38:     int digital = 0;
  4106                           	movlw	high(0)
  4107  0004' 0E00               	movlb	0	; () banked
  4108  0006' 0100               	movwf	((Mode3@digital+1))&0ffh
  4109  0008' 6F00'              	movlw	low(0)
  4110  000A' 0E00               	movwf	((Mode3@digital))&0ffh
  4111  000C' 6F00'              	line	39
  4112                           	
  4113                           l5755:; BSR set to: 0
  4114  000E'                    
  4115                           ;main.c: 39:     float voltage = 0.0;
  4116                           	movlw	low(normalize32(0x0))
  4117  000E' 0E00               	movwf	((Mode3@voltage))&0ffh
  4118  0010' 6F00'              	movlw	high(normalize32(0x0))
  4119  0012' 0E00               	movwf	((Mode3@voltage+1))&0ffh
  4120  0014' 6F00'              	movlw	low highword(normalize32(0x0))
  4121  0016' 0E00               	movwf	((Mode3@voltage+2))&0ffh
  4122  0018' 6F00'              	movlw	high highword(normalize32(0x0))
  4123  001A' 0E00               	movwf	((Mode3@voltage+3))&0ffh
  4124  001C' 6F00'              	line	40
  4125                           ;main.c: 40:     while(strstr(GetString(), "exit"))
  4126                           	goto	l5773
  4127  001E' EF00' F000'        	
  4128                           l67:; BSR set to: 0
  4129  0022'                    
  4130                           	line	42
  4131                           	
  4132                           l5757:
  4133  0022'                    ;main.c: 41:     {;main.c: 42:         digital=ADC_Read(0);
  4134                           	movlw	high(0)
  4135  0022' 0E00               	movwf	((c:ADC_Read@channel+1)),c
  4136  0024' 6E0E'              	movlw	low(0)
  4137  0026' 0E00               	movwf	((c:ADC_Read@channel)),c
  4138  0028' 6E0D'              	call	_ADC_Read	;wreg free
  4139  002A' EC00' F000'        	movff	0+?_ADC_Read,(Mode3@digital)
  4140  002E' C00D' F05E'        	movff	1+?_ADC_Read,(Mode3@digital+1)
  4141  0032' C00E' F05F'        	line	43
  4142                           	
  4143                           l5759:
  4144  0036'                    ;main.c: 43:         voltage = digital* ((float)5/1023);
  4145                           	movff	(Mode3@digital),(c:___xxtofl@val)
  4146  0036' C05E' F00D'        	movff	(Mode3@digital+1),(c:___xxtofl@val+1)
  4147  003A' C05F' F00E'        	movlw	0
  4148  003E' 0E00               	btfsc	((c:___xxtofl@val+1)),c,7
  4149  0040' BE0E'              	movlw	-1
  4150  0042' 0EFF               	movwf	((c:___xxtofl@val+2)),c
  4151  0044' 6E0F'              	movwf	((c:___xxtofl@val+3)),c
  4152  0046' 6E10'              	movlw	(01h)&0ffh
  4153  0048' 0E01               	
  4154                           	call	___xxtofl
  4155  004A' EC00' F000'        	movff	0+?___xxtofl,(c:___flmul@b)
  4156  004E' C00D' F01B'        	movff	1+?___xxtofl,(c:___flmul@b+1)
  4157  0052' C00E' F01C'        	movff	2+?___xxtofl,(c:___flmul@b+2)
  4158  0056' C00F' F01D'        	movff	3+?___xxtofl,(c:___flmul@b+3)
  4159  005A' C010' F01E'        	
  4160                           	movlw	low(normalize32(0x3ba0280a))
  4161  005E' 0E0A               	movwf	((c:___flmul@a)),c
  4162  0060' 6E1F'              	movlw	high(normalize32(0x3ba0280a))
  4163  0062' 0E28               	movwf	((c:___flmul@a+1)),c
  4164  0064' 6E20'              	movlw	low highword(normalize32(0x3ba0280a))
  4165  0066' 0EA0               	movwf	((c:___flmul@a+2)),c
  4166  0068' 6E21'              	movlw	high highword(normalize32(0x3ba0280a))
  4167  006A' 0E3B               	movwf	((c:___flmul@a+3)),c
  4168  006C' 6E22'              	call	___flmul	;wreg free
  4169  006E' EC00' F000'        	movff	0+?___flmul,(Mode3@voltage)
  4170  0072' C01B' F05A'        	movff	1+?___flmul,(Mode3@voltage+1)
  4171  0076' C01C' F05B'        	movff	2+?___flmul,(Mode3@voltage+2)
  4172  007A' C01D' F05C'        	movff	3+?___flmul,(Mode3@voltage+3)
  4173  007E' C01E' F05D'        	
  4174                           	line	44
  4175                           	
  4176                           l5761:
  4177  0082'                    ;main.c: 44:         sprintf(str,"%.2f",voltage);
  4178                           		movlw	low(_str)
  4179  0082' 0E00'              	movlb	0	; () banked
  4180  0084' 0100               	movwf	((sprintf@s))&0ffh
  4181  0086' 6F00'              	movlw	high(_str)
  4182  0088' 0E00'              	movwf	((sprintf@s+1))&0ffh
  4183  008A' 6F00'              
  4184                           		movlw	low(STR_8)
  4185  008C' 0E00'              	movwf	((sprintf@fmt))&0ffh
  4186  008E' 6F00'              	movlw	high(STR_8)
  4187  0090' 0E00'              	movwf	((sprintf@fmt+1))&0ffh
  4188  0092' 6F00'              
  4189                           	movff	(Mode3@voltage),0+(?_sprintf+04h)
  4190  0094' C05A' F04A'        	movff	(Mode3@voltage+1),1+(?_sprintf+04h)
  4191  0098' C05B' F04B'        	movff	(Mode3@voltage+2),2+(?_sprintf+04h)
  4192  009C' C05C' F04C'        	movff	(Mode3@voltage+3),3+(?_sprintf+04h)
  4193  00A0' C05D' F04D'        	call	_sprintf	;wreg free
  4194  00A4' EC00' F000'        	line	45
  4195                           	
  4196                           l5763:
  4197  00A8'                    ;main.c: 45:         strcat(str," V");
  4198                           		movlw	low(_str)
  4199  00A8' 0E00'              	movwf	((c:strcat@dest)),c
  4200  00AA' 6E1D'              	movlw	high(_str)
  4201  00AC' 0E00'              	movwf	((c:strcat@dest+1)),c
  4202  00AE' 6E1E'              
  4203                           		movlw	low(STR_9)
  4204  00B0' 0E00'              	movwf	((c:strcat@src)),c
  4205  00B2' 6E1F'              	movlw	high(STR_9)
  4206  00B4' 0E00'              	movwf	((c:strcat@src+1)),c
  4207  00B6' 6E20'              
  4208                           	call	_strcat	;wreg free
  4209  00B8' EC00' F000'        	line	46
  4210                           	
  4211                           l5765:
  4212  00BC'                    ;main.c: 46:         PrintBuffer(str);
  4213                           		movlw	low(_str)
  4214  00BC' 0E00'              	movwf	((c:?_PrintBuffer)),c
  4215  00BE' 6E00'              	movlw	high(_str)
  4216  00C0' 0E00'              	movwf	((c:?_PrintBuffer+1)),c
  4217  00C2' 6E01'              
  4218                           	call	_PrintBuffer	;wreg free
  4219  00C4' EC00' F000'        	line	47
  4220                           	
  4221                           l5767:
  4222  00C8'                    ;main.c: 47:         for(int i = 0 ; i < 100000 ; i++) ;
  4223                           	movlw	high(0)
  4224  00C8' 0E00               	movlb	0	; () banked
  4225  00CA' 0100               	movwf	((Mode3@i+1))&0ffh
  4226  00CC' 6F00'              	movlw	low(0)
  4227  00CE' 0E00               	movwf	((Mode3@i))&0ffh
  4228  00D0' 6F00'              	goto	l5771
  4229  00D2' EF00' F000'        	
  4230                           l5769:; BSR set to: 0
  4231  00D6'                    
  4232                           	goto	l5773
  4233  00D6' EF00' F000'        	
  4234                           l68:; BSR set to: 0
  4235  00DA'                    
  4236                           	
  4237                           l5771:; BSR set to: 0
  4238  00DA'                    
  4239                           	infsnz	((Mode3@i))&0ffh
  4240  00DA' 4B00'              	incf	((Mode3@i+1))&0ffh
  4241  00DC' 2B00'              	goto	l5771
  4242  00DE' EF00' F000'        	
  4243                           l69:; BSR set to: 0
  4244  00E2'                    
  4245                           	goto	l5773
  4246  00E2' EF00' F000'        	line	48
  4247                           ;main.c: 48:     }
  4248                           	
  4249                           l66:; BSR set to: 0
  4250  00E6'                    
  4251                           	line	40
  4252                           	
  4253                           l5773:; BSR set to: 0
  4254  00E6'                    
  4255                           ;main.c: 40:     while(strstr(GetString(), "exit"))
  4256                           	call	_GetString	;wreg free
  4257  00E6' EC00' F000'        	movff	0+?_GetString,(c:strstr@h)
  4258  00EA' C00D' F01A'        	movff	1+?_GetString,(c:strstr@h+1)
  4259  00EE' C00E' F01B'        		movlw	low(STR_7)
  4260  00F2' 0E00'              	movwf	((c:strstr@n)),c
  4261  00F4' 6E1C'              	movlw	high(STR_7)
  4262  00F6' 0E00'              	movwf	((c:strstr@n+1)),c
  4263  00F8' 6E1D'              
  4264                           	call	_strstr	;wreg free
  4265  00FA' EC00' F000'        	movf	(0+?_strstr),c,w
  4266  00FE' 501A'              iorwf	(1+?_strstr),c,w
  4267  0100' 101B'              	btfss	status,2
  4268  0102' A4D8               	goto	u8281
  4269  0104' EF00' F000'        	goto	u8280
  4270  0108' EF00' F000'        
  4271                           u8281:
  4272  010C'                    	goto	l5757
  4273  010C' EF00' F000'        u8280:
  4274  0110'                    	goto	l5775
  4275  0110' EF00' F000'        	
  4276                           l70:
  4277  0114'                    	line	50
  4278                           	
  4279                           l5775:
  4280  0114'                    ;main.c: 50:     ClearBuffer();
  4281                           	call	_ClearBuffer	;wreg free
  4282  0114' EC00' F000'        	line	51
  4283                           	
  4284                           l71:
  4285  0118'                    	return	;funcret
  4286  0118' 0012               	opt stack 0
  4287                           GLOBAL	__end_of_Mode3
  4288                           	__end_of_Mode3:
  4289  011A'                    	signat	_Mode3,89
  4290                           	global	_strstr
  4291                           
  4292 ;; *************** function _strstr *****************
  4293 ;; Defined at:
  4294 ;;		line 143 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  h               2   26[COMRAM] PTR const unsigned char 
  4297 ;;		 -> mystring(10), NULL(0), STR_3(2), STR_2(2), 
  4298 ;;  n               2   28[COMRAM] PTR const unsigned char 
  4299 ;;		 -> STR_17(6), STR_15(6), STR_13(6), STR_11(6), 
  4300 ;;		 -> STR_7(5), 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  nl              2   30[COMRAM] unsigned int 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  2   26[COMRAM] PTR unsigned char 
  4305 ;; Registers used:
  4306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4312 ;;      Params:         4       0       0       0       0       0       0
  4313 ;;      Locals:         2       0       0       0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0
  4315 ;;      Totals:         6       0       0       0       0       0       0
  4316 ;;Total ram usage:        6 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    5
  4319 ;; This function calls:
  4320 ;;		_strchr
  4321 ;;		_strlen
  4322 ;;		_strncmp
  4323 ;; This function is called by:
  4324 ;;		_Mode3
  4325 ;;		_main
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           psect	text7,class=CODE,space=0,reloc=2,group=2
  4329                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  4330                           	line	143
  4331                           global __ptext7
  4332                           __ptext7:
  4333  0000'                    psect	text7
  4334                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  4335                           	line	143
  4336                           	global	__size_of_strstr
  4337                           	__size_of_strstr	equ	__end_of_strstr-_strstr
  4338  0000                     	
  4339                           _strstr:
  4340  0000'                    ;incstack = 0
  4341                           	opt	stack 25
  4342                           	line	146
  4343                           	
  4344                           l5705:
  4345  0000'                    	movf	((c:strstr@n)),c,w
  4346  0000' 501C'              iorwf	((c:strstr@n+1)),c,w
  4347  0002' 101D'              	btfsc	status,2
  4348  0004' B4D8               	goto	u8191
  4349  0006' EF00' F000'        	goto	u8190
  4350  000A' EF00' F000'        
  4351                           u8191:
  4352  000E'                    	goto	l5721
  4353  000E' EF00' F000'        u8190:
  4354  0012'                    	line	147
  4355                           	
  4356                           l5707:
  4357  0012'                    		movff	(c:strstr@n),(c:strlen@s)
  4358  0012' C01C' F00D'        	movff	(c:strstr@n+1),(c:strlen@s+1)
  4359  0016' C01D' F00E'        
  4360                           	call	_strlen	;wreg free
  4361  001A' EC00' F000'        	movff	0+?_strlen,(c:strstr@nl)
  4362  001E' C00D' F01E'        	movff	1+?_strlen,(c:strstr@nl+1)
  4363  0022' C00E' F01F'        	line	148
  4364                           	goto	l5717
  4365  0026' EF00' F000'        	
  4366                           l1194:
  4367  002A'                    	line	149
  4368                           	
  4369                           l5709:
  4370  002A'                    		movff	(c:strstr@h),(c:strncmp@_l)
  4371  002A' C01A' F00D'        	movff	(c:strstr@h+1),(c:strncmp@_l+1)
  4372  002E' C01B' F00E'        
  4373                           		movff	(c:strstr@n),(c:strncmp@_r)
  4374  0032' C01C' F00F'        	movff	(c:strstr@n+1),(c:strncmp@_r+1)
  4375  0036' C01D' F010'        
  4376                           	movff	(c:strstr@nl),(c:strncmp@n)
  4377  003A' C01E' F011'        	movff	(c:strstr@nl+1),(c:strncmp@n+1)
  4378  003E' C01F' F012'        	call	_strncmp	;wreg free
  4379  0042' EC00' F000'        	movf	(0+?_strncmp),c,w
  4380  0046' 500D'              iorwf	(1+?_strncmp),c,w
  4381  0048' 100E'              	btfss	status,2
  4382  004A' A4D8               	goto	u8201
  4383  004C' EF00' F000'        	goto	u8200
  4384  0050' EF00' F000'        
  4385                           u8201:
  4386  0054'                    	goto	l5715
  4387  0054' EF00' F000'        u8200:
  4388  0058'                    	line	150
  4389                           	
  4390                           l5711:
  4391  0058'                    		movff	(c:strstr@h),(c:?_strstr)
  4392  0058' C01A' F01A'        	movff	(c:strstr@h+1),(c:?_strstr+1)
  4393  005C' C01B' F01B'        
  4394                           	goto	l1196
  4395  0060' EF00' F000'        	
  4396                           l5713:
  4397  0064'                    	goto	l1196
  4398  0064' EF00' F000'        	
  4399                           l1195:
  4400  0068'                    	line	151
  4401                           	
  4402                           l5715:
  4403  0068'                    	movlw	low(01h)
  4404  0068' 0E01               	addwf	((c:strstr@h)),c,w
  4405  006A' 241A'              	movwf	((c:strchr@s)),c
  4406  006C' 6E0D'              	movlw	high(01h)
  4407  006E' 0E00               	addwfc	((c:strstr@h+1)),c,w
  4408  0070' 201B'              	movwf	1+((c:strchr@s)),c
  4409  0072' 6E0E'              	movff	(c:strstr@n),tblptrl
  4410  0074' C01C' FFF6         	movff	(c:strstr@n+1),tblptrh
  4411  0078' C01D' FFF7         	if	0	;tblptru may be non-zero
  4412  007C'                    	clrf	tblptru
  4414  007C'                    	if	0	;tblptru may be non-zero
  4415  007C'                    	global __mediumconst
  4416                           movlw	low highword(__mediumconst)
  4419  007C'                    	tblrd	*
  4420  007C' 0008               	
  4421                           	movf	tablat,w
  4422  007E' 50F5               
  4423                           	movwf	((c:strchr@c)),c
  4424  0080' 6E0F'              	clrf	((c:strchr@c+1)),c
  4425  0082' 6A10'              	call	_strchr	;wreg free
  4426  0084' EC00' F000'        	movff	0+?_strchr,(c:strstr@h)
  4427  0088' C00D' F01A'        	movff	1+?_strchr,(c:strstr@h+1)
  4428  008C' C00E' F01B'        	goto	l5717
  4429  0090' EF00' F000'        	line	152
  4430                           	
  4431                           l1193:
  4432  0094'                    	line	148
  4433                           	
  4434                           l5717:
  4435  0094'                    	movf	((c:strstr@h)),c,w
  4436  0094' 501A'              iorwf	((c:strstr@h+1)),c,w
  4437  0096' 101B'              	btfsc	status,2
  4438  0098' B4D8               	goto	u8211
  4439  009A' EF00' F000'        	goto	u8210
  4440  009E' EF00' F000'        
  4441                           u8211:
  4442  00A2'                    	goto	l5721
  4443  00A2' EF00' F000'        u8210:
  4444  00A6'                    	
  4445                           l5719:
  4446  00A6'                    	movff	(c:strstr@h),tblptrl
  4447  00A6' C01A' FFF6         	movff	(c:strstr@h+1),tblptrh
  4448  00AA' C01B' FFF7         	clrf	tblptru
  4449  00AE' 6AF8               	
  4450                           	movlw	high __ramtop-1
  4451  00B0' 0EFF'              	cpfsgt	tblptrh
  4452  00B2' 64F7               	bra	u8227
  4453  00B4' D003               	tblrd	*
  4454  00B6' 0008               	
  4455                           	movf	tablat,w
  4456  00B8' 50F5               	bra	u8220
  4457  00BA' D005               u8227:
  4458  00BC'                    	movff	tblptrl,fsr0l
  4459  00BC' CFF6 FFE9          	movff	tblptrh,fsr0h
  4460  00C0' CFF7 FFEA          	movf	indf0,w
  4461  00C4' 50EF               u8220:
  4462  00C6'                    	iorlw	0
  4463  00C6' 0900               	btfss	status,2
  4464  00C8' A4D8               	goto	u8231
  4465  00CA' EF00' F000'        	goto	u8230
  4466  00CE' EF00' F000'        u8231:
  4467  00D2'                    	goto	l5709
  4468  00D2' EF00' F000'        u8230:
  4469  00D6'                    	goto	l5721
  4470  00D6' EF00' F000'        	
  4471                           l1198:
  4472  00DA'                    	goto	l5721
  4473  00DA' EF00' F000'        	
  4474                           l1199:
  4475  00DE'                    	goto	l5721
  4476  00DE' EF00' F000'        	line	153
  4477                           	
  4478                           l1192:
  4479  00E2'                    	line	154
  4480                           	
  4481                           l5721:
  4482  00E2'                    		movlw	low(0)
  4483  00E2' 0E00               	movwf	((c:?_strstr)),c
  4484  00E4' 6E1A'              	movlw	high(0)
  4485  00E6' 0E00               	movwf	((c:?_strstr+1)),c
  4486  00E8' 6E1B'              
  4487                           	goto	l1196
  4488  00EA' EF00' F000'        	
  4489                           l5723:
  4490  00EE'                    	line	171
  4491                           	
  4492                           l1196:
  4493  00EE'                    	return	;funcret
  4494  00EE' 0012               	opt stack 0
  4495                           GLOBAL	__end_of_strstr
  4496                           	__end_of_strstr:
  4497  00F0'                    	signat	_strstr,8314
  4498                           	global	_strcat
  4499                           
  4500 ;; *************** function _strcat *****************
  4501 ;; Defined at:
  4502 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;  dest            2   29[COMRAM] PTR unsigned char 
  4505 ;;		 -> str(10), 
  4506 ;;  src             2   31[COMRAM] PTR const unsigned char 
  4507 ;;		 -> STR_9(3), 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;		None
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  2   29[COMRAM] PTR unsigned char 
  4512 ;; Registers used:
  4513 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4519 ;;      Params:         4       0       0       0       0       0       0
  4520 ;;      Locals:         0       0       0       0       0       0       0
  4521 ;;      Temps:          0       0       0       0       0       0       0
  4522 ;;      Totals:         4       0       0       0       0       0       0
  4523 ;;Total ram usage:        4 bytes
  4524 ;; Hardware stack levels used:    1
  4525 ;; Hardware stack levels required when called:    5
  4526 ;; This function calls:
  4527 ;;		_strcpy
  4528 ;;		_strlen
  4529 ;; This function is called by:
  4530 ;;		_Mode3
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           psect	text8,class=CODE,space=0,reloc=2,group=2
  4534                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  4535                           	line	3
  4536                           global __ptext8
  4537                           __ptext8:
  4538  0000'                    psect	text8
  4539                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  4540                           	line	3
  4541                           	global	__size_of_strcat
  4542                           	__size_of_strcat	equ	__end_of_strcat-_strcat
  4543  0000                     	
  4544                           _strcat:
  4545  0000'                    ;incstack = 0
  4546                           	opt	stack 24
  4547                           	line	5
  4548                           	
  4549                           l5701:
  4550  0000'                    		movff	(c:strcat@dest),(c:strlen@s)
  4551  0000' C01D' F00D'        	movff	(c:strcat@dest+1),(c:strlen@s+1)
  4552  0004' C01E' F00E'        
  4553                           	call	_strlen	;wreg free
  4554  0008' EC00' F000'        	movf	(0+?_strlen),c,w
  4555  000C' 500D'              	addwf	((c:strcat@dest)),c,w
  4556  000E' 241D'              	movwf	((c:strcpy@dest)),c
  4557  0010' 6E13'              	movf	(1+?_strlen),c,w
  4558  0012' 500E'              	addwfc	((c:strcat@dest+1)),c,w
  4559  0014' 201E'              	movwf	1+((c:strcpy@dest)),c
  4560  0016' 6E14'              		movff	(c:strcat@src),(c:strcpy@src)
  4561  0018' C01F' F015'        	movff	(c:strcat@src+1),(c:strcpy@src+1)
  4562  001C' C020' F016'        
  4563                           	call	_strcpy	;wreg free
  4564  0020' EC00' F000'        	goto	l1162
  4565  0024' EF00' F000'        	line	6
  4566                           	
  4567                           l5703:
  4568  0028'                    	line	7
  4569                           ;	Return value of _strcat is never used
  4570                           	
  4571                           l1162:
  4572  0028'                    	return	;funcret
  4573  0028' 0012               	opt stack 0
  4574                           GLOBAL	__end_of_strcat
  4575                           	__end_of_strcat:
  4576  002A'                    	signat	_strcat,8314
  4577                           	global	_sprintf
  4578                           
  4579 ;; *************** function _sprintf *****************
  4580 ;; Defined at:
  4581 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  s               2   70[BANK0 ] PTR unsigned char 
  4584 ;;		 -> str(10), 
  4585 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  4586 ;;		 -> STR_8(5), 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  f               6   82[BANK0 ] struct _IO_FILE
  4589 ;;  ap              2   80[BANK0 ] PTR void [1]
  4590 ;;		 -> ?_sprintf(2), 
  4591 ;;  ret             2   78[BANK0 ] int 
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  2   70[BANK0 ] int 
  4594 ;; Registers used:
  4595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack

  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4601 ;;      Params:         0       8       0       0       0       0       0
  4602 ;;      Locals:         0      10       0       0       0       0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0
  4604 ;;      Totals:         0      18       0       0       0       0       0
  4605 ;;Total ram usage:       18 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; Hardware stack levels required when called:   11
  4608 ;; This function calls:
  4609 ;;		_vfprintf
  4610 ;; This function is called by:
  4611 ;;		_Mode3
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           psect	text9,class=CODE,space=0,reloc=2,group=2
  4615                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  4616                           	line	9
  4617                           global __ptext9
  4618                           __ptext9:
  4619  0000'                    psect	text9
  4620                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  4621                           	line	9
  4622                           	global	__size_of_sprintf
  4623                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4624  0000                     	
  4625                           _sprintf:
  4626  0000'                    ;incstack = 0
  4627                           	opt	stack 18
  4628                           	line	15
  4629                           	
  4630                           l5689:
  4631  0000'                    		movlw	low(?_sprintf+04h)
  4632  0000' 0E00'              	movlb	0	; () banked
  4633  0002' 0100               	movwf	((sprintf@ap))&0ffh
  4634  0004' 6F00'              	movlw	high(?_sprintf+04h)
  4635  0006' 0E00'              	movwf	((sprintf@ap+1))&0ffh
  4636  0008' 6F00'              
  4637                           	line	16
  4638                           		movff	(sprintf@s),(sprintf@f)
  4639  000A' C046' F052'        	movff	(sprintf@s+1),(sprintf@f+1)
  4640  000E' C047' F053'        
  4641                           	line	17
  4642                           	
  4643                           l5691:; BSR set to: 0
  4644  0012'                    
  4645                           	movlw	high(0)
  4646  0012' 0E00               	movwf	(1+(sprintf@f+02h))&0ffh
  4647  0014' 6F00'              	movlw	low(0)
  4648  0016' 0E00               	movwf	(0+(sprintf@f+02h))&0ffh
  4649  0018' 6F00'              	line	18
  4650                           	
  4651                           l5693:; BSR set to: 0
  4652  001A'                    
  4653                           	movlw	high(0)
  4654  001A' 0E00               	movwf	(1+(sprintf@f+04h))&0ffh
  4655  001C' 6F00'              	movlw	low(0)
  4656  001E' 0E00               	movwf	(0+(sprintf@f+04h))&0ffh
  4657  0020' 6F00'              	line	19
  4658                           	
  4659                           l5695:; BSR set to: 0
  4660  0022'                    
  4661                           		movlw	low(sprintf@f)
  4662  0022' 0E00'              	movwf	((c:vfprintf@fp)),c
  4663  0024' 6E56'              	movlw	high(sprintf@f)
  4664  0026' 0E00'              	movwf	((c:vfprintf@fp+1)),c
  4665  0028' 6E57'              
  4666                           		movff	(sprintf@fmt),(c:vfprintf@fmt)
  4667  002A' C048' F058'        	movff	(sprintf@fmt+1),(c:vfprintf@fmt+1)
  4668  002E' C049' F059'        
  4669                           		movlw	low(sprintf@ap)
  4670  0032' 0E00'              	movwf	((c:vfprintf@ap)),c
  4671  0034' 6E5A'              	movlw	high(sprintf@ap)
  4672  0036' 0E00'              	movwf	((c:vfprintf@ap+1)),c
  4673  0038' 6E5B'              
  4674                           	call	_vfprintf	;wreg free
  4675  003A' EC00' F000'        	movff	0+?_vfprintf,(sprintf@ret)
  4676  003E' C056' F04E'        	movff	1+?_vfprintf,(sprintf@ret+1)
  4677  0042' C057' F04F'        	line	20
  4678                           	
  4679                           l5697:
  4680  0046'                    	movlb	0	; () banked
  4681  0046' 0100               	movf	(0+(sprintf@f+02h))&0ffh,w
  4682  0048' 5100'              	addwf	((sprintf@s))&0ffh,w
  4683  004A' 2500'              	movwf	c:fsr2l
  4684  004C' 6ED9               	movf	(1+(sprintf@f+02h))&0ffh,w
  4685  004E' 5100'              	addwfc	((sprintf@s+1))&0ffh,w
  4686  0050' 2100'              	movwf	1+c:fsr2l
  4687  0052' 6EDA               	movlw	low(0)
  4688  0054' 0E00               	movwf	indf2
  4689  0056' 6EDF               	goto	l1152
  4690  0058' EF00' F000'        	line	22
  4691                           	
  4692                           l5699:; BSR set to: 0
  4693  005C'                    
  4694                           	line	23
  4695                           ;	Return value of _sprintf is never used
  4696                           	
  4697                           l1152:; BSR set to: 0
  4698  005C'                    
  4699                           	return	;funcret
  4700  005C' 0012               	opt stack 0
  4701                           GLOBAL	__end_of_sprintf
  4702                           	__end_of_sprintf:
  4703  005E'                    	signat	_sprintf,4698
  4704                           	global	_vfprintf
  4705                           
  4706 ;; *************** function _vfprintf *****************
  4707 ;; Defined at:
  4708 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  fp              2   86[COMRAM] PTR struct _IO_FILE
  4711 ;;		 -> sprintf@f(6), 
  4712 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
  4713 ;;		 -> STR_8(5), 
  4714 ;;  ap              2   90[COMRAM] PTR PTR void 
  4715 ;;		 -> sprintf@ap(2), 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  4718 ;;		 -> STR_8(5), 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  2   86[COMRAM] int 
  4721 ;; Registers used:
  4722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack

  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4728 ;;      Params:         6       0       0       0       0       0       0
  4729 ;;      Locals:         0       2       0       0       0       0       0
  4730 ;;      Temps:          0       0       0       0       0       0       0
  4731 ;;      Totals:         6       2       0       0       0       0       0
  4732 ;;Total ram usage:        8 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:   10
  4735 ;; This function calls:
  4736 ;;		_vfpfcnvrt
  4737 ;; This function is called by:
  4738 ;;		_sprintf
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           psect	text10,class=CODE,space=0,reloc=2,group=0
  4742                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4743                           	line	1368
  4744                           global __ptext10
  4745                           __ptext10:
  4746  0000'                    psect	text10
  4747                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4748                           	line	1368
  4749                           	global	__size_of_vfprintf
  4750                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
  4751  0000                     	
  4752                           _vfprintf:; BSR set to: 0
  4753  0000'                    
  4754                           ;incstack = 0
  4755                           	opt	stack 18
  4756                           	line	1373
  4757                           	
  4758                           l5681:
  4759  0000'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
                                 fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
                                 0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
                                 c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
                                 8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4760                           		movff	(c:vfprintf@fmt),(vfprintf@cfmt)
  4761  0000' C058' F044'        	movff	(c:vfprintf@fmt+1),(vfprintf@cfmt+1)
  4762  0004' C059' F045'        
  4763                           	line	1374
  4764                           	
  4765                           l5683:
  4766  0008'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
                                 out = 0;
  4767                           	movlw	high(0)
  4768  0008' 0E00               	movwf	((c:_nout+1)),c
  4769  000A' 6E0B'              	movlw	low(0)
  4770  000C' 0E00               	movwf	((c:_nout)),c
  4771  000E' 6E0A'              	line	1375
  4772                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  4773                           	goto	l5687
  4774  0010' EF00' F000'        	
  4775                           l374:
  4776  0014'                    	line	1376
  4777                           	
  4778                           l5685:
  4779  0014'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
                                    nout += vfpfcnvrt(fp, &cfmt, ap);
  4780                           		movff	(c:vfprintf@fp),(c:vfpfcnvrt@fp)
  4781  0014' C056' F04C'        	movff	(c:vfprintf@fp+1),(c:vfpfcnvrt@fp+1)
  4782  0018' C057' F04D'        
  4783                           		movlw	low(vfprintf@cfmt)
  4784  001C' 0E00'              	movwf	((c:vfpfcnvrt@fmt)),c
  4785  001E' 6E4E'              	movlw	high(vfprintf@cfmt)
  4786  0020' 0E00'              	movwf	((c:vfpfcnvrt@fmt+1)),c
  4787  0022' 6E4F'              
  4788                           		movff	(c:vfprintf@ap),(c:vfpfcnvrt@ap)
  4789  0024' C05A' F050'        	movff	(c:vfprintf@ap+1),(c:vfpfcnvrt@ap+1)
  4790  0028' C05B' F051'        
  4791                           	call	_vfpfcnvrt	;wreg free
  4792  002C' EC00' F000'        	movf	(0+?_vfpfcnvrt),c,w
  4793  0030' 504C'              	addwf	((c:_nout)),c
  4794  0032' 260A'              	movf	(1+?_vfpfcnvrt),c,w
  4795  0034' 504D'              	addwfc	((c:_nout+1)),c
  4796  0036' 220B'              
  4797                           	goto	l5687
  4798  0038' EF00' F000'        	line	1377
  4799                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
                                 
  4800                           	
  4801                           l373:
  4802  003C'                    	line	1375
  4803                           	
  4804                           l5687:
  4805  003C'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  4806                           	movff	(vfprintf@cfmt),tblptrl
  4807  003C' C044' FFF6         	movff	(vfprintf@cfmt+1),tblptrh
  4808  0040' C045' FFF7         	if	0	;tblptru may be non-zero
  4809  0044'                    	clrf	tblptru
  4811  0044'                    	if	0	;tblptru may be non-zero
  4812  0044'                    	global __mediumconst
  4813                           movlw	low highword(__mediumconst)
  4816  0044'                    	tblrd	*
  4817  0044' 0008               	
  4818                           	movf	tablat,w
  4819  0046' 50F5               	iorlw	0
  4820  0048' 0900               	btfss	status,2
  4821  004A' A4D8               	goto	u8181
  4822  004C' EF00' F000'        	goto	u8180
  4823  0050' EF00' F000'        u8181:
  4824  0054'                    	goto	l5685
  4825  0054' EF00' F000'        u8180:
  4826  0058'                    	
  4827                           l375:
  4828  0058'                    	line	1378
  4829                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
                                 eturn nout;
  4830                           	movff	(c:_nout),(c:?_vfprintf)
  4831  0058' C00A' F056'        	movff	(c:_nout+1),(c:?_vfprintf+1)
  4832  005C' C00B' F057'        	line	1382
  4833                           	
  4834                           l376:
  4835  0060'                    	return	;funcret
  4836  0060' 0012               	opt stack 0
  4837                           GLOBAL	__end_of_vfprintf
  4838                           	__end_of_vfprintf:
  4839  0062'                    	signat	_vfprintf,12410
  4840                           	global	_vfpfcnvrt
  4841                           
  4842 ;; *************** function _vfpfcnvrt *****************
  4843 ;; Defined at:
  4844 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  fp              2   76[COMRAM] PTR struct _IO_FILE
  4847 ;;		 -> sprintf@f(6), 
  4848 ;;  fmt             2   78[COMRAM] PTR PTR unsigned char 
  4849 ;;		 -> vfprintf@cfmt(2), 
  4850 ;;  ap              2   80[COMRAM] PTR PTR void 
  4851 ;;		 -> sprintf@ap(2), 
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;  llu             8    0        unsigned long long 
  4854 ;;  ll              8    0        long long 
  4855 ;;  f               4   60[BANK0 ] long long 
  4856 ;;  ct              3   64[BANK0 ] unsigned char [3]
  4857 ;;  vp              3    0        PTR void 
  4858 ;;  cp              3    0        PTR unsigned char 
  4859 ;;  i               2    0        int 
  4860 ;;  done            2    0        int 
  4861 ;;  c               1   67[BANK0 ] unsigned char 
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  2   76[COMRAM] int 
  4864 ;; Registers used:
  4865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack

  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4871 ;;      Params:         6       0       0       0       0       0       0
  4872 ;;      Locals:         0      12       0       0       0       0       0
  4873 ;;      Temps:          4       0       0       0       0       0       0
  4874 ;;      Totals:        10      12       0       0       0       0       0
  4875 ;;Total ram usage:       22 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:    9
  4878 ;; This function calls:
  4879 ;;		_atoi
  4880 ;;		_efgtoa
  4881 ;;		_fputc
  4882 ;;		_isdigit
  4883 ;;		_isupper
  4884 ;;		_strncmp
  4885 ;;		_tolower
  4886 ;; This function is called by:
  4887 ;;		_vfprintf
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           psect	text11,class=CODE,space=0,reloc=2,group=0
  4891                           	line	670
  4892                           global __ptext11
  4893                           __ptext11:
  4894  0000'                    psect	text11
  4895                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4896                           	line	670
  4897                           	global	__size_of_vfpfcnvrt
  4898                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
  4899  0000                     	
  4900                           _vfpfcnvrt:
  4901  0000'                    ;incstack = 0
  4902                           	opt	stack 18
  4903                           	line	680
  4904                           	
  4905                           l5591:
  4906  0000'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
                                  int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
                                 2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
                                 rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
                                  (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4907                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  4908  0000' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  4909  0004' C04F' FFDA         	movff	postinc2,tblptrl
  4910  0008' CFDE FFF6          	movff	postdec2,tblptrh
  4911  000C' CFDD FFF7          	if	0	;tblptru may be non-zero
  4912  0010'                    	clrf	tblptru
  4914  0010'                    	if	0	;tblptru may be non-zero
  4915  0010'                    	global __mediumconst
  4916                           movlw	low highword(__mediumconst)
  4919  0010'                    	tblrd	*
  4920  0010' 0008               	
  4921                           	movf	tablat,w
  4922  0012' 50F5               	xorlw	025h
  4923  0014' 0A25               	btfss	status,2
  4924  0016' A4D8               	goto	u8041
  4925  0018' EF00' F000'        	goto	u8040
  4926  001C' EF00' F000'        u8041:
  4927  0020'                    	goto	l5673
  4928  0020' EF00' F000'        u8040:
  4929  0024'                    	line	681
  4930                           	
  4931                           l5593:
  4932  0024'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
                                   ++*fmt;
  4933                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  4934  0024' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  4935  0028' C04F' FFDA         	incf	postinc2
  4936  002C' 2ADE               	movlw	0
  4937  002E' 0E00               	addwfc	postdec2
  4938  0030' 22DD               	line	683
  4939                           	
  4940                           l5595:
  4941  0032'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
                                   flags = width = 0;
  4942                           	movlw	high(0)
  4943  0032' 0E00               	movwf	((c:_width+1)),c
  4944  0034' 6E0D'              	movlw	low(0)
  4945  0036' 0E00               	movwf	((c:_width)),c
  4946  0038' 6E0C'              	movff	(c:_width),(c:_flags)
  4947  003A' C00C' F010'        	movff	(c:_width+1),(c:_flags+1)
  4948  003E' C00D' F011'        	line	684
  4949                           	
  4950                           l5597:
  4951  0042'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
                                   prec = -1;
  4952                           	setf	((c:_prec)),c
  4953  0042' 680E'              	setf	((c:_prec+1)),c
  4954  0044' 680F'              	line	740
  4955                           	
  4956                           l5599:
  4957  0046'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 740:       
                                   if ((*fmt)[0] == '.') {
  4958                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  4959  0046' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  4960  004A' C04F' FFDA         	movff	postinc2,tblptrl
  4961  004E' CFDE FFF6          	movff	postdec2,tblptrh
  4962  0052' CFDD FFF7          	if	0	;tblptru may be non-zero
  4963  0056'                    	clrf	tblptru
  4965  0056'                    	if	0	;tblptru may be non-zero
  4966  0056'                    	global __mediumconst
  4967                           movlw	low highword(__mediumconst)
  4970  0056'                    	tblrd	*
  4971  0056' 0008               	
  4972                           	movf	tablat,w
  4973  0058' 50F5               	xorlw	02Eh
  4974  005A' 0A2E               	btfss	status,2
  4975  005C' A4D8               	goto	u8051
  4976  005E' EF00' F000'        	goto	u8050
  4977  0062' EF00' F000'        u8051:
  4978  0066'                    	goto	l5619
  4979  0066' EF00' F000'        u8050:
  4980  006A'                    	line	741
  4981                           	
  4982                           l5601:
  4983  006A'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 741:       
                                       prec = 0;
  4984                           	movlw	high(0)
  4985  006A' 0E00               	movwf	((c:_prec+1)),c
  4986  006C' 6E0F'              	movlw	low(0)
  4987  006E' 0E00               	movwf	((c:_prec)),c
  4988  0070' 6E0E'              	line	742
  4989                           	
  4990                           l5603:
  4991  0072'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 742:       
                                       ++*fmt;
  4992                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  4993  0072' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  4994  0076' C04F' FFDA         	incf	postinc2
  4995  007A' 2ADE               	movlw	0
  4996  007C' 0E00               	addwfc	postdec2
  4997  007E' 22DD               	line	743
  4998                           	
  4999                           l5605:
  5000  0080'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 743:       
                                       if ((*fmt)[0] == '*') {
  5001                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5002  0080' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5003  0084' C04F' FFDA         	movff	postinc2,tblptrl
  5004  0088' CFDE FFF6          	movff	postdec2,tblptrh
  5005  008C' CFDD FFF7          	if	0	;tblptru may be non-zero
  5006  0090'                    	clrf	tblptru
  5008  0090'                    	if	0	;tblptru may be non-zero
  5009  0090'                    	global __mediumconst
  5010                           movlw	low highword(__mediumconst)
  5013  0090'                    	tblrd	*
  5014  0090' 0008               	
  5015                           	movf	tablat,w
  5016  0092' 50F5               	xorlw	02Ah
  5017  0094' 0A2A               	btfss	status,2
  5018  0096' A4D8               	goto	u8061
  5019  0098' EF00' F000'        	goto	u8060
  5020  009C' EF00' F000'        u8061:
  5021  00A0'                    	goto	l5609
  5022  00A0' EF00' F000'        u8060:
  5023  00A4'                    	line	744
  5024                           	
  5025                           l5607:
  5026  00A4'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 744:       
                                           ++*fmt;
  5027                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5028  00A4' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5029  00A8' C04F' FFDA         	incf	postinc2
  5030  00AC' 2ADE               	movlw	0
  5031  00AE' 0E00               	addwfc	postdec2
  5032  00B0' 22DD               	line	745
  5033                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 745:       
                                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5034                           	movff	(c:vfpfcnvrt@ap),fsr2l
  5035  00B2' C050' FFD9         	movff	(c:vfpfcnvrt@ap+1),fsr2h
  5036  00B6' C051' FFDA         	movff	indf2,??_vfpfcnvrt+0+0
  5037  00BA' CFDF F052'         	movlw	low(02h)
  5038  00BE' 0E02               	addwf	postinc2
  5039  00C0' 26DE               	movff	indf2,??_vfpfcnvrt+0+0+1
  5040  00C2' CFDF F053'         	movlw	high(02h)
  5041  00C6' 0E00               	addwfc	postdec2
  5042  00C8' 22DD               	movff	??_vfpfcnvrt+0+0,fsr2l
  5043  00CA' C052' FFD9         	movff	??_vfpfcnvrt+0+1,fsr2h
  5044  00CE' C053' FFDA         	movff	postinc2,(c:_prec)
  5045  00D2' CFDE F00E'         	movff	postdec2,(c:_prec+1)
  5046  00D6' CFDD F00F'         	line	746
  5047                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 746:       
                                       } else {
  5048                           	goto	l5619
  5049  00DA' EF00' F000'        	
  5050                           l350:
  5051  00DE'                    	line	747
  5052                           	
  5053                           l5609:
  5054  00DE'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 747:       
                                           prec = atoi(*fmt);
  5055                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5056  00DE' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5057  00E2' C04F' FFDA         	movff	postinc2,(c:atoi@s)
  5058  00E6' CFDE F01E'         	movff	postdec2,(c:atoi@s+1)
  5059  00EA' CFDD F01F'         	call	_atoi	;wreg free
  5060  00EE' EC00' F000'        	movff	0+?_atoi,(c:_prec)
  5061  00F2' C01E' F00E'        	movff	1+?_atoi,(c:_prec+1)
  5062  00F6' C01F' F00F'        	line	748
  5063                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 748:       
                                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5064                           	goto	l5613
  5065  00FA' EF00' F000'        	
  5066                           l353:
  5067  00FE'                    	line	749
  5068                           	
  5069                           l5611:
  5070  00FE'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 749:       
                                               ++*fmt;
  5071                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5072  00FE' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5073  0102' C04F' FFDA         	incf	postinc2
  5074  0106' 2ADE               	movlw	0
  5075  0108' 0E00               	addwfc	postdec2
  5076  010A' 22DD               	goto	l5613
  5077  010C' EF00' F000'        	line	750
  5078                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 748:       
                                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5079                           	
  5080                           l352:
  5081  0110'                    	line	748
  5082                           	
  5083                           l5613:
  5084  0110'                    	movlw	low(0FFD0h)
  5085  0110' 0ED0               	movwf	(??_vfpfcnvrt+0+0)&0ffh,c
  5086  0112' 6E00'              	movlw	high(0FFD0h)
  5087  0114' 0EFF               	movwf	1+(??_vfpfcnvrt+0+0)&0ffh,c
  5088  0116' 6E00'              	movff	(c:vfpfcnvrt@fmt),fsr2l
  5089  0118' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5090  011C' C04F' FFDA         	movff	postinc2,tblptrl
  5091  0120' CFDE FFF6          	movff	postdec2,tblptrh
  5092  0124' CFDD FFF7          	if	0	;tblptru may be non-zero
  5093  0128'                    	clrf	tblptru
  5095  0128'                    	if	0	;tblptru may be non-zero
  5096  0128'                    	global __mediumconst
  5097                           movlw	low highword(__mediumconst)
  5100  0128'                    	tblrd	*
  5101  0128' 0008               	
  5102                           	movf	tablat,w
  5103  012A' 50F5               	movwf	(??_vfpfcnvrt+2+0)&0ffh,c
  5104  012C' 6E00'              	clrf	(??_vfpfcnvrt+2+0+1)&0ffh,c
  5105  012E' 6A00'              
  5106                           	movf	(??_vfpfcnvrt+0+0),c,w
  5107  0130' 5052'              	addwf	(??_vfpfcnvrt+2+0),c
  5108  0132' 2654'              	movf	(??_vfpfcnvrt+0+1),c,w
  5109  0134' 5053'              	addwfc	(??_vfpfcnvrt+2+1),c
  5110  0136' 2255'              		movf	(??_vfpfcnvrt+2+1),c,w
  5111  0138' 5055'              	bnz	u8070
  5112  013A' E10A               	movlw	10
  5113  013C' 0E0A               	subwf	 (??_vfpfcnvrt+2+0),c,w
  5114  013E' 5C54'              	btfss	status,0
  5115  0140' A0D8               	goto	u8071
  5116  0142' EF00' F000'        	goto	u8070
  5117  0146' EF00' F000'        
  5118                           u8071:
  5119  014A'                    	movlw	1
  5120  014A' 0E01               	goto	u8080
  5121  014C' EF00' F000'        u8070:
  5122  0150'                    	movlw	0
  5123  0150' 0E00               u8080:
  5124  0152'                    	movlb	0	; () banked
  5125  0152' 0100               	movwf	((_vfpfcnvrt$990))&0ffh
  5126  0154' 6F00'              	clrf	((_vfpfcnvrt$990+1))&0ffh
  5127  0156' 6B00'              	goto	l5617
  5128  0158' EF00' F000'        	
  5129                           l355:; BSR set to: 0
  5130  015C'                    
  5131                           	
  5132                           l5615:; BSR set to: 0
  5133  015C'                    
  5134                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5135  015C' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5136  0160' C04F' FFDA         	movff	postinc2,tblptrl
  5137  0164' CFDE FFF6          	movff	postdec2,tblptrh
  5138  0168' CFDD FFF7          	if	0	;tblptru may be non-zero
  5139  016C'                    	clrf	tblptru
  5141  016C'                    	if	0	;tblptru may be non-zero
  5142  016C'                    	global __mediumconst
  5143                           movlw	low highword(__mediumconst)
  5146  016C'                    	tblrd	*
  5147  016C' 0008               	
  5148                           	movf	tablat,w
  5149  016E' 50F5               
  5150                           	movwf	((c:isdigit@c)),c
  5151  0170' 6E0D'              	clrf	((c:isdigit@c+1)),c
  5152  0172' 6A0E'              	call	_isdigit	;wreg free
  5153  0174' EC00' F000'        	movff	0+?_isdigit,(_vfpfcnvrt$990)
  5154  0178' C00D' F038'        	movff	1+?_isdigit,(_vfpfcnvrt$990+1)
  5155  017C' C00E' F039'        	goto	l5617
  5156  0180' EF00' F000'        	
  5157                           l357:
  5158  0184'                    	
  5159                           l5617:
  5160  0184'                    	movlb	0	; () banked
  5161  0184' 0100               	movf	((_vfpfcnvrt$990))&0ffh,w
  5162  0186' 5100'              iorwf	((_vfpfcnvrt$990+1))&0ffh,w
  5163  0188' 1100'              	btfss	status,2
  5164  018A' A4D8               	goto	u8091
  5165  018C' EF00' F000'        	goto	u8090
  5166  0190' EF00' F000'        
  5167                           u8091:
  5168  0194'                    	goto	l5611
  5169  0194' EF00' F000'        u8090:
  5170  0198'                    	goto	l5619
  5171  0198' EF00' F000'        	
  5172                           l358:; BSR set to: 0
  5173  019C'                    
  5174                           	goto	l5619
  5175  019C' EF00' F000'        	line	751
  5176                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 751:       
                                       }
  5177                           	
  5178                           l351:; BSR set to: 0
  5179  01A0'                    
  5180                           	goto	l5619
  5181  01A0' EF00' F000'        	line	752
  5182                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 752:       
                                   }
  5183                           	
  5184                           l349:; BSR set to: 0
  5185  01A4'                    
  5186                           	line	757
  5187                           	
  5188                           l5619:
  5189  01A4'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 757:       
                                   ct[0] = tolower((int)(*fmt)[0]);
  5190                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5191  01A4' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5192  01A8' C04F' FFDA         	movff	postinc2,tblptrl
  5193  01AC' CFDE FFF6          	movff	postdec2,tblptrh
  5194  01B0' CFDD FFF7          	if	0	;tblptru may be non-zero
  5195  01B4'                    	clrf	tblptru
  5197  01B4'                    	if	0	;tblptru may be non-zero
  5198  01B4'                    	global __mediumconst
  5199                           movlw	low highword(__mediumconst)
  5202  01B4'                    	tblrd	*
  5203  01B4' 0008               	
  5204                           	movf	tablat,w
  5205  01B6' 50F5               
  5206                           	movwf	((c:tolower@c)),c
  5207  01B8' 6E13'              	clrf	((c:tolower@c+1)),c
  5208  01BA' 6A14'              	call	_tolower	;wreg free
  5209  01BC' EC00' F000'        	movf	(0+?_tolower),c,w
  5210  01C0' 5013'              	movlb	0	; () banked
  5211  01C2' 0100               	movwf	((vfpfcnvrt@ct))&0ffh
  5212  01C4' 6F00'              	line	758
  5213                           	
  5214                           l5621:; BSR set to: 0
  5215  01C6'                    
  5216                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 758:       
                                   if (ct[0]) {
  5217                           	movf	((vfpfcnvrt@ct))&0ffh,w
  5218  01C6' 5100'              	btfsc	status,2
  5219  01C8' B4D8               	goto	u8101
  5220  01CA' EF00' F000'        	goto	u8100
  5221  01CE' EF00' F000'        u8101:
  5222  01D2'                    	goto	l5629
  5223  01D2' EF00' F000'        u8100:
  5224  01D6'                    	line	759
  5225                           	
  5226                           l5623:; BSR set to: 0
  5227  01D6'                    
  5228                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 759:       
                                       ct[1] = tolower((int)(*fmt)[1]);
  5229                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5230  01D6' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5231  01DA' C04F' FFDA         	movff	postinc2,??_vfpfcnvrt+0+0
  5232  01DE' CFDE F052'         	movff	postdec2,??_vfpfcnvrt+0+0+1
  5233  01E2' CFDD F053'         	movlw	01h
  5234  01E6' 0E01               	addwf	(??_vfpfcnvrt+0+0),c
  5235  01E8' 2652'              	movlw	0
  5236  01EA' 0E00               	addwfc	(??_vfpfcnvrt+0+1),c
  5237  01EC' 2253'              	movff	??_vfpfcnvrt+0+0,tblptrl
  5238  01EE' C052' FFF6         	movff	??_vfpfcnvrt+0+1,tblptrh
  5239  01F2' C053' FFF7         	if	0	;tblptru may be non-zero
  5240  01F6'                    	clrf	tblptru
  5242  01F6'                    	if	0	;tblptru may be non-zero
  5243  01F6'                    	global __mediumconst
  5244                           movlw	low highword(__mediumconst)
  5247  01F6'                    	tblrd	*
  5248  01F6' 0008               	
  5249                           	movf	tablat,w
  5250  01F8' 50F5               
  5251                           	movwf	((c:tolower@c)),c
  5252  01FA' 6E13'              	clrf	((c:tolower@c+1)),c
  5253  01FC' 6A14'              	call	_tolower	;wreg free
  5254  01FE' EC00' F000'        	movf	(0+?_tolower),c,w
  5255  0202' 5013'              	movlb	0	; () banked
  5256  0204' 0100               	movwf	(0+(vfpfcnvrt@ct+01h))&0ffh
  5257  0206' 6F00'              	line	760
  5258                           	
  5259                           l5625:; BSR set to: 0
  5260  0208'                    
  5261                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 760:       
                                       if (ct[1]) {
  5262                           	movf	(0+(vfpfcnvrt@ct+01h))&0ffh,w
  5263  0208' 5100'              	btfsc	status,2
  5264  020A' B4D8               	goto	u8111
  5265  020C' EF00' F000'        	goto	u8110
  5266  0210' EF00' F000'        u8111:
  5267  0214'                    	goto	l5629
  5268  0214' EF00' F000'        u8110:
  5269  0218'                    	line	761
  5270                           	
  5271                           l5627:; BSR set to: 0
  5272  0218'                    
  5273                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 761:       
                                           ct[2] = tolower((int)(*fmt)[2]);
  5274                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5275  0218' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5276  021C' C04F' FFDA         	movff	postinc2,??_vfpfcnvrt+0+0
  5277  0220' CFDE F052'         	movff	postdec2,??_vfpfcnvrt+0+0+1
  5278  0224' CFDD F053'         	movlw	02h
  5279  0228' 0E02               	addwf	(??_vfpfcnvrt+0+0),c
  5280  022A' 2652'              	movlw	0
  5281  022C' 0E00               	addwfc	(??_vfpfcnvrt+0+1),c
  5282  022E' 2253'              	movff	??_vfpfcnvrt+0+0,tblptrl
  5283  0230' C052' FFF6         	movff	??_vfpfcnvrt+0+1,tblptrh
  5284  0234' C053' FFF7         	if	0	;tblptru may be non-zero
  5285  0238'                    	clrf	tblptru
  5287  0238'                    	if	0	;tblptru may be non-zero
  5288  0238'                    	global __mediumconst
  5289                           movlw	low highword(__mediumconst)
  5292  0238'                    	tblrd	*
  5293  0238' 0008               	
  5294                           	movf	tablat,w
  5295  023A' 50F5               
  5296                           	movwf	((c:tolower@c)),c
  5297  023C' 6E13'              	clrf	((c:tolower@c+1)),c
  5298  023E' 6A14'              	call	_tolower	;wreg free
  5299  0240' EC00' F000'        	movf	(0+?_tolower),c,w
  5300  0244' 5013'              	movlb	0	; () banked
  5301  0246' 0100               	movwf	(0+(vfpfcnvrt@ct+02h))&0ffh
  5302  0248' 6F00'              	goto	l5629
  5303  024A' EF00' F000'        	line	762
  5304                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 762:       
                                       }
  5305                           	
  5306                           l360:; BSR set to: 0
  5307  024E'                    
  5308                           	goto	l5629
  5309  024E' EF00' F000'        	line	763
  5310                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 763:       
                                   }
  5311                           	
  5312                           l359:; BSR set to: 0
  5313  0252'                    
  5314                           	line	920
  5315                           	
  5316                           l5629:; BSR set to: 0
  5317  0252'                    
  5318                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 920:       
                                   if (ct[0] == 'f') {
  5319                           		movlw	102
  5320  0252' 0E66               	xorwf	((vfpfcnvrt@ct))&0ffh,w
  5321  0254' 1900'              	btfss	status,2
  5322  0256' A4D8               	goto	u8121
  5323  0258' EF00' F000'        	goto	u8120
  5324  025C' EF00' F000'        
  5325                           u8121:
  5326  0260'                    	goto	l5641
  5327  0260' EF00' F000'        u8120:
  5328  0264'                    	line	922
  5329                           	
  5330                           l5631:; BSR set to: 0
  5331  0264'                    
  5332                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 922:       
                                       c = (*fmt)[0];
  5333                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5334  0264' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5335  0268' C04F' FFDA         	movff	postinc2,tblptrl
  5336  026C' CFDE FFF6          	movff	postdec2,tblptrh
  5337  0270' CFDD FFF7          	if	0	;tblptru may be non-zero
  5338  0274'                    	clrf	tblptru
  5340  0274'                    	if	0	;tblptru may be non-zero
  5341  0274'                    	global __mediumconst
  5342                           movlw	low highword(__mediumconst)
  5345  0274'                    	tblrd	*
  5346  0274' 0008               	
  5347                           	movff	tablat,(vfpfcnvrt@c)
  5348  0276' CFF5 F043'         	line	923
  5349                           	
  5350                           l5633:; BSR set to: 0
  5351  027A'                    
  5352                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 923:       
                                       ++*fmt;
  5353                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5354  027A' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5355  027E' C04F' FFDA         	incf	postinc2
  5356  0282' 2ADE               	movlw	0
  5357  0284' 0E00               	addwfc	postdec2
  5358  0286' 22DD               	line	924
  5359                           	
  5360                           l5635:; BSR set to: 0
  5361  0288'                    
  5362                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 924:       
                                       f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5363                           	movff	(c:vfpfcnvrt@ap),fsr2l
  5364  0288' C050' FFD9         	movff	(c:vfpfcnvrt@ap+1),fsr2h
  5365  028C' C051' FFDA         	movff	indf2,??_vfpfcnvrt+0+0
  5366  0290' CFDF F052'         	movlw	low(04h)
  5367  0294' 0E04               	addwf	postinc2
  5368  0296' 26DE               	movff	indf2,??_vfpfcnvrt+0+0+1
  5369  0298' CFDF F053'         	movlw	high(04h)
  5370  029C' 0E00               	addwfc	postdec2
  5371  029E' 22DD               	movff	??_vfpfcnvrt+0+0,fsr2l
  5372  02A0' C052' FFD9         	movff	??_vfpfcnvrt+0+1,fsr2h
  5373  02A4' C053' FFDA         	movff	postinc2,(vfpfcnvrt@f)
  5374  02A8' CFDE F03C'         	movff	postinc2,(vfpfcnvrt@f+1)
  5375  02AC' CFDE F03D'         	movff	postinc2,(vfpfcnvrt@f+2)
  5376  02B0' CFDE F03E'         	movff	postinc2,(vfpfcnvrt@f+3)
  5377  02B4' CFDE F03F'         	line	926
  5378                           	
  5379                           l5637:; BSR set to: 0
  5380  02B8'                    
  5381                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 926:       
                                       return efgtoa(fp, f, c);
  5382                           		movff	(c:vfpfcnvrt@fp),(c:efgtoa@fp)
  5383  02B8' C04C' F040'        	movff	(c:vfpfcnvrt@fp+1),(c:efgtoa@fp+1)
  5384  02BC' C04D' F041'        
  5385                           	movff	(vfpfcnvrt@f),(c:efgtoa@f)
  5386  02C0' C03C' F042'        	movff	(vfpfcnvrt@f+1),(c:efgtoa@f+1)
  5387  02C4' C03D' F043'        	movff	(vfpfcnvrt@f+2),(c:efgtoa@f+2)
  5388  02C8' C03E' F044'        	movff	(vfpfcnvrt@f+3),(c:efgtoa@f+3)
  5389  02CC' C03F' F045'        	movff	(vfpfcnvrt@c),(c:efgtoa@c)
  5390  02D0' C043' F046'        	call	_efgtoa	;wreg free
  5391  02D4' EC00' F000'        	movff	0+?_efgtoa,(c:?_vfpfcnvrt)
  5392  02D8' C040' F04C'        	movff	1+?_efgtoa,(c:?_vfpfcnvrt+1)
  5393  02DC' C041' F04D'        	goto	l362
  5394  02E0' EF00' F000'        	
  5395                           l5639:
  5396  02E4'                    	goto	l362
  5397  02E4' EF00' F000'        	line	927
  5398                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 927:       
                                   }
  5399                           	
  5400                           l361:
  5401  02E8'                    	line	928
  5402                           	
  5403                           l5641:
  5404  02E8'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 928:       
                                   if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5405                           		movlw	low(vfpfcnvrt@ct)
  5406  02E8' 0E00'              	movwf	((c:strncmp@_l)),c
  5407  02EA' 6E0D'              	movlw	high(vfpfcnvrt@ct)
  5408  02EC' 0E00'              	movwf	((c:strncmp@_l+1)),c
  5409  02EE' 6E0E'              
  5410                           		movlw	low(STR_28)
  5411  02F0' 0E00'              	movwf	((c:strncmp@_r)),c
  5412  02F2' 6E0F'              	movlw	high(STR_28)
  5413  02F4' 0E00'              	movwf	((c:strncmp@_r+1)),c
  5414  02F6' 6E10'              
  5415                           	movlw	high(02h)
  5416  02F8' 0E00               	movwf	((c:strncmp@n+1)),c
  5417  02FA' 6E12'              	movlw	low(02h)
  5418  02FC' 0E02               	movwf	((c:strncmp@n)),c
  5419  02FE' 6E11'              	call	_strncmp	;wreg free
  5420  0300' EC00' F000'        	movf	(0+?_strncmp),c,w
  5421  0304' 500D'              iorwf	(1+?_strncmp),c,w
  5422  0306' 100E'              	btfss	status,2
  5423  0308' A4D8               	goto	u8131
  5424  030A' EF00' F000'        	goto	u8130
  5425  030E' EF00' F000'        
  5426                           u8131:
  5427  0312'                    	goto	l5657
  5428  0312' EF00' F000'        u8130:
  5429  0316'                    	line	930
  5430                           	
  5431                           l5643:
  5432  0316'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 931:       
                                       if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5433                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5434  0316' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5435  031A' C04F' FFDA         	movff	postinc2,??_vfpfcnvrt+0+0
  5436  031E' CFDE F052'         	movff	postdec2,??_vfpfcnvrt+0+0+1
  5437  0322' CFDD F053'         	movlw	01h
  5438  0326' 0E01               	addwf	(??_vfpfcnvrt+0+0),c
  5439  0328' 2652'              	movlw	0
  5440  032A' 0E00               	addwfc	(??_vfpfcnvrt+0+1),c
  5441  032C' 2253'              	movff	??_vfpfcnvrt+0+0,tblptrl
  5442  032E' C052' FFF6         	movff	??_vfpfcnvrt+0+1,tblptrh
  5443  0332' C053' FFF7         	if	0	;tblptru may be non-zero
  5444  0336'                    	clrf	tblptru
  5446  0336'                    	if	0	;tblptru may be non-zero
  5447  0336'                    	global __mediumconst
  5448                           movlw	low highword(__mediumconst)
  5451  0336'                    	tblrd	*
  5452  0336' 0008               	
  5453                           	movff	tablat,(vfpfcnvrt@c)
  5454  0338' CFF5 F043'         	line	931
  5455                           	movlw	low(0FFBFh)
  5456  033C' 0EBF               	movwf	(??_vfpfcnvrt+0+0)&0ffh,c
  5457  033E' 6E00'              	movlw	high(0FFBFh)
  5458  0340' 0EFF               	movwf	1+(??_vfpfcnvrt+0+0)&0ffh,c
  5459  0342' 6E00'              	movff	(c:vfpfcnvrt@fmt),fsr2l
  5460  0344' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5461  0348' C04F' FFDA         	movff	postinc2,tblptrl
  5462  034C' CFDE FFF6          	movff	postdec2,tblptrh
  5463  0350' CFDD FFF7          	if	0	;tblptru may be non-zero
  5464  0354'                    	clrf	tblptru
  5466  0354'                    	if	0	;tblptru may be non-zero
  5467  0354'                    	global __mediumconst
  5468                           movlw	low highword(__mediumconst)
  5471  0354'                    	tblrd	*
  5472  0354' 0008               	
  5473                           	movf	tablat,w
  5474  0356' 50F5               	movwf	(??_vfpfcnvrt+2+0)&0ffh,c
  5475  0358' 6E00'              	clrf	(??_vfpfcnvrt+2+0+1)&0ffh,c
  5476  035A' 6A00'              
  5477                           	movf	(??_vfpfcnvrt+0+0),c,w
  5478  035C' 5052'              	addwf	(??_vfpfcnvrt+2+0),c
  5479  035E' 2654'              	movf	(??_vfpfcnvrt+0+1),c,w
  5480  0360' 5053'              	addwfc	(??_vfpfcnvrt+2+1),c
  5481  0362' 2255'              		movf	(??_vfpfcnvrt+2+1),c,w
  5482  0364' 5055'              	bnz	u8140
  5483  0366' E10A               	movlw	26
  5484  0368' 0E1A               	subwf	 (??_vfpfcnvrt+2+0),c,w
  5485  036A' 5C54'              	btfss	status,0
  5486  036C' A0D8               	goto	u8141
  5487  036E' EF00' F000'        	goto	u8140
  5488  0372' EF00' F000'        
  5489                           u8141:
  5490  0376'                    	movlw	1
  5491  0376' 0E01               	goto	u8150
  5492  0378' EF00' F000'        u8140:
  5493  037C'                    	movlw	0
  5494  037C' 0E00               u8150:
  5495  037E'                    	movlb	0	; () banked
  5496  037E' 0100               	movwf	((_vfpfcnvrt$994))&0ffh
  5497  0380' 6F00'              	clrf	((_vfpfcnvrt$994+1))&0ffh
  5498  0382' 6B00'              	goto	l5647
  5499  0384' EF00' F000'        	
  5500                           l366:; BSR set to: 0
  5501  0388'                    
  5502                           	
  5503                           l5645:; BSR set to: 0
  5504  0388'                    
  5505                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5506  0388' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5507  038C' C04F' FFDA         	movff	postinc2,tblptrl
  5508  0390' CFDE FFF6          	movff	postdec2,tblptrh
  5509  0394' CFDD FFF7          	if	0	;tblptru may be non-zero
  5510  0398'                    	clrf	tblptru
  5512  0398'                    	if	0	;tblptru may be non-zero
  5513  0398'                    	global __mediumconst
  5514                           movlw	low highword(__mediumconst)
  5517  0398'                    	tblrd	*
  5518  0398' 0008               	
  5519                           	movf	tablat,w
  5520  039A' 50F5               
  5521                           	movwf	((c:isupper@c)),c
  5522  039C' 6E0D'              	clrf	((c:isupper@c+1)),c
  5523  039E' 6A0E'              	call	_isupper	;wreg free
  5524  03A0' EC00' F000'        	movff	0+?_isupper,(_vfpfcnvrt$994)
  5525  03A4' C00D' F03A'        	movff	1+?_isupper,(_vfpfcnvrt$994+1)
  5526  03A8' C00E' F03B'        	goto	l5647
  5527  03AC' EF00' F000'        	
  5528                           l368:
  5529  03B0'                    	
  5530                           l5647:
  5531  03B0'                    	movlb	0	; () banked
  5532  03B0' 0100               	movf	((_vfpfcnvrt$994))&0ffh,w
  5533  03B2' 5100'              iorwf	((_vfpfcnvrt$994+1))&0ffh,w
  5534  03B4' 1100'              	btfsc	status,2
  5535  03B6' B4D8               	goto	u8161
  5536  03B8' EF00' F000'        	goto	u8160
  5537  03BC' EF00' F000'        
  5538                           u8161:
  5539  03C0'                    	goto	l5651
  5540  03C0' EF00' F000'        u8160:
  5541  03C4'                    	line	932
  5542                           	
  5543                           l5649:; BSR set to: 0
  5544  03C4'                    
  5545                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 932:       
                                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5546                           	movff	(c:vfpfcnvrt@ap),fsr2l
  5547  03C4' C050' FFD9         	movff	(c:vfpfcnvrt@ap+1),fsr2h
  5548  03C8' C051' FFDA         	movff	indf2,??_vfpfcnvrt+0+0
  5549  03CC' CFDF F052'         	movlw	low(04h)
  5550  03D0' 0E04               	addwf	postinc2
  5551  03D2' 26DE               	movff	indf2,??_vfpfcnvrt+0+0+1
  5552  03D4' CFDF F053'         	movlw	high(04h)
  5553  03D8' 0E00               	addwfc	postdec2
  5554  03DA' 22DD               	movff	??_vfpfcnvrt+0+0,fsr2l
  5555  03DC' C052' FFD9         	movff	??_vfpfcnvrt+0+1,fsr2h
  5556  03E0' C053' FFDA         	movff	postinc2,(vfpfcnvrt@f)
  5557  03E4' CFDE F03C'         	movff	postinc2,(vfpfcnvrt@f+1)
  5558  03E8' CFDE F03D'         	movff	postinc2,(vfpfcnvrt@f+2)
  5559  03EC' CFDE F03E'         	movff	postinc2,(vfpfcnvrt@f+3)
  5560  03F0' CFDE F03F'         	line	933
  5561                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 933:       
                                       } else {
  5562                           	goto	l369
  5563  03F4' EF00' F000'        	
  5564                           l364:; BSR set to: 0
  5565  03F8'                    
  5566                           	line	934
  5567                           	
  5568                           l5651:; BSR set to: 0
  5569  03F8'                    
  5570                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 934:       
                                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5571                           	movff	(c:vfpfcnvrt@ap),fsr2l
  5572  03F8' C050' FFD9         	movff	(c:vfpfcnvrt@ap+1),fsr2h
  5573  03FC' C051' FFDA         	movff	indf2,??_vfpfcnvrt+0+0
  5574  0400' CFDF F052'         	movlw	low(04h)
  5575  0404' 0E04               	addwf	postinc2
  5576  0406' 26DE               	movff	indf2,??_vfpfcnvrt+0+0+1
  5577  0408' CFDF F053'         	movlw	high(04h)
  5578  040C' 0E00               	addwfc	postdec2
  5579  040E' 22DD               	movff	??_vfpfcnvrt+0+0,fsr2l
  5580  0410' C052' FFD9         	movff	??_vfpfcnvrt+0+1,fsr2h
  5581  0414' C053' FFDA         	movff	postinc2,(vfpfcnvrt@f)
  5582  0418' CFDE F03C'         	movff	postinc2,(vfpfcnvrt@f+1)
  5583  041C' CFDE F03D'         	movff	postinc2,(vfpfcnvrt@f+2)
  5584  0420' CFDE F03E'         	movff	postinc2,(vfpfcnvrt@f+3)
  5585  0424' CFDE F03F'         	line	935
  5586                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 935:       
                                       }
  5587                           	
  5588                           l369:; BSR set to: 0
  5589  0428'                    
  5590                           	line	936
  5591                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 936:       
                                       *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5592                           	movlw	02h
  5593  0428' 0E02               	movff	(c:vfpfcnvrt@fmt),fsr2l
  5594  042A' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5595  042E' C04F' FFDA         	addwf	postinc2
  5596  0432' 26DE               	movlw	0
  5597  0434' 0E00               	addwfc	postdec2
  5598  0436' 22DD               	line	938
  5599                           	
  5600                           l5653:; BSR set to: 0
  5601  0438'                    
  5602                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 938:       
                                       return efgtoa(fp, f, c);
  5603                           		movff	(c:vfpfcnvrt@fp),(c:efgtoa@fp)
  5604  0438' C04C' F040'        	movff	(c:vfpfcnvrt@fp+1),(c:efgtoa@fp+1)
  5605  043C' C04D' F041'        
  5606                           	movff	(vfpfcnvrt@f),(c:efgtoa@f)
  5607  0440' C03C' F042'        	movff	(vfpfcnvrt@f+1),(c:efgtoa@f+1)
  5608  0444' C03D' F043'        	movff	(vfpfcnvrt@f+2),(c:efgtoa@f+2)
  5609  0448' C03E' F044'        	movff	(vfpfcnvrt@f+3),(c:efgtoa@f+3)
  5610  044C' C03F' F045'        	movff	(vfpfcnvrt@c),(c:efgtoa@c)
  5611  0450' C043' F046'        	call	_efgtoa	;wreg free
  5612  0454' EC00' F000'        	movff	0+?_efgtoa,(c:?_vfpfcnvrt)
  5613  0458' C040' F04C'        	movff	1+?_efgtoa,(c:?_vfpfcnvrt+1)
  5614  045C' C041' F04D'        	goto	l362
  5615  0460' EF00' F000'        	
  5616                           l5655:
  5617  0464'                    	goto	l362
  5618  0464' EF00' F000'        	line	939
  5619                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 939:       
                                   }
  5620                           	
  5621                           l363:
  5622  0468'                    	line	1350
  5623                           	
  5624                           l5657:
  5625  0468'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
                                    if ((*fmt)[0] == '%') {
  5626                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5627  0468' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5628  046C' C04F' FFDA         	movff	postinc2,tblptrl
  5629  0470' CFDE FFF6          	movff	postdec2,tblptrh
  5630  0474' CFDD FFF7          	if	0	;tblptru may be non-zero
  5631  0478'                    	clrf	tblptru
  5633  0478'                    	if	0	;tblptru may be non-zero
  5634  0478'                    	global __mediumconst
  5635                           movlw	low highword(__mediumconst)
  5638  0478'                    	tblrd	*
  5639  0478' 0008               	
  5640                           	movf	tablat,w
  5641  047A' 50F5               	xorlw	025h
  5642  047C' 0A25               	btfss	status,2
  5643  047E' A4D8               	goto	u8171
  5644  0480' EF00' F000'        	goto	u8170
  5645  0484' EF00' F000'        u8171:
  5646  0488'                    	goto	l5667
  5647  0488' EF00' F000'        u8170:
  5648  048C'                    	line	1351
  5649                           	
  5650                           l5659:
  5651  048C'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
                                        ++*fmt;
  5652                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5653  048C' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5654  0490' C04F' FFDA         	incf	postinc2
  5655  0494' 2ADE               	movlw	0
  5656  0496' 0E00               	addwfc	postdec2
  5657  0498' 22DD               	line	1352
  5658                           	
  5659                           l5661:
  5660  049A'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
                                        fputc((int)'%', fp);
  5661                           	movlw	high(025h)
  5662  049A' 0E00               	movwf	((c:fputc@c+1)),c
  5663  049C' 6E0E'              	movlw	low(025h)
  5664  049E' 0E25               	movwf	((c:fputc@c)),c
  5665  04A0' 6E0D'              		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
  5666  04A2' C04C' F00F'        	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
  5667  04A6' C04D' F010'        
  5668                           	call	_fputc	;wreg free
  5669  04AA' EC00' F000'        	line	1353
  5670                           	
  5671                           l5663:
  5672  04AE'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
                                        return 1;
  5673                           	movlw	high(01h)
  5674  04AE' 0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  5675  04B0' 6E4D'              	movlw	low(01h)
  5676  04B2' 0E01               	movwf	((c:?_vfpfcnvrt)),c
  5677  04B4' 6E4C'              	goto	l362
  5678  04B6' EF00' F000'        	
  5679                           l5665:
  5680  04BA'                    	goto	l362
  5681  04BA' EF00' F000'        	line	1354
  5682                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:      
                                    }
  5683                           	
  5684                           l370:
  5685  04BE'                    	line	1357
  5686                           	
  5687                           l5667:
  5688  04BE'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
                                    ++*fmt;
  5689                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5690  04BE' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5691  04C2' C04F' FFDA         	incf	postinc2
  5692  04C6' 2ADE               	movlw	0
  5693  04C8' 0E00               	addwfc	postdec2
  5694  04CA' 22DD               	line	1358
  5695                           	
  5696                           l5669:
  5697  04CC'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
                                    return 0;
  5698                           	movlw	high(0)
  5699  04CC' 0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  5700  04CE' 6E4D'              	movlw	low(0)
  5701  04D0' 0E00               	movwf	((c:?_vfpfcnvrt)),c
  5702  04D2' 6E4C'              	goto	l362
  5703  04D4' EF00' F000'        	
  5704                           l5671:
  5705  04D8'                    	goto	l362
  5706  04D8' EF00' F000'        	line	1359
  5707                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
                                 
  5708                           	
  5709                           l348:
  5710  04DC'                    	line	1362
  5711                           	
  5712                           l5673:
  5713  04DC'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
                                 putc((int)(*fmt)[0], fp);
  5714                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5715  04DC' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5716  04E0' C04F' FFDA         	movff	postinc2,tblptrl
  5717  04E4' CFDE FFF6          	movff	postdec2,tblptrh
  5718  04E8' CFDD FFF7          	if	0	;tblptru may be non-zero
  5719  04EC'                    	clrf	tblptru
  5721  04EC'                    	if	0	;tblptru may be non-zero
  5722  04EC'                    	global __mediumconst
  5723                           movlw	low highword(__mediumconst)
  5726  04EC'                    	tblrd	*
  5727  04EC' 0008               	
  5728                           	movf	tablat,w
  5729  04EE' 50F5               
  5730                           	movwf	((c:fputc@c)),c
  5731  04F0' 6E0D'              	clrf	((c:fputc@c+1)),c
  5732  04F2' 6A0E'              		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
  5733  04F4' C04C' F00F'        	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
  5734  04F8' C04D' F010'        
  5735                           	call	_fputc	;wreg free
  5736  04FC' EC00' F000'        	line	1363
  5737                           	
  5738                           l5675:
  5739  0500'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
                                 +*fmt;
  5740                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  5741  0500' C04E' FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  5742  0504' C04F' FFDA         	incf	postinc2
  5743  0508' 2ADE               	movlw	0
  5744  050A' 0E00               	addwfc	postdec2
  5745  050C' 22DD               	line	1364
  5746                           	
  5747                           l5677:
  5748  050E'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
                                 eturn 1;
  5749                           	movlw	high(01h)
  5750  050E' 0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  5751  0510' 6E4D'              	movlw	low(01h)
  5752  0512' 0E01               	movwf	((c:?_vfpfcnvrt)),c
  5753  0514' 6E4C'              	goto	l362
  5754  0516' EF00' F000'        	
  5755                           l5679:
  5756  051A'                    	line	1365
  5757                           	
  5758                           l362:
  5759  051A'                    	return	;funcret
  5760  051A' 0012               	opt stack 0
  5761                           GLOBAL	__end_of_vfpfcnvrt
  5762                           	__end_of_vfpfcnvrt:
  5763  051C'                    	signat	_vfpfcnvrt,12410
  5764                           	global	_strncmp
  5765                           
  5766 ;; *************** function _strncmp *****************
  5767 ;; Defined at:
  5768 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  _l              2   13[COMRAM] PTR const unsigned char 
  5771 ;;		 -> vfpfcnvrt@ct(3), mystring(10), NULL(0), STR_3(2), 
  5772 ;;		 -> STR_2(2), 
  5773 ;;  _r              2   15[COMRAM] PTR const unsigned char 
  5774 ;;		 -> STR_28(3), STR_17(6), STR_15(6), STR_13(6), 
  5775 ;;		 -> STR_11(6), STR_7(5), 
  5776 ;;  n               2   17[COMRAM] unsigned int 
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  r               2   24[COMRAM] PTR const unsigned char 
  5779 ;;		 -> STR_28(3), STR_17(6), STR_15(6), STR_13(6), 
  5780 ;;		 -> STR_11(6), STR_7(5), 
  5781 ;;  l               2   22[COMRAM] PTR const unsigned char 
  5782 ;;		 -> vfpfcnvrt@ct(3), mystring(10), NULL(0), STR_3(2), 
  5783 ;;		 -> STR_2(2), 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  2   13[COMRAM] int 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5793 ;;      Params:         6       0       0       0       0       0       0
  5794 ;;      Locals:         4       0       0       0       0       0       0
  5795 ;;      Temps:          3       0       0       0       0       0       0
  5796 ;;      Totals:        13       0       0       0       0       0       0
  5797 ;;Total ram usage:       13 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:    4
  5800 ;; This function calls:
  5801 ;;		Nothing
  5802 ;; This function is called by:
  5803 ;;		_vfpfcnvrt
  5804 ;;		_strstr
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           psect	text12,class=CODE,space=0,reloc=2,group=2
  5808                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  5809                           	line	3
  5810                           global __ptext12
  5811                           __ptext12:
  5812  0000'                    psect	text12
  5813                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  5814                           	line	3
  5815                           	global	__size_of_strncmp
  5816                           	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
  5817  0000                     	
  5818                           _strncmp:
  5819  0000'                    ;incstack = 0
  5820                           	opt	stack 25
  5821                           	line	5
  5822                           	
  5823                           l5571:
  5824  0000'                    		movff	(c:strncmp@_l),(c:strncmp@l)
  5825  0000' C00D' F016'        	movff	(c:strncmp@_l+1),(c:strncmp@l+1)
  5826  0004' C00E' F017'        
  5827                           		movff	(c:strncmp@_r),(c:strncmp@r)
  5828  0008' C00F' F018'        	movff	(c:strncmp@_r+1),(c:strncmp@r+1)
  5829  000C' C010' F019'        
  5830                           	line	6
  5831                           	decf	((c:strncmp@n)),c
  5832  0010' 0611'              	btfss	status,0
  5833  0012' A0D8               	decf	((c:strncmp@n+1)),c
  5834  0014' 0612'              		incf	((c:strncmp@n)),c,w
  5835  0016' 2811'              	bnz	u7971
  5836  0018' E106               	incf	((c:strncmp@n+1)),c,w
  5837  001A' 2812'              	btfss	status,2
  5838  001C' A4D8               	goto	u7971
  5839  001E' EF00' F000'        	goto	u7970
  5840  0022' EF00' F000'        
  5841                           u7971:
  5842  0026'                    	goto	l5579
  5843  0026' EF00' F000'        u7970:
  5844  002A'                    	
  5845                           l5573:
  5846  002A'                    	movlw	high(0)
  5847  002A' 0E00               	movwf	((c:?_strncmp+1)),c
  5848  002C' 6E0E'              	movlw	low(0)
  5849  002E' 0E00               	movwf	((c:?_strncmp)),c
  5850  0030' 6E0D'              	goto	l1178
  5851  0032' EF00' F000'        	
  5852                           l5575:
  5853  0036'                    	goto	l1178
  5854  0036' EF00' F000'        	
  5855                           l1177:
  5856  003A'                    	line	7
  5857                           	goto	l5579
  5858  003A' EF00' F000'        	
  5859                           l1180:
  5860  003E'                    	
  5861                           l5577:
  5862  003E'                    	infsnz	((c:strncmp@l)),c
  5863  003E' 4A16'              	incf	((c:strncmp@l+1)),c
  5864  0040' 2A17'              	infsnz	((c:strncmp@r)),c
  5865  0042' 4A18'              	incf	((c:strncmp@r+1)),c
  5866  0044' 2A19'              	decf	((c:strncmp@n)),c
  5867  0046' 0611'              	btfss	status,0
  5868  0048' A0D8               	decf	((c:strncmp@n+1)),c
  5869  004A' 0612'              	goto	l5579
  5870  004C' EF00' F000'        	
  5871                           l1179:
  5872  0050'                    	
  5873                           l5579:
  5874  0050'                    	movff	(c:strncmp@l),tblptrl
  5875  0050' C016' FFF6         	movff	(c:strncmp@l+1),tblptrh
  5876  0054' C017' FFF7         	clrf	tblptru
  5877  0058' 6AF8               	
  5878                           	movlw	high __ramtop-1
  5879  005A' 0EFF'              	cpfsgt	tblptrh
  5880  005C' 64F7               	bra	u7987
  5881  005E' D003               	tblrd	*
  5882  0060' 0008               	
  5883                           	movf	tablat,w
  5884  0062' 50F5               	bra	u7980
  5885  0064' D005               u7987:
  5886  0066'                    	movff	tblptrl,fsr0l
  5887  0066' CFF6 FFE9          	movff	tblptrh,fsr0h
  5888  006A' CFF7 FFEA          	movf	indf0,w
  5889  006E' 50EF               u7980:
  5890  0070'                    	iorlw	0
  5891  0070' 0900               	btfsc	status,2
  5892  0072' B4D8               	goto	u7991
  5893  0074' EF00' F000'        	goto	u7990
  5894  0078' EF00' F000'        u7991:
  5895  007C'                    	goto	l5587
  5896  007C' EF00' F000'        u7990:
  5897  0080'                    	
  5898                           l5581:
  5899  0080'                    	movff	(c:strncmp@r),tblptrl
  5900  0080' C018' FFF6         	movff	(c:strncmp@r+1),tblptrh
  5901  0084' C019' FFF7         	if	0	;tblptru may be non-zero
  5902  0088'                    	clrf	tblptru
  5904  0088'                    	if	0	;tblptru may be non-zero
  5905  0088'                    	global __mediumconst
  5906                           movlw	low highword(__mediumconst)
  5909  0088'                    	tblrd	*
  5910  0088' 0008               	
  5911                           	movf	tablat,w
  5912  008A' 50F5               	iorlw	0
  5913  008C' 0900               	btfsc	status,2
  5914  008E' B4D8               	goto	u8001
  5915  0090' EF00' F000'        	goto	u8000
  5916  0094' EF00' F000'        u8001:
  5917  0098'                    	goto	l5587
  5918  0098' EF00' F000'        u8000:
  5919  009C'                    	
  5920                           l5583:
  5921  009C'                    	movf	((c:strncmp@n)),c,w
  5922  009C' 5011'              iorwf	((c:strncmp@n+1)),c,w
  5923  009E' 1012'              	btfsc	status,2
  5924  00A0' B4D8               	goto	u8011
  5925  00A2' EF00' F000'        	goto	u8010
  5926  00A6' EF00' F000'        
  5927                           u8011:
  5928  00AA'                    	goto	l5587
  5929  00AA' EF00' F000'        u8010:
  5930  00AE'                    	
  5931                           l5585:
  5932  00AE'                    	movff	(c:strncmp@r),tblptrl
  5933  00AE' C018' FFF6         	movff	(c:strncmp@r+1),tblptrh
  5934  00B2' C019' FFF7         	if	0	;tblptru may be non-zero
  5935  00B6'                    	clrf	tblptru
  5937  00B6'                    	if	0	;tblptru may be non-zero
  5938  00B6'                    	global __mediumconst
  5939                           movlw	low highword(__mediumconst)
  5942  00B6'                    	tblrd	*
  5943  00B6' 0008               	
  5944                           	movff	tablat,??_strncmp+0+0
  5945  00B8' CFF5 F013'         	movff	(c:strncmp@l),tblptrl
  5946  00BC' C016' FFF6         	movff	(c:strncmp@l+1),tblptrh
  5947  00C0' C017' FFF7         	clrf	tblptru
  5948  00C4' 6AF8               	
  5949                           	movlw	high __ramtop-1
  5950  00C6' 0EFF'              	cpfsgt	tblptrh
  5951  00C8' 64F7               	bra	u8027
  5952  00CA' D003               	tblrd	*
  5953  00CC' 0008               	
  5954                           	movf	tablat,w
  5955  00CE' 50F5               	bra	u8025
  5956  00D0' D005               u8027:
  5957  00D2'                    	movff	tblptrl,fsr0l
  5958  00D2' CFF6 FFE9          	movff	tblptrh,fsr0h
  5959  00D6' CFF7 FFEA          	movf	indf0,w
  5960  00DA' 50EF               u8025:
  5961  00DC'                    	xorwf	(??_strncmp+0+0),c,w
  5962  00DC' 1813'              	btfsc	status,2
  5963  00DE' B4D8               	goto	u8021
  5964  00E0' EF00' F000'        	goto	u8020
  5965  00E4' EF00' F000'        u8021:
  5966  00E8'                    	goto	l5577
  5967  00E8' EF00' F000'        u8020:
  5968  00EC'                    	goto	l5587
  5969  00EC' EF00' F000'        	
  5970                           l1182:
  5971  00F0'                    	goto	l5587
  5972  00F0' EF00' F000'        	
  5973                           l1183:
  5974  00F4'                    	line	8
  5975                           	
  5976                           l5587:
  5977  00F4'                    	movff	(c:strncmp@r),tblptrl
  5978  00F4' C018' FFF6         	movff	(c:strncmp@r+1),tblptrh
  5979  00F8' C019' FFF7         	if	0	;tblptru may be non-zero
  5980  00FC'                    	clrf	tblptru
  5982  00FC'                    	if	0	;tblptru may be non-zero
  5983  00FC'                    	global __mediumconst
  5984                           movlw	low highword(__mediumconst)
  5987  00FC'                    	tblrd	*
  5988  00FC' 0008               	
  5989                           	movf	tablat,w
  5990  00FE' 50F5               	movwf	(??_strncmp+0+0)&0ffh,c
  5991  0100' 6E00'              	clrf	(??_strncmp+0+0+1)&0ffh,c
  5992  0102' 6A00'              
  5993                           	comf	(??_strncmp+0+0),c
  5994  0104' 1E13'              	comf	(??_strncmp+0+1),c
  5995  0106' 1E14'              	infsnz	(??_strncmp+0+0),c
  5996  0108' 4A13'              	incf	(??_strncmp+0+1),c
  5997  010A' 2A14'              	movff	(c:strncmp@l),tblptrl
  5998  010C' C016' FFF6         	movff	(c:strncmp@l+1),tblptrh
  5999  0110' C017' FFF7         	clrf	tblptru
  6000  0114' 6AF8               	
  6001                           	movlw	high __ramtop-1
  6002  0116' 0EFF'              	cpfsgt	tblptrh
  6003  0118' 64F7               	bra	u8037
  6004  011A' D003               	tblrd	*
  6005  011C' 0008               	
  6006                           	movf	tablat,w
  6007  011E' 50F5               	bra	u8030
  6008  0120' D005               u8037:
  6009  0122'                    	movff	tblptrl,fsr0l
  6010  0122' CFF6 FFE9          	movff	tblptrh,fsr0h
  6011  0126' CFF7 FFEA          	movf	indf0,w
  6012  012A' 50EF               u8030:
  6013  012C'                    	movwf	(??_strncmp+2+0)&0ffh,c
  6014  012C' 6E00'              	movf	((??_strncmp+2+0)),c,w
  6015  012E' 5015'              	addwf	(??_strncmp+0+0),c,w
  6016  0130' 2413'              	movwf	((c:?_strncmp)),c
  6017  0132' 6E0D'              	movlw	0
  6018  0134' 0E00               	addwfc	(??_strncmp+0+1),c,w
  6019  0136' 2014'              	movwf	1+((c:?_strncmp)),c
  6020  0138' 6E0E'              	goto	l1178
  6021  013A' EF00' F000'        	
  6022                           l5589:
  6023  013E'                    	line	9
  6024                           	
  6025                           l1178:
  6026  013E'                    	return	;funcret
  6027  013E' 0012               	opt stack 0
  6028                           GLOBAL	__end_of_strncmp
  6029                           	__end_of_strncmp:
  6030  0140'                    	signat	_strncmp,12410
  6031                           	global	_efgtoa
  6032                           
  6033 ;; *************** function _efgtoa *****************
  6034 ;; Defined at:
  6035 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  6038 ;;		 -> sprintf@f(6), 
  6039 ;;  f               4   66[COMRAM] PTR struct _IO_FILE
  6040 ;;  c               1   70[COMRAM] unsigned char 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  u               4   52[BANK0 ] unsigned char 
  6043 ;;  g               4   44[BANK0 ] unsigned char 
  6044 ;;  l               4   38[BANK0 ] unsigned char 
  6045 ;;  h               4   34[BANK0 ] unsigned char 
  6046 ;;  ou              4    0[BANK0 ] unsigned char 
  6047 ;;  n               2   50[BANK0 ] int 
  6048 ;;  e               2   48[BANK0 ] int 
  6049 ;;  i               2   42[BANK0 ] int 
  6050 ;;  w               2   31[BANK0 ] int 
  6051 ;;  p               2   28[BANK0 ] int 
  6052 ;;  sign            2   26[BANK0 ] int 
  6053 ;;  d               2   24[BANK0 ] int 
  6054 ;;  ne              2   22[BANK0 ] int 
  6055 ;;  m               2   20[BANK0 ] int 
  6056 ;;  pp              2   18[BANK0 ] int 
  6057 ;;  t               2   16[BANK0 ] int 
  6058 ;;  mode            1   33[BANK0 ] unsigned char 
  6059 ;;  nmode           1   30[BANK0 ] unsigned char 
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  2   64[COMRAM] int 
  6062 ;; Registers used:
  6063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack

  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6069 ;;      Params:         7       0       0       0       0       0       0
  6070 ;;      Locals:         0      56       0       0       0       0       0
  6071 ;;      Temps:          5       0       0       0       0       0       0
  6072 ;;      Totals:        12      56       0       0       0       0       0
  6073 ;;Total ram usage:       68 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; Hardware stack levels required when called:    8
  6076 ;; This function calls:
  6077 ;;		___awdiv
  6078 ;;		___awmod
  6079 ;;		___fladd
  6080 ;;		___fldiv
  6081 ;;		___fleq
  6082 ;;		___flge
  6083 ;;		___flmul
  6084 ;;		___flneg
  6085 ;;		___flsub
  6086 ;;		___fltol
  6087 ;;		___fpclassifyf
  6088 ;;		_floorf
  6089 ;;		_isupper
  6090 ;;		_pad
  6091 ;;		_strcpy
  6092 ;;		_tolower
  6093 ;; This function is called by:
  6094 ;;		_vfpfcnvrt
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           psect	text13,class=CODE,space=0,reloc=2,group=0
  6098                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6099                           	line	319
  6100                           global __ptext13
  6101                           __ptext13:
  6102  0000'                    psect	text13
  6103                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  6104                           	line	319
  6105                           	global	__size_of_efgtoa
  6106                           	__size_of_efgtoa	equ	__end_of_efgtoa-_efgtoa
  6107  0000                     	
  6108                           _efgtoa:
  6109  0000'                    ;incstack = 0
  6110                           	opt	stack 18
  6111                           	line	326
  6112                           	
  6113                           l5273:
  6114  0000'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 319: static
                                  int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\s
                                 ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
                                 xc8\v2.00\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
                                 t, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 323:  
                                    long double g, h, l, ou, u;
  6115                           	movlw	high(0)
  6116  0000' 0E00               	movlb	0	; () banked
  6117  0002' 0100               	movwf	((efgtoa@sign+1))&0ffh
  6118  0004' 6F00'              	movlw	low(0)
  6119  0006' 0E00               	movwf	((efgtoa@sign))&0ffh
  6120  0008' 6F00'              	line	327
  6121                           	
  6122                           l5275:; BSR set to: 0
  6123  000A'                    
  6124                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 327:     g 
                                 = f;
  6125                           	movff	(c:efgtoa@f),(efgtoa@g)
  6126  000A' C042' F02C'        	movff	(c:efgtoa@f+1),(efgtoa@g+1)
  6127  000E' C043' F02D'        	movff	(c:efgtoa@f+2),(efgtoa@g+2)
  6128  0012' C044' F02E'        	movff	(c:efgtoa@f+3),(efgtoa@g+3)
  6129  0016' C045' F02F'        	line	328
  6130                           	
  6131                           l5277:; BSR set to: 0
  6132  001A'                    
  6133                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 328:     if
                                  (g < 0.0) {
  6134                           	btfsc	((efgtoa@g+3))&0ffh,7
  6135  001A' BF00'              	goto	u7450
  6136  001C' EF00' F000'        	goto	u7451
  6137  0020' EF00' F000'        
  6138                           u7451:
  6139  0024'                    	goto	l5283
  6140  0024' EF00' F000'        u7450:
  6141  0028'                    	line	329
  6142                           	
  6143                           l5279:; BSR set to: 0
  6144  0028'                    
  6145                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 329:       
                                   sign = 1;
  6146                           	movlw	high(01h)
  6147  0028' 0E00               	movwf	((efgtoa@sign+1))&0ffh
  6148  002A' 6F00'              	movlw	low(01h)
  6149  002C' 0E01               	movwf	((efgtoa@sign))&0ffh
  6150  002E' 6F00'              	line	330
  6151                           	
  6152                           l5281:; BSR set to: 0
  6153  0030'                    
  6154                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 330:       
                                   g = -g;
  6155                           	movff	(efgtoa@g),(c:___flneg@f1)
  6156  0030' C02C' F00D'        	movff	(efgtoa@g+1),(c:___flneg@f1+1)
  6157  0034' C02D' F00E'        	movff	(efgtoa@g+2),(c:___flneg@f1+2)
  6158  0038' C02E' F00F'        	movff	(efgtoa@g+3),(c:___flneg@f1+3)
  6159  003C' C02F' F010'        	call	___flneg	;wreg free
  6160  0040' EC00' F000'        	movff	0+?___flneg,(efgtoa@g)
  6161  0044' C00D' F02C'        	movff	1+?___flneg,(efgtoa@g+1)
  6162  0048' C00E' F02D'        	movff	2+?___flneg,(efgtoa@g+2)
  6163  004C' C00F' F02E'        	movff	3+?___flneg,(efgtoa@g+3)
  6164  0050' C010' F02F'        	
  6165                           	goto	l5283
  6166  0054' EF00' F000'        	line	331
  6167                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 331:     }

  6168                           	
  6169                           l257:
  6170  0058'                    	line	334
  6171                           	
  6172                           l5283:
  6173  0058'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 334:     n 
                                 = 0;
  6174                           	movlw	high(0)
  6175  0058' 0E00               	movlb	0	; () banked
  6176  005A' 0100               	movwf	((efgtoa@n+1))&0ffh
  6177  005C' 6F00'              	movlw	low(0)
  6178  005E' 0E00               	movwf	((efgtoa@n))&0ffh
  6179  0060' 6F00'              	line	335
  6180                           	
  6181                           l5285:; BSR set to: 0
  6182  0062'                    
  6183                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 335:     w 
                                 = width;
  6184                           	movff	(c:_width),(efgtoa@w)
  6185  0062' C00C' F01F'        	movff	(c:_width+1),(efgtoa@w+1)
  6186  0066' C00D' F020'        	line	336
  6187                           	
  6188                           l5287:; BSR set to: 0
  6189  006A'                    
  6190                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 336:     if
                                  (sign || (flags & (1 << 2))) {
  6191                           	movf	((efgtoa@sign))&0ffh,w
  6192  006A' 5100'              iorwf	((efgtoa@sign+1))&0ffh,w
  6193  006C' 1100'              	btfss	status,2
  6194  006E' A4D8               	goto	u7461
  6195  0070' EF00' F000'        	goto	u7460
  6196  0074' EF00' F000'        
  6197                           u7461:
  6198  0078'                    	goto	l5291
  6199  0078' EF00' F000'        u7460:
  6200  007C'                    	
  6201                           l5289:; BSR set to: 0
  6202  007C'                    
  6203                           	
  6204                           	btfss	((c:_flags)),c,(2)&7
  6205  007C' A410'              	goto	u7471
  6206  007E' EF00' F000'        	goto	u7470
  6207  0082' EF00' F000'        u7471:
  6208  0086'                    	goto	l5303
  6209  0086' EF00' F000'        u7470:
  6210  008A'                    	goto	l5291
  6211  008A' EF00' F000'        	
  6212                           l260:; BSR set to: 0
  6213  008E'                    
  6214                           	line	337
  6215                           	
  6216                           l5291:; BSR set to: 0
  6217  008E'                    
  6218                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 337:       
                                   dbuf[n] = sign ? '-' : '+';
  6219                           	movf	((efgtoa@sign))&0ffh,w
  6220  008E' 5100'              iorwf	((efgtoa@sign+1))&0ffh,w
  6221  0090' 1100'              	btfss	status,2
  6222  0092' A4D8               	goto	u7481
  6223  0094' EF00' F000'        	goto	u7480
  6224  0098' EF00' F000'        
  6225                           u7481:
  6226  009C'                    	goto	l5295
  6227  009C' EF00' F000'        u7480:
  6228  00A0'                    	
  6229                           l5293:; BSR set to: 0
  6230  00A0'                    
  6231                           	movlw	high(02Bh)
  6232  00A0' 0E00               	movwf	((_efgtoa$964+1))&0ffh
  6233  00A2' 6F00'              	movlw	low(02Bh)
  6234  00A4' 0E2B               	movwf	((_efgtoa$964))&0ffh
  6235  00A6' 6F00'              	goto	l5297
  6236  00A8' EF00' F000'        	
  6237                           l262:; BSR set to: 0
  6238  00AC'                    
  6239                           	
  6240                           l5295:; BSR set to: 0
  6241  00AC'                    
  6242                           	movlw	high(02Dh)
  6243  00AC' 0E00               	movwf	((_efgtoa$964+1))&0ffh
  6244  00AE' 6F00'              	movlw	low(02Dh)
  6245  00B0' 0E2D               	movwf	((_efgtoa$964))&0ffh
  6246  00B2' 6F00'              	goto	l5297
  6247  00B4' EF00' F000'        	
  6248                           l264:; BSR set to: 0
  6249  00B8'                    
  6250                           	
  6251                           l5297:; BSR set to: 0
  6252  00B8'                    
  6253                           	movlw	low(_dbuf)
  6254  00B8' 0E00'              	addwf	((efgtoa@n))&0ffh,w
  6255  00BA' 2500'              	movwf	c:fsr2l
  6256  00BC' 6ED9               	movlw	high(_dbuf)
  6257  00BE' 0E00'              	addwfc	((efgtoa@n+1))&0ffh,w
  6258  00C0' 2100'              	movwf	1+c:fsr2l
  6259  00C2' 6EDA               	movff	(_efgtoa$964),indf2
  6260  00C4' C004' FFDF         
  6261                           	line	338
  6262                           	
  6263                           l5299:; BSR set to: 0
  6264  00C8'                    
  6265                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 338:       
                                   ++n;
  6266                           	infsnz	((efgtoa@n))&0ffh
  6267  00C8' 4B00'              	incf	((efgtoa@n+1))&0ffh
  6268  00CA' 2B00'              	line	339
  6269                           	
  6270                           l5301:; BSR set to: 0
  6271  00CC'                    
  6272                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 339:       
                                   --w;
  6273                           	decf	((efgtoa@w))&0ffh
  6274  00CC' 0700'              	btfss	status,0
  6275  00CE' A0D8               	decf	((efgtoa@w+1))&0ffh
  6276  00D0' 0700'              	goto	l5303
  6277  00D2' EF00' F000'        	line	340
  6278                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 340:     }

  6279                           	
  6280                           l258:; BSR set to: 0
  6281  00D6'                    
  6282                           	line	343
  6283                           	
  6284                           l5303:; BSR set to: 0
  6285  00D6'                    
  6286                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 344:       
                                   if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6287                           	movff	(efgtoa@g),(c:___fpclassifyf@x)
  6288  00D6' C02C' F00D'        	movff	(efgtoa@g+1),(c:___fpclassifyf@x+1)
  6289  00DA' C02D' F00E'        	movff	(efgtoa@g+2),(c:___fpclassifyf@x+2)
  6290  00DE' C02E' F00F'        	movff	(efgtoa@g+3),(c:___fpclassifyf@x+3)
  6291  00E2' C02F' F010'        	call	___fpclassifyf	;wreg free
  6292  00E6' EC00' F000'        		decf	(0+?___fpclassifyf),c,w
  6293  00EA' 040D'              iorwf	(1+?___fpclassifyf),c,w
  6294  00EC' 100E'              	btfss	status,2
  6295  00EE' A4D8               	goto	u7491
  6296  00F0' EF00' F000'        	goto	u7490
  6297  00F4' EF00' F000'        
  6298                           u7491:
  6299  00F8'                    	goto	l5321
  6300  00F8' EF00' F000'        u7490:
  6301  00FC'                    	line	344
  6302                           	
  6303                           l5305:
  6304  00FC'                    	movlw	low(0FFBFh)
  6305  00FC' 0EBF               	movwf	(??_efgtoa+0+0)&0ffh,c
  6306  00FE' 6E00'              	movlw	high(0FFBFh)
  6307  0100' 0EFF               	movwf	1+(??_efgtoa+0+0)&0ffh,c
  6308  0102' 6E00'              	movf	((c:efgtoa@c)),c,w
  6309  0104' 5046'              	movwf	(??_efgtoa+2+0)&0ffh,c
  6310  0106' 6E00'              	clrf	(??_efgtoa+2+0+1)&0ffh,c
  6311  0108' 6A00'              
  6312                           	movf	(??_efgtoa+0+0),c,w
  6313  010A' 5047'              	addwf	(??_efgtoa+2+0),c
  6314  010C' 2649'              	movf	(??_efgtoa+0+1),c,w
  6315  010E' 5048'              	addwfc	(??_efgtoa+2+1),c
  6316  0110' 224A'              		movf	(??_efgtoa+2+1),c,w
  6317  0112' 504A'              	bnz	u7500
  6318  0114' E10A               	movlw	26
  6319  0116' 0E1A               	subwf	 (??_efgtoa+2+0),c,w
  6320  0118' 5C49'              	btfss	status,0
  6321  011A' A0D8               	goto	u7501
  6322  011C' EF00' F000'        	goto	u7500
  6323  0120' EF00' F000'        
  6324                           u7501:
  6325  0124'                    	movlw	1
  6326  0124' 0E01               	goto	u7510
  6327  0126' EF00' F000'        u7500:
  6328  012A'                    	movlw	0
  6329  012A' 0E00               u7510:
  6330  012C'                    	movlb	0	; () banked
  6331  012C' 0100               	movwf	((_efgtoa$965))&0ffh
  6332  012E' 6F00'              	clrf	((_efgtoa$965+1))&0ffh
  6333  0130' 6B00'              	goto	l5309
  6334  0132' EF00' F000'        	
  6335                           l268:; BSR set to: 0
  6336  0136'                    
  6337                           	
  6338                           l5307:; BSR set to: 0
  6339  0136'                    
  6340                           	movff	(c:efgtoa@c),(c:isupper@c)
  6341  0136' C046' F00D'        	clrf	((c:isupper@c+1)),c
  6342  013A' 6A0E'              	call	_isupper	;wreg free
  6343  013C' EC00' F000'        	movff	0+?_isupper,(_efgtoa$965)
  6344  0140' C00D' F006'        	movff	1+?_isupper,(_efgtoa$965+1)
  6345  0144' C00E' F007'        	goto	l5309
  6346  0148' EF00' F000'        	
  6347                           l270:
  6348  014C'                    	
  6349                           l5309:
  6350  014C'                    	movlb	0	; () banked
  6351  014C' 0100               	movf	((_efgtoa$965))&0ffh,w
  6352  014E' 5100'              iorwf	((_efgtoa$965+1))&0ffh,w
  6353  0150' 1100'              	btfsc	status,2
  6354  0152' B4D8               	goto	u7521
  6355  0154' EF00' F000'        	goto	u7520
  6356  0158' EF00' F000'        
  6357                           u7521:
  6358  015C'                    	goto	l5313
  6359  015C' EF00' F000'        u7520:
  6360  0160'                    	line	345
  6361                           	
  6362                           l5311:; BSR set to: 0
  6363  0160'                    
  6364                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 345:       
                                       strcpy(&dbuf[n], "INF");
  6365                           	movlw	low(_dbuf)
  6366  0160' 0E00'              	addwf	((efgtoa@n))&0ffh,w
  6367  0162' 2500'              	movwf	((c:strcpy@dest)),c
  6368  0164' 6E13'              	movlw	high(_dbuf)
  6369  0166' 0E00'              	addwfc	((efgtoa@n+1))&0ffh,w
  6370  0168' 2100'              	movwf	1+((c:strcpy@dest)),c
  6371  016A' 6E14'              		movlw	low(STR_18)
  6372  016C' 0E00'              	movwf	((c:strcpy@src)),c
  6373  016E' 6E15'              	movlw	high(STR_18)
  6374  0170' 0E00'              	movwf	((c:strcpy@src+1)),c
  6375  0172' 6E16'              
  6376                           	call	_strcpy	;wreg free
  6377  0174' EC00' F000'        	line	346
  6378                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 346:       
                                   } else {
  6379                           	goto	l5315
  6380  0178' EF00' F000'        	
  6381                           l266:
  6382  017C'                    	line	347
  6383                           	
  6384                           l5313:
  6385  017C'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 347:       
                                       strcpy(&dbuf[n], "inf");
  6386                           	movlw	low(_dbuf)
  6387  017C' 0E00'              	movlb	0	; () banked
  6388  017E' 0100               	addwf	((efgtoa@n))&0ffh,w
  6389  0180' 2500'              	movwf	((c:strcpy@dest)),c
  6390  0182' 6E13'              	movlw	high(_dbuf)
  6391  0184' 0E00'              	addwfc	((efgtoa@n+1))&0ffh,w
  6392  0186' 2100'              	movwf	1+((c:strcpy@dest)),c
  6393  0188' 6E14'              		movlw	low(STR_19)
  6394  018A' 0E00'              	movwf	((c:strcpy@src)),c
  6395  018C' 6E15'              	movlw	high(STR_19)
  6396  018E' 0E00'              	movwf	((c:strcpy@src+1)),c
  6397  0190' 6E16'              
  6398                           	call	_strcpy	;wreg free
  6399  0192' EC00' F000'        	goto	l5315
  6400  0196' EF00' F000'        	line	348
  6401                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 348:       
                                   }
  6402                           	
  6403                           l271:
  6404  019A'                    	line	349
  6405                           	
  6406                           l5315:
  6407  019A'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 349:       
                                   w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  6408                           	movlb	0	; () banked
  6409  019A' 0100               	movlw	low(-3)
  6410  019C' 0EFD               	addwf	((efgtoa@w))&0ffh
  6411  019E' 2700'              	movlw	high(-3)
  6412  01A0' 0EFF               	addwfc	((efgtoa@w+1))&0ffh
  6413  01A2' 2300'              	line	350
  6414                           	
  6415                           l5317:; BSR set to: 0
  6416  01A4'                    
  6417                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 350:       
                                   return pad(fp, &dbuf[0], w);
  6418                           		movff	(c:efgtoa@fp),(c:pad@fp)
  6419  01A4' C040' F01D'        	movff	(c:efgtoa@fp+1),(c:pad@fp+1)
  6420  01A8' C041' F01E'        
  6421                           		movlw	low(_dbuf)
  6422  01AC' 0E00'              	movwf	((c:pad@buf)),c
  6423  01AE' 6E1F'              	movlw	high(_dbuf)
  6424  01B0' 0E00'              	movwf	((c:pad@buf+1)),c
  6425  01B2' 6E20'              
  6426                           	movff	(efgtoa@w),(c:pad@p)
  6427  01B4' C01F' F021'        	movff	(efgtoa@w+1),(c:pad@p+1)
  6428  01B8' C020' F022'        	call	_pad	;wreg free
  6429  01BC' EC00' F000'        	movff	0+?_pad,(c:?_efgtoa)
  6430  01C0' C01D' F040'        	movff	1+?_pad,(c:?_efgtoa+1)
  6431  01C4' C01E' F041'        	goto	l272
  6432  01C8' EF00' F000'        	
  6433                           l5319:
  6434  01CC'                    	goto	l272
  6435  01CC' EF00' F000'        	line	351
  6436                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 351:     }

  6437                           	
  6438                           l265:
  6439  01D0'                    	line	352
  6440                           	
  6441                           l5321:
  6442  01D0'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 353:       
                                   if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6443                           	movff	(efgtoa@g),(c:___fpclassifyf@x)
  6444  01D0' C02C' F00D'        	movff	(efgtoa@g+1),(c:___fpclassifyf@x+1)
  6445  01D4' C02D' F00E'        	movff	(efgtoa@g+2),(c:___fpclassifyf@x+2)
  6446  01D8' C02E' F00F'        	movff	(efgtoa@g+3),(c:___fpclassifyf@x+3)
  6447  01DC' C02F' F010'        	call	___fpclassifyf	;wreg free
  6448  01E0' EC00' F000'        	movf	(0+?___fpclassifyf),c,w
  6449  01E4' 500D'              iorwf	(1+?___fpclassifyf),c,w
  6450  01E6' 100E'              	btfss	status,2
  6451  01E8' A4D8               	goto	u7531
  6452  01EA' EF00' F000'        	goto	u7530
  6453  01EE' EF00' F000'        
  6454                           u7531:
  6455  01F2'                    	goto	l5339
  6456  01F2' EF00' F000'        u7530:
  6457  01F6'                    	line	353
  6458                           	
  6459                           l5323:
  6460  01F6'                    	movlw	low(0FFBFh)
  6461  01F6' 0EBF               	movwf	(??_efgtoa+0+0)&0ffh,c
  6462  01F8' 6E00'              	movlw	high(0FFBFh)
  6463  01FA' 0EFF               	movwf	1+(??_efgtoa+0+0)&0ffh,c
  6464  01FC' 6E00'              	movf	((c:efgtoa@c)),c,w
  6465  01FE' 5046'              	movwf	(??_efgtoa+2+0)&0ffh,c
  6466  0200' 6E00'              	clrf	(??_efgtoa+2+0+1)&0ffh,c
  6467  0202' 6A00'              
  6468                           	movf	(??_efgtoa+0+0),c,w
  6469  0204' 5047'              	addwf	(??_efgtoa+2+0),c
  6470  0206' 2649'              	movf	(??_efgtoa+0+1),c,w
  6471  0208' 5048'              	addwfc	(??_efgtoa+2+1),c
  6472  020A' 224A'              		movf	(??_efgtoa+2+1),c,w
  6473  020C' 504A'              	bnz	u7540
  6474  020E' E10A               	movlw	26
  6475  0210' 0E1A               	subwf	 (??_efgtoa+2+0),c,w
  6476  0212' 5C49'              	btfss	status,0
  6477  0214' A0D8               	goto	u7541
  6478  0216' EF00' F000'        	goto	u7540
  6479  021A' EF00' F000'        
  6480                           u7541:
  6481  021E'                    	movlw	1
  6482  021E' 0E01               	goto	u7550
  6483  0220' EF00' F000'        u7540:
  6484  0224'                    	movlw	0
  6485  0224' 0E00               u7550:
  6486  0226'                    	movlb	0	; () banked
  6487  0226' 0100               	movwf	((_efgtoa$970))&0ffh
  6488  0228' 6F00'              	clrf	((_efgtoa$970+1))&0ffh
  6489  022A' 6B00'              	goto	l5327
  6490  022C' EF00' F000'        	
  6491                           l276:; BSR set to: 0
  6492  0230'                    
  6493                           	
  6494                           l5325:; BSR set to: 0
  6495  0230'                    
  6496                           	movff	(c:efgtoa@c),(c:isupper@c)
  6497  0230' C046' F00D'        	clrf	((c:isupper@c+1)),c
  6498  0234' 6A0E'              	call	_isupper	;wreg free
  6499  0236' EC00' F000'        	movff	0+?_isupper,(_efgtoa$970)
  6500  023A' C00D' F008'        	movff	1+?_isupper,(_efgtoa$970+1)
  6501  023E' C00E' F009'        	goto	l5327
  6502  0242' EF00' F000'        	
  6503                           l278:
  6504  0246'                    	
  6505                           l5327:
  6506  0246'                    	movlb	0	; () banked
  6507  0246' 0100               	movf	((_efgtoa$970))&0ffh,w
  6508  0248' 5100'              iorwf	((_efgtoa$970+1))&0ffh,w
  6509  024A' 1100'              	btfsc	status,2
  6510  024C' B4D8               	goto	u7561
  6511  024E' EF00' F000'        	goto	u7560
  6512  0252' EF00' F000'        
  6513                           u7561:
  6514  0256'                    	goto	l5331
  6515  0256' EF00' F000'        u7560:
  6516  025A'                    	line	354
  6517                           	
  6518                           l5329:; BSR set to: 0
  6519  025A'                    
  6520                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 354:       
                                       strcpy(&dbuf[n], "NAN");
  6521                           	movlw	low(_dbuf)
  6522  025A' 0E00'              	addwf	((efgtoa@n))&0ffh,w
  6523  025C' 2500'              	movwf	((c:strcpy@dest)),c
  6524  025E' 6E13'              	movlw	high(_dbuf)
  6525  0260' 0E00'              	addwfc	((efgtoa@n+1))&0ffh,w
  6526  0262' 2100'              	movwf	1+((c:strcpy@dest)),c
  6527  0264' 6E14'              		movlw	low(STR_22)
  6528  0266' 0E00'              	movwf	((c:strcpy@src)),c
  6529  0268' 6E15'              	movlw	high(STR_22)
  6530  026A' 0E00'              	movwf	((c:strcpy@src+1)),c
  6531  026C' 6E16'              
  6532                           	call	_strcpy	;wreg free
  6533  026E' EC00' F000'        	line	355
  6534                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 355:       
                                   } else {
  6535                           	goto	l5333
  6536  0272' EF00' F000'        	
  6537                           l274:
  6538  0276'                    	line	356
  6539                           	
  6540                           l5331:
  6541  0276'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 356:       
                                       strcpy(&dbuf[n], "nan");
  6542                           	movlw	low(_dbuf)
  6543  0276' 0E00'              	movlb	0	; () banked
  6544  0278' 0100               	addwf	((efgtoa@n))&0ffh,w
  6545  027A' 2500'              	movwf	((c:strcpy@dest)),c
  6546  027C' 6E13'              	movlw	high(_dbuf)
  6547  027E' 0E00'              	addwfc	((efgtoa@n+1))&0ffh,w
  6548  0280' 2100'              	movwf	1+((c:strcpy@dest)),c
  6549  0282' 6E14'              		movlw	low(STR_23)
  6550  0284' 0E00'              	movwf	((c:strcpy@src)),c
  6551  0286' 6E15'              	movlw	high(STR_23)
  6552  0288' 0E00'              	movwf	((c:strcpy@src+1)),c
  6553  028A' 6E16'              
  6554                           	call	_strcpy	;wreg free
  6555  028C' EC00' F000'        	goto	l5333
  6556  0290' EF00' F000'        	line	357
  6557                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 357:       
                                   }
  6558                           	
  6559                           l279:
  6560  0294'                    	line	358
  6561                           	
  6562                           l5333:
  6563  0294'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 358:       
                                   w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  6564                           	movlb	0	; () banked
  6565  0294' 0100               	movlw	low(-3)
  6566  0296' 0EFD               	addwf	((efgtoa@w))&0ffh
  6567  0298' 2700'              	movlw	high(-3)
  6568  029A' 0EFF               	addwfc	((efgtoa@w+1))&0ffh
  6569  029C' 2300'              	line	359
  6570                           	
  6571                           l5335:; BSR set to: 0
  6572  029E'                    
  6573                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 359:       
                                   return pad(fp, &dbuf[0], w);
  6574                           		movff	(c:efgtoa@fp),(c:pad@fp)
  6575  029E' C040' F01D'        	movff	(c:efgtoa@fp+1),(c:pad@fp+1)
  6576  02A2' C041' F01E'        
  6577                           		movlw	low(_dbuf)
  6578  02A6' 0E00'              	movwf	((c:pad@buf)),c
  6579  02A8' 6E1F'              	movlw	high(_dbuf)
  6580  02AA' 0E00'              	movwf	((c:pad@buf+1)),c
  6581  02AC' 6E20'              
  6582                           	movff	(efgtoa@w),(c:pad@p)
  6583  02AE' C01F' F021'        	movff	(efgtoa@w+1),(c:pad@p+1)
  6584  02B2' C020' F022'        	call	_pad	;wreg free
  6585  02B6' EC00' F000'        	movff	0+?_pad,(c:?_efgtoa)
  6586  02BA' C01D' F040'        	movff	1+?_pad,(c:?_efgtoa+1)
  6587  02BE' C01E' F041'        	goto	l272
  6588  02C2' EF00' F000'        	
  6589                           l5337:
  6590  02C6'                    	goto	l272
  6591  02C6' EF00' F000'        	line	360
  6592                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 360:     }

  6593                           	
  6594                           l273:
  6595  02CA'                    	line	363
  6596                           	
  6597                           l5339:
  6598  02CA'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 363:     u 
                                 = 1.0;
  6599                           	movlw	low(normalize32(0x3f800000))
  6600  02CA' 0E00               	movlb	0	; () banked
  6601  02CC' 0100               	movwf	((efgtoa@u))&0ffh
  6602  02CE' 6F00'              	movlw	high(normalize32(0x3f800000))
  6603  02D0' 0E00               	movwf	((efgtoa@u+1))&0ffh
  6604  02D2' 6F00'              	movlw	low highword(normalize32(0x3f800000))
  6605  02D4' 0E80               	movwf	((efgtoa@u+2))&0ffh
  6606  02D6' 6F00'              	movlw	high highword(normalize32(0x3f800000))
  6607  02D8' 0E3F               	movwf	((efgtoa@u+3))&0ffh
  6608  02DA' 6F00'              	line	364
  6609                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 364:     e 
                                 = 0;
  6610                           	movlw	high(0)
  6611  02DC' 0E00               	movwf	((efgtoa@e+1))&0ffh
  6612  02DE' 6F00'              	movlw	low(0)
  6613  02E0' 0E00               	movwf	((efgtoa@e))&0ffh
  6614  02E2' 6F00'              	line	365
  6615                           	
  6616                           l5341:; BSR set to: 0
  6617  02E4'                    
  6618                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 365:     if
                                  (!(g == 0.0)) {
  6619                           	movff	(efgtoa@g),(c:___fleq@ff1)
  6620  02E4' C02C' F00D'        	movff	(efgtoa@g+1),(c:___fleq@ff1+1)
  6621  02E8' C02D' F00E'        	movff	(efgtoa@g+2),(c:___fleq@ff1+2)
  6622  02EC' C02E' F00F'        	movff	(efgtoa@g+3),(c:___fleq@ff1+3)
  6623  02F0' C02F' F010'        	movlw	low(normalize32(0x0))
  6624  02F4' 0E00               	movwf	((c:___fleq@ff2)),c
  6625  02F6' 6E11'              	movlw	high(normalize32(0x0))
  6626  02F8' 0E00               	movwf	((c:___fleq@ff2+1)),c
  6627  02FA' 6E12'              	movlw	low highword(normalize32(0x0))
  6628  02FC' 0E00               	movwf	((c:___fleq@ff2+2)),c
  6629  02FE' 6E13'              	movlw	high highword(normalize32(0x0))
  6630  0300' 0E00               	movwf	((c:___fleq@ff2+3)),c
  6631  0302' 6E14'              	call	___fleq	;wreg free
  6632  0304' EC00' F000'        	btfsc	status,0
  6633  0308' B0D8               	goto	u7571
  6634  030A' EF00' F000'        	goto	u7570
  6635  030E' EF00' F000'        u7571:
  6636  0312'                    	goto	l5357
  6637  0312' EF00' F000'        u7570:
  6638  0316'                    	goto	l5349
  6639  0316' EF00' F000'        	line	366
  6640                           	
  6641                           l5343:
  6642  031A'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 366:       
                                   while (!(g < (u*10.0))) {
  6643                           	goto	l5349
  6644  031A' EF00' F000'        	
  6645                           l282:
  6646  031E'                    	line	367
  6647                           	
  6648                           l5345:
  6649  031E'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 367:       
                                       u = u*10.0;
  6650                           	movff	(efgtoa@u),(c:___flmul@b)
  6651  031E' C034' F01B'        	movff	(efgtoa@u+1),(c:___flmul@b+1)
  6652  0322' C035' F01C'        	movff	(efgtoa@u+2),(c:___flmul@b+2)
  6653  0326' C036' F01D'        	movff	(efgtoa@u+3),(c:___flmul@b+3)
  6654  032A' C037' F01E'        	movlw	low(normalize32(0x41200000))
  6655  032E' 0E00               	movwf	((c:___flmul@a)),c
  6656  0330' 6E1F'              	movlw	high(normalize32(0x41200000))
  6657  0332' 0E00               	movwf	((c:___flmul@a+1)),c
  6658  0334' 6E20'              	movlw	low highword(normalize32(0x41200000))
  6659  0336' 0E20               	movwf	((c:___flmul@a+2)),c
  6660  0338' 6E21'              	movlw	high highword(normalize32(0x41200000))
  6661  033A' 0E41               	movwf	((c:___flmul@a+3)),c
  6662  033C' 6E22'              	call	___flmul	;wreg free
  6663  033E' EC00' F000'        	movff	0+?___flmul,(efgtoa@u)
  6664  0342' C01B' F034'        	movff	1+?___flmul,(efgtoa@u+1)
  6665  0346' C01C' F035'        	movff	2+?___flmul,(efgtoa@u+2)
  6666  034A' C01D' F036'        	movff	3+?___flmul,(efgtoa@u+3)
  6667  034E' C01E' F037'        	
  6668                           	line	368
  6669                           	
  6670                           l5347:
  6671  0352'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 368:       
                                       ++e;
  6672                           	movlb	0	; () banked
  6673  0352' 0100               	infsnz	((efgtoa@e))&0ffh
  6674  0354' 4B00'              	incf	((efgtoa@e+1))&0ffh
  6675  0356' 2B00'              	goto	l5349
  6676  0358' EF00' F000'        	line	369
  6677                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 369:       
                                   }
  6678                           	
  6679                           l281:; BSR set to: 0
  6680  035C'                    
  6681                           	line	366
  6682                           	
  6683                           l5349:
  6684  035C'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 366:       
                                   while (!(g < (u*10.0))) {
  6685                           	movff	(efgtoa@g),(c:___flge@ff1)
  6686  035C' C02C' F034'        	movff	(efgtoa@g+1),(c:___flge@ff1+1)
  6687  0360' C02D' F035'        	movff	(efgtoa@g+2),(c:___flge@ff1+2)
  6688  0364' C02E' F036'        	movff	(efgtoa@g+3),(c:___flge@ff1+3)
  6689  0368' C02F' F037'        	movlw	low(normalize32(0x41200000))
  6690  036C' 0E00               	movwf	((c:___flmul@a)),c
  6691  036E' 6E1F'              	movlw	high(normalize32(0x41200000))
  6692  0370' 0E00               	movwf	((c:___flmul@a+1)),c
  6693  0372' 6E20'              	movlw	low highword(normalize32(0x41200000))
  6694  0374' 0E20               	movwf	((c:___flmul@a+2)),c
  6695  0376' 6E21'              	movlw	high highword(normalize32(0x41200000))
  6696  0378' 0E41               	movwf	((c:___flmul@a+3)),c
  6697  037A' 6E22'              	movff	(efgtoa@u),(c:___flmul@b)
  6698  037C' C034' F01B'        	movff	(efgtoa@u+1),(c:___flmul@b+1)
  6699  0380' C035' F01C'        	movff	(efgtoa@u+2),(c:___flmul@b+2)
  6700  0384' C036' F01D'        	movff	(efgtoa@u+3),(c:___flmul@b+3)
  6701  0388' C037' F01E'        	call	___flmul	;wreg free
  6702  038C' EC00' F000'        	movff	0+?___flmul,(c:___flge@ff2)
  6703  0390' C01B' F038'        	movff	1+?___flmul,(c:___flge@ff2+1)
  6704  0394' C01C' F039'        	movff	2+?___flmul,(c:___flge@ff2+2)
  6705  0398' C01D' F03A'        	movff	3+?___flmul,(c:___flge@ff2+3)
  6706  039C' C01E' F03B'        	
  6707                           	call	___flge	;wreg free
  6708  03A0' EC00' F000'        	btfsc	status,0
  6709  03A4' B0D8               	goto	u7581
  6710  03A6' EF00' F000'        	goto	u7580
  6711  03AA' EF00' F000'        u7581:
  6712  03AE'                    	goto	l5345
  6713  03AE' EF00' F000'        u7580:
  6714  03B2'                    	goto	l5355
  6715  03B2' EF00' F000'        	
  6716                           l283:
  6717  03B6'                    	line	370
  6718                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 370:       
                                   while (g < u) {
  6719                           	goto	l5355
  6720  03B6' EF00' F000'        	
  6721                           l285:
  6722  03BA'                    	line	371
  6723                           	
  6724                           l5351:
  6725  03BA'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 371:       
                                       u = u/10.0;
  6726                           	movff	(efgtoa@u),(c:___fldiv@b)
  6727  03BA' C034' F00D'        	movff	(efgtoa@u+1),(c:___fldiv@b+1)
  6728  03BE' C035' F00E'        	movff	(efgtoa@u+2),(c:___fldiv@b+2)
  6729  03C2' C036' F00F'        	movff	(efgtoa@u+3),(c:___fldiv@b+3)
  6730  03C6' C037' F010'        	movlw	low(normalize32(0x41200000))
  6731  03CA' 0E00               	movwf	((c:___fldiv@a)),c
  6732  03CC' 6E11'              	movlw	high(normalize32(0x41200000))
  6733  03CE' 0E00               	movwf	((c:___fldiv@a+1)),c
  6734  03D0' 6E12'              	movlw	low highword(normalize32(0x41200000))
  6735  03D2' 0E20               	movwf	((c:___fldiv@a+2)),c
  6736  03D4' 6E13'              	movlw	high highword(normalize32(0x41200000))
  6737  03D6' 0E41               	movwf	((c:___fldiv@a+3)),c
  6738  03D8' 6E14'              	call	___fldiv	;wreg free
  6739  03DA' EC00' F000'        	movff	0+?___fldiv,(efgtoa@u)
  6740  03DE' C00D' F034'        	movff	1+?___fldiv,(efgtoa@u+1)
  6741  03E2' C00E' F035'        	movff	2+?___fldiv,(efgtoa@u+2)
  6742  03E6' C00F' F036'        	movff	3+?___fldiv,(efgtoa@u+3)
  6743  03EA' C010' F037'        	
  6744                           	line	372
  6745                           	
  6746                           l5353:
  6747  03EE'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 372:       
                                       --e;
  6748                           	movlb	0	; () banked
  6749  03EE' 0100               	decf	((efgtoa@e))&0ffh
  6750  03F0' 0700'              	btfss	status,0
  6751  03F2' A0D8               	decf	((efgtoa@e+1))&0ffh
  6752  03F4' 0700'              	goto	l5355
  6753  03F6' EF00' F000'        	line	373
  6754                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 373:       
                                   }
  6755                           	
  6756                           l284:; BSR set to: 0
  6757  03FA'                    
  6758                           	line	370
  6759                           	
  6760                           l5355:
  6761  03FA'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 370:       
                                   while (g < u) {
  6762                           	movff	(efgtoa@g),(c:___flge@ff1)
  6763  03FA' C02C' F034'        	movff	(efgtoa@g+1),(c:___flge@ff1+1)
  6764  03FE' C02D' F035'        	movff	(efgtoa@g+2),(c:___flge@ff1+2)
  6765  0402' C02E' F036'        	movff	(efgtoa@g+3),(c:___flge@ff1+3)
  6766  0406' C02F' F037'        	movff	(efgtoa@u),(c:___flge@ff2)
  6767  040A' C034' F038'        	movff	(efgtoa@u+1),(c:___flge@ff2+1)
  6768  040E' C035' F039'        	movff	(efgtoa@u+2),(c:___flge@ff2+2)
  6769  0412' C036' F03A'        	movff	(efgtoa@u+3),(c:___flge@ff2+3)
  6770  0416' C037' F03B'        	call	___flge	;wreg free
  6771  041A' EC00' F000'        	btfss	status,0
  6772  041E' A0D8               	goto	u7591
  6773  0420' EF00' F000'        	goto	u7590
  6774  0424' EF00' F000'        u7591:
  6775  0428'                    	goto	l5351
  6776  0428' EF00' F000'        u7590:
  6777  042C'                    	goto	l5357
  6778  042C' EF00' F000'        	
  6779                           l286:
  6780  0430'                    	goto	l5357
  6781  0430' EF00' F000'        	line	374
  6782                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 374:     }

  6783                           	
  6784                           l280:
  6785  0434'                    	line	377
  6786                           	
  6787                           l5357:
  6788  0434'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 377:     mo
                                 de = tolower((int)c);
  6789                           	movff	(c:efgtoa@c),(c:tolower@c)
  6790  0434' C046' F013'        	clrf	((c:tolower@c+1)),c
  6791  0438' 6A14'              	call	_tolower	;wreg free
  6792  043A' EC00' F000'        	movf	(0+?_tolower),c,w
  6793  043E' 5013'              	movlb	0	; () banked
  6794  0440' 0100               	movwf	((efgtoa@mode))&0ffh
  6795  0442' 6F00'              	line	378
  6796                           	
  6797                           l5359:; BSR set to: 0
  6798  0444'                    
  6799                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 378:     nm
                                 ode = mode;
  6800                           	movff	(efgtoa@mode),(efgtoa@nmode)
  6801  0444' C021' F01E'        	line	379
  6802                           	
  6803                           l5361:; BSR set to: 0
  6804  0448'                    
  6805                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 379:     if
                                  (mode == 'g') {
  6806                           		movlw	103
  6807  0448' 0E67               	xorwf	((efgtoa@mode))&0ffh,w
  6808  044A' 1900'              	btfss	status,2
  6809  044C' A4D8               	goto	u7601
  6810  044E' EF00' F000'        	goto	u7600
  6811  0452' EF00' F000'        
  6812                           u7601:
  6813  0456'                    	goto	l5371
  6814  0456' EF00' F000'        u7600:
  6815  045A'                    	line	380
  6816                           	
  6817                           l5363:; BSR set to: 0
  6818  045A'                    
  6819                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 380:   if (
                                 prec == 0) {
  6820                           	movf	((c:_prec)),c,w
  6821  045A' 500E'              iorwf	((c:_prec+1)),c,w
  6822  045C' 100F'              	btfss	status,2
  6823  045E' A4D8               	goto	u7611
  6824  0460' EF00' F000'        	goto	u7610
  6825  0464' EF00' F000'        
  6826                           u7611:
  6827  0468'                    	goto	l5367
  6828  0468' EF00' F000'        u7610:
  6829  046C'                    	line	381
  6830                           	
  6831                           l5365:; BSR set to: 0
  6832  046C'                    
  6833                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 381:    pre
                                 c = 1;
  6834                           	movlw	high(01h)
  6835  046C' 0E00               	movwf	((c:_prec+1)),c
  6836  046E' 6E0F'              	movlw	low(01h)
  6837  0470' 0E01               	movwf	((c:_prec)),c
  6838  0472' 6E0E'              	goto	l5367
  6839  0474' EF00' F000'        	line	382
  6840                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 382:   }
  6841                           	
  6842                           l288:; BSR set to: 0
  6843  0478'                    
  6844                           	line	383
  6845                           	
  6846                           l5367:; BSR set to: 0
  6847  0478'                    
  6848                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 383:       
                                   p = (0 < prec) ? prec : 6;
  6849                           	btfsc	((c:_prec+1)),c,7
  6850  0478' BE0F'              	goto	u7620
  6851  047A' EF00' F000'        	movf	((c:_prec+1)),c,w
  6852  047E' 500F'              	bnz	u7621
  6853  0480' E106               	decf	((c:_prec)),c,w
  6854  0482' 040E'              	btfsc	status,0
  6855  0484' B0D8               	goto	u7621
  6856  0486' EF00' F000'        	goto	u7620
  6857  048A' EF00' F000'        
  6858                           u7621:
  6859  048E'                    	goto	l290
  6860  048E' EF00' F000'        u7620:
  6861  0492'                    	
  6862                           l5369:; BSR set to: 0
  6863  0492'                    
  6864                           	movlw	high(06h)
  6865  0492' 0E00               	movwf	((efgtoa@p+1))&0ffh
  6866  0494' 6F00'              	movlw	low(06h)
  6867  0496' 0E06               	movwf	((efgtoa@p))&0ffh
  6868  0498' 6F00'              	goto	l5377
  6869  049A' EF00' F000'        	
  6870                           l290:; BSR set to: 0
  6871  049E'                    
  6872                           	movff	(c:_prec),(efgtoa@p)
  6873  049E' C00E' F01C'        	movff	(c:_prec+1),(efgtoa@p+1)
  6874  04A2' C00F' F01D'        	goto	l5377
  6875  04A6' EF00' F000'        	
  6876                           l292:; BSR set to: 0
  6877  04AA'                    
  6878                           	line	384
  6879                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 384:     } 
                                 else {
  6880                           	goto	l5377
  6881  04AA' EF00' F000'        	
  6882                           l287:; BSR set to: 0
  6883  04AE'                    
  6884                           	line	385
  6885                           	
  6886                           l5371:; BSR set to: 0
  6887  04AE'                    
  6888                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 385:       
                                   p = (prec < 0) ? 6 : prec;
  6889                           	btfsc	((c:_prec+1)),c,7
  6890  04AE' BE0F'              	goto	u7631
  6891  04B0' EF00' F000'        	goto	u7630
  6892  04B4' EF00' F000'        
  6893                           u7631:
  6894  04B8'                    	goto	l5375
  6895  04B8' EF00' F000'        u7630:
  6896  04BC'                    	
  6897                           l5373:; BSR set to: 0
  6898  04BC'                    
  6899                           	movff	(c:_prec),(efgtoa@p)
  6900  04BC' C00E' F01C'        	movff	(c:_prec+1),(efgtoa@p+1)
  6901  04C0' C00F' F01D'        	goto	l5377
  6902  04C4' EF00' F000'        	
  6903                           l295:; BSR set to: 0
  6904  04C8'                    
  6905                           	
  6906                           l5375:; BSR set to: 0
  6907  04C8'                    
  6908                           	movlw	high(06h)
  6909  04C8' 0E00               	movwf	((efgtoa@p+1))&0ffh
  6910  04CA' 6F00'              	movlw	low(06h)
  6911  04CC' 0E06               	movwf	((efgtoa@p))&0ffh
  6912  04CE' 6F00'              	goto	l5377
  6913  04D0' EF00' F000'        	
  6914                           l297:; BSR set to: 0
  6915  04D4'                    
  6916                           	goto	l5377
  6917  04D4' EF00' F000'        	line	386
  6918                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 386:     }

  6919                           	
  6920                           l293:; BSR set to: 0
  6921  04D8'                    
  6922                           	line	389
  6923                           	
  6924                           l5377:; BSR set to: 0
  6925  04D8'                    
  6926                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 389:     if
                                  (mode == 'g') {
  6927                           		movlw	103
  6928  04D8' 0E67               	xorwf	((efgtoa@mode))&0ffh,w
  6929  04DA' 1900'              	btfss	status,2
  6930  04DC' A4D8               	goto	u7641
  6931  04DE' EF00' F000'        	goto	u7640
  6932  04E2' EF00' F000'        
  6933                           u7641:
  6934  04E6'                    	goto	l5387
  6935  04E6' EF00' F000'        u7640:
  6936  04EA'                    	line	390
  6937                           	
  6938                           l5379:; BSR set to: 0
  6939  04EA'                    
  6940                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 390:       
                                   if (!(e < -4) && !((p - 1) < e)) {
  6941                           	btfss	((efgtoa@e+1))&0ffh,7
  6942  04EA' AF00'              	goto	u7650
  6943  04EC' EF00' F000'        	movlw	252
  6944  04F0' 0EFC               	subwf	 ((efgtoa@e))&0ffh,w
  6945  04F2' 5D00'              	movlw	255
  6946  04F4' 0EFF               	subwfb	((efgtoa@e+1))&0ffh,w
  6947  04F6' 5900'              	btfss	status,0
  6948  04F8' A0D8               	goto	u7651
  6949  04FA' EF00' F000'        	goto	u7650
  6950  04FE' EF00' F000'        
  6951                           u7651:
  6952  0502'                    	goto	l5385
  6953  0502' EF00' F000'        u7650:
  6954  0506'                    	
  6955                           l5381:; BSR set to: 0
  6956  0506'                    
  6957                           	movlw	low(-1)
  6958  0506' 0EFF               	movwf	(??_efgtoa+0+0)&0ffh,c
  6959  0508' 6E00'              	movlw	high(-1)
  6960  050A' 0EFF               	movwf	1+(??_efgtoa+0+0)&0ffh,c
  6961  050C' 6E00'              	movff	(efgtoa@p),??_efgtoa+2+0
  6962  050E' C01C' F049'        	movff	(efgtoa@p+1),??_efgtoa+2+0+1
  6963  0512' C01D' F04A'        	movf	(??_efgtoa+0+0),c,w
  6964  0516' 5047'              	addwf	(??_efgtoa+2+0),c
  6965  0518' 2649'              	movf	(??_efgtoa+0+1),c,w
  6966  051A' 5048'              	addwfc	(??_efgtoa+2+1),c
  6967  051C' 224A'              		movf	((efgtoa@e))&0ffh,w
  6968  051E' 5100'              	subwf	(??_efgtoa+2+0),c,w
  6969  0520' 5C49'              	movf	(??_efgtoa+2+1),c,w
  6970  0522' 504A'              	xorlw	80h
  6971  0524' 0A80               	movwf	(??_efgtoa+4+0)&0ffh,c
  6972  0526' 6E00'              	movf	((efgtoa@e+1))&0ffh,w
  6973  0528' 5100'              	xorlw	80h
  6974  052A' 0A80               	subwfb	(??_efgtoa+4+0)&0ffh,c,w
  6975  052C' 5800'              	btfss	status,0
  6976  052E' A0D8               	goto	u7661
  6977  0530' EF00' F000'        	goto	u7660
  6978  0534' EF00' F000'        
  6979                           u7661:
  6980  0538'                    	goto	l5385
  6981  0538' EF00' F000'        u7660:
  6982  053C'                    	line	391
  6983                           	
  6984                           l5383:; BSR set to: 0
  6985  053C'                    
  6986                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 391:       
                                       nmode = 'f';
  6987                           	movlw	low(066h)
  6988  053C' 0E66               	movwf	((efgtoa@nmode))&0ffh
  6989  053E' 6F00'              	line	392
  6990                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 392:       
                                   } else {
  6991                           	goto	l5387
  6992  0540' EF00' F000'        	
  6993                           l299:; BSR set to: 0
  6994  0544'                    
  6995                           	line	393
  6996                           	
  6997                           l5385:; BSR set to: 0
  6998  0544'                    
  6999                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 393:       
                                       nmode = 'e';
  7000                           	movlw	low(065h)
  7001  0544' 0E65               	movwf	((efgtoa@nmode))&0ffh
  7002  0546' 6F00'              	goto	l5387
  7003  0548' EF00' F000'        	line	394
  7004                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 394:       
                                   }
  7005                           	
  7006                           l300:; BSR set to: 0
  7007  054C'                    
  7008                           	goto	l5387
  7009  054C' EF00' F000'        	line	395
  7010                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 395:     }

  7011                           	
  7012                           l298:; BSR set to: 0
  7013  0550'                    
  7014                           	line	398
  7015                           	
  7016                           l5387:; BSR set to: 0
  7017  0550'                    
  7018                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 398:     m 
                                 = p;
  7019                           	movff	(efgtoa@p),(efgtoa@m)
  7020  0550' C01C' F014'        	movff	(efgtoa@p+1),(efgtoa@m+1)
  7021  0554' C01D' F015'        	line	399
  7022                           	
  7023                           l5389:; BSR set to: 0
  7024  0558'                    
  7025                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 399:     if
                                  (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  7026                           		movlw	103
  7027  0558' 0E67               	xorwf	((efgtoa@mode))&0ffh,w
  7028  055A' 1900'              	btfss	status,2
  7029  055C' A4D8               	goto	u7671
  7030  055E' EF00' F000'        	goto	u7670
  7031  0562' EF00' F000'        
  7032                           u7671:
  7033  0566'                    	goto	l5395
  7034  0566' EF00' F000'        u7670:
  7035  056A'                    	
  7036                           l5391:; BSR set to: 0
  7037  056A'                    
  7038                           		movlw	102
  7039  056A' 0E66               	xorwf	((efgtoa@nmode))&0ffh,w
  7040  056C' 1900'              	btfss	status,2
  7041  056E' A4D8               	goto	u7681
  7042  0570' EF00' F000'        	goto	u7680
  7043  0574' EF00' F000'        
  7044                           u7681:
  7045  0578'                    	goto	l5397
  7046  0578' EF00' F000'        u7680:
  7047  057C'                    	
  7048                           l5393:; BSR set to: 0
  7049  057C'                    
  7050                           	btfsc	((efgtoa@e+1))&0ffh,7
  7051  057C' BF00'              	goto	u7690
  7052  057E' EF00' F000'        	goto	u7691
  7053  0582' EF00' F000'        
  7054                           u7691:
  7055  0586'                    	goto	l5397
  7056  0586' EF00' F000'        u7690:
  7057  058A'                    	goto	l5395
  7058  058A' EF00' F000'        	
  7059                           l303:; BSR set to: 0
  7060  058E'                    
  7061                           	line	400
  7062                           	
  7063                           l5395:; BSR set to: 0
  7064  058E'                    
  7065                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 400:       
                                   ++m;
  7066                           	infsnz	((efgtoa@m))&0ffh
  7067  058E' 4B00'              	incf	((efgtoa@m+1))&0ffh
  7068  0590' 2B00'              	goto	l5397
  7069  0592' EF00' F000'        	line	401
  7070                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 401:     }

  7071                           	
  7072                           l301:; BSR set to: 0
  7073  0596'                    
  7074                           	line	404
  7075                           	
  7076                           l5397:; BSR set to: 0
  7077  0596'                    
  7078                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 404:     if
                                  (nmode == 'f') {
  7079                           		movlw	102
  7080  0596' 0E66               	xorwf	((efgtoa@nmode))&0ffh,w
  7081  0598' 1900'              	btfss	status,2
  7082  059A' A4D8               	goto	u7701
  7083  059C' EF00' F000'        	goto	u7700
  7084  05A0' EF00' F000'        
  7085                           u7701:
  7086  05A4'                    	goto	l5407
  7087  05A4' EF00' F000'        u7700:
  7088  05A8'                    	line	405
  7089                           	
  7090                           l5399:; BSR set to: 0
  7091  05A8'                    
  7092                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 405:       
                                   if (e < 0) {
  7093                           	btfsc	((efgtoa@e+1))&0ffh,7
  7094  05A8' BF00'              	goto	u7710
  7095  05AA' EF00' F000'        	goto	u7711
  7096  05AE' EF00' F000'        
  7097                           u7711:
  7098  05B2'                    	goto	l5403
  7099  05B2' EF00' F000'        u7710:
  7100  05B6'                    	line	406
  7101                           	
  7102                           l5401:; BSR set to: 0
  7103  05B6'                    
  7104                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 406:       
                                       u = 1.0;
  7105                           	movlw	low(normalize32(0x3f800000))
  7106  05B6' 0E00               	movwf	((efgtoa@u))&0ffh
  7107  05B8' 6F00'              	movlw	high(normalize32(0x3f800000))
  7108  05BA' 0E00               	movwf	((efgtoa@u+1))&0ffh
  7109  05BC' 6F00'              	movlw	low highword(normalize32(0x3f800000))
  7110  05BE' 0E80               	movwf	((efgtoa@u+2))&0ffh
  7111  05C0' 6F00'              	movlw	high highword(normalize32(0x3f800000))
  7112  05C2' 0E3F               	movwf	((efgtoa@u+3))&0ffh
  7113  05C4' 6F00'              	line	407
  7114                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 407:       
                                       e = 0;
  7115                           	movlw	high(0)
  7116  05C6' 0E00               	movwf	((efgtoa@e+1))&0ffh
  7117  05C8' 6F00'              	movlw	low(0)
  7118  05CA' 0E00               	movwf	((efgtoa@e))&0ffh
  7119  05CC' 6F00'              	goto	l5403
  7120  05CE' EF00' F000'        	line	408
  7121                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 408:       
                                   }
  7122                           	
  7123                           l305:; BSR set to: 0
  7124  05D2'                    
  7125                           	line	409
  7126                           	
  7127                           l5403:; BSR set to: 0
  7128  05D2'                    
  7129                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 409:       
                                   if (!(mode == 'g')) {
  7130                           		movlw	103
  7131  05D2' 0E67               	xorwf	((efgtoa@mode))&0ffh,w
  7132  05D4' 1900'              	btfsc	status,2
  7133  05D6' B4D8               	goto	u7721
  7134  05D8' EF00' F000'        	goto	u7720
  7135  05DC' EF00' F000'        
  7136                           u7721:
  7137  05E0'                    	goto	l5407
  7138  05E0' EF00' F000'        u7720:
  7139  05E4'                    	line	410
  7140                           	
  7141                           l5405:; BSR set to: 0
  7142  05E4'                    
  7143                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 410:       
                                       m += e;
  7144                           	movf	((efgtoa@e))&0ffh,w
  7145  05E4' 5100'              	addwf	((efgtoa@m))&0ffh
  7146  05E6' 2700'              	movf	((efgtoa@e+1))&0ffh,w
  7147  05E8' 5100'              	addwfc	((efgtoa@m+1))&0ffh
  7148  05EA' 2300'              
  7149                           	goto	l5407
  7150  05EC' EF00' F000'        	line	411
  7151                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 411:       
                                   }
  7152                           	
  7153                           l306:; BSR set to: 0
  7154  05F0'                    
  7155                           	goto	l5407
  7156  05F0' EF00' F000'        	line	412
  7157                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 412:     }

  7158                           	
  7159                           l304:; BSR set to: 0
  7160  05F4'                    
  7161                           	line	415
  7162                           	
  7163                           l5407:; BSR set to: 0
  7164  05F4'                    
  7165                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 415:     i 
                                 = 0;
  7166                           	movlw	high(0)
  7167  05F4' 0E00               	movwf	((efgtoa@i+1))&0ffh
  7168  05F6' 6F00'              	movlw	low(0)
  7169  05F8' 0E00               	movwf	((efgtoa@i))&0ffh
  7170  05FA' 6F00'              	line	416
  7171                           	
  7172                           l5409:; BSR set to: 0
  7173  05FC'                    
  7174                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 416:     h 
                                 = g;
  7175                           	movff	(efgtoa@g),(efgtoa@h)
  7176  05FC' C02C' F022'        	movff	(efgtoa@g+1),(efgtoa@h+1)
  7177  0600' C02D' F023'        	movff	(efgtoa@g+2),(efgtoa@h+2)
  7178  0604' C02E' F024'        	movff	(efgtoa@g+3),(efgtoa@h+3)
  7179  0608' C02F' F025'        	line	417
  7180                           	
  7181                           l5411:; BSR set to: 0
  7182  060C'                    
  7183                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 417:     ou
                                  = u;
  7184                           	movff	(efgtoa@u),(efgtoa@ou)
  7185  060C' C034' F000'        	movff	(efgtoa@u+1),(efgtoa@ou+1)
  7186  0610' C035' F001'        	movff	(efgtoa@u+2),(efgtoa@ou+2)
  7187  0614' C036' F002'        	movff	(efgtoa@u+3),(efgtoa@ou+3)
  7188  0618' C037' F003'        	line	418
  7189                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 418:     wh
                                 ile (i < m) {
  7190                           	goto	l5421
  7191  061C' EF00' F000'        	
  7192                           l308:; BSR set to: 0
  7193  0620'                    
  7194                           	line	419
  7195                           	
  7196                           l5413:; BSR set to: 0
  7197  0620'                    
  7198                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 419:       
                                   l = floorf(h/u);
  7199                           	movff	(efgtoa@h),(c:___fldiv@b)
  7200  0620' C022' F00D'        	movff	(efgtoa@h+1),(c:___fldiv@b+1)
  7201  0624' C023' F00E'        	movff	(efgtoa@h+2),(c:___fldiv@b+2)
  7202  0628' C024' F00F'        	movff	(efgtoa@h+3),(c:___fldiv@b+3)
  7203  062C' C025' F010'        	movff	(efgtoa@u),(c:___fldiv@a)
  7204  0630' C034' F011'        	movff	(efgtoa@u+1),(c:___fldiv@a+1)
  7205  0634' C035' F012'        	movff	(efgtoa@u+2),(c:___fldiv@a+2)
  7206  0638' C036' F013'        	movff	(efgtoa@u+3),(c:___fldiv@a+3)
  7207  063C' C037' F014'        	call	___fldiv	;wreg free
  7208  0640' EC00' F000'        	movff	0+?___fldiv,(c:floorf@x)
  7209  0644' C00D' F026'        	movff	1+?___fldiv,(c:floorf@x+1)
  7210  0648' C00E' F027'        	movff	2+?___fldiv,(c:floorf@x+2)
  7211  064C' C00F' F028'        	movff	3+?___fldiv,(c:floorf@x+3)
  7212  0650' C010' F029'        	
  7213                           	call	_floorf	;wreg free
  7214  0654' EC00' F000'        	movff	0+?_floorf,(efgtoa@l)
  7215  0658' C026' F026'        	movff	1+?_floorf,(efgtoa@l+1)
  7216  065C' C027' F027'        	movff	2+?_floorf,(efgtoa@l+2)
  7217  0660' C028' F028'        	movff	3+?_floorf,(efgtoa@l+3)
  7218  0664' C029' F029'        	
  7219                           	line	420
  7220                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 420:       
                                   d = (int)l;
  7221                           	movff	(efgtoa@l),(c:___fltol@f1)
  7222  0668' C026' F00D'        	movff	(efgtoa@l+1),(c:___fltol@f1+1)
  7223  066C' C027' F00E'        	movff	(efgtoa@l+2),(c:___fltol@f1+2)
  7224  0670' C028' F00F'        	movff	(efgtoa@l+3),(c:___fltol@f1+3)
  7225  0674' C029' F010'        	call	___fltol	;wreg free
  7226  0678' EC00' F000'        	movff	0+?___fltol,(efgtoa@d)
  7227  067C' C00D' F018'        	movff	1+?___fltol,(efgtoa@d+1)
  7228  0680' C00E' F019'        	line	421
  7229                           	
  7230                           l5415:
  7231  0684'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 421:       
                                   h -= l*u;
  7232                           	movff	(efgtoa@h),(c:___flsub@b)
  7233  0684' C022' F034'        	movff	(efgtoa@h+1),(c:___flsub@b+1)
  7234  0688' C023' F035'        	movff	(efgtoa@h+2),(c:___flsub@b+2)
  7235  068C' C024' F036'        	movff	(efgtoa@h+3),(c:___flsub@b+3)
  7236  0690' C025' F037'        	movff	(efgtoa@u),(c:___flmul@a)
  7237  0694' C034' F01F'        	movff	(efgtoa@u+1),(c:___flmul@a+1)
  7238  0698' C035' F020'        	movff	(efgtoa@u+2),(c:___flmul@a+2)
  7239  069C' C036' F021'        	movff	(efgtoa@u+3),(c:___flmul@a+3)
  7240  06A0' C037' F022'        	movff	(efgtoa@l),(c:___flmul@b)
  7241  06A4' C026' F01B'        	movff	(efgtoa@l+1),(c:___flmul@b+1)
  7242  06A8' C027' F01C'        	movff	(efgtoa@l+2),(c:___flmul@b+2)
  7243  06AC' C028' F01D'        	movff	(efgtoa@l+3),(c:___flmul@b+3)
  7244  06B0' C029' F01E'        	call	___flmul	;wreg free
  7245  06B4' EC00' F000'        	movff	0+?___flmul,(c:___flsub@a)
  7246  06B8' C01B' F038'        	movff	1+?___flmul,(c:___flsub@a+1)
  7247  06BC' C01C' F039'        	movff	2+?___flmul,(c:___flsub@a+2)
  7248  06C0' C01D' F03A'        	movff	3+?___flmul,(c:___flsub@a+3)
  7249  06C4' C01E' F03B'        	
  7250                           	call	___flsub	;wreg free
  7251  06C8' EC00' F000'        	movff	0+?___flsub,(efgtoa@h)
  7252  06CC' C034' F022'        	movff	1+?___flsub,(efgtoa@h+1)
  7253  06D0' C035' F023'        	movff	2+?___flsub,(efgtoa@h+2)
  7254  06D4' C036' F024'        	movff	3+?___flsub,(efgtoa@h+3)
  7255  06D8' C037' F025'        	
  7256                           	line	422
  7257                           	
  7258                           l5417:
  7259  06DC'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 422:       
                                   u = u/10.0;
  7260                           	movff	(efgtoa@u),(c:___fldiv@b)
  7261  06DC' C034' F00D'        	movff	(efgtoa@u+1),(c:___fldiv@b+1)
  7262  06E0' C035' F00E'        	movff	(efgtoa@u+2),(c:___fldiv@b+2)
  7263  06E4' C036' F00F'        	movff	(efgtoa@u+3),(c:___fldiv@b+3)
  7264  06E8' C037' F010'        	movlw	low(normalize32(0x41200000))
  7265  06EC' 0E00               	movwf	((c:___fldiv@a)),c
  7266  06EE' 6E11'              	movlw	high(normalize32(0x41200000))
  7267  06F0' 0E00               	movwf	((c:___fldiv@a+1)),c
  7268  06F2' 6E12'              	movlw	low highword(normalize32(0x41200000))
  7269  06F4' 0E20               	movwf	((c:___fldiv@a+2)),c
  7270  06F6' 6E13'              	movlw	high highword(normalize32(0x41200000))
  7271  06F8' 0E41               	movwf	((c:___fldiv@a+3)),c
  7272  06FA' 6E14'              	call	___fldiv	;wreg free
  7273  06FC' EC00' F000'        	movff	0+?___fldiv,(efgtoa@u)
  7274  0700' C00D' F034'        	movff	1+?___fldiv,(efgtoa@u+1)
  7275  0704' C00E' F035'        	movff	2+?___fldiv,(efgtoa@u+2)
  7276  0708' C00F' F036'        	movff	3+?___fldiv,(efgtoa@u+3)
  7277  070C' C010' F037'        	
  7278                           	line	423
  7279                           	
  7280                           l5419:
  7281  0710'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 423:       
                                   ++i;
  7282                           	movlb	0	; () banked
  7283  0710' 0100               	infsnz	((efgtoa@i))&0ffh
  7284  0712' 4B00'              	incf	((efgtoa@i+1))&0ffh
  7285  0714' 2B00'              	goto	l5421
  7286  0716' EF00' F000'        	line	424
  7287                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 424:     }

  7288                           	
  7289                           l307:; BSR set to: 0
  7290  071A'                    
  7291                           	line	418
  7292                           	
  7293                           l5421:; BSR set to: 0
  7294  071A'                    
  7295                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 418:     wh
                                 ile (i < m) {
  7296                           		movf	((efgtoa@m))&0ffh,w
  7297  071A' 5100'              	subwf	((efgtoa@i))&0ffh,w
  7298  071C' 5D00'              	movf	((efgtoa@i+1))&0ffh,w
  7299  071E' 5100'              	xorlw	80h
  7300  0720' 0A80               	movwf	(??_efgtoa+0+0)&0ffh,c
  7301  0722' 6E00'              	movf	((efgtoa@m+1))&0ffh,w
  7302  0724' 5100'              	xorlw	80h
  7303  0726' 0A80               	subwfb	(??_efgtoa+0+0)&0ffh,c,w
  7304  0728' 5800'              	btfss	status,0
  7305  072A' A0D8               	goto	u7731
  7306  072C' EF00' F000'        	goto	u7730
  7307  0730' EF00' F000'        
  7308                           u7731:
  7309  0734'                    	goto	l5413
  7310  0734' EF00' F000'        u7730:
  7311  0738'                    	goto	l5423
  7312  0738' EF00' F000'        	
  7313                           l309:; BSR set to: 0
  7314  073C'                    
  7315                           	line	427
  7316                           	
  7317                           l5423:; BSR set to: 0
  7318  073C'                    
  7319                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 427:     l 
                                 = u*5.0;
  7320                           	movff	(efgtoa@u),(c:___flmul@b)
  7321  073C' C034' F01B'        	movff	(efgtoa@u+1),(c:___flmul@b+1)
  7322  0740' C035' F01C'        	movff	(efgtoa@u+2),(c:___flmul@b+2)
  7323  0744' C036' F01D'        	movff	(efgtoa@u+3),(c:___flmul@b+3)
  7324  0748' C037' F01E'        	movlw	low(normalize32(0x40a00000))
  7325  074C' 0E00               	movwf	((c:___flmul@a)),c
  7326  074E' 6E1F'              	movlw	high(normalize32(0x40a00000))
  7327  0750' 0E00               	movwf	((c:___flmul@a+1)),c
  7328  0752' 6E20'              	movlw	low highword(normalize32(0x40a00000))
  7329  0754' 0EA0               	movwf	((c:___flmul@a+2)),c
  7330  0756' 6E21'              	movlw	high highword(normalize32(0x40a00000))
  7331  0758' 0E40               	movwf	((c:___flmul@a+3)),c
  7332  075A' 6E22'              	call	___flmul	;wreg free
  7333  075C' EC00' F000'        	movff	0+?___flmul,(efgtoa@l)
  7334  0760' C01B' F026'        	movff	1+?___flmul,(efgtoa@l+1)
  7335  0764' C01C' F027'        	movff	2+?___flmul,(efgtoa@l+2)
  7336  0768' C01D' F028'        	movff	3+?___flmul,(efgtoa@l+3)
  7337  076C' C01E' F029'        	
  7338                           	line	428
  7339                           	
  7340                           l5425:
  7341  0770'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 428:     if
                                  (h < l) {
  7342                           	movff	(efgtoa@h),(c:___flge@ff1)
  7343  0770' C022' F034'        	movff	(efgtoa@h+1),(c:___flge@ff1+1)
  7344  0774' C023' F035'        	movff	(efgtoa@h+2),(c:___flge@ff1+2)
  7345  0778' C024' F036'        	movff	(efgtoa@h+3),(c:___flge@ff1+3)
  7346  077C' C025' F037'        	movff	(efgtoa@l),(c:___flge@ff2)
  7347  0780' C026' F038'        	movff	(efgtoa@l+1),(c:___flge@ff2+1)
  7348  0784' C027' F039'        	movff	(efgtoa@l+2),(c:___flge@ff2+2)
  7349  0788' C028' F03A'        	movff	(efgtoa@l+3),(c:___flge@ff2+3)
  7350  078C' C029' F03B'        	call	___flge	;wreg free
  7351  0790' EC00' F000'        	btfsc	status,0
  7352  0794' B0D8               	goto	u7741
  7353  0796' EF00' F000'        	goto	u7740
  7354  079A' EF00' F000'        u7741:
  7355  079E'                    	goto	l5429
  7356  079E' EF00' F000'        u7740:
  7357  07A2'                    	line	429
  7358                           	
  7359                           l5427:
  7360  07A2'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 429:       
                                   l = 0.0;
  7361                           	movlw	low(normalize32(0x0))
  7362  07A2' 0E00               	movlb	0	; () banked
  7363  07A4' 0100               	movwf	((efgtoa@l))&0ffh
  7364  07A6' 6F00'              	movlw	high(normalize32(0x0))
  7365  07A8' 0E00               	movwf	((efgtoa@l+1))&0ffh
  7366  07AA' 6F00'              	movlw	low highword(normalize32(0x0))
  7367  07AC' 0E00               	movwf	((efgtoa@l+2))&0ffh
  7368  07AE' 6F00'              	movlw	high highword(normalize32(0x0))
  7369  07B0' 0E00               	movwf	((efgtoa@l+3))&0ffh
  7370  07B2' 6F00'              	line	430
  7371                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 430:     } 
                                 else {
  7372                           	goto	l5435
  7373  07B4' EF00' F000'        	
  7374                           l310:; BSR set to: 0
  7375  07B8'                    
  7376                           	line	432
  7377                           	
  7378                           l5429:
  7379  07B8'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 432:       
                                   if ((h == l) && !(d % 2)) {
  7380                           	movff	(efgtoa@h),(c:___fleq@ff1)
  7381  07B8' C022' F00D'        	movff	(efgtoa@h+1),(c:___fleq@ff1+1)
  7382  07BC' C023' F00E'        	movff	(efgtoa@h+2),(c:___fleq@ff1+2)
  7383  07C0' C024' F00F'        	movff	(efgtoa@h+3),(c:___fleq@ff1+3)
  7384  07C4' C025' F010'        	movff	(efgtoa@l),(c:___fleq@ff2)
  7385  07C8' C026' F011'        	movff	(efgtoa@l+1),(c:___fleq@ff2+1)
  7386  07CC' C027' F012'        	movff	(efgtoa@l+2),(c:___fleq@ff2+2)
  7387  07D0' C028' F013'        	movff	(efgtoa@l+3),(c:___fleq@ff2+3)
  7388  07D4' C029' F014'        	call	___fleq	;wreg free
  7389  07D8' EC00' F000'        	btfss	status,0
  7390  07DC' A0D8               	goto	u7751
  7391  07DE' EF00' F000'        	goto	u7750
  7392  07E2' EF00' F000'        u7751:
  7393  07E6'                    	goto	l5435
  7394  07E6' EF00' F000'        u7750:
  7395  07EA'                    	
  7396                           l5431:
  7397  07EA'                    	movlb	0	; () banked
  7398  07EA' 0100               	
  7399                           	btfsc	((efgtoa@d))&0ffh,(0)&7
  7400  07EC' B100'              	goto	u7761
  7401  07EE' EF00' F000'        	goto	u7760
  7402  07F2' EF00' F000'        u7761:
  7403  07F6'                    	goto	l5435
  7404  07F6' EF00' F000'        u7760:
  7405  07FA'                    	line	433
  7406                           	
  7407                           l5433:; BSR set to: 0
  7408  07FA'                    
  7409                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 433:       
                                       l = 0.0;
  7410                           	movlw	low(normalize32(0x0))
  7411  07FA' 0E00               	movwf	((efgtoa@l))&0ffh
  7412  07FC' 6F00'              	movlw	high(normalize32(0x0))
  7413  07FE' 0E00               	movwf	((efgtoa@l+1))&0ffh
  7414  0800' 6F00'              	movlw	low highword(normalize32(0x0))
  7415  0802' 0E00               	movwf	((efgtoa@l+2))&0ffh
  7416  0804' 6F00'              	movlw	high highword(normalize32(0x0))
  7417  0806' 0E00               	movwf	((efgtoa@l+3))&0ffh
  7418  0808' 6F00'              	goto	l5435
  7419  080A' EF00' F000'        	line	434
  7420                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 434:       
                                   }
  7421                           	
  7422                           l312:; BSR set to: 0
  7423  080E'                    
  7424                           	goto	l5435
  7425  080E' EF00' F000'        	line	435
  7426                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 435:     }

  7427                           	
  7428                           l311:; BSR set to: 0
  7429  0812'                    
  7430                           	line	438
  7431                           	
  7432                           l5435:
  7433  0812'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 438:     h 
                                 = g + l;
  7434                           	movff	(efgtoa@g),(c:___fladd@b)
  7435  0812' C02C' F00D'        	movff	(efgtoa@g+1),(c:___fladd@b+1)
  7436  0816' C02D' F00E'        	movff	(efgtoa@g+2),(c:___fladd@b+2)
  7437  081A' C02E' F00F'        	movff	(efgtoa@g+3),(c:___fladd@b+3)
  7438  081E' C02F' F010'        	movff	(efgtoa@l),(c:___fladd@a)
  7439  0822' C026' F011'        	movff	(efgtoa@l+1),(c:___fladd@a+1)
  7440  0826' C027' F012'        	movff	(efgtoa@l+2),(c:___fladd@a+2)
  7441  082A' C028' F013'        	movff	(efgtoa@l+3),(c:___fladd@a+3)
  7442  082E' C029' F014'        	call	___fladd	;wreg free
  7443  0832' EC00' F000'        	movff	0+?___fladd,(efgtoa@h)
  7444  0836' C00D' F022'        	movff	1+?___fladd,(efgtoa@h+1)
  7445  083A' C00E' F023'        	movff	2+?___fladd,(efgtoa@h+2)
  7446  083E' C00F' F024'        	movff	3+?___fladd,(efgtoa@h+3)
  7447  0842' C010' F025'        	
  7448                           	line	441
  7449                           	
  7450                           l5437:
  7451  0846'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 441:     u 
                                 = ou;
  7452                           	movff	(efgtoa@ou),(efgtoa@u)
  7453  0846' C000' F034'        	movff	(efgtoa@ou+1),(efgtoa@u+1)
  7454  084A' C001' F035'        	movff	(efgtoa@ou+2),(efgtoa@u+2)
  7455  084E' C002' F036'        	movff	(efgtoa@ou+3),(efgtoa@u+3)
  7456  0852' C003' F037'        	line	442
  7457                           	
  7458                           l5439:
  7459  0856'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 442:     ne
                                  = (nmode == 'e') ? 0 : e;
  7460                           		movlw	101
  7461  0856' 0E65               	movlb	0	; () banked
  7462  0858' 0100               	xorwf	((efgtoa@nmode))&0ffh,w
  7463  085A' 1900'              	btfsc	status,2
  7464  085C' B4D8               	goto	u7771
  7465  085E' EF00' F000'        	goto	u7770
  7466  0862' EF00' F000'        
  7467                           u7771:
  7468  0866'                    	goto	l5443
  7469  0866' EF00' F000'        u7770:
  7470  086A'                    	
  7471                           l5441:; BSR set to: 0
  7472  086A'                    
  7473                           	movff	(efgtoa@e),(efgtoa@ne)
  7474  086A' C030' F016'        	movff	(efgtoa@e+1),(efgtoa@ne+1)
  7475  086E' C031' F017'        	goto	l316
  7476  0872' EF00' F000'        	
  7477                           l314:; BSR set to: 0
  7478  0876'                    
  7479                           	
  7480                           l5443:; BSR set to: 0
  7481  0876'                    
  7482                           	movlw	high(0)
  7483  0876' 0E00               	movwf	((efgtoa@ne+1))&0ffh
  7484  0878' 6F00'              	movlw	low(0)
  7485  087A' 0E00               	movwf	((efgtoa@ne))&0ffh
  7486  087C' 6F00'              	
  7487                           l316:; BSR set to: 0
  7488  087E'                    
  7489                           	line	443
  7490                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 443:     pp
                                  = 0;
  7491                           	movlw	high(0)
  7492  087E' 0E00               	movwf	((efgtoa@pp+1))&0ffh
  7493  0880' 6F00'              	movlw	low(0)
  7494  0882' 0E00               	movwf	((efgtoa@pp))&0ffh
  7495  0884' 6F00'              	line	444
  7496                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 444:     t 
                                 = 0;
  7497                           	movlw	high(0)
  7498  0886' 0E00               	movwf	((efgtoa@t+1))&0ffh
  7499  0888' 6F00'              	movlw	low(0)
  7500  088A' 0E00               	movwf	((efgtoa@t))&0ffh
  7501  088C' 6F00'              	line	445
  7502                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 445:     i 
                                 = 0;
  7503                           	movlw	high(0)
  7504  088E' 0E00               	movwf	((efgtoa@i+1))&0ffh
  7505  0890' 6F00'              	movlw	low(0)
  7506  0892' 0E00               	movwf	((efgtoa@i))&0ffh
  7507  0894' 6F00'              	line	446
  7508                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 446:     wh
                                 ile ((i < m) && (n < (80 - 5))) {
  7509                           	goto	l5493
  7510  0896' EF00' F000'        	
  7511                           l318:; BSR set to: 0
  7512  089A'                    
  7513                           	line	447
  7514                           	
  7515                           l5445:; BSR set to: 0
  7516  089A'                    
  7517                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 447:       
                                   l = floorf(h/u);
  7518                           	movff	(efgtoa@h),(c:___fldiv@b)
  7519  089A' C022' F00D'        	movff	(efgtoa@h+1),(c:___fldiv@b+1)
  7520  089E' C023' F00E'        	movff	(efgtoa@h+2),(c:___fldiv@b+2)
  7521  08A2' C024' F00F'        	movff	(efgtoa@h+3),(c:___fldiv@b+3)
  7522  08A6' C025' F010'        	movff	(efgtoa@u),(c:___fldiv@a)
  7523  08AA' C034' F011'        	movff	(efgtoa@u+1),(c:___fldiv@a+1)
  7524  08AE' C035' F012'        	movff	(efgtoa@u+2),(c:___fldiv@a+2)
  7525  08B2' C036' F013'        	movff	(efgtoa@u+3),(c:___fldiv@a+3)
  7526  08B6' C037' F014'        	call	___fldiv	;wreg free
  7527  08BA' EC00' F000'        	movff	0+?___fldiv,(c:floorf@x)
  7528  08BE' C00D' F026'        	movff	1+?___fldiv,(c:floorf@x+1)
  7529  08C2' C00E' F027'        	movff	2+?___fldiv,(c:floorf@x+2)
  7530  08C6' C00F' F028'        	movff	3+?___fldiv,(c:floorf@x+3)
  7531  08CA' C010' F029'        	
  7532                           	call	_floorf	;wreg free
  7533  08CE' EC00' F000'        	movff	0+?_floorf,(efgtoa@l)
  7534  08D2' C026' F026'        	movff	1+?_floorf,(efgtoa@l+1)
  7535  08D6' C027' F027'        	movff	2+?_floorf,(efgtoa@l+2)
  7536  08DA' C028' F028'        	movff	3+?_floorf,(efgtoa@l+3)
  7537  08DE' C029' F029'        	
  7538                           	line	448
  7539                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 448:       
                                   d = (int)l;
  7540                           	movff	(efgtoa@l),(c:___fltol@f1)
  7541  08E2' C026' F00D'        	movff	(efgtoa@l+1),(c:___fltol@f1+1)
  7542  08E6' C027' F00E'        	movff	(efgtoa@l+2),(c:___fltol@f1+2)
  7543  08EA' C028' F00F'        	movff	(efgtoa@l+3),(c:___fltol@f1+3)
  7544  08EE' C029' F010'        	call	___fltol	;wreg free
  7545  08F2' EC00' F000'        	movff	0+?___fltol,(efgtoa@d)
  7546  08F6' C00D' F018'        	movff	1+?___fltol,(efgtoa@d+1)
  7547  08FA' C00E' F019'        	line	449
  7548                           	
  7549                           l5447:
  7550  08FE'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 449:       
                                   if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7551                           	
  7552                           	btfsc	((c:_flags)),c,(4)&7
  7553  08FE' B810'              	goto	u7781
  7554  0900' EF00' F000'        	goto	u7780
  7555  0904' EF00' F000'        u7781:
  7556  0908'                    	goto	l5457
  7557  0908' EF00' F000'        u7780:
  7558  090C'                    	
  7559                           l5449:
  7560  090C'                    	movlb	0	; () banked
  7561  090C' 0100               	movf	((efgtoa@d))&0ffh,w
  7562  090E' 5100'              iorwf	((efgtoa@d+1))&0ffh,w
  7563  0910' 1100'              	btfss	status,2
  7564  0912' A4D8               	goto	u7791
  7565  0914' EF00' F000'        	goto	u7790
  7566  0918' EF00' F000'        
  7567                           u7791:
  7568  091C'                    	goto	l5457
  7569  091C' EF00' F000'        u7790:
  7570  0920'                    	
  7571                           l5451:; BSR set to: 0
  7572  0920'                    
  7573                           		movlw	103
  7574  0920' 0E67               	xorwf	((efgtoa@mode))&0ffh,w
  7575  0922' 1900'              	btfss	status,2
  7576  0924' A4D8               	goto	u7801
  7577  0926' EF00' F000'        	goto	u7800
  7578  092A' EF00' F000'        
  7579                           u7801:
  7580  092E'                    	goto	l5457
  7581  092E' EF00' F000'        u7800:
  7582  0932'                    	
  7583                           l5453:; BSR set to: 0
  7584  0932'                    
  7585                           	btfsc	((efgtoa@ne+1))&0ffh,7
  7586  0932' BF00'              	goto	u7810
  7587  0934' EF00' F000'        	goto	u7811
  7588  0938' EF00' F000'        
  7589                           u7811:
  7590  093C'                    	goto	l5457
  7591  093C' EF00' F000'        u7810:
  7592  0940'                    	line	450
  7593                           	
  7594                           l5455:; BSR set to: 0
  7595  0940'                    
  7596                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 450:       
                                       ++t;
  7597                           	infsnz	((efgtoa@t))&0ffh
  7598  0940' 4B00'              	incf	((efgtoa@t+1))&0ffh
  7599  0942' 2B00'              	line	451
  7600                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 451:       
                                   } else {
  7601                           	goto	l5485
  7602  0944' EF00' F000'        	
  7603                           l319:; BSR set to: 0
  7604  0948'                    
  7605                           	line	452
  7606                           	
  7607                           l5457:
  7608  0948'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 452:       
                                       if (!pp && (ne < 0)) {
  7609                           	movlb	0	; () banked
  7610  0948' 0100               	movf	((efgtoa@pp))&0ffh,w
  7611  094A' 5100'              iorwf	((efgtoa@pp+1))&0ffh,w
  7612  094C' 1100'              	btfss	status,2
  7613  094E' A4D8               	goto	u7821
  7614  0950' EF00' F000'        	goto	u7820
  7615  0954' EF00' F000'        
  7616                           u7821:
  7617  0958'                    	goto	l5477
  7618  0958' EF00' F000'        u7820:
  7619  095C'                    	
  7620                           l5459:; BSR set to: 0
  7621  095C'                    
  7622                           	btfsc	((efgtoa@ne+1))&0ffh,7
  7623  095C' BF00'              	goto	u7830
  7624  095E' EF00' F000'        	goto	u7831
  7625  0962' EF00' F000'        
  7626                           u7831:
  7627  0966'                    	goto	l5477
  7628  0966' EF00' F000'        u7830:
  7629  096A'                    	line	453
  7630                           	
  7631                           l5461:; BSR set to: 0
  7632  096A'                    
  7633                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 453:       
                                           dbuf[n++] = '.';
  7634                           	movlw	low(_dbuf)
  7635  096A' 0E00'              	addwf	((efgtoa@n))&0ffh,w
  7636  096C' 2500'              	movwf	c:fsr2l
  7637  096E' 6ED9               	movlw	high(_dbuf)
  7638  0970' 0E00'              	addwfc	((efgtoa@n+1))&0ffh,w
  7639  0972' 2100'              	movwf	1+c:fsr2l
  7640  0974' 6EDA               	movlw	low(02Eh)
  7641  0976' 0E2E               	movwf	indf2
  7642  0978' 6EDF               	
  7643                           l5463:; BSR set to: 0
  7644  097A'                    
  7645                           	infsnz	((efgtoa@n))&0ffh
  7646  097A' 4B00'              	incf	((efgtoa@n+1))&0ffh
  7647  097C' 2B00'              	line	454
  7648                           	
  7649                           l5465:; BSR set to: 0
  7650  097E'                    
  7651                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 454:       
                                           --w;
  7652                           	decf	((efgtoa@w))&0ffh
  7653  097E' 0700'              	btfss	status,0
  7654  0980' A0D8               	decf	((efgtoa@w+1))&0ffh
  7655  0982' 0700'              	line	455
  7656                           	
  7657                           l5467:; BSR set to: 0
  7658  0984'                    
  7659                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 455:       
                                           pp = 1;
  7660                           	movlw	high(01h)
  7661  0984' 0E00               	movwf	((efgtoa@pp+1))&0ffh
  7662  0986' 6F00'              	movlw	low(01h)
  7663  0988' 0E01               	movwf	((efgtoa@pp))&0ffh
  7664  098A' 6F00'              	goto	l5477
  7665  098C' EF00' F000'        	line	456
  7666                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 456:       
                                       }
  7667                           	
  7668                           l321:; BSR set to: 0
  7669  0990'                    
  7670                           	line	457
  7671                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 457:       
                                       while (t) {
  7672                           	goto	l5477
  7673  0990' EF00' F000'        	
  7674                           l323:; BSR set to: 0
  7675  0994'                    
  7676                           	line	458
  7677                           	
  7678                           l5469:; BSR set to: 0
  7679  0994'                    
  7680                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 458:       
                                           dbuf[n++] = '0';
  7681                           	movlw	low(_dbuf)
  7682  0994' 0E00'              	addwf	((efgtoa@n))&0ffh,w
  7683  0996' 2500'              	movwf	c:fsr2l
  7684  0998' 6ED9               	movlw	high(_dbuf)
  7685  099A' 0E00'              	addwfc	((efgtoa@n+1))&0ffh,w
  7686  099C' 2100'              	movwf	1+c:fsr2l
  7687  099E' 6EDA               	movlw	low(030h)
  7688  09A0' 0E30               	movwf	indf2
  7689  09A2' 6EDF               	
  7690                           l5471:; BSR set to: 0
  7691  09A4'                    
  7692                           	infsnz	((efgtoa@n))&0ffh
  7693  09A4' 4B00'              	incf	((efgtoa@n+1))&0ffh
  7694  09A6' 2B00'              	line	459
  7695                           	
  7696                           l5473:; BSR set to: 0
  7697  09A8'                    
  7698                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 459:       
                                           --w;
  7699                           	decf	((efgtoa@w))&0ffh
  7700  09A8' 0700'              	btfss	status,0
  7701  09AA' A0D8               	decf	((efgtoa@w+1))&0ffh
  7702  09AC' 0700'              	line	460
  7703                           	
  7704                           l5475:; BSR set to: 0
  7705  09AE'                    
  7706                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 460:       
                                           --t;
  7707                           	decf	((efgtoa@t))&0ffh
  7708  09AE' 0700'              	btfss	status,0
  7709  09B0' A0D8               	decf	((efgtoa@t+1))&0ffh
  7710  09B2' 0700'              	goto	l5477
  7711  09B4' EF00' F000'        	line	461
  7712                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 461:       
                                       }
  7713                           	
  7714                           l322:; BSR set to: 0
  7715  09B8'                    
  7716                           	line	457
  7717                           	
  7718                           l5477:; BSR set to: 0
  7719  09B8'                    
  7720                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 457:       
                                       while (t) {
  7721                           	movf	((efgtoa@t))&0ffh,w
  7722  09B8' 5100'              iorwf	((efgtoa@t+1))&0ffh,w
  7723  09BA' 1100'              	btfss	status,2
  7724  09BC' A4D8               	goto	u7841
  7725  09BE' EF00' F000'        	goto	u7840
  7726  09C2' EF00' F000'        
  7727                           u7841:
  7728  09C6'                    	goto	l5469
  7729  09C6' EF00' F000'        u7840:
  7730  09CA'                    	goto	l5479
  7731  09CA' EF00' F000'        	
  7732                           l324:; BSR set to: 0
  7733  09CE'                    
  7734                           	line	462
  7735                           	
  7736                           l5479:; BSR set to: 0
  7737  09CE'                    
  7738                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 462:       
                                       dbuf[n++] = '0' + d;
  7739                           	movlw	low(_dbuf)
  7740  09CE' 0E00'              	addwf	((efgtoa@n))&0ffh,w
  7741  09D0' 2500'              	movwf	c:fsr2l
  7742  09D2' 6ED9               	movlw	high(_dbuf)
  7743  09D4' 0E00'              	addwfc	((efgtoa@n+1))&0ffh,w
  7744  09D6' 2100'              	movwf	1+c:fsr2l
  7745  09D8' 6EDA               	movf	((efgtoa@d))&0ffh,w
  7746  09DA' 5100'              	addlw	low(030h)
  7747  09DC' 0F30               	movwf	indf2,c
  7748  09DE' 6EDF               
  7749                           	
  7750                           l5481:; BSR set to: 0
  7751  09E0'                    
  7752                           	infsnz	((efgtoa@n))&0ffh
  7753  09E0' 4B00'              	incf	((efgtoa@n+1))&0ffh
  7754  09E2' 2B00'              	line	463
  7755                           	
  7756                           l5483:; BSR set to: 0
  7757  09E4'                    
  7758                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 463:       
                                       --w;
  7759                           	decf	((efgtoa@w))&0ffh
  7760  09E4' 0700'              	btfss	status,0
  7761  09E6' A0D8               	decf	((efgtoa@w+1))&0ffh
  7762  09E8' 0700'              	goto	l5485
  7763  09EA' EF00' F000'        	line	464
  7764                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 464:       
                                   }
  7765                           	
  7766                           l320:; BSR set to: 0
  7767  09EE'                    
  7768                           	line	465
  7769                           	
  7770                           l5485:; BSR set to: 0
  7771  09EE'                    
  7772                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 465:       
                                   h -= l*u;
  7773                           	movff	(efgtoa@h),(c:___flsub@b)
  7774  09EE' C022' F034'        	movff	(efgtoa@h+1),(c:___flsub@b+1)
  7775  09F2' C023' F035'        	movff	(efgtoa@h+2),(c:___flsub@b+2)
  7776  09F6' C024' F036'        	movff	(efgtoa@h+3),(c:___flsub@b+3)
  7777  09FA' C025' F037'        	movff	(efgtoa@u),(c:___flmul@a)
  7778  09FE' C034' F01F'        	movff	(efgtoa@u+1),(c:___flmul@a+1)
  7779  0A02' C035' F020'        	movff	(efgtoa@u+2),(c:___flmul@a+2)
  7780  0A06' C036' F021'        	movff	(efgtoa@u+3),(c:___flmul@a+3)
  7781  0A0A' C037' F022'        	movff	(efgtoa@l),(c:___flmul@b)
  7782  0A0E' C026' F01B'        	movff	(efgtoa@l+1),(c:___flmul@b+1)
  7783  0A12' C027' F01C'        	movff	(efgtoa@l+2),(c:___flmul@b+2)
  7784  0A16' C028' F01D'        	movff	(efgtoa@l+3),(c:___flmul@b+3)
  7785  0A1A' C029' F01E'        	call	___flmul	;wreg free
  7786  0A1E' EC00' F000'        	movff	0+?___flmul,(c:___flsub@a)
  7787  0A22' C01B' F038'        	movff	1+?___flmul,(c:___flsub@a+1)
  7788  0A26' C01C' F039'        	movff	2+?___flmul,(c:___flsub@a+2)
  7789  0A2A' C01D' F03A'        	movff	3+?___flmul,(c:___flsub@a+3)
  7790  0A2E' C01E' F03B'        	
  7791                           	call	___flsub	;wreg free
  7792  0A32' EC00' F000'        	movff	0+?___flsub,(efgtoa@h)
  7793  0A36' C034' F022'        	movff	1+?___flsub,(efgtoa@h+1)
  7794  0A3A' C035' F023'        	movff	2+?___flsub,(efgtoa@h+2)
  7795  0A3E' C036' F024'        	movff	3+?___flsub,(efgtoa@h+3)
  7796  0A42' C037' F025'        	
  7797                           	line	466
  7798                           	
  7799                           l5487:
  7800  0A46'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 466:       
                                   u = u/10.0;
  7801                           	movff	(efgtoa@u),(c:___fldiv@b)
  7802  0A46' C034' F00D'        	movff	(efgtoa@u+1),(c:___fldiv@b+1)
  7803  0A4A' C035' F00E'        	movff	(efgtoa@u+2),(c:___fldiv@b+2)
  7804  0A4E' C036' F00F'        	movff	(efgtoa@u+3),(c:___fldiv@b+3)
  7805  0A52' C037' F010'        	movlw	low(normalize32(0x41200000))
  7806  0A56' 0E00               	movwf	((c:___fldiv@a)),c
  7807  0A58' 6E11'              	movlw	high(normalize32(0x41200000))
  7808  0A5A' 0E00               	movwf	((c:___fldiv@a+1)),c
  7809  0A5C' 6E12'              	movlw	low highword(normalize32(0x41200000))
  7810  0A5E' 0E20               	movwf	((c:___fldiv@a+2)),c
  7811  0A60' 6E13'              	movlw	high highword(normalize32(0x41200000))
  7812  0A62' 0E41               	movwf	((c:___fldiv@a+3)),c
  7813  0A64' 6E14'              	call	___fldiv	;wreg free
  7814  0A66' EC00' F000'        	movff	0+?___fldiv,(efgtoa@u)
  7815  0A6A' C00D' F034'        	movff	1+?___fldiv,(efgtoa@u+1)
  7816  0A6E' C00E' F035'        	movff	2+?___fldiv,(efgtoa@u+2)
  7817  0A72' C00F' F036'        	movff	3+?___fldiv,(efgtoa@u+3)
  7818  0A76' C010' F037'        	
  7819                           	line	467
  7820                           	
  7821                           l5489:
  7822  0A7A'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 467:       
                                   --ne;
  7823                           	movlb	0	; () banked
  7824  0A7A' 0100               	decf	((efgtoa@ne))&0ffh
  7825  0A7C' 0700'              	btfss	status,0
  7826  0A7E' A0D8               	decf	((efgtoa@ne+1))&0ffh
  7827  0A80' 0700'              	line	468
  7828                           	
  7829                           l5491:; BSR set to: 0
  7830  0A82'                    
  7831                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 468:       
                                   ++i;
  7832                           	infsnz	((efgtoa@i))&0ffh
  7833  0A82' 4B00'              	incf	((efgtoa@i+1))&0ffh
  7834  0A84' 2B00'              	goto	l5493
  7835  0A86' EF00' F000'        	line	469
  7836                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 469:     }

  7837                           	
  7838                           l317:; BSR set to: 0
  7839  0A8A'                    
  7840                           	line	446
  7841                           	
  7842                           l5493:; BSR set to: 0
  7843  0A8A'                    
  7844                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 446:     wh
                                 ile ((i < m) && (n < (80 - 5))) {
  7845                           		movf	((efgtoa@m))&0ffh,w
  7846  0A8A' 5100'              	subwf	((efgtoa@i))&0ffh,w
  7847  0A8C' 5D00'              	movf	((efgtoa@i+1))&0ffh,w
  7848  0A8E' 5100'              	xorlw	80h
  7849  0A90' 0A80               	movwf	(??_efgtoa+0+0)&0ffh,c
  7850  0A92' 6E00'              	movf	((efgtoa@m+1))&0ffh,w
  7851  0A94' 5100'              	xorlw	80h
  7852  0A96' 0A80               	subwfb	(??_efgtoa+0+0)&0ffh,c,w
  7853  0A98' 5800'              	btfsc	status,0
  7854  0A9A' B0D8               	goto	u7851
  7855  0A9C' EF00' F000'        	goto	u7850
  7856  0AA0' EF00' F000'        
  7857                           u7851:
  7858  0AA4'                    	goto	l5497
  7859  0AA4' EF00' F000'        u7850:
  7860  0AA8'                    	
  7861                           l5495:; BSR set to: 0
  7862  0AA8'                    
  7863                           	btfsc	((efgtoa@n+1))&0ffh,7
  7864  0AA8' BF00'              	goto	u7861
  7865  0AAA' EF00' F000'        	movf	((efgtoa@n+1))&0ffh,w
  7866  0AAE' 5100'              	bnz	u7860
  7867  0AB0' E109               	movlw	75
  7868  0AB2' 0E4B               	subwf	 ((efgtoa@n))&0ffh,w
  7869  0AB4' 5D00'              	btfss	status,0
  7870  0AB6' A0D8               	goto	u7861
  7871  0AB8' EF00' F000'        	goto	u7860
  7872  0ABC' EF00' F000'        
  7873                           u7861:
  7874  0AC0'                    	goto	l5445
  7875  0AC0' EF00' F000'        u7860:
  7876  0AC4'                    	goto	l5497
  7877  0AC4' EF00' F000'        	
  7878                           l326:; BSR set to: 0
  7879  0AC8'                    
  7880                           	goto	l5497
  7881  0AC8' EF00' F000'        	
  7882                           l327:; BSR set to: 0
  7883  0ACC'                    
  7884                           	line	470
  7885                           	
  7886                           l5497:; BSR set to: 0
  7887  0ACC'                    
  7888                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 470:     if
                                  (!pp && (flags & (1 << 4))) {
  7889                           	movf	((efgtoa@pp))&0ffh,w
  7890  0ACC' 5100'              iorwf	((efgtoa@pp+1))&0ffh,w
  7891  0ACE' 1100'              	btfss	status,2
  7892  0AD0' A4D8               	goto	u7871
  7893  0AD2' EF00' F000'        	goto	u7870
  7894  0AD6' EF00' F000'        
  7895                           u7871:
  7896  0ADA'                    	goto	l5505
  7897  0ADA' EF00' F000'        u7870:
  7898  0ADE'                    	
  7899                           l5499:; BSR set to: 0
  7900  0ADE'                    
  7901                           	
  7902                           	btfss	((c:_flags)),c,(4)&7
  7903  0ADE' A810'              	goto	u7881
  7904  0AE0' EF00' F000'        	goto	u7880
  7905  0AE4' EF00' F000'        u7881:
  7906  0AE8'                    	goto	l5505
  7907  0AE8' EF00' F000'        u7880:
  7908  0AEC'                    	line	471
  7909                           	
  7910                           l5501:; BSR set to: 0
  7911  0AEC'                    
  7912                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 471:       
                                   dbuf[n++] = '.';
  7913                           	movlw	low(_dbuf)
  7914  0AEC' 0E00'              	addwf	((efgtoa@n))&0ffh,w
  7915  0AEE' 2500'              	movwf	c:fsr2l
  7916  0AF0' 6ED9               	movlw	high(_dbuf)
  7917  0AF2' 0E00'              	addwfc	((efgtoa@n+1))&0ffh,w
  7918  0AF4' 2100'              	movwf	1+c:fsr2l
  7919  0AF6' 6EDA               	movlw	low(02Eh)
  7920  0AF8' 0E2E               	movwf	indf2
  7921  0AFA' 6EDF               	
  7922                           l5503:; BSR set to: 0
  7923  0AFC'                    
  7924                           	infsnz	((efgtoa@n))&0ffh
  7925  0AFC' 4B00'              	incf	((efgtoa@n+1))&0ffh
  7926  0AFE' 2B00'              	goto	l5505
  7927  0B00' EF00' F000'        	line	472
  7928                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 472:     }

  7929                           	
  7930                           l328:; BSR set to: 0
  7931  0B04'                    
  7932                           	line	473
  7933                           	
  7934                           l5505:; BSR set to: 0
  7935  0B04'                    
  7936                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 473:     db
                                 uf[n] = '\0';
  7937                           	movlw	low(_dbuf)
  7938  0B04' 0E00'              	addwf	((efgtoa@n))&0ffh,w
  7939  0B06' 2500'              	movwf	c:fsr2l
  7940  0B08' 6ED9               	movlw	high(_dbuf)
  7941  0B0A' 0E00'              	addwfc	((efgtoa@n+1))&0ffh,w
  7942  0B0C' 2100'              	movwf	1+c:fsr2l
  7943  0B0E' 6EDA               	movlw	low(0)
  7944  0B10' 0E00               	movwf	indf2
  7945  0B12' 6EDF               	line	476
  7946                           	
  7947                           l5507:; BSR set to: 0
  7948  0B14'                    
  7949                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 476:     if
                                  (nmode == 'e') {
  7950                           		movlw	101
  7951  0B14' 0E65               	xorwf	((efgtoa@nmode))&0ffh,w
  7952  0B16' 1900'              	btfss	status,2
  7953  0B18' A4D8               	goto	u7891
  7954  0B1A' EF00' F000'        	goto	u7890
  7955  0B1E' EF00' F000'        
  7956                           u7891:
  7957  0B22'                    	goto	l5567
  7958  0B22' EF00' F000'        u7890:
  7959  0B26'                    	line	477
  7960                           	
  7961                           l5509:; BSR set to: 0
  7962  0B26'                    
  7963                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 477:       
                                   i = sizeof(dbuf) - 1;
  7964                           	movlw	high(04Fh)
  7965  0B26' 0E00               	movwf	((efgtoa@i+1))&0ffh
  7966  0B28' 6F00'              	movlw	low(04Fh)
  7967  0B2A' 0E4F               	movwf	((efgtoa@i))&0ffh
  7968  0B2C' 6F00'              	line	478
  7969                           	
  7970                           l5511:; BSR set to: 0
  7971  0B2E'                    
  7972                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 478:       
                                   dbuf[i] = '\0';
  7973                           	movlw	low(_dbuf)
  7974  0B2E' 0E00'              	addwf	((efgtoa@i))&0ffh,w
  7975  0B30' 2500'              	movwf	c:fsr2l
  7976  0B32' 6ED9               	movlw	high(_dbuf)
  7977  0B34' 0E00'              	addwfc	((efgtoa@i+1))&0ffh,w
  7978  0B36' 2100'              	movwf	1+c:fsr2l
  7979  0B38' 6EDA               	movlw	low(0)
  7980  0B3A' 0E00               	movwf	indf2
  7981  0B3C' 6EDF               	line	479
  7982                           	
  7983                           l5513:; BSR set to: 0
  7984  0B3E'                    
  7985                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 479:       
                                   sign = 0;
  7986                           	movlw	high(0)
  7987  0B3E' 0E00               	movwf	((efgtoa@sign+1))&0ffh
  7988  0B40' 6F00'              	movlw	low(0)
  7989  0B42' 0E00               	movwf	((efgtoa@sign))&0ffh
  7990  0B44' 6F00'              	line	480
  7991                           	
  7992                           l5515:; BSR set to: 0
  7993  0B46'                    
  7994                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 480:       
                                   if (e < 0) {
  7995                           	btfsc	((efgtoa@e+1))&0ffh,7
  7996  0B46' BF00'              	goto	u7900
  7997  0B48' EF00' F000'        	goto	u7901
  7998  0B4C' EF00' F000'        
  7999                           u7901:
  8000  0B50'                    	goto	l5521
  8001  0B50' EF00' F000'        u7900:
  8002  0B54'                    	line	481
  8003                           	
  8004                           l5517:; BSR set to: 0
  8005  0B54'                    
  8006                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 481:       
                                       sign = 1;
  8007                           	movlw	high(01h)
  8008  0B54' 0E00               	movwf	((efgtoa@sign+1))&0ffh
  8009  0B56' 6F00'              	movlw	low(01h)
  8010  0B58' 0E01               	movwf	((efgtoa@sign))&0ffh
  8011  0B5A' 6F00'              	line	482
  8012                           	
  8013                           l5519:; BSR set to: 0
  8014  0B5C'                    
  8015                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 482:       
                                       e = -e;
  8016                           	negf	((efgtoa@e))&0ffh
  8017  0B5C' 6D00'              	comf	((efgtoa@e+1))&0ffh
  8018  0B5E' 1F00'              	btfsc	status,0
  8019  0B60' B0D8               	incf	((efgtoa@e+1))&0ffh
  8020  0B62' 2B00'              	goto	l5521
  8021  0B64' EF00' F000'        	line	483
  8022                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 483:       
                                   }
  8023                           	
  8024                           l330:; BSR set to: 0
  8025  0B68'                    
  8026                           	line	484
  8027                           	
  8028                           l5521:; BSR set to: 0
  8029  0B68'                    
  8030                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 484:       
                                   p = 2;
  8031                           	movlw	high(02h)
  8032  0B68' 0E00               	movwf	((efgtoa@p+1))&0ffh
  8033  0B6A' 6F00'              	movlw	low(02h)
  8034  0B6C' 0E02               	movwf	((efgtoa@p))&0ffh
  8035  0B6E' 6F00'              	line	485
  8036                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 485:       
                                   while (e || (0 < p)) {
  8037                           	goto	l5533
  8038  0B70' EF00' F000'        	
  8039                           l332:; BSR set to: 0
  8040  0B74'                    
  8041                           	line	486
  8042                           	
  8043                           l5523:; BSR set to: 0
  8044  0B74'                    
  8045                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 486:       
                                       --i;
  8046                           	decf	((efgtoa@i))&0ffh
  8047  0B74' 0700'              	btfss	status,0
  8048  0B76' A0D8               	decf	((efgtoa@i+1))&0ffh
  8049  0B78' 0700'              	line	487
  8050                           	
  8051                           l5525:; BSR set to: 0
  8052  0B7A'                    
  8053                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 487:       
                                       dbuf[i] = '0' + (e % 10);
  8054                           	movlw	low(_dbuf)
  8055  0B7A' 0E00'              	addwf	((efgtoa@i))&0ffh,w
  8056  0B7C' 2500'              	movwf	c:fsr2l
  8057  0B7E' 6ED9               	movlw	high(_dbuf)
  8058  0B80' 0E00'              	addwfc	((efgtoa@i+1))&0ffh,w
  8059  0B82' 2100'              	movwf	1+c:fsr2l
  8060  0B84' 6EDA               	movff	(efgtoa@e),(c:___awmod@dividend)
  8061  0B86' C030' F00D'        	movff	(efgtoa@e+1),(c:___awmod@dividend+1)
  8062  0B8A' C031' F00E'        	movlw	high(0Ah)
  8063  0B8E' 0E00               	movwf	((c:___awmod@divisor+1)),c
  8064  0B90' 6E10'              	movlw	low(0Ah)
  8065  0B92' 0E0A               	movwf	((c:___awmod@divisor)),c
  8066  0B94' 6E0F'              	call	___awmod	;wreg free
  8067  0B96' EC00' F000'        	movf	(0+?___awmod),c,w
  8068  0B9A' 500D'              	addlw	low(030h)
  8069  0B9C' 0F30               	movwf	indf2,c
  8070  0B9E' 6EDF               
  8071                           	line	488
  8072                           	
  8073                           l5527:
  8074  0BA0'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 488:       
                                       e = e / 10;
  8075                           	movff	(efgtoa@e),(c:___awdiv@dividend)
  8076  0BA0' C030' F00D'        	movff	(efgtoa@e+1),(c:___awdiv@dividend+1)
  8077  0BA4' C031' F00E'        	movlw	high(0Ah)
  8078  0BA8' 0E00               	movwf	((c:___awdiv@divisor+1)),c
  8079  0BAA' 6E10'              	movlw	low(0Ah)
  8080  0BAC' 0E0A               	movwf	((c:___awdiv@divisor)),c
  8081  0BAE' 6E0F'              	call	___awdiv	;wreg free
  8082  0BB0' EC00' F000'        	movff	0+?___awdiv,(efgtoa@e)
  8083  0BB4' C00D' F030'        	movff	1+?___awdiv,(efgtoa@e+1)
  8084  0BB8' C00E' F031'        	line	489
  8085                           	
  8086                           l5529:
  8087  0BBC'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 489:       
                                       --p;
  8088                           	movlb	0	; () banked
  8089  0BBC' 0100               	decf	((efgtoa@p))&0ffh
  8090  0BBE' 0700'              	btfss	status,0
  8091  0BC0' A0D8               	decf	((efgtoa@p+1))&0ffh
  8092  0BC2' 0700'              	line	490
  8093                           	
  8094                           l5531:; BSR set to: 0
  8095  0BC4'                    
  8096                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 490:       
                                       --w;
  8097                           	decf	((efgtoa@w))&0ffh
  8098  0BC4' 0700'              	btfss	status,0
  8099  0BC6' A0D8               	decf	((efgtoa@w+1))&0ffh
  8100  0BC8' 0700'              	goto	l5533
  8101  0BCA' EF00' F000'        	line	491
  8102                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 491:       
                                   }
  8103                           	
  8104                           l331:; BSR set to: 0
  8105  0BCE'                    
  8106                           	line	485
  8107                           	
  8108                           l5533:; BSR set to: 0
  8109  0BCE'                    
  8110                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 485:       
                                   while (e || (0 < p)) {
  8111                           	movf	((efgtoa@e))&0ffh,w
  8112  0BCE' 5100'              iorwf	((efgtoa@e+1))&0ffh,w
  8113  0BD0' 1100'              	btfss	status,2
  8114  0BD2' A4D8               	goto	u7911
  8115  0BD4' EF00' F000'        	goto	u7910
  8116  0BD8' EF00' F000'        
  8117                           u7911:
  8118  0BDC'                    	goto	l5523
  8119  0BDC' EF00' F000'        u7910:
  8120  0BE0'                    	
  8121                           l5535:; BSR set to: 0
  8122  0BE0'                    
  8123                           	btfsc	((efgtoa@p+1))&0ffh,7
  8124  0BE0' BF00'              	goto	u7920
  8125  0BE2' EF00' F000'        	movf	((efgtoa@p+1))&0ffh,w
  8126  0BE6' 5100'              	bnz	u7921
  8127  0BE8' E106               	decf	((efgtoa@p))&0ffh,w
  8128  0BEA' 0500'              	btfsc	status,0
  8129  0BEC' B0D8               	goto	u7921
  8130  0BEE' EF00' F000'        	goto	u7920
  8131  0BF2' EF00' F000'        
  8132                           u7921:
  8133  0BF6'                    	goto	l5523
  8134  0BF6' EF00' F000'        u7920:
  8135  0BFA'                    	goto	l5537
  8136  0BFA' EF00' F000'        	
  8137                           l333:; BSR set to: 0
  8138  0BFE'                    
  8139                           	line	492
  8140                           	
  8141                           l5537:; BSR set to: 0
  8142  0BFE'                    
  8143                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 492:       
                                   --i;
  8144                           	decf	((efgtoa@i))&0ffh
  8145  0BFE' 0700'              	btfss	status,0
  8146  0C00' A0D8               	decf	((efgtoa@i+1))&0ffh
  8147  0C02' 0700'              	line	493
  8148                           	
  8149                           l5539:; BSR set to: 0
  8150  0C04'                    
  8151                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 493:       
                                   dbuf[i] = sign ? '-' : '+';
  8152                           	movf	((efgtoa@sign))&0ffh,w
  8153  0C04' 5100'              iorwf	((efgtoa@sign+1))&0ffh,w
  8154  0C06' 1100'              	btfss	status,2
  8155  0C08' A4D8               	goto	u7931
  8156  0C0A' EF00' F000'        	goto	u7930
  8157  0C0E' EF00' F000'        
  8158                           u7931:
  8159  0C12'                    	goto	l5543
  8160  0C12' EF00' F000'        u7930:
  8161  0C16'                    	
  8162                           l5541:; BSR set to: 0
  8163  0C16'                    
  8164                           	movlw	high(02Bh)
  8165  0C16' 0E00               	movwf	((_efgtoa$974+1))&0ffh
  8166  0C18' 6F00'              	movlw	low(02Bh)
  8167  0C1A' 0E2B               	movwf	((_efgtoa$974))&0ffh
  8168  0C1C' 6F00'              	goto	l5545
  8169  0C1E' EF00' F000'        	
  8170                           l335:; BSR set to: 0
  8171  0C22'                    
  8172                           	
  8173                           l5543:; BSR set to: 0
  8174  0C22'                    
  8175                           	movlw	high(02Dh)
  8176  0C22' 0E00               	movwf	((_efgtoa$974+1))&0ffh
  8177  0C24' 6F00'              	movlw	low(02Dh)
  8178  0C26' 0E2D               	movwf	((_efgtoa$974))&0ffh
  8179  0C28' 6F00'              	goto	l5545
  8180  0C2A' EF00' F000'        	
  8181                           l337:; BSR set to: 0
  8182  0C2E'                    
  8183                           	
  8184                           l5545:; BSR set to: 0
  8185  0C2E'                    
  8186                           	movlw	low(_dbuf)
  8187  0C2E' 0E00'              	addwf	((efgtoa@i))&0ffh,w
  8188  0C30' 2500'              	movwf	c:fsr2l
  8189  0C32' 6ED9               	movlw	high(_dbuf)
  8190  0C34' 0E00'              	addwfc	((efgtoa@i+1))&0ffh,w
  8191  0C36' 2100'              	movwf	1+c:fsr2l
  8192  0C38' 6EDA               	movff	(_efgtoa$974),indf2
  8193  0C3A' C00A' FFDF         
  8194                           	line	494
  8195                           	
  8196                           l5547:; BSR set to: 0
  8197  0C3E'                    
  8198                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 494:       
                                   --w;
  8199                           	decf	((efgtoa@w))&0ffh
  8200  0C3E' 0700'              	btfss	status,0
  8201  0C40' A0D8               	decf	((efgtoa@w+1))&0ffh
  8202  0C42' 0700'              	line	495
  8203                           	
  8204                           l5549:; BSR set to: 0
  8205  0C44'                    
  8206                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 496:       
                                   dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8207                           	decf	((efgtoa@i))&0ffh
  8208  0C44' 0700'              	btfss	status,0
  8209  0C46' A0D8               	decf	((efgtoa@i+1))&0ffh
  8210  0C48' 0700'              	line	496
  8211                           	
  8212                           l5551:; BSR set to: 0
  8213  0C4A'                    
  8214                           	movlw	low(0FFBFh)
  8215  0C4A' 0EBF               	movwf	(??_efgtoa+0+0)&0ffh,c
  8216  0C4C' 6E00'              	movlw	high(0FFBFh)
  8217  0C4E' 0EFF               	movwf	1+(??_efgtoa+0+0)&0ffh,c
  8218  0C50' 6E00'              	movf	((c:efgtoa@c)),c,w
  8219  0C52' 5046'              	movwf	(??_efgtoa+2+0)&0ffh,c
  8220  0C54' 6E00'              	clrf	(??_efgtoa+2+0+1)&0ffh,c
  8221  0C56' 6A00'              
  8222                           	movf	(??_efgtoa+0+0),c,w
  8223  0C58' 5047'              	addwf	(??_efgtoa+2+0),c
  8224  0C5A' 2649'              	movf	(??_efgtoa+0+1),c,w
  8225  0C5C' 5048'              	addwfc	(??_efgtoa+2+1),c
  8226  0C5E' 224A'              		movf	(??_efgtoa+2+1),c,w
  8227  0C60' 504A'              	bnz	u7940
  8228  0C62' E10A               	movlw	26
  8229  0C64' 0E1A               	subwf	 (??_efgtoa+2+0),c,w
  8230  0C66' 5C49'              	btfss	status,0
  8231  0C68' A0D8               	goto	u7941
  8232  0C6A' EF00' F000'        	goto	u7940
  8233  0C6E' EF00' F000'        
  8234                           u7941:
  8235  0C72'                    	movlw	1
  8236  0C72' 0E01               	goto	u7950
  8237  0C74' EF00' F000'        u7940:
  8238  0C78'                    	movlw	0
  8239  0C78' 0E00               u7950:
  8240  0C7A'                    	movwf	((_efgtoa$976))&0ffh
  8241  0C7A' 6F00'              	clrf	((_efgtoa$976+1))&0ffh
  8242  0C7C' 6B00'              	goto	l5555
  8243  0C7E' EF00' F000'        	
  8244                           l343:; BSR set to: 0
  8245  0C82'                    
  8246                           	
  8247                           l5553:; BSR set to: 0
  8248  0C82'                    
  8249                           	movff	(c:efgtoa@c),(c:isupper@c)
  8250  0C82' C046' F00D'        	clrf	((c:isupper@c+1)),c
  8251  0C86' 6A0E'              	call	_isupper	;wreg free
  8252  0C88' EC00' F000'        	movff	0+?_isupper,(_efgtoa$976)
  8253  0C8C' C00D' F00E'        	movff	1+?_isupper,(_efgtoa$976+1)
  8254  0C90' C00E' F00F'        	goto	l5555
  8255  0C94' EF00' F000'        	
  8256                           l345:
  8257  0C98'                    	
  8258                           l5555:
  8259  0C98'                    	movlb	0	; () banked
  8260  0C98' 0100               	movf	((_efgtoa$976))&0ffh,w
  8261  0C9A' 5100'              iorwf	((_efgtoa$976+1))&0ffh,w
  8262  0C9C' 1100'              	btfss	status,2
  8263  0C9E' A4D8               	goto	u7961
  8264  0CA0' EF00' F000'        	goto	u7960
  8265  0CA4' EF00' F000'        
  8266                           u7961:
  8267  0CA8'                    	goto	l5559
  8268  0CA8' EF00' F000'        u7960:
  8269  0CAC'                    	
  8270                           l5557:; BSR set to: 0
  8271  0CAC'                    
  8272                           	movlw	high(065h)
  8273  0CAC' 0E00               	movwf	((_efgtoa$975+1))&0ffh
  8274  0CAE' 6F00'              	movlw	low(065h)
  8275  0CB0' 0E65               	movwf	((_efgtoa$975))&0ffh
  8276  0CB2' 6F00'              	goto	l5561
  8277  0CB4' EF00' F000'        	
  8278                           l339:; BSR set to: 0
  8279  0CB8'                    
  8280                           	
  8281                           l5559:; BSR set to: 0
  8282  0CB8'                    
  8283                           	movlw	high(045h)
  8284  0CB8' 0E00               	movwf	((_efgtoa$975+1))&0ffh
  8285  0CBA' 6F00'              	movlw	low(045h)
  8286  0CBC' 0E45               	movwf	((_efgtoa$975))&0ffh
  8287  0CBE' 6F00'              	goto	l5561
  8288  0CC0' EF00' F000'        	
  8289                           l341:; BSR set to: 0
  8290  0CC4'                    
  8291                           	
  8292                           l5561:; BSR set to: 0
  8293  0CC4'                    
  8294                           	movlw	low(_dbuf)
  8295  0CC4' 0E00'              	addwf	((efgtoa@i))&0ffh,w
  8296  0CC6' 2500'              	movwf	c:fsr2l
  8297  0CC8' 6ED9               	movlw	high(_dbuf)
  8298  0CCA' 0E00'              	addwfc	((efgtoa@i+1))&0ffh,w
  8299  0CCC' 2100'              	movwf	1+c:fsr2l
  8300  0CCE' 6EDA               	movff	(_efgtoa$975),indf2
  8301  0CD0' C00C' FFDF         
  8302                           	line	497
  8303                           	
  8304                           l5563:; BSR set to: 0
  8305  0CD4'                    
  8306                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 497:       
                                   --w;
  8307                           	decf	((efgtoa@w))&0ffh
  8308  0CD4' 0700'              	btfss	status,0
  8309  0CD6' A0D8               	decf	((efgtoa@w+1))&0ffh
  8310  0CD8' 0700'              	line	498
  8311                           	
  8312                           l5565:; BSR set to: 0
  8313  0CDA'                    
  8314                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 498:       
                                   strcpy(&dbuf[n], &dbuf[i]);
  8315                           	movlw	low(_dbuf)
  8316  0CDA' 0E00'              	addwf	((efgtoa@n))&0ffh,w
  8317  0CDC' 2500'              	movwf	((c:strcpy@dest)),c
  8318  0CDE' 6E13'              	movlw	high(_dbuf)
  8319  0CE0' 0E00'              	addwfc	((efgtoa@n+1))&0ffh,w
  8320  0CE2' 2100'              	movwf	1+((c:strcpy@dest)),c
  8321  0CE4' 6E14'              	movlw	low(_dbuf)
  8322  0CE6' 0E00'              	addwf	((efgtoa@i))&0ffh,w
  8323  0CE8' 2500'              	movwf	((c:strcpy@src)),c
  8324  0CEA' 6E15'              	movlw	high(_dbuf)
  8325  0CEC' 0E00'              	addwfc	((efgtoa@i+1))&0ffh,w
  8326  0CEE' 2100'              	movwf	1+((c:strcpy@src)),c
  8327  0CF0' 6E16'              	call	_strcpy	;wreg free
  8328  0CF2' EC00' F000'        	goto	l5567
  8329  0CF6' EF00' F000'        	line	499
  8330                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 499:     }

  8331                           	
  8332                           l329:
  8333  0CFA'                    	line	502
  8334                           	
  8335                           l5567:
  8336  0CFA'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 502:     re
                                 turn pad(fp, &dbuf[0], w);
  8337                           		movff	(c:efgtoa@fp),(c:pad@fp)
  8338  0CFA' C040' F01D'        	movff	(c:efgtoa@fp+1),(c:pad@fp+1)
  8339  0CFE' C041' F01E'        
  8340                           		movlw	low(_dbuf)
  8341  0D02' 0E00'              	movwf	((c:pad@buf)),c
  8342  0D04' 6E1F'              	movlw	high(_dbuf)
  8343  0D06' 0E00'              	movwf	((c:pad@buf+1)),c
  8344  0D08' 6E20'              
  8345                           	movff	(efgtoa@w),(c:pad@p)
  8346  0D0A' C01F' F021'        	movff	(efgtoa@w+1),(c:pad@p+1)
  8347  0D0E' C020' F022'        	call	_pad	;wreg free
  8348  0D12' EC00' F000'        	movff	0+?_pad,(c:?_efgtoa)
  8349  0D16' C01D' F040'        	movff	1+?_pad,(c:?_efgtoa+1)
  8350  0D1A' C01E' F041'        	goto	l272
  8351  0D1E' EF00' F000'        	
  8352                           l5569:
  8353  0D22'                    	line	503
  8354                           	
  8355                           l272:
  8356  0D22'                    	return	;funcret
  8357  0D22' 0012               	opt stack 0
  8358                           GLOBAL	__end_of_efgtoa
  8359                           	__end_of_efgtoa:
  8360  0D24'                    	signat	_efgtoa,12410
  8361                           	global	_tolower
  8362                           
  8363 ;; *************** function _tolower *****************
  8364 ;; Defined at:
  8365 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;  c               2   19[COMRAM] int 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  2   19[COMRAM] int 
  8372 ;; Registers used:
  8373 ;;		wreg, status,2, status,0, cstack
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8379 ;;      Params:         2       0       0       0       0       0       0
  8380 ;;      Locals:         2       0       0       0       0       0       0
  8381 ;;      Temps:          4       0       0       0       0       0       0
  8382 ;;      Totals:         8       0       0       0       0       0       0
  8383 ;;Total ram usage:        8 bytes
  8384 ;; Hardware stack levels used:    1
  8385 ;; Hardware stack levels required when called:    5
  8386 ;; This function calls:
  8387 ;;		_isupper
  8388 ;; This function is called by:
  8389 ;;		_efgtoa
  8390 ;;		_vfpfcnvrt
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           psect	text14,class=CODE,space=0,reloc=2,group=2
  8394                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
  8395                           	line	4
  8396                           global __ptext14
  8397                           __ptext14:
  8398  0000'                    psect	text14
  8399                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\tolower.c"
  8400                           	line	4
  8401                           	global	__size_of_tolower
  8402                           	__size_of_tolower	equ	__end_of_tolower-_tolower
  8403  0000                     	
  8404                           _tolower:
  8405  0000'                    ;incstack = 0
  8406                           	opt	stack 21
  8407                           	line	6
  8408                           	
  8409                           l4727:
  8410  0000'                    	movlw	low(0FFBFh)
  8411  0000' 0EBF               	movwf	(??_tolower+0+0)&0ffh,c
  8412  0002' 6E00'              	movlw	high(0FFBFh)
  8413  0004' 0EFF               	movwf	1+(??_tolower+0+0)&0ffh,c
  8414  0006' 6E00'              	movff	(c:tolower@c),??_tolower+2+0
  8415  0008' C013' F017'        	movff	(c:tolower@c+1),??_tolower+2+0+1
  8416  000C' C014' F018'        	movf	(??_tolower+0+0),c,w
  8417  0010' 5015'              	addwf	(??_tolower+2+0),c
  8418  0012' 2617'              	movf	(??_tolower+0+1),c,w
  8419  0014' 5016'              	addwfc	(??_tolower+2+1),c
  8420  0016' 2218'              		movf	(??_tolower+2+1),c,w
  8421  0018' 5018'              	bnz	u6440
  8422  001A' E10A               	movlw	26
  8423  001C' 0E1A               	subwf	 (??_tolower+2+0),c,w
  8424  001E' 5C17'              	btfss	status,0
  8425  0020' A0D8               	goto	u6441
  8426  0022' EF00' F000'        	goto	u6440
  8427  0026' EF00' F000'        
  8428                           u6441:
  8429  002A'                    	movlw	1
  8430  002A' 0E01               	goto	u6450
  8431  002C' EF00' F000'        u6440:
  8432  0030'                    	movlw	0
  8433  0030' 0E00               u6450:
  8434  0032'                    	movwf	((c:_tolower$1617)),c
  8435  0032' 6E19'              	clrf	((c:_tolower$1617+1)),c
  8436  0034' 6A1A'              	goto	l4731
  8437  0036' EF00' F000'        	
  8438                           l1219:
  8439  003A'                    	
  8440                           l4729:
  8441  003A'                    	movff	(c:tolower@c),(c:isupper@c)
  8442  003A' C013' F00D'        	movff	(c:tolower@c+1),(c:isupper@c+1)
  8443  003E' C014' F00E'        	call	_isupper	;wreg free
  8444  0042' EC00' F000'        	movff	0+?_isupper,(c:_tolower$1617)
  8445  0046' C00D' F019'        	movff	1+?_isupper,(c:_tolower$1617+1)
  8446  004A' C00E' F01A'        	goto	l4731
  8447  004E' EF00' F000'        	
  8448                           l1221:
  8449  0052'                    	
  8450                           l4731:
  8451  0052'                    	movf	((c:_tolower$1617)),c,w
  8452  0052' 5019'              iorwf	((c:_tolower$1617+1)),c,w
  8453  0054' 101A'              	btfsc	status,2
  8454  0056' B4D8               	goto	u6461
  8455  0058' EF00' F000'        	goto	u6460
  8456  005C' EF00' F000'        
  8457                           u6461:
  8458  0060'                    	goto	l1217
  8459  0060' EF00' F000'        u6460:
  8460  0064'                    	
  8461                           l4733:
  8462  0064'                    	movlw	020h
  8463  0064' 0E20               	iorwf	((c:tolower@c)),c,w
  8464  0066' 1013'              	movwf	((c:?_tolower)),c
  8465  0068' 6E13'              	movf	((c:tolower@c+1)),c,w
  8466  006A' 5014'              	movwf	1+((c:?_tolower)),c
  8467  006C' 6E14'              	goto	l1222
  8468  006E' EF00' F000'        	
  8469                           l4735:
  8470  0072'                    	goto	l1222
  8471  0072' EF00' F000'        	
  8472                           l1217:
  8473  0076'                    	line	7
  8474                           	movff	(c:tolower@c),(c:?_tolower)
  8475  0076' C013' F013'        	movff	(c:tolower@c+1),(c:?_tolower+1)
  8476  007A' C014' F014'        	line	8
  8477                           	
  8478                           l1222:
  8479  007E'                    	return	;funcret
  8480  007E' 0012               	opt stack 0
  8481                           GLOBAL	__end_of_tolower
  8482                           	__end_of_tolower:
  8483  0080'                    	signat	_tolower,4218
  8484                           	global	_isupper
  8485                           
  8486 ;; *************** function _isupper *****************
  8487 ;; Defined at:
  8488 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
  8489 ;; Parameters:    Size  Location     Type
  8490 ;;  c               2   13[COMRAM] int 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;		None
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  2   13[COMRAM] int 
  8495 ;; Registers used:
  8496 ;;		wreg, status,2, status,0
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8502 ;;      Params:         2       0       0       0       0       0       0
  8503 ;;      Locals:         0       0       0       0       0       0       0
  8504 ;;      Temps:          4       0       0       0       0       0       0
  8505 ;;      Totals:         6       0       0       0       0       0       0
  8506 ;;Total ram usage:        6 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; Hardware stack levels required when called:    4
  8509 ;; This function calls:
  8510 ;;		Nothing
  8511 ;; This function is called by:
  8512 ;;		_efgtoa
  8513 ;;		_vfpfcnvrt
  8514 ;;		_tolower
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           psect	text15,class=CODE,space=0,reloc=2,group=2
  8518                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
  8519                           	line	5
  8520                           global __ptext15
  8521                           __ptext15:
  8522  0000'                    psect	text15
  8523                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
  8524                           	line	5
  8525                           	global	__size_of_isupper
  8526                           	__size_of_isupper	equ	__end_of_isupper-_isupper
  8527  0000                     	
  8528                           _isupper:
  8529  0000'                    ;incstack = 0
  8530                           	opt	stack 21
  8531                           	line	7
  8532                           	
  8533                           l4473:
  8534  0000'                    	movlw	low(0FFBFh)
  8535  0000' 0EBF               	movwf	(??_isupper+0+0)&0ffh,c
  8536  0002' 6E00'              	movlw	high(0FFBFh)
  8537  0004' 0EFF               	movwf	1+(??_isupper+0+0)&0ffh,c
  8538  0006' 6E00'              	movff	(c:isupper@c),??_isupper+2+0
  8539  0008' C00D' F011'        	movff	(c:isupper@c+1),??_isupper+2+0+1
  8540  000C' C00E' F012'        	movf	(??_isupper+0+0),c,w
  8541  0010' 500F'              	addwf	(??_isupper+2+0),c
  8542  0012' 2611'              	movf	(??_isupper+0+1),c,w
  8543  0014' 5010'              	addwfc	(??_isupper+2+1),c
  8544  0016' 2212'              		movf	(??_isupper+2+1),c,w
  8545  0018' 5012'              	bnz	u5900
  8546  001A' E10A               	movlw	26
  8547  001C' 0E1A               	subwf	 (??_isupper+2+0),c,w
  8548  001E' 5C11'              	btfss	status,0
  8549  0020' A0D8               	goto	u5901
  8550  0022' EF00' F000'        	goto	u5900
  8551  0026' EF00' F000'        
  8552                           u5901:
  8553  002A'                    	movlw	1
  8554  002A' 0E01               	goto	u5910
  8555  002C' EF00' F000'        u5900:
  8556  0030'                    	movlw	0
  8557  0030' 0E00               u5910:
  8558  0032'                    	movwf	((c:?_isupper)),c
  8559  0032' 6E0D'              	clrf	((c:?_isupper+1)),c
  8560  0034' 6A0E'              	goto	l1122
  8561  0036' EF00' F000'        	
  8562                           l4475:
  8563  003A'                    	line	8
  8564                           	
  8565                           l1122:
  8566  003A'                    	return	;funcret
  8567  003A' 0012               	opt stack 0
  8568                           GLOBAL	__end_of_isupper
  8569                           	__end_of_isupper:
  8570  003C'                    	signat	_isupper,4218
  8571                           	global	_strcpy
  8572                           
  8573 ;; *************** function _strcpy *****************
  8574 ;; Defined at:
  8575 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;  dest            2   19[COMRAM] PTR unsigned char 
  8578 ;;		 -> dbuf(80), str(10), 
  8579 ;;  src             2   21[COMRAM] PTR const unsigned char 
  8580 ;;		 -> STR_23(4), STR_22(4), STR_19(4), STR_18(4), 
  8581 ;;		 -> dbuf(80), STR_9(3), 
  8582 ;; Auto vars:     Size  Location     Type
  8583 ;;  d               2   27[COMRAM] PTR unsigned char 
  8584 ;;		 -> dbuf(80), str(10), 
  8585 ;;  s               2   25[COMRAM] PTR const unsigned char 
  8586 ;;		 -> STR_23(4), STR_22(4), STR_19(4), STR_18(4), 
  8587 ;;		 -> dbuf(80), STR_9(3), 
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  2   19[COMRAM] PTR unsigned char 
  8590 ;; Registers used:
  8591 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8597 ;;      Params:         4       0       0       0       0       0       0
  8598 ;;      Locals:         4       0       0       0       0       0       0
  8599 ;;      Temps:          2       0       0       0       0       0       0
  8600 ;;      Totals:        10       0       0       0       0       0       0
  8601 ;;Total ram usage:       10 bytes
  8602 ;; Hardware stack levels used:    1
  8603 ;; Hardware stack levels required when called:    4
  8604 ;; This function calls:
  8605 ;;		Nothing
  8606 ;; This function is called by:
  8607 ;;		_efgtoa
  8608 ;;		_strcat
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           psect	text16,class=CODE,space=0,reloc=2,group=2
  8612                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  8613                           	line	7
  8614                           global __ptext16
  8615                           __ptext16:
  8616  0000'                    psect	text16
  8617                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  8618                           	line	7
  8619                           	global	__size_of_strcpy
  8620                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  8621  0000                     	
  8622                           _strcpy:
  8623  0000'                    ;incstack = 0
  8624                           	opt	stack 24
  8625                           	line	13
  8626                           	
  8627                           l4723:
  8628  0000'                    		movff	(c:strcpy@src),(c:strcpy@s)
  8629  0000' C015' F019'        	movff	(c:strcpy@src+1),(c:strcpy@s+1)
  8630  0004' C016' F01A'        
  8631                           	line	14
  8632                           		movff	(c:strcpy@dest),(c:strcpy@d)
  8633  0008' C013' F01B'        	movff	(c:strcpy@dest+1),(c:strcpy@d+1)
  8634  000C' C014' F01C'        
  8635                           	line	15
  8636                           	goto	l4725
  8637  0010' EF00' F000'        	
  8638                           l1166:
  8639  0014'                    	goto	l4725
  8640  0014' EF00' F000'        	
  8641                           l1165:
  8642  0018'                    	
  8643                           l4725:
  8644  0018'                    	movf	((c:strcpy@s)),c,w
  8645  0018' 5019'              	movwf	(??_strcpy+0+0)&0ffh,c
  8646  001A' 6E00'              	movf	((c:strcpy@s+1)),c,w
  8647  001C' 501A'              	movwf	1+(??_strcpy+0+0)&0ffh,c
  8648  001E' 6E00'              	infsnz	((c:strcpy@s)),c
  8649  0020' 4A19'              	incf	((c:strcpy@s+1)),c
  8650  0022' 2A1A'              	movff	??_strcpy+0+0,tblptrl
  8651  0024' C017' FFF6         	movff	??_strcpy+0+1,tblptrh
  8652  0028' C018' FFF7         	clrf	tblptru
  8653  002C' 6AF8               	
  8654                           	movff	(c:strcpy@d),fsr2l
  8655  002E' C01B' FFD9         	movff	(c:strcpy@d+1),fsr2h
  8656  0032' C01C' FFDA         	infsnz	((c:strcpy@d)),c
  8657  0036' 4A1B'              	incf	((c:strcpy@d+1)),c
  8658  0038' 2A1C'              	movlw	high __ramtop-1
  8659  003A' 0EFF'              	cpfsgt	tblptrh
  8660  003C' 64F7               	bra	u6427
  8661  003E' D003               	tblrd	*
  8662  0040' 0008               	
  8663                           	movf	tablat,w
  8664  0042' 50F5               	bra	u6420
  8665  0044' D005               u6427:
  8666  0046'                    	movff	tblptrl,fsr0l
  8667  0046' CFF6 FFE9          	movff	tblptrh,fsr0h
  8668  004A' CFF7 FFEA          	movf	indf0,w
  8669  004E' 50EF               u6420:
  8670  0050'                    	movwf	indf2
  8671  0050' 6EDF               	movf	indf2,w
  8672  0052' 50DF               	btfss	status,2
  8673  0054' A4D8               	goto	u6431
  8674  0056' EF00' F000'        	goto	u6430
  8675  005A' EF00' F000'        u6431:
  8676  005E'                    	goto	l4725
  8677  005E' EF00' F000'        u6430:
  8678  0062'                    	goto	l1168
  8679  0062' EF00' F000'        	
  8680                           l1167:
  8681  0066'                    	line	18
  8682                           ;	Return value of _strcpy is never used
  8683                           	
  8684                           l1168:
  8685  0066'                    	return	;funcret
  8686  0066' 0012               	opt stack 0
  8687                           GLOBAL	__end_of_strcpy
  8688                           	__end_of_strcpy:
  8689  0068'                    	signat	_strcpy,8314
  8690                           	global	_pad
  8691                           
  8692 ;; *************** function _pad *****************
  8693 ;; Defined at:
  8694 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  8697 ;;		 -> sprintf@f(6), 
  8698 ;;  buf             2   31[COMRAM] PTR unsigned char 
  8699 ;;		 -> dbuf(80), 
  8700 ;;  p               2   33[COMRAM] int 
  8701 ;; Auto vars:     Size  Location     Type
  8702 ;;  w               2   38[COMRAM] int 
  8703 ;;  i               2   36[COMRAM] int 
  8704 ;; Return value:  Size  Location     Type
  8705 ;;                  2   29[COMRAM] int 
  8706 ;; Registers used:
  8707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/0
  8710 ;;		On exit  : 0/0
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8713 ;;      Params:         6       0       0       0       0       0       0
  8714 ;;      Locals:         4       0       0       0       0       0       0
  8715 ;;      Temps:          1       0       0       0       0       0       0
  8716 ;;      Totals:        11       0       0       0       0       0       0
  8717 ;;Total ram usage:       11 bytes
  8718 ;; Hardware stack levels used:    1
  8719 ;; Hardware stack levels required when called:    7
  8720 ;; This function calls:
  8721 ;;		_fputc
  8722 ;;		_fputs
  8723 ;;		_strlen
  8724 ;; This function is called by:
  8725 ;;		_efgtoa
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           psect	text17,class=CODE,space=0,reloc=2,group=0
  8729                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  8730                           	line	72
  8731                           global __ptext17
  8732                           __ptext17:
  8733  0000'                    psect	text17
  8734                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  8735                           	line	72
  8736                           	global	__size_of_pad
  8737                           	__size_of_pad	equ	__end_of_pad-_pad
  8738  0000                     	
  8739                           _pad:
  8740  0000'                    ;incstack = 0
  8741                           	opt	stack 18
  8742                           	line	77
  8743                           	
  8744                           l4679:
  8745  0000'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
                                 int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
                                 \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8746                           	
  8747                           	btfss	((c:_flags)),c,(0)&7
  8748  0000' A010'              	goto	u6311
  8749  0002' EF00' F000'        	goto	u6310
  8750  0006' EF00' F000'        u6311:
  8751  000A'                    	goto	l4683
  8752  000A' EF00' F000'        u6310:
  8753  000E'                    	line	78
  8754                           	
  8755                           l4681:
  8756  000E'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
                                  fputs((const char *)buf, fp);
  8757                           		movff	(c:pad@buf),(c:fputs@s)
  8758  000E' C01F' F016'        	movff	(c:pad@buf+1),(c:fputs@s+1)
  8759  0012' C020' F017'        
  8760                           		movff	(c:pad@fp),(c:fputs@fp)
  8761  0016' C01D' F018'        	movff	(c:pad@fp+1),(c:fputs@fp+1)
  8762  001A' C01E' F019'        
  8763                           	call	_fputs	;wreg free
  8764  001E' EC00' F000'        	goto	l4683
  8765  0022' EF00' F000'        	line	79
  8766                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
  8767                           	
  8768                           l245:
  8769  0026'                    	line	82
  8770                           	
  8771                           l4683:
  8772  0026'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
                                  (p < 0) ? 0 : p;
  8773                           	btfsc	((c:pad@p+1)),c,7
  8774  0026' BE22'              	goto	u6321
  8775  0028' EF00' F000'        	goto	u6320
  8776  002C' EF00' F000'        
  8777                           u6321:
  8778  0030'                    	goto	l4687
  8779  0030' EF00' F000'        u6320:
  8780  0034'                    	
  8781                           l4685:
  8782  0034'                    	movff	(c:pad@p),(c:pad@w)
  8783  0034' C021' F026'        	movff	(c:pad@p+1),(c:pad@w+1)
  8784  0038' C022' F027'        	goto	l249
  8785  003C' EF00' F000'        	
  8786                           l247:
  8787  0040'                    	
  8788                           l4687:
  8789  0040'                    	movlw	high(0)
  8790  0040' 0E00               	movwf	((c:pad@w+1)),c
  8791  0042' 6E27'              	movlw	low(0)
  8792  0044' 0E00               	movwf	((c:pad@w)),c
  8793  0046' 6E26'              	
  8794                           l249:
  8795  0048'                    	line	83
  8796                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
                                  0;
  8797                           	movlw	high(0)
  8798  0048' 0E00               	movwf	((c:pad@i+1)),c
  8799  004A' 6E25'              	movlw	low(0)
  8800  004C' 0E00               	movwf	((c:pad@i)),c
  8801  004E' 6E24'              	line	84
  8802                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  8803                           	goto	l4693
  8804  0050' EF00' F000'        	
  8805                           l251:
  8806  0054'                    	line	85
  8807                           	
  8808                           l4689:
  8809  0054'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
                                  fputc(' ', fp);
  8810                           	movlw	high(020h)
  8811  0054' 0E00               	movwf	((c:fputc@c+1)),c
  8812  0056' 6E0E'              	movlw	low(020h)
  8813  0058' 0E20               	movwf	((c:fputc@c)),c
  8814  005A' 6E0D'              		movff	(c:pad@fp),(c:fputc@fp)
  8815  005C' C01D' F00F'        	movff	(c:pad@fp+1),(c:fputc@fp+1)
  8816  0060' C01E' F010'        
  8817                           	call	_fputc	;wreg free
  8818  0064' EC00' F000'        	line	86
  8819                           	
  8820                           l4691:
  8821  0068'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
                                  ++i;
  8822                           	infsnz	((c:pad@i)),c
  8823  0068' 4A24'              	incf	((c:pad@i+1)),c
  8824  006A' 2A25'              	goto	l4693
  8825  006C' EF00' F000'        	line	87
  8826                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
  8827                           	
  8828                           l250:
  8829  0070'                    	line	84
  8830                           	
  8831                           l4693:
  8832  0070'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  8833                           		movf	((c:pad@w)),c,w
  8834  0070' 5026'              	subwf	((c:pad@i)),c,w
  8835  0072' 5C24'              	movf	((c:pad@i+1)),c,w
  8836  0074' 5025'              	xorlw	80h
  8837  0076' 0A80               	movwf	(??_pad+0+0)&0ffh,c
  8838  0078' 6E00'              	movf	((c:pad@w+1)),c,w
  8839  007A' 5027'              	xorlw	80h
  8840  007C' 0A80               	subwfb	(??_pad+0+0)&0ffh,c,w
  8841  007E' 5800'              	btfss	status,0
  8842  0080' A0D8               	goto	u6331
  8843  0082' EF00' F000'        	goto	u6330
  8844  0086' EF00' F000'        
  8845                           u6331:
  8846  008A'                    	goto	l4689
  8847  008A' EF00' F000'        u6330:
  8848  008E'                    	
  8849                           l252:
  8850  008E'                    	line	90
  8851                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
                                 (!(flags & (1 << 0))) {
  8852                           	
  8853                           	btfsc	((c:_flags)),c,(0)&7
  8854  008E' B010'              	goto	u6341
  8855  0090' EF00' F000'        	goto	u6340
  8856  0094' EF00' F000'        u6341:
  8857  0098'                    	goto	l4697
  8858  0098' EF00' F000'        u6340:
  8859  009C'                    	line	91
  8860                           	
  8861                           l4695:
  8862  009C'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
                                  fputs((const char *)buf, fp);
  8863                           		movff	(c:pad@buf),(c:fputs@s)
  8864  009C' C01F' F016'        	movff	(c:pad@buf+1),(c:fputs@s+1)
  8865  00A0' C020' F017'        
  8866                           		movff	(c:pad@fp),(c:fputs@fp)
  8867  00A4' C01D' F018'        	movff	(c:pad@fp+1),(c:fputs@fp+1)
  8868  00A8' C01E' F019'        
  8869                           	call	_fputs	;wreg free
  8870  00AC' EC00' F000'        	goto	l4697
  8871  00B0' EF00' F000'        	line	92
  8872                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
  8873                           	
  8874                           l253:
  8875  00B4'                    	line	94
  8876                           	
  8877                           l4697:
  8878  00B4'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
                                 urn strlen(buf) + w;
  8879                           		movff	(c:pad@buf),(c:strlen@s)
  8880  00B4' C01F' F00D'        	movff	(c:pad@buf+1),(c:strlen@s+1)
  8881  00B8' C020' F00E'        
  8882                           	call	_strlen	;wreg free
  8883  00BC' EC00' F000'        	movf	((c:pad@w)),c,w
  8884  00C0' 5026'              	addwf	(0+?_strlen),c,w
  8885  00C2' 240D'              	movwf	((c:?_pad)),c
  8886  00C4' 6E1D'              	movf	((c:pad@w+1)),c,w
  8887  00C6' 5027'              	addwfc	(1+?_strlen),c,w
  8888  00C8' 200E'              	movwf	1+((c:?_pad)),c
  8889  00CA' 6E1E'              	goto	l254
  8890  00CC' EF00' F000'        	
  8891                           l4699:
  8892  00D0'                    	line	95
  8893                           	
  8894                           l254:
  8895  00D0'                    	return	;funcret
  8896  00D0' 0012               	opt stack 0
  8897                           GLOBAL	__end_of_pad
  8898                           	__end_of_pad:
  8899  00D2'                    	signat	_pad,12410
  8900                           	global	_strlen
  8901                           
  8902 ;; *************** function _strlen *****************
  8903 ;; Defined at:
  8904 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  8905 ;; Parameters:    Size  Location     Type
  8906 ;;  s               2   13[COMRAM] PTR const unsigned char 
  8907 ;;		 -> dbuf(80), STR_17(6), STR_15(6), STR_13(6), 
  8908 ;;		 -> STR_11(6), STR_7(5), str(10), 
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;  a               2   17[COMRAM] PTR const unsigned char 
  8911 ;;		 -> dbuf(80), STR_17(6), STR_15(6), STR_13(6), 
  8912 ;;		 -> STR_11(6), STR_7(5), str(10), 
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  2   13[COMRAM] unsigned int 
  8915 ;; Registers used:
  8916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  8917 ;; Tracked objects:
  8918 ;;		On entry : 0/0
  8919 ;;		On exit  : 0/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8922 ;;      Params:         2       0       0       0       0       0       0
  8923 ;;      Locals:         2       0       0       0       0       0       0
  8924 ;;      Temps:          2       0       0       0       0       0       0
  8925 ;;      Totals:         6       0       0       0       0       0       0
  8926 ;;Total ram usage:        6 bytes
  8927 ;; Hardware stack levels used:    1
  8928 ;; Hardware stack levels required when called:    4
  8929 ;; This function calls:
  8930 ;;		Nothing
  8931 ;; This function is called by:
  8932 ;;		_pad
  8933 ;;		_strcat
  8934 ;;		_strstr
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           psect	text18,class=CODE,space=0,reloc=2,group=2
  8938                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  8939                           	line	12
  8940                           global __ptext18
  8941                           __ptext18:
  8942  0000'                    psect	text18
  8943                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  8944                           	line	12
  8945                           	global	__size_of_strlen
  8946                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  8947  0000                     	
  8948                           _strlen:
  8949  0000'                    ;incstack = 0
  8950                           	opt	stack 25
  8951                           	line	14
  8952                           	
  8953                           l4463:
  8954  0000'                    		movff	(c:strlen@s),(c:strlen@a)
  8955  0000' C00D' F011'        	movff	(c:strlen@s+1),(c:strlen@a+1)
  8956  0004' C00E' F012'        
  8957                           	line	16
  8958                           	goto	l4467
  8959  0008' EF00' F000'        	
  8960                           l1172:
  8961  000C'                    	line	17
  8962                           	
  8963                           l4465:
  8964  000C'                    	infsnz	((c:strlen@s)),c
  8965  000C' 4A0D'              	incf	((c:strlen@s+1)),c
  8966  000E' 2A0E'              	goto	l4467
  8967  0010' EF00' F000'        	line	18
  8968                           	
  8969                           l1171:
  8970  0014'                    	line	16
  8971                           	
  8972                           l4467:
  8973  0014'                    	movff	(c:strlen@s),tblptrl
  8974  0014' C00D' FFF6         	movff	(c:strlen@s+1),tblptrh
  8975  0018' C00E' FFF7         	clrf	tblptru
  8976  001C' 6AF8               	
  8977                           	movlw	high __ramtop-1
  8978  001E' 0EFF'              	cpfsgt	tblptrh
  8979  0020' 64F7               	bra	u5887
  8980  0022' D003               	tblrd	*
  8981  0024' 0008               	
  8982                           	movf	tablat,w
  8983  0026' 50F5               	bra	u5880
  8984  0028' D005               u5887:
  8985  002A'                    	movff	tblptrl,fsr0l
  8986  002A' CFF6 FFE9          	movff	tblptrh,fsr0h
  8987  002E' CFF7 FFEA          	movf	indf0,w
  8988  0032' 50EF               u5880:
  8989  0034'                    	iorlw	0
  8990  0034' 0900               	btfss	status,2
  8991  0036' A4D8               	goto	u5891
  8992  0038' EF00' F000'        	goto	u5890
  8993  003C' EF00' F000'        u5891:
  8994  0040'                    	goto	l4465
  8995  0040' EF00' F000'        u5890:
  8996  0044'                    	goto	l4469
  8997  0044' EF00' F000'        	
  8998                           l1173:
  8999  0048'                    	line	25
  9000                           	
  9001                           l4469:
  9002  0048'                    	movff	(c:strlen@a),??_strlen+0+0
  9003  0048' C011' F00F'        	movff	(c:strlen@a+1),??_strlen+0+0+1
  9004  004C' C012' F010'        	comf	(??_strlen+0+0),c
  9005  0050' 1E0F'              	comf	(??_strlen+0+1),c
  9006  0052' 1E10'              	infsnz	(??_strlen+0+0),c
  9007  0054' 4A0F'              	incf	(??_strlen+0+1),c
  9008  0056' 2A10'              	movf	((c:strlen@s)),c,w
  9009  0058' 500D'              	addwf	(??_strlen+0+0),c,w
  9010  005A' 240F'              	movwf	((c:?_strlen)),c
  9011  005C' 6E0D'              	movf	((c:strlen@s+1)),c,w
  9012  005E' 500E'              	addwfc	(??_strlen+0+1),c,w
  9013  0060' 2010'              	movwf	1+((c:?_strlen)),c
  9014  0062' 6E0E'              	goto	l1174
  9015  0064' EF00' F000'        	
  9016                           l4471:
  9017  0068'                    	line	26
  9018                           	
  9019                           l1174:
  9020  0068'                    	return	;funcret
  9021  0068' 0012               	opt stack 0
  9022                           GLOBAL	__end_of_strlen
  9023                           	__end_of_strlen:
  9024  006A'                    	signat	_strlen,4218
  9025                           	global	_fputs
  9026                           
  9027 ;; *************** function _fputs *****************
  9028 ;; Defined at:
  9029 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  s               2   22[COMRAM] PTR const unsigned char 
  9032 ;;		 -> dbuf(80), 
  9033 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  9034 ;;		 -> sprintf@f(6), 
  9035 ;; Auto vars:     Size  Location     Type
  9036 ;;  i               2   27[COMRAM] int 
  9037 ;;  c               1   26[COMRAM] unsigned char 
  9038 ;; Return value:  Size  Location     Type
  9039 ;;                  2   22[COMRAM] int 
  9040 ;; Registers used:
  9041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9042 ;; Tracked objects:
  9043 ;;		On entry : 0/0
  9044 ;;		On exit  : 0/0
  9045 ;;		Unchanged: 0/0
  9046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9047 ;;      Params:         4       0       0       0       0       0       0
  9048 ;;      Locals:         3       0       0       0       0       0       0
  9049 ;;      Temps:          0       0       0       0       0       0       0
  9050 ;;      Totals:         7       0       0       0       0       0       0
  9051 ;;Total ram usage:        7 bytes
  9052 ;; Hardware stack levels used:    1
  9053 ;; Hardware stack levels required when called:    6
  9054 ;; This function calls:
  9055 ;;		_fputc
  9056 ;; This function is called by:
  9057 ;;		_pad
  9058 ;; This function uses a non-reentrant model
  9059 ;;
  9060                           psect	text19,class=CODE,space=0,reloc=2,group=2
  9061                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  9062                           	line	8
  9063                           global __ptext19
  9064                           __ptext19:
  9065  0000'                    psect	text19
  9066                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  9067                           	line	8
  9068                           	global	__size_of_fputs
  9069                           	__size_of_fputs	equ	__end_of_fputs-_fputs
  9070  0000                     	
  9071                           _fputs:
  9072  0000'                    ;incstack = 0
  9073                           	opt	stack 18
  9074                           	line	13
  9075                           	
  9076                           l4455:
  9077  0000'                    	movlw	high(0)
  9078  0000' 0E00               	movwf	((c:fputs@i+1)),c
  9079  0002' 6E1C'              	movlw	low(0)
  9080  0004' 0E00               	movwf	((c:fputs@i)),c
  9081  0006' 6E1B'              	line	14
  9082                           	goto	l4461
  9083  0008' EF00' F000'        	
  9084                           l1143:
  9085  000C'                    	line	15
  9086                           	
  9087                           l4457:
  9088  000C'                    	movff	(c:fputs@c),(c:fputc@c)
  9089  000C' C01A' F00D'        	clrf	((c:fputc@c+1)),c
  9090  0010' 6A0E'              		movff	(c:fputs@fp),(c:fputc@fp)
  9091  0012' C018' F00F'        	movff	(c:fputs@fp+1),(c:fputc@fp+1)
  9092  0016' C019' F010'        
  9093                           	call	_fputc	;wreg free
  9094  001A' EC00' F000'        	line	16
  9095                           	
  9096                           l4459:
  9097  001E'                    	infsnz	((c:fputs@i)),c
  9098  001E' 4A1B'              	incf	((c:fputs@i+1)),c
  9099  0020' 2A1C'              	goto	l4461
  9100  0022' EF00' F000'        	line	17
  9101                           	
  9102                           l1142:
  9103  0026'                    	line	14
  9104                           	
  9105                           l4461:
  9106  0026'                    	movf	((c:fputs@i)),c,w
  9107  0026' 501B'              	addwf	((c:fputs@s)),c,w
  9108  0028' 2416'              	movwf	c:fsr2l
  9109  002A' 6ED9               	movf	((c:fputs@i+1)),c,w
  9110  002C' 501C'              	addwfc	((c:fputs@s+1)),c,w
  9111  002E' 2017'              	movwf	1+c:fsr2l
  9112  0030' 6EDA               	movf	indf2,w
  9113  0032' 50DF               	movwf	((c:fputs@c)),c
  9114  0034' 6E1A'              	movf	((c:fputs@c)),c,w
  9115  0036' 501A'              	btfss	status,2
  9116  0038' A4D8               	goto	u5871
  9117  003A' EF00' F000'        	goto	u5870
  9118  003E' EF00' F000'        u5871:
  9119  0042'                    	goto	l4457
  9120  0042' EF00' F000'        u5870:
  9121  0046'                    	goto	l1145
  9122  0046' EF00' F000'        	
  9123                           l1144:
  9124  004A'                    	line	19
  9125                           ;	Return value of _fputs is never used
  9126                           	
  9127                           l1145:
  9128  004A'                    	return	;funcret
  9129  004A' 0012               	opt stack 0
  9130                           GLOBAL	__end_of_fputs
  9131                           	__end_of_fputs:
  9132  004C'                    	signat	_fputs,8314
  9133                           	global	_fputc
  9134                           
  9135 ;; *************** function _fputc *****************
  9136 ;; Defined at:
  9137 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;  c               2   13[COMRAM] int 
  9140 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  9141 ;;		 -> sprintf@f(6), 
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;		None
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  2   13[COMRAM] int 
  9146 ;; Registers used:
  9147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9153 ;;      Params:         4       0       0       0       0       0       0
  9154 ;;      Locals:         0       0       0       0       0       0       0
  9155 ;;      Temps:          5       0       0       0       0       0       0
  9156 ;;      Totals:         9       0       0       0       0       0       0
  9157 ;;Total ram usage:        9 bytes
  9158 ;; Hardware stack levels used:    1
  9159 ;; Hardware stack levels required when called:    5
  9160 ;; This function calls:
  9161 ;;		_putch
  9162 ;; This function is called by:
  9163 ;;		_pad
  9164 ;;		_vfpfcnvrt
  9165 ;;		_fputs
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           psect	text20,class=CODE,space=0,reloc=2,group=2
  9169                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  9170                           	line	8
  9171                           global __ptext20
  9172                           __ptext20:
  9173  0000'                    psect	text20
  9174                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  9175                           	line	8
  9176                           	global	__size_of_fputc
  9177                           	__size_of_fputc	equ	__end_of_fputc-_fputc
  9178  0000                     	
  9179                           _fputc:
  9180  0000'                    ;incstack = 0
  9181                           	opt	stack 21
  9182                           	line	12
  9183                           	
  9184                           l4441:
  9185  0000'                    	movf	((c:fputc@fp)),c,w
  9186  0000' 500F'              iorwf	((c:fputc@fp+1)),c,w
  9187  0002' 1010'              	btfsc	status,2
  9188  0004' B4D8               	goto	u5831
  9189  0006' EF00' F000'        	goto	u5830
  9190  000A' EF00' F000'        
  9191                           u5831:
  9192  000E'                    	goto	l4445
  9193  000E' EF00' F000'        u5830:
  9194  0012'                    	
  9195                           l4443:
  9196  0012'                    	movf	((c:fputc@fp)),c,w
  9197  0012' 500F'              iorwf	((c:fputc@fp+1)),c,w
  9198  0014' 1010'              	btfss	status,2
  9199  0016' A4D8               	goto	u5841
  9200  0018' EF00' F000'        	goto	u5840
  9201  001C' EF00' F000'        
  9202                           u5841:
  9203  0020'                    	goto	l4447
  9204  0020' EF00' F000'        u5840:
  9205  0024'                    	goto	l4445
  9206  0024' EF00' F000'        	
  9207                           l1132:
  9208  0028'                    	line	13
  9209                           	
  9210                           l4445:
  9211  0028'                    	movf	((c:fputc@c)),c,w
  9212  0028' 500D'              	
  9213                           	call	_putch
  9214  002A' EC00' F000'        	line	14
  9215                           	goto	l1137
  9216  002E' EF00' F000'        	
  9217                           l1130:
  9218  0032'                    	line	15
  9219                           	
  9220                           l4447:
  9221  0032'                    	lfsr	2,04h
  9222  0032' EE20 F004          	movf	((c:fputc@fp)),c,w
  9223  0036' 500F'              	addwf	fsr2l
  9224  0038' 26D9               	movf	((c:fputc@fp+1)),c,w
  9225  003A' 5010'              	addwfc	fsr2h
  9226  003C' 22DA               	movf	postinc2,w
  9227  003E' 50DE               iorwf	postinc2,w
  9228  0040' 10DE               	btfsc	status,2
  9229  0042' B4D8               	goto	u5851
  9230  0044' EF00' F000'        	goto	u5850
  9231  0048' EF00' F000'        
  9232                           u5851:
  9233  004C'                    	goto	l4451
  9234  004C' EF00' F000'        u5850:
  9235  0050'                    	
  9236                           l4449:
  9237  0050'                    	lfsr	2,04h
  9238  0050' EE20 F004          	movf	((c:fputc@fp)),c,w
  9239  0054' 500F'              	addwf	fsr2l
  9240  0056' 26D9               	movf	((c:fputc@fp+1)),c,w
  9241  0058' 5010'              	addwfc	fsr2h
  9242  005A' 22DA               	lfsr	1,02h
  9243  005C' EE10 F002          	movf	((c:fputc@fp)),c,w
  9244  0060' 500F'              	addwf	fsr1l
  9245  0062' 26E1               	movf	((c:fputc@fp+1)),c,w
  9246  0064' 5010'              	addwfc	fsr1h
  9247  0066' 22E2               		movf	postinc2,w
  9248  0068' 50DE               	subwf	postinc1,w
  9249  006A' 5CE6               	movf	postinc1,w
  9250  006C' 50E6               	xorlw	80h
  9251  006E' 0A80               	movwf	(??_fputc+4+0)&0ffh,c
  9252  0070' 6E00'              	movf	postinc2,w
  9253  0072' 50DE               	xorlw	80h
  9254  0074' 0A80               	subwfb	(??_fputc+4+0)&0ffh,c,w
  9255  0076' 5800'              	btfsc	status,0
  9256  0078' B0D8               	goto	u5861
  9257  007A' EF00' F000'        	goto	u5860
  9258  007E' EF00' F000'        
  9259                           u5861:
  9260  0082'                    	goto	l1137
  9261  0082' EF00' F000'        u5860:
  9262  0086'                    	goto	l4451
  9263  0086' EF00' F000'        	
  9264                           l1136:
  9265  008A'                    	line	16
  9266                           	
  9267                           l4451:
  9268  008A'                    	lfsr	2,02h
  9269  008A' EE20 F002          	movf	((c:fputc@fp)),c,w
  9270  008E' 500F'              	addwf	fsr2l
  9271  0090' 26D9               	movf	((c:fputc@fp+1)),c,w
  9272  0092' 5010'              	addwfc	fsr2h
  9273  0094' 22DA               	movff	postinc2,??_fputc+0+0
  9274  0096' CFDE F011'         	movff	postdec2,??_fputc+0+0+1
  9275  009A' CFDD F012'         	movff	(c:fputc@fp),fsr2l
  9276  009E' C00F' FFD9         	movff	(c:fputc@fp+1),fsr2h
  9277  00A2' C010' FFDA         	movff	postinc2,??_fputc+2+0
  9278  00A6' CFDE F013'         	movff	postdec2,??_fputc+2+0+1
  9279  00AA' CFDD F014'         	movf	(??_fputc+0+0),c,w
  9280  00AE' 5011'              	addwf	(??_fputc+2+0),c,w
  9281  00B0' 2413'              	movwf	c:fsr2l
  9282  00B2' 6ED9               	movf	(??_fputc+0+1),c,w
  9283  00B4' 5012'              	addwfc	(??_fputc+2+1),c,w
  9284  00B6' 2014'              	movwf	1+c:fsr2l
  9285  00B8' 6EDA               	movff	(c:fputc@c),indf2
  9286  00BA' C00D' FFDF         
  9287                           	line	17
  9288                           	lfsr	2,02h
  9289  00BE' EE20 F002          	movf	((c:fputc@fp)),c,w
  9290  00C2' 500F'              	addwf	fsr2l
  9291  00C4' 26D9               	movf	((c:fputc@fp+1)),c,w
  9292  00C6' 5010'              	addwfc	fsr2h
  9293  00C8' 22DA               	incf	postinc2
  9294  00CA' 2ADE               	movlw	0
  9295  00CC' 0E00               	addwfc	postdec2
  9296  00CE' 22DD               	goto	l1137
  9297  00D0' EF00' F000'        	line	18
  9298                           	
  9299                           l1134:
  9300  00D4'                    	goto	l1137
  9301  00D4' EF00' F000'        	line	19
  9302                           	
  9303                           l1133:
  9304  00D8'                    	goto	l1137
  9305  00D8' EF00' F000'        	line	20
  9306                           	
  9307                           l4453:
  9308  00DC'                    	line	21
  9309                           ;	Return value of _fputc is never used
  9310                           	
  9311                           l1137:
  9312  00DC'                    	return	;funcret
  9313  00DC' 0012               	opt stack 0
  9314                           GLOBAL	__end_of_fputc
  9315                           	__end_of_fputc:
  9316  00DE'                    	signat	_fputc,8314
  9317                           	global	_putch
  9318                           
  9319 ;; *************** function _putch *****************
  9320 ;; Defined at:
  9321 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;  c               1    wreg     unsigned char 
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;  c               1    0[COMRAM] unsigned char 
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  1    wreg      void 
  9328 ;; Registers used:
  9329 ;;		wreg
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9335 ;;      Params:         0       0       0       0       0       0       0
  9336 ;;      Locals:         0       0       0       0       0       0       0
  9337 ;;      Temps:          0       0       0       0       0       0       0
  9338 ;;      Totals:         0       0       0       0       0       0       0
  9339 ;;Total ram usage:        0 bytes
  9340 ;; Hardware stack levels used:    1
  9341 ;; Hardware stack levels required when called:    4
  9342 ;; This function calls:
  9343 ;;		Nothing
  9344 ;; This function is called by:
  9345 ;;		_fputc
  9346 ;; This function uses a non-reentrant model
  9347 ;;
  9348                           psect	text21,class=CODE,space=0,reloc=2,group=2
  9349                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  9350                           	line	7
  9351                           global __ptext21
  9352                           __ptext21:
  9353  0000'                    psect	text21
  9354                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  9355                           	line	7
  9356                           	global	__size_of_putch
  9357                           	__size_of_putch	equ	__end_of_putch-_putch
  9358  0000                     	
  9359                           _putch:
  9360  0000'                    ;incstack = 0
  9361                           	opt	stack 21
  9362                           	line	9
  9363                           	
  9364                           l1155:
  9365  0000'                    	return	;funcret
  9366  0000' 0012               	opt stack 0
  9367                           GLOBAL	__end_of_putch
  9368                           	__end_of_putch:
  9369  0002'                    	signat	_putch,4217
  9370                           	global	_floorf
  9371                           
  9372 ;; *************** function _floorf *****************
  9373 ;; Defined at:
  9374 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
  9375 ;; Parameters:    Size  Location     Type
  9376 ;;  x               4   38[COMRAM] float 
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;  u               4   54[COMRAM] struct .
  9379 ;;  m               4   48[COMRAM] unsigned long 
  9380 ;;  e               2   52[COMRAM] int 
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  4   38[COMRAM] float 
  9383 ;; Registers used:
  9384 ;;		wreg, status,2, status,0
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/0
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9390 ;;      Params:         4       0       0       0       0       0       0
  9391 ;;      Locals:        10       0       0       0       0       0       0
  9392 ;;      Temps:          6       0       0       0       0       0       0
  9393 ;;      Totals:        20       0       0       0       0       0       0
  9394 ;;Total ram usage:       20 bytes
  9395 ;; Hardware stack levels used:    1
  9396 ;; Hardware stack levels required when called:    4
  9397 ;; This function calls:
  9398 ;;		Nothing
  9399 ;; This function is called by:
  9400 ;;		_efgtoa
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           psect	text22,class=CODE,space=0,reloc=2,group=2
  9404                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
  9405                           	line	3
  9406                           global __ptext22
  9407                           __ptext22:
  9408  0000'                    psect	text22
  9409                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\floorf.c"
  9410                           	line	3
  9411                           	global	__size_of_floorf
  9412                           	__size_of_floorf	equ	__end_of_floorf-_floorf
  9413  0000                     	
  9414                           _floorf:
  9415  0000'                    ;incstack = 0
  9416                           	opt	stack 21
  9417                           	line	5
  9418                           	
  9419                           l4737:
  9420  0000'                    	movff	(c:floorf@F520),(c:floorf@u)
  9421  0000' C000' F036'        	movff	(c:floorf@F520+1),(c:floorf@u+1)
  9422  0004' C001' F037'        	movff	(c:floorf@F520+2),(c:floorf@u+2)
  9423  0008' C002' F038'        	movff	(c:floorf@F520+3),(c:floorf@u+3)
  9424  000C' C003' F039'        	movff	(c:floorf@x),(c:floorf@u)
  9425  0010' C026' F036'        	movff	(c:floorf@x+1),(c:floorf@u+1)
  9426  0014' C027' F037'        	movff	(c:floorf@x+2),(c:floorf@u+2)
  9427  0018' C028' F038'        	movff	(c:floorf@x+3),(c:floorf@u+3)
  9428  001C' C029' F039'        	line	6
  9429                           	
  9430                           l4739:
  9431  0020'                    	movlw	low(-127)
  9432  0020' 0E81               	movwf	(??_floorf+0+0)&0ffh,c
  9433  0022' 6E00'              	movlw	high(-127)
  9434  0024' 0EFF               	movwf	1+(??_floorf+0+0)&0ffh,c
  9435  0026' 6E00'              	movff	(c:floorf@u),??_floorf+2+0
  9436  0028' C036' F02C'        	movff	(c:floorf@u+1),??_floorf+2+0+1
  9437  002C' C037' F02D'        	movff	(c:floorf@u+2),??_floorf+2+0+2
  9438  0030' C038' F02E'        	movff	(c:floorf@u+3),??_floorf+2+0+3
  9439  0034' C039' F02F'        	movlw	017h+1
  9440  0038' 0E18               	goto	u6470
  9441  003A' EF00' F000'        u6475:
  9442  003E'                    	bcf	status,0
  9443  003E' 90D8               	rrcf	(??_floorf+2+3),c
  9444  0040' 322F'              	rrcf	(??_floorf+2+2),c
  9445  0042' 322E'              	rrcf	(??_floorf+2+1),c
  9446  0044' 322D'              	rrcf	(??_floorf+2+0),c
  9447  0046' 322C'              u6470:
  9448  0048'                    	decfsz	wreg
  9449  0048' 2EE8               	goto	u6475
  9450  004A' EF00' F000'        	movf	(??_floorf+2+0),c,w
  9451  004E' 502C'              	addwf	(??_floorf+0+0),c,w
  9452  0050' 242A'              	movwf	((c:floorf@e)),c
  9453  0052' 6E34'              	movlw	0
  9454  0054' 0E00               	addwfc	(??_floorf+0+1),c,w
  9455  0056' 202B'              	movwf	1+((c:floorf@e)),c
  9456  0058' 6E35'              	line	9
  9457                           	btfsc	((c:floorf@e+1)),c,7
  9458  005A' BE35'              	goto	u6481
  9459  005C' EF00' F000'        	movf	((c:floorf@e+1)),c,w
  9460  0060' 5035'              	bnz	u6480
  9461  0062' E109               	movlw	23
  9462  0064' 0E17               	subwf	 ((c:floorf@e)),c,w
  9463  0066' 5C34'              	btfss	status,0
  9464  0068' A0D8               	goto	u6481
  9465  006A' EF00' F000'        	goto	u6480
  9466  006E' EF00' F000'        
  9467                           u6481:
  9468  0072'                    	goto	l4743
  9469  0072' EF00' F000'        u6480:
  9470  0076'                    	line	10
  9471                           	
  9472                           l4741:
  9473  0076'                    	movff	(c:floorf@x),(c:?_floorf)
  9474  0076' C026' F026'        	movff	(c:floorf@x+1),(c:?_floorf+1)
  9475  007A' C027' F027'        	movff	(c:floorf@x+2),(c:?_floorf+2)
  9476  007E' C028' F028'        	movff	(c:floorf@x+3),(c:?_floorf+3)
  9477  0082' C029' F029'        	goto	l1098
  9478  0086' EF00' F000'        	
  9479                           l1097:
  9480  008A'                    	line	11
  9481                           	
  9482                           l4743:
  9483  008A'                    	btfsc	((c:floorf@e+1)),c,7
  9484  008A' BE35'              	goto	u6491
  9485  008C' EF00' F000'        	goto	u6490
  9486  0090' EF00' F000'        
  9487                           u6491:
  9488  0094'                    	goto	l4753
  9489  0094' EF00' F000'        u6490:
  9490  0098'                    	line	12
  9491                           	
  9492                           l4745:
  9493  0098'                    	movff	(c:floorf@e),??_floorf+0+0
  9494  0098' C034' F02A'        	movlw	0FFh
  9495  009C' 0EFF               	movwf	(??_floorf+1+0)&0ffh,c
  9496  009E' 6E00'              	movlw	0FFh
  9497  00A0' 0EFF               	movwf	(??_floorf+1+0+1)&0ffh,c
  9498  00A2' 6E00'              	movlw	07Fh
  9499  00A4' 0E7F               	movwf	(??_floorf+1+0+2)&0ffh,c
  9500  00A6' 6E00'              	movlw	0
  9501  00A8' 0E00               	movwf	(??_floorf+1+0+3)&0ffh,c
  9502  00AA' 6E00'              u6505:
  9503  00AC'                    	tstfsz	(??_floorf+0+0),c
  9504  00AC' 662A'              	goto	u6506
  9505  00AE' EF00' F000'        	goto	u6507
  9506  00B2' EF00' F000'        	u6506:
  9507  00B6'                    	rlcf	(??_floorf+1+3),c,w
  9508  00B6' 342E'              	rrcf	(??_floorf+1+3),c
  9509  00B8' 322E'              	rrcf	(??_floorf+1+2),c
  9510  00BA' 322D'              	rrcf	(??_floorf+1+1),c
  9511  00BC' 322C'              	rrcf	(??_floorf+1+0),c
  9512  00BE' 322B'              	decfsz	(??_floorf+0+0),c
  9513  00C0' 2E2A'              	goto	u6505
  9514  00C2' EF00' F000'        	u6507:
  9515  00C6'                    	
  9516                           	movff	??_floorf+1+0,(c:floorf@m)
  9517  00C6' C02B' F030'        	movff	??_floorf+1+1,(c:floorf@m+1)
  9518  00CA' C02C' F031'        	movff	??_floorf+1+2,(c:floorf@m+2)
  9519  00CE' C02D' F032'        	movff	??_floorf+1+3,(c:floorf@m+3)
  9520  00D2' C02E' F033'        	line	13
  9521                           	movf	((c:floorf@m)),c,w
  9522  00D6' 5030'              	andwf	((c:floorf@u)),c,w
  9523  00D8' 1436'              	movwf	(??_floorf+0+0)&0ffh,c
  9524  00DA' 6E00'              	movf	((c:floorf@m+1)),c,w
  9525  00DC' 5031'              	andwf	((c:floorf@u+1)),c,w
  9526  00DE' 1437'              	movwf	1+(??_floorf+0+0)&0ffh,c
  9527  00E0' 6E00'              	
  9528                           	movf	((c:floorf@m+2)),c,w
  9529  00E2' 5032'              	andwf	((c:floorf@u+2)),c,w
  9530  00E4' 1438'              	movwf	2+(??_floorf+0+0)&0ffh,c
  9531  00E6' 6E00'              	
  9532                           	movf	((c:floorf@m+3)),c,w
  9533  00E8' 5033'              	andwf	((c:floorf@u+3)),c,w
  9534  00EA' 1439'              	movwf	3+(??_floorf+0+0)&0ffh,c
  9535  00EC' 6E00'              	movf	(??_floorf+0+0),c,w
  9536  00EE' 502A'              iorwf	(??_floorf+0+1),c,w
  9537  00F0' 102B'              iorwf	(??_floorf+0+2),c,w
  9538  00F2' 102C'              iorwf	(??_floorf+0+3),c,w
  9539  00F4' 102D'              	btfss	status,2
  9540  00F6' A4D8               	goto	u6511
  9541  00F8' EF00' F000'        	goto	u6510
  9542  00FC' EF00' F000'        
  9543                           u6511:
  9544  0100'                    	goto	l4749
  9545  0100' EF00' F000'        u6510:
  9546  0104'                    	line	14
  9547                           	
  9548                           l4747:
  9549  0104'                    	movff	(c:floorf@x),(c:?_floorf)
  9550  0104' C026' F026'        	movff	(c:floorf@x+1),(c:?_floorf+1)
  9551  0108' C027' F027'        	movff	(c:floorf@x+2),(c:?_floorf+2)
  9552  010C' C028' F028'        	movff	(c:floorf@x+3),(c:?_floorf+3)
  9553  0110' C029' F029'        	goto	l1098
  9554  0114' EF00' F000'        	
  9555                           l1100:
  9556  0118'                    	line	16
  9557                           	
  9558                           l4749:
  9559  0118'                    	movff	(c:floorf@u),??_floorf+0+0
  9560  0118' C036' F02A'        	movff	(c:floorf@u+1),??_floorf+0+0+1
  9561  011C' C037' F02B'        	movff	(c:floorf@u+2),??_floorf+0+0+2
  9562  0120' C038' F02C'        	movff	(c:floorf@u+3),??_floorf+0+0+3
  9563  0124' C039' F02D'        	movlw	01Fh+1
  9564  0128' 0E20               	goto	u6520
  9565  012A' EF00' F000'        u6525:
  9566  012E'                    	bcf	status,0
  9567  012E' 90D8               	rrcf	(??_floorf+0+3),c
  9568  0130' 322D'              	rrcf	(??_floorf+0+2),c
  9569  0132' 322C'              	rrcf	(??_floorf+0+1),c
  9570  0134' 322B'              	rrcf	(??_floorf+0+0),c
  9571  0136' 322A'              u6520:
  9572  0138'                    	decfsz	wreg
  9573  0138' 2EE8               	goto	u6525
  9574  013A' EF00' F000'        	movf	(??_floorf+0+0),c,w
  9575  013E' 502A'              iorwf	(??_floorf+0+1),c,w
  9576  0140' 102B'              iorwf	(??_floorf+0+2),c,w
  9577  0142' 102C'              iorwf	(??_floorf+0+3),c,w
  9578  0144' 102D'              	btfsc	status,2
  9579  0146' B4D8               	goto	u6531
  9580  0148' EF00' F000'        	goto	u6530
  9581  014C' EF00' F000'        
  9582                           u6531:
  9583  0150'                    	goto	l1101
  9584  0150' EF00' F000'        u6530:
  9585  0154'                    	line	17
  9586                           	
  9587                           l4751:
  9588  0154'                    	movf	((c:floorf@m)),c,w
  9589  0154' 5030'              	addwf	((c:floorf@u)),c
  9590  0156' 2636'              	movf	((c:floorf@m+1)),c,w
  9591  0158' 5031'              	addwfc	((c:floorf@u+1)),c
  9592  015A' 2237'              	movf	((c:floorf@m+2)),c,w
  9593  015C' 5032'              	addwfc	((c:floorf@u+2)),c
  9594  015E' 2238'              	movf	((c:floorf@m+3)),c,w
  9595  0160' 5033'              	addwfc	((c:floorf@u+3)),c
  9596  0162' 2239'              	
  9597                           l1101:
  9598  0164'                    	line	18
  9599                           	comf	((c:floorf@m)),c,w
  9600  0164' 1C30'              
  9601                           	movwf	(??_floorf+0+0)&0ffh,c
  9602  0166' 6E00'              	comf	((c:floorf@m+1)),c,w
  9603  0168' 1C31'              	movwf	1+(??_floorf+0+0)&0ffh,c
  9604  016A' 6E00'              	
  9605                           	comf	((c:floorf@m+2)),c,w
  9606  016C' 1C32'              	movwf	2+(??_floorf+0+0)&0ffh,c
  9607  016E' 6E00'              	
  9608                           	comf	((c:floorf@m+3)),c,w
  9609  0170' 1C33'              	movwf	3+(??_floorf+0+0)&0ffh,c
  9610  0172' 6E00'              	
  9611                           	movf	(??_floorf+0+0),c,w
  9612  0174' 502A'              	andwf	((c:floorf@u)),c
  9613  0176' 1636'              	movf	(??_floorf+0+1),c,w
  9614  0178' 502B'              	andwf	((c:floorf@u+1)),c
  9615  017A' 1637'              	movf	(??_floorf+0+2),c,w
  9616  017C' 502C'              	andwf	((c:floorf@u+2)),c
  9617  017E' 1638'              	movf	(??_floorf+0+3),c,w
  9618  0180' 502D'              	andwf	((c:floorf@u+3)),c
  9619  0182' 1639'              
  9620                           	line	19
  9621                           	goto	l4761
  9622  0184' EF00' F000'        	
  9623                           l1099:
  9624  0188'                    	line	21
  9625                           	
  9626                           l4753:
  9627  0188'                    	movff	(c:floorf@u),??_floorf+0+0
  9628  0188' C036' F02A'        	movff	(c:floorf@u+1),??_floorf+0+0+1
  9629  018C' C037' F02B'        	movff	(c:floorf@u+2),??_floorf+0+0+2
  9630  0190' C038' F02C'        	movff	(c:floorf@u+3),??_floorf+0+0+3
  9631  0194' C039' F02D'        	movlw	01Fh+1
  9632  0198' 0E20               	goto	u6540
  9633  019A' EF00' F000'        u6545:
  9634  019E'                    	bcf	status,0
  9635  019E' 90D8               	rrcf	(??_floorf+0+3),c
  9636  01A0' 322D'              	rrcf	(??_floorf+0+2),c
  9637  01A2' 322C'              	rrcf	(??_floorf+0+1),c
  9638  01A4' 322B'              	rrcf	(??_floorf+0+0),c
  9639  01A6' 322A'              u6540:
  9640  01A8'                    	decfsz	wreg
  9641  01A8' 2EE8               	goto	u6545
  9642  01AA' EF00' F000'        	movf	(??_floorf+0+0),c,w
  9643  01AE' 502A'              iorwf	(??_floorf+0+1),c,w
  9644  01B0' 102B'              iorwf	(??_floorf+0+2),c,w
  9645  01B2' 102C'              iorwf	(??_floorf+0+3),c,w
  9646  01B4' 102D'              	btfss	status,2
  9647  01B6' A4D8               	goto	u6551
  9648  01B8' EF00' F000'        	goto	u6550
  9649  01BC' EF00' F000'        
  9650                           u6551:
  9651  01C0'                    	goto	l4757
  9652  01C0' EF00' F000'        u6550:
  9653  01C4'                    	line	22
  9654                           	
  9655                           l4755:
  9656  01C4'                    	movlw	low(0)
  9657  01C4' 0E00               	movwf	((c:floorf@u)),c
  9658  01C6' 6E36'              	movlw	high(0)
  9659  01C8' 0E00               	movwf	((c:floorf@u+1)),c
  9660  01CA' 6E37'              	movlw	low highword(0)
  9661  01CC' 0E00               	movwf	((c:floorf@u+2)),c
  9662  01CE' 6E38'              	movlw	high highword(0)
  9663  01D0' 0E00               	movwf	((c:floorf@u+3)),c
  9664  01D2' 6E39'              	goto	l4761
  9665  01D4' EF00' F000'        	line	23
  9666                           	
  9667                           l1103:
  9668  01D8'                    	
  9669                           l4757:
  9670  01D8'                    	bcf	status,0
  9671  01D8' 90D8               	rlcf	((c:floorf@u)),c,w
  9672  01DA' 3436'              	movwf	(??_floorf+0+0)&0ffh,c
  9673  01DC' 6E00'              	rlcf	((c:floorf@u+1)),c,w
  9674  01DE' 3437'              	movwf	1+(??_floorf+0+0)&0ffh,c
  9675  01E0' 6E00'              	
  9676                           	rlcf	((c:floorf@u+2)),c,w
  9677  01E2' 3438'              	movwf	2+(??_floorf+0+0)&0ffh,c
  9678  01E4' 6E00'              	
  9679                           	rlcf	((c:floorf@u+3)),c,w
  9680  01E6' 3439'              	movwf	3+(??_floorf+0+0)&0ffh,c
  9681  01E8' 6E00'              	movf	(??_floorf+0+0),c,w
  9682  01EA' 502A'              iorwf	(??_floorf+0+1),c,w
  9683  01EC' 102B'              iorwf	(??_floorf+0+2),c,w
  9684  01EE' 102C'              iorwf	(??_floorf+0+3),c,w
  9685  01F0' 102D'              	btfsc	status,2
  9686  01F2' B4D8               	goto	u6561
  9687  01F4' EF00' F000'        	goto	u6560
  9688  01F8' EF00' F000'        
  9689                           u6561:
  9690  01FC'                    	goto	l4761
  9691  01FC' EF00' F000'        u6560:
  9692  0200'                    	line	24
  9693                           	
  9694                           l4759:
  9695  0200'                    	movlw	low(normalize32(0xbf800000))
  9696  0200' 0E00               	movwf	((c:floorf@u)),c
  9697  0202' 6E36'              	movlw	high(normalize32(0xbf800000))
  9698  0204' 0E00               	movwf	((c:floorf@u+1)),c
  9699  0206' 6E37'              	movlw	low highword(normalize32(0xbf800000))
  9700  0208' 0E80               	movwf	((c:floorf@u+2)),c
  9701  020A' 6E38'              	movlw	high highword(normalize32(0xbf800000))
  9702  020C' 0EBF               	movwf	((c:floorf@u+3)),c
  9703  020E' 6E39'              	goto	l4761
  9704  0210' EF00' F000'        	
  9705                           l1105:
  9706  0214'                    	goto	l4761
  9707  0214' EF00' F000'        	
  9708                           l1104:
  9709  0218'                    	goto	l4761
  9710  0218' EF00' F000'        	line	25
  9711                           	
  9712                           l1102:
  9713  021C'                    	line	26
  9714                           	
  9715                           l4761:
  9716  021C'                    	movff	(c:floorf@u),(c:?_floorf)
  9717  021C' C036' F026'        	movff	(c:floorf@u+1),(c:?_floorf+1)
  9718  0220' C037' F027'        	movff	(c:floorf@u+2),(c:?_floorf+2)
  9719  0224' C038' F028'        	movff	(c:floorf@u+3),(c:?_floorf+3)
  9720  0228' C039' F029'        	goto	l1098
  9721  022C' EF00' F000'        	
  9722                           l4763:
  9723  0230'                    	line	27
  9724                           	
  9725                           l1098:
  9726  0230'                    	return	;funcret
  9727  0230' 0012               	opt stack 0
  9728                           GLOBAL	__end_of_floorf
  9729                           	__end_of_floorf:
  9730  0232'                    	signat	_floorf,4220
  9731                           	global	___fpclassifyf
  9732                           
  9733 ;; *************** function ___fpclassifyf *****************
  9734 ;; Defined at:
  9735 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;  x               4   13[COMRAM] float 
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;  u               4   23[COMRAM] struct .
  9740 ;;  e               2   21[COMRAM] int 
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  2   13[COMRAM] int 
  9743 ;; Registers used:
  9744 ;;		wreg, status,2, status,0
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9750 ;;      Params:         4       0       0       0       0       0       0
  9751 ;;      Locals:         6       0       0       0       0       0       0
  9752 ;;      Temps:          4       0       0       0       0       0       0
  9753 ;;      Totals:        14       0       0       0       0       0       0
  9754 ;;Total ram usage:       14 bytes
  9755 ;; Hardware stack levels used:    1
  9756 ;; Hardware stack levels required when called:    4
  9757 ;; This function calls:
  9758 ;;		Nothing
  9759 ;; This function is called by:
  9760 ;;		_efgtoa
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           psect	text23,class=CODE,space=0,reloc=2,group=2
  9764                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c
                                 "
  9765                           	line	4
  9766                           global __ptext23
  9767                           __ptext23:
  9768  0000'                    psect	text23
  9769                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__fpclassifyf.c
                                 "
  9770                           	line	4
  9771                           	global	__size_of___fpclassifyf
  9772                           	__size_of___fpclassifyf	equ	__end_of___fpclassifyf-___fpclassifyf
  9773  0000                     	
  9774                           ___fpclassifyf:
  9775  0000'                    ;incstack = 0
  9776                           	opt	stack 21
  9777                           	line	6
  9778                           	
  9779                           l4701:
  9780  0000'                    	movff	(c:___fpclassifyf@F459),(c:___fpclassifyf@u)
  9781  0000' C004' F017'        	movff	(c:___fpclassifyf@F459+1),(c:___fpclassifyf@u+1)
  9782  0004' C005' F018'        	movff	(c:___fpclassifyf@F459+2),(c:___fpclassifyf@u+2)
  9783  0008' C006' F019'        	movff	(c:___fpclassifyf@F459+3),(c:___fpclassifyf@u+3)
  9784  000C' C007' F01A'        	movff	(c:___fpclassifyf@x),(c:___fpclassifyf@u)
  9785  0010' C00D' F017'        	movff	(c:___fpclassifyf@x+1),(c:___fpclassifyf@u+1)
  9786  0014' C00E' F018'        	movff	(c:___fpclassifyf@x+2),(c:___fpclassifyf@u+2)
  9787  0018' C00F' F019'        	movff	(c:___fpclassifyf@x+3),(c:___fpclassifyf@u+3)
  9788  001C' C010' F01A'        	line	7
  9789                           	
  9790                           l4703:
  9791  0020'                    	movff	(c:___fpclassifyf@u),??___fpclassifyf+0+0
  9792  0020' C017' F011'        	movff	(c:___fpclassifyf@u+1),??___fpclassifyf+0+0+1
  9793  0024' C018' F012'        	movff	(c:___fpclassifyf@u+2),??___fpclassifyf+0+0+2
  9794  0028' C019' F013'        	movff	(c:___fpclassifyf@u+3),??___fpclassifyf+0+0+3
  9795  002C' C01A' F014'        	movlw	017h+1
  9796  0030' 0E18               	goto	u6350
  9797  0032' EF00' F000'        u6355:
  9798  0036'                    	bcf	status,0
  9799  0036' 90D8               	rrcf	(??___fpclassifyf+0+3),c
  9800  0038' 3214'              	rrcf	(??___fpclassifyf+0+2),c
  9801  003A' 3213'              	rrcf	(??___fpclassifyf+0+1),c
  9802  003C' 3212'              	rrcf	(??___fpclassifyf+0+0),c
  9803  003E' 3211'              u6350:
  9804  0040'                    	decfsz	wreg
  9805  0040' 2EE8               	goto	u6355
  9806  0042' EF00' F000'        	movf	(??___fpclassifyf+0+0),c,w
  9807  0046' 5011'              	movwf	((c:___fpclassifyf@e)),c
  9808  0048' 6E15'              	clrf	((c:___fpclassifyf@e+1)),c
  9809  004A' 6A16'              	line	8
  9810                           	movf	((c:___fpclassifyf@e)),c,w
  9811  004C' 5015'              iorwf	((c:___fpclassifyf@e+1)),c,w
  9812  004E' 1016'              	btfss	status,2
  9813  0050' A4D8               	goto	u6361
  9814  0052' EF00' F000'        	goto	u6360
  9815  0056' EF00' F000'        
  9816                           u6361:
  9817  005A'                    	goto	l4713
  9818  005A' EF00' F000'        u6360:
  9819  005E'                    	
  9820                           l4705:
  9821  005E'                    	bcf	status,0
  9822  005E' 90D8               	rlcf	((c:___fpclassifyf@u)),c,w
  9823  0060' 3417'              	movwf	(??___fpclassifyf+0+0)&0ffh,c
  9824  0062' 6E00'              	rlcf	((c:___fpclassifyf@u+1)),c,w
  9825  0064' 3418'              	movwf	1+(??___fpclassifyf+0+0)&0ffh,c
  9826  0066' 6E00'              	
  9827                           	rlcf	((c:___fpclassifyf@u+2)),c,w
  9828  0068' 3419'              	movwf	2+(??___fpclassifyf+0+0)&0ffh,c
  9829  006A' 6E00'              	
  9830                           	rlcf	((c:___fpclassifyf@u+3)),c,w
  9831  006C' 341A'              	movwf	3+(??___fpclassifyf+0+0)&0ffh,c
  9832  006E' 6E00'              	movf	(??___fpclassifyf+0+0),c,w
  9833  0070' 5011'              iorwf	(??___fpclassifyf+0+1),c,w
  9834  0072' 1012'              iorwf	(??___fpclassifyf+0+2),c,w
  9835  0074' 1013'              iorwf	(??___fpclassifyf+0+3),c,w
  9836  0076' 1014'              	btfss	status,2
  9837  0078' A4D8               	goto	u6371
  9838  007A' EF00' F000'        	goto	u6370
  9839  007E' EF00' F000'        
  9840                           u6371:
  9841  0082'                    	goto	l4709
  9842  0082' EF00' F000'        u6370:
  9843  0086'                    	
  9844                           l4707:
  9845  0086'                    	movlw	high(02h)
  9846  0086' 0E00               	movwf	((c:?___fpclassifyf+1)),c
  9847  0088' 6E0E'              	movlw	low(02h)
  9848  008A' 0E02               	movwf	((c:?___fpclassifyf)),c
  9849  008C' 6E0D'              	goto	l1060
  9850  008E' EF00' F000'        	
  9851                           l1057:
  9852  0092'                    	
  9853                           l4709:
  9854  0092'                    	movlw	high(03h)
  9855  0092' 0E00               	movwf	((c:?___fpclassifyf+1)),c
  9856  0094' 6E0E'              	movlw	low(03h)
  9857  0096' 0E03               	movwf	((c:?___fpclassifyf)),c
  9858  0098' 6E0D'              	goto	l1060
  9859  009A' EF00' F000'        	
  9860                           l1059:
  9861  009E'                    	goto	l1060
  9862  009E' EF00' F000'        	
  9863                           l4711:
  9864  00A2'                    	goto	l1060
  9865  00A2' EF00' F000'        	
  9866                           l1055:
  9867  00A6'                    	line	9
  9868                           	
  9869                           l4713:
  9870  00A6'                    		incf	((c:___fpclassifyf@e)),c,w
  9871  00A6' 2815'              iorwf	((c:___fpclassifyf@e+1)),c,w
  9872  00A8' 1016'              	btfss	status,2
  9873  00AA' A4D8               	goto	u6381
  9874  00AC' EF00' F000'        	goto	u6380
  9875  00B0' EF00' F000'        
  9876                           u6381:
  9877  00B4'                    	goto	l4719
  9878  00B4' EF00' F000'        u6380:
  9879  00B8'                    	
  9880                           l4715:
  9881  00B8'                    	movff	(c:___fpclassifyf@u),??___fpclassifyf+0+0
  9882  00B8' C017' F011'        	movff	(c:___fpclassifyf@u+1),??___fpclassifyf+0+0+1
  9883  00BC' C018' F012'        	movff	(c:___fpclassifyf@u+2),??___fpclassifyf+0+0+2
  9884  00C0' C019' F013'        	movff	(c:___fpclassifyf@u+3),??___fpclassifyf+0+0+3
  9885  00C4' C01A' F014'        	movlw	09h
  9886  00C8' 0E09               u6395:
  9887  00CA'                    	bcf	status,0
  9888  00CA' 90D8               	rlcf	(??___fpclassifyf+0+0),c
  9889  00CC' 3611'              	rlcf	(??___fpclassifyf+0+1),c
  9890  00CE' 3612'              	rlcf	(??___fpclassifyf+0+2),c
  9891  00D0' 3613'              	rlcf	(??___fpclassifyf+0+3),c
  9892  00D2' 3614'              	decfsz	wreg
  9893  00D4' 2EE8               	goto	u6395
  9894  00D6' EF00' F000'        	movf	(??___fpclassifyf+0+0),c,w
  9895  00DA' 5011'              iorwf	(??___fpclassifyf+0+1),c,w
  9896  00DC' 1012'              iorwf	(??___fpclassifyf+0+2),c,w
  9897  00DE' 1013'              iorwf	(??___fpclassifyf+0+3),c,w
  9898  00E0' 1014'              	btfsc	status,2
  9899  00E2' B4D8               	goto	u6401
  9900  00E4' EF00' F000'        	goto	u6400
  9901  00E8' EF00' F000'        
  9902                           u6401:
  9903  00EC'                    	movlw	1
  9904  00EC' 0E01               	goto	u6410
  9905  00EE' EF00' F000'        u6400:
  9906  00F2'                    	movlw	0
  9907  00F2' 0E00               u6410:
  9908  00F4'                    	movwf	((c:?___fpclassifyf)),c
  9909  00F4' 6E0D'              	clrf	((c:?___fpclassifyf+1)),c
  9910  00F6' 6A0E'              	goto	l1060
  9911  00F8' EF00' F000'        	
  9912                           l4717:
  9913  00FC'                    	goto	l1060
  9914  00FC' EF00' F000'        	
  9915                           l1061:
  9916  0100'                    	line	10
  9917                           	
  9918                           l4719:
  9919  0100'                    	movlw	high(04h)
  9920  0100' 0E00               	movwf	((c:?___fpclassifyf+1)),c
  9921  0102' 6E0E'              	movlw	low(04h)
  9922  0104' 0E04               	movwf	((c:?___fpclassifyf)),c
  9923  0106' 6E0D'              	goto	l1060
  9924  0108' EF00' F000'        	
  9925                           l4721:
  9926  010C'                    	line	11
  9927                           	
  9928                           l1060:
  9929  010C'                    	return	;funcret
  9930  010C' 0012               	opt stack 0
  9931                           GLOBAL	__end_of___fpclassifyf
  9932                           	__end_of___fpclassifyf:
  9933  010E'                    	signat	___fpclassifyf,4218
  9934                           	global	___fltol
  9935                           
  9936 ;; *************** function ___fltol *****************
  9937 ;; Defined at:
  9938 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;  f1              4   13[COMRAM] int 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;  exp1            1   22[COMRAM] unsigned char 
  9943 ;;  sign1           1   21[COMRAM] unsigned char 
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  4   13[COMRAM] long 
  9946 ;; Registers used:
  9947 ;;		wreg, status,2, status,0
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9953 ;;      Params:         4       0       0       0       0       0       0
  9954 ;;      Locals:         2       0       0       0       0       0       0
  9955 ;;      Temps:          4       0       0       0       0       0       0
  9956 ;;      Totals:        10       0       0       0       0       0       0
  9957 ;;Total ram usage:       10 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    4
  9960 ;; This function calls:
  9961 ;;		Nothing
  9962 ;; This function is called by:
  9963 ;;		_efgtoa
  9964 ;; This function uses a non-reentrant model
  9965 ;;
  9966                           psect	text24,class=CODE,space=0,reloc=2,group=1
  9967                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  9968                           	line	43
  9969                           global __ptext24
  9970                           __ptext24:
  9971  0000'                    psect	text24
  9972                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  9973                           	line	43
  9974                           	global	__size_of___fltol
  9975                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  9976  0000                     	
  9977                           ___fltol:
  9978  0000'                    ;incstack = 0
  9979                           	opt	stack 21
  9980                           	line	47
  9981                           	
  9982                           l5175:
  9983  0000'                    	rlcf	((c:___fltol@f1+2)),c,w
  9984  0000' 340F'              	rlcf	((c:___fltol@f1+3)),c,w
  9985  0002' 3410'              	movwf	((c:___fltol@exp1)),c
  9986  0004' 6E16'              	movf	((c:___fltol@exp1)),c,w
  9987  0006' 5016'              	btfss	status,2
  9988  0008' A4D8               	goto	u7221
  9989  000A' EF00' F000'        	goto	u7220
  9990  000E' EF00' F000'        u7221:
  9991  0012'                    	goto	l5181
  9992  0012' EF00' F000'        u7220:
  9993  0016'                    	line	48
  9994                           	
  9995                           l5177:
  9996  0016'                    	movlw	low(0)
  9997  0016' 0E00               	movwf	((c:?___fltol)),c
  9998  0018' 6E0D'              	movlw	high(0)
  9999  001A' 0E00               	movwf	((c:?___fltol+1)),c
 10000  001C' 6E0E'              	movlw	low highword(0)
 10001  001E' 0E00               	movwf	((c:?___fltol+2)),c
 10002  0020' 6E0F'              	movlw	high highword(0)
 10003  0022' 0E00               	movwf	((c:?___fltol+3)),c
 10004  0024' 6E10'              	goto	l676
 10005  0026' EF00' F000'        	
 10006                           l5179:
 10007  002A'                    	goto	l676
 10008  002A' EF00' F000'        	
 10009                           l675:
 10010  002E'                    	line	49
 10011                           	
 10012                           l5181:
 10013  002E'                    	movff	(c:___fltol@f1),??___fltol+0+0
 10014  002E' C00D' F011'        	movff	(c:___fltol@f1+1),??___fltol+0+0+1
 10015  0032' C00E' F012'        	movff	(c:___fltol@f1+2),??___fltol+0+0+2
 10016  0036' C00F' F013'        	movff	(c:___fltol@f1+3),??___fltol+0+0+3
 10017  003A' C010' F014'        	movlw	01Fh+1
 10018  003E' 0E20               	goto	u7230
 10019  0040' EF00' F000'        u7235:
 10020  0044'                    	bcf	status,0
 10021  0044' 90D8               	rrcf	(??___fltol+0+3),c
 10022  0046' 3214'              	rrcf	(??___fltol+0+2),c
 10023  0048' 3213'              	rrcf	(??___fltol+0+1),c
 10024  004A' 3212'              	rrcf	(??___fltol+0+0),c
 10025  004C' 3211'              u7230:
 10026  004E'                    	decfsz	wreg
 10027  004E' 2EE8               	goto	u7235
 10028  0050' EF00' F000'        	movf	(??___fltol+0+0),c,w
 10029  0054' 5011'              	movwf	((c:___fltol@sign1)),c
 10030  0056' 6E15'              	line	50
 10031                           	
 10032                           l5183:
 10033  0058'                    	bsf	(0+(23/8)+(c:___fltol@f1)),c,(23)&7
 10034  0058' 8E0F'              	line	51
 10035                           	
 10036                           l5185:
 10037  005A'                    	movlw	0FFh
 10038  005A' 0EFF               	andwf	((c:___fltol@f1)),c
 10039  005C' 160D'              	movlw	0FFh
 10040  005E' 0EFF               	andwf	((c:___fltol@f1+1)),c
 10041  0060' 160E'              	movlw	0FFh
 10042  0062' 0EFF               	andwf	((c:___fltol@f1+2)),c
 10043  0064' 160F'              	movlw	0
 10044  0066' 0E00               	andwf	((c:___fltol@f1+3)),c
 10045  0068' 1610'              	line	52
 10046                           	
 10047                           l5187:
 10048  006A'                    	movlw	(096h)&0ffh
 10049  006A' 0E96               	subwf	((c:___fltol@exp1)),c
 10050  006C' 5E16'              	line	53
 10051                           	
 10052                           l5189:
 10053  006E'                    	btfsc	((c:___fltol@exp1)),c,7
 10054  006E' BE16'              	goto	u7240
 10055  0070' EF00' F000'        	goto	u7241
 10056  0074' EF00' F000'        
 10057                           u7241:
 10058  0078'                    	goto	l5201
 10059  0078' EF00' F000'        u7240:
 10060  007C'                    	line	54
 10061                           	
 10062                           l5191:
 10063  007C'                    		movf	((c:___fltol@exp1)),c,w
 10064  007C' 5016'              	xorlw	80h
 10065  007E' 0A80               	addlw	-(80h^-23)
 10066  0080' 0F97               	btfsc	status,0
 10067  0082' B0D8               	goto	u7251
 10068  0084' EF00' F000'        	goto	u7250
 10069  0088' EF00' F000'        
 10070                           u7251:
 10071  008C'                    	goto	l5197
 10072  008C' EF00' F000'        u7250:
 10073  0090'                    	line	55
 10074                           	
 10075                           l5193:
 10076  0090'                    	movlw	low(0)
 10077  0090' 0E00               	movwf	((c:?___fltol)),c
 10078  0092' 6E0D'              	movlw	high(0)
 10079  0094' 0E00               	movwf	((c:?___fltol+1)),c
 10080  0096' 6E0E'              	movlw	low highword(0)
 10081  0098' 0E00               	movwf	((c:?___fltol+2)),c
 10082  009A' 6E0F'              	movlw	high highword(0)
 10083  009C' 0E00               	movwf	((c:?___fltol+3)),c
 10084  009E' 6E10'              	goto	l676
 10085  00A0' EF00' F000'        	
 10086                           l5195:
 10087  00A4'                    	goto	l676
 10088  00A4' EF00' F000'        	
 10089                           l678:
 10090  00A8'                    	goto	l5197
 10091  00A8' EF00' F000'        	line	56
 10092                           	
 10093                           l679:
 10094  00AC'                    	line	57
 10095                           	
 10096                           l5197:
 10097  00AC'                    	bcf	status,0
 10098  00AC' 90D8               	rrcf	((c:___fltol@f1+3)),c
 10099  00AE' 3210'              	rrcf	((c:___fltol@f1+2)),c
 10100  00B0' 320F'              	rrcf	((c:___fltol@f1+1)),c
 10101  00B2' 320E'              	rrcf	((c:___fltol@f1)),c
 10102  00B4' 320D'              	
 10103                           l5199:
 10104  00B6'                    	incfsz	((c:___fltol@exp1)),c
 10105  00B6' 3E16'              	
 10106                           	goto	l5197
 10107  00B8' EF00' F000'        	goto	l5211
 10108  00BC' EF00' F000'        	
 10109                           l680:
 10110  00C0'                    	line	59
 10111                           	goto	l5211
 10112  00C0' EF00' F000'        	
 10113                           l677:
 10114  00C4'                    	line	60
 10115                           	
 10116                           l5201:
 10117  00C4'                    		movlw	020h-1
 10118  00C4' 0E1F               	cpfsgt	((c:___fltol@exp1)),c
 10119  00C6' 6416'              	goto	u7261
 10120  00C8' EF00' F000'        	goto	u7260
 10121  00CC' EF00' F000'        
 10122                           u7261:
 10123  00D0'                    	goto	l5209
 10124  00D0' EF00' F000'        u7260:
 10125  00D4'                    	line	61
 10126                           	
 10127                           l5203:
 10128  00D4'                    	movlw	low(0)
 10129  00D4' 0E00               	movwf	((c:?___fltol)),c
 10130  00D6' 6E0D'              	movlw	high(0)
 10131  00D8' 0E00               	movwf	((c:?___fltol+1)),c
 10132  00DA' 6E0E'              	movlw	low highword(0)
 10133  00DC' 0E00               	movwf	((c:?___fltol+2)),c
 10134  00DE' 6E0F'              	movlw	high highword(0)
 10135  00E0' 0E00               	movwf	((c:?___fltol+3)),c
 10136  00E2' 6E10'              	goto	l676
 10137  00E4' EF00' F000'        	
 10138                           l5205:
 10139  00E8'                    	goto	l676
 10140  00E8' EF00' F000'        	
 10141                           l682:
 10142  00EC'                    	line	62
 10143                           	goto	l5209
 10144  00EC' EF00' F000'        	
 10145                           l684:
 10146  00F0'                    	line	63
 10147                           	
 10148                           l5207:
 10149  00F0'                    	bcf	status,0
 10150  00F0' 90D8               	rlcf	((c:___fltol@f1)),c
 10151  00F2' 360D'              	rlcf	((c:___fltol@f1+1)),c
 10152  00F4' 360E'              	rlcf	((c:___fltol@f1+2)),c
 10153  00F6' 360F'              	rlcf	((c:___fltol@f1+3)),c
 10154  00F8' 3610'              	line	64
 10155                           	decf	((c:___fltol@exp1)),c
 10156  00FA' 0616'              	goto	l5209
 10157  00FC' EF00' F000'        	line	65
 10158                           	
 10159                           l683:
 10160  0100'                    	line	62
 10161                           	
 10162                           l5209:
 10163  0100'                    	movf	((c:___fltol@exp1)),c,w
 10164  0100' 5016'              	btfss	status,2
 10165  0102' A4D8               	goto	u7271
 10166  0104' EF00' F000'        	goto	u7270
 10167  0108' EF00' F000'        u7271:
 10168  010C'                    	goto	l5207
 10169  010C' EF00' F000'        u7270:
 10170  0110'                    	goto	l5211
 10171  0110' EF00' F000'        	
 10172                           l685:
 10173  0114'                    	goto	l5211
 10174  0114' EF00' F000'        	line	66
 10175                           	
 10176                           l681:
 10177  0118'                    	line	67
 10178                           	
 10179                           l5211:
 10180  0118'                    	movf	((c:___fltol@sign1)),c,w
 10181  0118' 5015'              	btfsc	status,2
 10182  011A' B4D8               	goto	u7281
 10183  011C' EF00' F000'        	goto	u7280
 10184  0120' EF00' F000'        u7281:
 10185  0124'                    	goto	l5215
 10186  0124' EF00' F000'        u7280:
 10187  0128'                    	line	68
 10188                           	
 10189                           l5213:
 10190  0128'                    	comf	((c:___fltol@f1+3)),c
 10191  0128' 1E10'              	comf	((c:___fltol@f1+2)),c
 10192  012A' 1E0F'              	comf	((c:___fltol@f1+1)),c
 10193  012C' 1E0E'              	negf	((c:___fltol@f1)),c
 10194  012E' 6C0D'              	movlw	0
 10195  0130' 0E00               	addwfc	((c:___fltol@f1+1)),c
 10196  0132' 220E'              	addwfc	((c:___fltol@f1+2)),c
 10197  0134' 220F'              	addwfc	((c:___fltol@f1+3)),c
 10198  0136' 2210'              	goto	l5215
 10199  0138' EF00' F000'        	
 10200                           l686:
 10201  013C'                    	line	69
 10202                           	
 10203                           l5215:
 10204  013C'                    	movff	(c:___fltol@f1),(c:?___fltol)
 10205  013C' C00D' F00D'        	movff	(c:___fltol@f1+1),(c:?___fltol+1)
 10206  0140' C00E' F00E'        	movff	(c:___fltol@f1+2),(c:?___fltol+2)
 10207  0144' C00F' F00F'        	movff	(c:___fltol@f1+3),(c:?___fltol+3)
 10208  0148' C010' F010'        	goto	l676
 10209  014C' EF00' F000'        	
 10210                           l5217:
 10211  0150'                    	line	70
 10212                           	
 10213                           l676:
 10214  0150'                    	return	;funcret
 10215  0150' 0012               	opt stack 0
 10216                           GLOBAL	__end_of___fltol
 10217                           	__end_of___fltol:
 10218  0152'                    	signat	___fltol,4220
 10219                           	global	___flsub
 10220                           
 10221 ;; *************** function ___flsub *****************
 10222 ;; Defined at:
 10223 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 10224 ;; Parameters:    Size  Location     Type
 10225 ;;  b               4   52[COMRAM] long 
 10226 ;;  a               4   56[COMRAM] long 
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;		None
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  4   52[COMRAM] long 
 10231 ;; Registers used:
 10232 ;;		wreg, status,2, status,0, cstack
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10238 ;;      Params:         8       0       0       0       0       0       0
 10239 ;;      Locals:         0       0       0       0       0       0       0
 10240 ;;      Temps:          0       0       0       0       0       0       0
 10241 ;;      Totals:         8       0       0       0       0       0       0
 10242 ;;Total ram usage:        8 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:    5
 10245 ;; This function calls:
 10246 ;;		___fladd
 10247 ;; This function is called by:
 10248 ;;		_efgtoa
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           psect	text25,class=CODE,space=0,reloc=2,group=1
 10252                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 10253                           	line	245
 10254                           global __ptext25
 10255                           __ptext25:
 10256  0000'                    psect	text25
 10257                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 10258                           	line	245
 10259                           	global	__size_of___flsub
 10260                           	__size_of___flsub	equ	__end_of___flsub-___flsub
 10261  0000                     	
 10262                           ___flsub:
 10263  0000'                    ;incstack = 0
 10264                           	opt	stack 20
 10265                           	line	248
 10266                           	
 10267                           l5043:
 10268  0000'                    	movlw	0
 10269  0000' 0E00               	xorwf	((c:___flsub@a)),c
 10270  0002' 1A38'              	movlw	0
 10271  0004' 0E00               	xorwf	((c:___flsub@a+1)),c
 10272  0006' 1A39'              	movlw	0
 10273  0008' 0E00               	xorwf	((c:___flsub@a+2)),c
 10274  000A' 1A3A'              	movlw	080h
 10275  000C' 0E80               	xorwf	((c:___flsub@a+3)),c
 10276  000E' 1A3B'              	line	249
 10277                           	
 10278                           l5045:
 10279  0010'                    	movff	(c:___flsub@b),(c:___fladd@b)
 10280  0010' C034' F00D'        	movff	(c:___flsub@b+1),(c:___fladd@b+1)
 10281  0014' C035' F00E'        	movff	(c:___flsub@b+2),(c:___fladd@b+2)
 10282  0018' C036' F00F'        	movff	(c:___flsub@b+3),(c:___fladd@b+3)
 10283  001C' C037' F010'        	movff	(c:___flsub@a),(c:___fladd@a)
 10284  0020' C038' F011'        	movff	(c:___flsub@a+1),(c:___fladd@a+1)
 10285  0024' C039' F012'        	movff	(c:___flsub@a+2),(c:___fladd@a+2)
 10286  0028' C03A' F013'        	movff	(c:___flsub@a+3),(c:___fladd@a+3)
 10287  002C' C03B' F014'        	call	___fladd	;wreg free
 10288  0030' EC00' F000'        	movff	0+?___fladd,(c:?___flsub)
 10289  0034' C00D' F034'        	movff	1+?___fladd,(c:?___flsub+1)
 10290  0038' C00E' F035'        	movff	2+?___fladd,(c:?___flsub+2)
 10291  003C' C00F' F036'        	movff	3+?___fladd,(c:?___flsub+3)
 10292  0040' C010' F037'        	
 10293                           	goto	l949
 10294  0044' EF00' F000'        	
 10295                           l5047:
 10296  0048'                    	line	250
 10297                           	
 10298                           l949:
 10299  0048'                    	return	;funcret
 10300  0048' 0012               	opt stack 0
 10301                           GLOBAL	__end_of___flsub
 10302                           	__end_of___flsub:
 10303  004A'                    	signat	___flsub,8316
 10304                           	global	___fladd
 10305                           
 10306 ;; *************** function ___fladd *****************
 10307 ;; Defined at:
 10308 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 10309 ;; Parameters:    Size  Location     Type
 10310 ;;  b               4   13[COMRAM] long 
 10311 ;;  a               4   17[COMRAM] long 
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;  grs             1   32[COMRAM] unsigned char 
 10314 ;;  bexp            1   31[COMRAM] unsigned char 
 10315 ;;  aexp            1   30[COMRAM] unsigned char 
 10316 ;;  signs           1   29[COMRAM] unsigned char 
 10317 ;; Return value:  Size  Location     Type
 10318 ;;                  4   13[COMRAM] unsigned char 
 10319 ;; Registers used:
 10320 ;;		wreg, status,2, status,0
 10321 ;; Tracked objects:
 10322 ;;		On entry : 0/0
 10323 ;;		On exit  : 0/0
 10324 ;;		Unchanged: 0/0
 10325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10326 ;;      Params:         8       0       0       0       0       0       0
 10327 ;;      Locals:         4       0       0       0       0       0       0
 10328 ;;      Temps:          8       0       0       0       0       0       0
 10329 ;;      Totals:        20       0       0       0       0       0       0
 10330 ;;Total ram usage:       20 bytes
 10331 ;; Hardware stack levels used:    1
 10332 ;; Hardware stack levels required when called:    4
 10333 ;; This function calls:
 10334 ;;		Nothing
 10335 ;; This function is called by:
 10336 ;;		_efgtoa
 10337 ;;		___flsub
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           psect	text26,class=CODE,space=0,reloc=2,group=1
 10341                           	line	10
 10342                           global __ptext26
 10343                           __ptext26:
 10344  0000'                    psect	text26
 10345                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
 10346                           	line	10
 10347                           	global	__size_of___fladd
 10348                           	__size_of___fladd	equ	__end_of___fladd-___fladd
 10349  0000                     	
 10350                           ___fladd:
 10351  0000'                    ;incstack = 0
 10352                           	opt	stack 20
 10353                           	line	21
 10354                           	
 10355                           l4477:
 10356  0000'                    	movf	(0+((c:___fladd@b)+03h)),c,w
 10357  0000' 5010'              	andlw	low(080h)
 10358  0002' 0B80               	movwf	((c:___fladd@signs)),c
 10359  0004' 6E1D'              	line	22
 10360                           	movf	(0+((c:___fladd@b)+03h)),c,w
 10361  0006' 5010'              	addwf	(0+((c:___fladd@b)+03h)),c,w
 10362  0008' 2410'              	movwf	((c:___fladd@bexp)),c
 10363  000A' 6E1F'              	line	23
 10364                           	
 10365                           l4479:
 10366  000C'                    	
 10367                           	btfss	(0+((c:___fladd@b)+02h)),c,(7)&7
 10368  000C' AE0F'              	goto	u5921
 10369  000E' EF00' F000'        	goto	u5920
 10370  0012' EF00' F000'        u5921:
 10371  0016'                    	goto	l4483
 10372  0016' EF00' F000'        u5920:
 10373  001A'                    	line	24
 10374                           	
 10375                           l4481:
 10376  001A'                    	bsf	(0+(0/8)+(c:___fladd@bexp)),c,(0)&7
 10377  001A' 801F'              	goto	l4483
 10378  001C' EF00' F000'        	line	25
 10379                           	
 10380                           l895:
 10381  0020'                    	line	28
 10382                           	
 10383                           l4483:
 10384  0020'                    	movf	((c:___fladd@bexp)),c,w
 10385  0020' 501F'              	btfsc	status,2
 10386  0022' B4D8               	goto	u5931
 10387  0024' EF00' F000'        	goto	u5930
 10388  0028' EF00' F000'        u5931:
 10389  002C'                    	goto	l4493
 10390  002C' EF00' F000'        u5930:
 10391  0030'                    	line	30
 10392                           	
 10393                           l4485:
 10394  0030'                    		incf	((c:___fladd@bexp)),c,w
 10395  0030' 281F'              	btfss	status,2
 10396  0032' A4D8               	goto	u5941
 10397  0034' EF00' F000'        	goto	u5940
 10398  0038' EF00' F000'        
 10399                           u5941:
 10400  003C'                    	goto	l4489
 10401  003C' EF00' F000'        u5940:
 10402  0040'                    	line	32
 10403                           	
 10404                           l4487:
 10405  0040'                    	movlw	low(normalize32(0x0))
 10406  0040' 0E00               	movwf	((c:___fladd@b)),c
 10407  0042' 6E0D'              	movlw	high(normalize32(0x0))
 10408  0044' 0E00               	movwf	((c:___fladd@b+1)),c
 10409  0046' 6E0E'              	movlw	low highword(normalize32(0x0))
 10410  0048' 0E00               	movwf	((c:___fladd@b+2)),c
 10411  004A' 6E0F'              	movlw	high highword(normalize32(0x0))
 10412  004C' 0E00               	movwf	((c:___fladd@b+3)),c
 10413  004E' 6E10'              	goto	l4489
 10414  0050' EF00' F000'        	line	33
 10415                           	
 10416                           l897:
 10417  0054'                    	line	35
 10418                           	
 10419                           l4489:
 10420  0054'                    	bsf	(0+(23/8)+(c:___fladd@b)),c,(23)&7
 10421  0054' 8E0F'              	line	37
 10422                           	
 10423                           l4491:
 10424  0056'                    	movlw	low(0)
 10425  0056' 0E00               	movwf	(0+((c:___fladd@b)+03h)),c
 10426  0058' 6E10'              	line	38
 10427                           	goto	l4495
 10428  005A' EF00' F000'        	line	39
 10429                           	
 10430                           l896:
 10431  005E'                    	line	41
 10432                           	
 10433                           l4493:
 10434  005E'                    	movlw	low(normalize32(0x0))
 10435  005E' 0E00               	movwf	((c:___fladd@b)),c
 10436  0060' 6E0D'              	movlw	high(normalize32(0x0))
 10437  0062' 0E00               	movwf	((c:___fladd@b+1)),c
 10438  0064' 6E0E'              	movlw	low highword(normalize32(0x0))
 10439  0066' 0E00               	movwf	((c:___fladd@b+2)),c
 10440  0068' 6E0F'              	movlw	high highword(normalize32(0x0))
 10441  006A' 0E00               	movwf	((c:___fladd@b+3)),c
 10442  006C' 6E10'              	goto	l4495
 10443  006E' EF00' F000'        	line	42
 10444                           	
 10445                           l898:
 10446  0072'                    	line	44
 10447                           	
 10448                           l4495:
 10449  0072'                    	movf	(0+((c:___fladd@a)+03h)),c,w
 10450  0072' 5014'              	andlw	low(080h)
 10451  0074' 0B80               	movwf	((c:___fladd@aexp)),c
 10452  0076' 6E1E'              	line	46
 10453                           	
 10454                           l4497:
 10455  0078'                    	movf	((c:___fladd@signs)),c,w
 10456  0078' 501D'              xorwf	((c:___fladd@aexp)),c,w
 10457  007A' 181E'              	btfsc	status,2
 10458  007C' B4D8               	goto	u5951
 10459  007E' EF00' F000'        	goto	u5950
 10460  0082' EF00' F000'        
 10461                           u5951:
 10462  0086'                    	goto	l4501
 10463  0086' EF00' F000'        u5950:
 10464  008A'                    	line	47
 10465                           	
 10466                           l4499:
 10467  008A'                    	bsf	(0+(6/8)+(c:___fladd@signs)),c,(6)&7
 10468  008A' 8C1D'              	goto	l4501
 10469  008C' EF00' F000'        	line	48
 10470                           	
 10471                           l899:
 10472  0090'                    	line	49
 10473                           	
 10474                           l4501:
 10475  0090'                    	movf	(0+((c:___fladd@a)+03h)),c,w
 10476  0090' 5014'              	addwf	(0+((c:___fladd@a)+03h)),c,w
 10477  0092' 2414'              	movwf	((c:___fladd@aexp)),c
 10478  0094' 6E1E'              	line	50
 10479                           	
 10480                           l4503:
 10481  0096'                    	
 10482                           	btfss	(0+((c:___fladd@a)+02h)),c,(7)&7
 10483  0096' AE13'              	goto	u5961
 10484  0098' EF00' F000'        	goto	u5960
 10485  009C' EF00' F000'        u5961:
 10486  00A0'                    	goto	l4507
 10487  00A0' EF00' F000'        u5960:
 10488  00A4'                    	line	51
 10489                           	
 10490                           l4505:
 10491  00A4'                    	bsf	(0+(0/8)+(c:___fladd@aexp)),c,(0)&7
 10492  00A4' 801E'              	goto	l4507
 10493  00A6' EF00' F000'        	line	52
 10494                           	
 10495                           l900:
 10496  00AA'                    	line	55
 10497                           	
 10498                           l4507:
 10499  00AA'                    	movf	((c:___fladd@aexp)),c,w
 10500  00AA' 501E'              	btfsc	status,2
 10501  00AC' B4D8               	goto	u5971
 10502  00AE' EF00' F000'        	goto	u5970
 10503  00B2' EF00' F000'        u5971:
 10504  00B6'                    	goto	l4517
 10505  00B6' EF00' F000'        u5970:
 10506  00BA'                    	line	57
 10507                           	
 10508                           l4509:
 10509  00BA'                    		incf	((c:___fladd@aexp)),c,w
 10510  00BA' 281E'              	btfss	status,2
 10511  00BC' A4D8               	goto	u5981
 10512  00BE' EF00' F000'        	goto	u5980
 10513  00C2' EF00' F000'        
 10514                           u5981:
 10515  00C6'                    	goto	l4513
 10516  00C6' EF00' F000'        u5980:
 10517  00CA'                    	line	59
 10518                           	
 10519                           l4511:
 10520  00CA'                    	movlw	low(normalize32(0x0))
 10521  00CA' 0E00               	movwf	((c:___fladd@a)),c
 10522  00CC' 6E11'              	movlw	high(normalize32(0x0))
 10523  00CE' 0E00               	movwf	((c:___fladd@a+1)),c
 10524  00D0' 6E12'              	movlw	low highword(normalize32(0x0))
 10525  00D2' 0E00               	movwf	((c:___fladd@a+2)),c
 10526  00D4' 6E13'              	movlw	high highword(normalize32(0x0))
 10527  00D6' 0E00               	movwf	((c:___fladd@a+3)),c
 10528  00D8' 6E14'              	goto	l4513
 10529  00DA' EF00' F000'        	line	60
 10530                           	
 10531                           l902:
 10532  00DE'                    	line	62
 10533                           	
 10534                           l4513:
 10535  00DE'                    	bsf	(0+(23/8)+(c:___fladd@a)),c,(23)&7
 10536  00DE' 8E13'              	line	64
 10537                           	
 10538                           l4515:
 10539  00E0'                    	movlw	low(0)
 10540  00E0' 0E00               	movwf	(0+((c:___fladd@a)+03h)),c
 10541  00E2' 6E14'              	line	65
 10542                           	goto	l4519
 10543  00E4' EF00' F000'        	line	66
 10544                           	
 10545                           l901:
 10546  00E8'                    	line	68
 10547                           	
 10548                           l4517:
 10549  00E8'                    	movlw	low(normalize32(0x0))
 10550  00E8' 0E00               	movwf	((c:___fladd@a)),c
 10551  00EA' 6E11'              	movlw	high(normalize32(0x0))
 10552  00EC' 0E00               	movwf	((c:___fladd@a+1)),c
 10553  00EE' 6E12'              	movlw	low highword(normalize32(0x0))
 10554  00F0' 0E00               	movwf	((c:___fladd@a+2)),c
 10555  00F2' 6E13'              	movlw	high highword(normalize32(0x0))
 10556  00F4' 0E00               	movwf	((c:___fladd@a+3)),c
 10557  00F6' 6E14'              	goto	l4519
 10558  00F8' EF00' F000'        	line	69
 10559                           	
 10560                           l903:
 10561  00FC'                    	line	75
 10562                           	
 10563                           l4519:
 10564  00FC'                    		movf	((c:___fladd@bexp)),c,w
 10565  00FC' 501F'              	subwf	((c:___fladd@aexp)),c,w
 10566  00FE' 5C1E'              	btfsc	status,0
 10567  0100' B0D8               	goto	u5991
 10568  0102' EF00' F000'        	goto	u5990
 10569  0106' EF00' F000'        
 10570                           u5991:
 10571  010A'                    	goto	l4555
 10572  010A' EF00' F000'        u5990:
 10573  010E'                    	line	77
 10574                           	
 10575                           l4521:
 10576  010E'                    	
 10577                           	btfss	((c:___fladd@signs)),c,(6)&7
 10578  010E' AC1D'              	goto	u6001
 10579  0110' EF00' F000'        	goto	u6000
 10580  0114' EF00' F000'        u6001:
 10581  0118'                    	goto	l4525
 10582  0118' EF00' F000'        u6000:
 10583  011C'                    	line	78
 10584                           	
 10585                           l4523:
 10586  011C'                    	movlw	(080h)&0ffh
 10587  011C' 0E80               	xorwf	((c:___fladd@signs)),c
 10588  011E' 1A1D'              	goto	l4525
 10589  0120' EF00' F000'        	line	79
 10590                           	
 10591                           l905:
 10592  0124'                    	line	81
 10593                           	
 10594                           l4525:
 10595  0124'                    	movff	(c:___fladd@bexp),(c:___fladd@grs)
 10596  0124' C01F' F020'        	line	82
 10597                           	
 10598                           l4527:
 10599  0128'                    	movff	(c:___fladd@aexp),(c:___fladd@bexp)
 10600  0128' C01E' F01F'        	line	83
 10601                           	
 10602                           l4529:
 10603  012C'                    	movff	(c:___fladd@grs),(c:___fladd@aexp)
 10604  012C' C020' F01E'        	line	84
 10605                           	
 10606                           l4531:
 10607  0130'                    	movff	(c:___fladd@b),(c:___fladd@grs)
 10608  0130' C00D' F020'        	line	85
 10609                           	
 10610                           l4533:
 10611  0134'                    	movff	(c:___fladd@a),(c:___fladd@b)
 10612  0134' C011' F00D'        	line	86
 10613                           	
 10614                           l4535:
 10615  0138'                    	movff	(c:___fladd@grs),(c:___fladd@a)
 10616  0138' C020' F011'        	line	87
 10617                           	
 10618                           l4537:
 10619  013C'                    	movff	0+((c:___fladd@b)+01h),(c:___fladd@grs)
 10620  013C' C00E' F020'        	line	88
 10621                           	
 10622                           l4539:
 10623  0140'                    	movff	0+((c:___fladd@a)+01h),0+((c:___fladd@b)+01h)
 10624  0140' C012' F00E'        	line	89
 10625                           	
 10626                           l4541:
 10627  0144'                    	movff	(c:___fladd@grs),0+((c:___fladd@a)+01h)
 10628  0144' C020' F012'        	line	90
 10629                           	
 10630                           l4543:
 10631  0148'                    	movff	0+((c:___fladd@b)+02h),(c:___fladd@grs)
 10632  0148' C00F' F020'        	line	91
 10633                           	
 10634                           l4545:
 10635  014C'                    	movff	0+((c:___fladd@a)+02h),0+((c:___fladd@b)+02h)
 10636  014C' C013' F00F'        	line	92
 10637                           	
 10638                           l4547:
 10639  0150'                    	movff	(c:___fladd@grs),0+((c:___fladd@a)+02h)
 10640  0150' C020' F013'        	line	93
 10641                           	
 10642                           l4549:
 10643  0154'                    	movff	0+((c:___fladd@b)+03h),(c:___fladd@grs)
 10644  0154' C010' F020'        	line	94
 10645                           	
 10646                           l4551:
 10647  0158'                    	movff	0+((c:___fladd@a)+03h),0+((c:___fladd@b)+03h)
 10648  0158' C014' F010'        	line	95
 10649                           	
 10650                           l4553:
 10651  015C'                    	movff	(c:___fladd@grs),0+((c:___fladd@a)+03h)
 10652  015C' C020' F014'        	goto	l4555
 10653  0160' EF00' F000'        	line	96
 10654                           	
 10655                           l904:
 10656  0164'                    	line	98
 10657                           	
 10658                           l4555:
 10659  0164'                    	movlw	low(0)
 10660  0164' 0E00               	movwf	((c:___fladd@grs)),c
 10661  0166' 6E20'              	line	100
 10662                           	
 10663                           l4557:
 10664  0168'                    	movf	((c:___fladd@bexp)),c,w
 10665  0168' 501F'              	movwf	(??___fladd+0+0)&0ffh,c
 10666  016A' 6E00'              	clrf	(??___fladd+0+0+1)&0ffh,c
 10667  016C' 6A00'              
 10668                           	comf	(??___fladd+0+0),c
 10669  016E' 1E15'              	comf	(??___fladd+0+1),c
 10670  0170' 1E16'              	infsnz	(??___fladd+0+0),c
 10671  0172' 4A15'              	incf	(??___fladd+0+1),c
 10672  0174' 2A16'              	movf	((c:___fladd@aexp)),c,w
 10673  0176' 501E'              	movwf	(??___fladd+2+0)&0ffh,c
 10674  0178' 6E00'              	clrf	(??___fladd+2+0+1)&0ffh,c
 10675  017A' 6A00'              
 10676                           	movf	(??___fladd+0+0),c,w
 10677  017C' 5015'              	addwf	(??___fladd+2+0),c
 10678  017E' 2617'              	movf	(??___fladd+0+1),c,w
 10679  0180' 5016'              	addwfc	(??___fladd+2+1),c
 10680  0182' 2218'              	btfsc	(??___fladd+2+1),c,7
 10681  0184' BE18'              	goto	u6011
 10682  0186' EF00' F000'        	movf	(??___fladd+2+1),c,w
 10683  018A' 5018'              	bnz	u6010
 10684  018C' E109               	movlw	26
 10685  018E' 0E1A               	subwf	 (??___fladd+2+0),c,w
 10686  0190' 5C17'              	btfss	status,0
 10687  0192' A0D8               	goto	u6011
 10688  0194' EF00' F000'        	goto	u6010
 10689  0198' EF00' F000'        
 10690                           u6011:
 10691  019C'                    	goto	l908
 10692  019C' EF00' F000'        u6010:
 10693  01A0'                    	line	101
 10694                           	
 10695                           l4559:
 10696  01A0'                    	movf	((c:___fladd@b)),c,w
 10697  01A0' 500D'              iorwf	((c:___fladd@b+1)),c,w
 10698  01A2' 100E'              iorwf	((c:___fladd@b+2)),c,w
 10699  01A4' 100F'              iorwf	((c:___fladd@b+3)),c,w
 10700  01A6' 1010'              	btfss	status,2
 10701  01A8' A4D8               	goto	u6021
 10702  01AA' EF00' F000'        	goto	u6020
 10703  01AE' EF00' F000'        
 10704                           u6021:
 10705  01B2'                    	movlw	1
 10706  01B2' 0E01               	goto	u6030
 10707  01B4' EF00' F000'        u6020:
 10708  01B8'                    	movlw	0
 10709  01B8' 0E00               u6030:
 10710  01BA'                    	movwf	((c:___fladd@grs)),c
 10711  01BA' 6E20'              	line	102
 10712                           	
 10713                           l4561:
 10714  01BC'                    	movlw	low(0)
 10715  01BC' 0E00               	movwf	((c:___fladd@b)),c
 10716  01BE' 6E0D'              	movlw	high(0)
 10717  01C0' 0E00               	movwf	((c:___fladd@b+1)),c
 10718  01C2' 6E0E'              	movlw	low highword(0)
 10719  01C4' 0E00               	movwf	((c:___fladd@b+2)),c
 10720  01C6' 6E0F'              	movlw	high highword(0)
 10721  01C8' 0E00               	movwf	((c:___fladd@b+3)),c
 10722  01CA' 6E10'              	line	103
 10723                           	
 10724                           l4563:
 10725  01CC'                    	movff	(c:___fladd@aexp),(c:___fladd@bexp)
 10726  01CC' C01E' F01F'        	line	104
 10727                           	goto	l907
 10728  01D0' EF00' F000'        	line	105
 10729                           	
 10730                           l906:
 10731  01D4'                    	line	106
 10732                           	goto	l908
 10733  01D4' EF00' F000'        	
 10734                           l909:
 10735  01D8'                    	line	109
 10736                           	
 10737                           	btfss	((c:___fladd@grs)),c,(0)&7
 10738  01D8' A020'              	goto	u6041
 10739  01DA' EF00' F000'        	goto	u6040
 10740  01DE' EF00' F000'        u6041:
 10741  01E2'                    	goto	l4567
 10742  01E2' EF00' F000'        u6040:
 10743  01E6'                    	line	110
 10744                           	
 10745                           l4565:
 10746  01E6'                    	bcf	status,0
 10747  01E6' 90D8               	rrcf	((c:___fladd@grs)),c,w
 10748  01E8' 3020'              	iorlw	low(01h)
 10749  01EA' 0901               	movwf	((c:___fladd@grs)),c
 10750  01EC' 6E20'              	line	111
 10751                           	goto	l4569
 10752  01EE' EF00' F000'        	line	112
 10753                           	
 10754                           l910:
 10755  01F2'                    	line	113
 10756                           	
 10757                           l4567:
 10758  01F2'                    	bcf status,0
 10759  01F2' 90D8               	rrcf	((c:___fladd@grs)),c
 10760  01F4' 3220'              
 10761                           	goto	l4569
 10762  01F6' EF00' F000'        	line	114
 10763                           	
 10764                           l911:
 10765  01FA'                    	line	115
 10766                           	
 10767                           l4569:
 10768  01FA'                    	
 10769                           	btfss	((c:___fladd@b)),c,(0)&7
 10770  01FA' A00D'              	goto	u6051
 10771  01FC' EF00' F000'        	goto	u6050
 10772  0200' EF00' F000'        u6051:
 10773  0204'                    	goto	l4573
 10774  0204' EF00' F000'        u6050:
 10775  0208'                    	line	116
 10776                           	
 10777                           l4571:
 10778  0208'                    	bsf	(0+(7/8)+(c:___fladd@grs)),c,(7)&7
 10779  0208' 8E20'              	goto	l4573
 10780  020A' EF00' F000'        	line	117
 10781                           	
 10782                           l912:
 10783  020E'                    	line	118
 10784                           	
 10785                           l4573:
 10786  020E'                    	rlcf	((c:___fladd@b+3)),c,w
 10787  020E' 3410'              	rrcf	((c:___fladd@b+3)),c
 10788  0210' 3210'              	rrcf	((c:___fladd@b+2)),c
 10789  0212' 320F'              	rrcf	((c:___fladd@b+1)),c
 10790  0214' 320E'              	rrcf	((c:___fladd@b)),c
 10791  0216' 320D'              	line	119
 10792                           	
 10793                           l4575:
 10794  0218'                    	incf	((c:___fladd@bexp)),c
 10795  0218' 2A1F'              	line	120
 10796                           	
 10797                           l908:
 10798  021A'                    	line	106
 10799                           		movf	((c:___fladd@aexp)),c,w
 10800  021A' 501E'              	subwf	((c:___fladd@bexp)),c,w
 10801  021C' 5C1F'              	btfss	status,0
 10802  021E' A0D8               	goto	u6061
 10803  0220' EF00' F000'        	goto	u6060
 10804  0224' EF00' F000'        
 10805                           u6061:
 10806  0228'                    	goto	l909
 10807  0228' EF00' F000'        u6060:
 10808  022C'                    	goto	l907
 10809  022C' EF00' F000'        	
 10810                           l913:
 10811  0230'                    	line	121
 10812                           	
 10813                           l907:
 10814  0230'                    	line	124
 10815                           	
 10816                           	btfsc	((c:___fladd@signs)),c,(6)&7
 10817  0230' BC1D'              	goto	u6071
 10818  0232' EF00' F000'        	goto	u6070
 10819  0236' EF00' F000'        u6071:
 10820  023A'                    	goto	l4601
 10821  023A' EF00' F000'        u6070:
 10822  023E'                    	line	127
 10823                           	
 10824                           l4577:
 10825  023E'                    	movf	((c:___fladd@bexp)),c,w
 10826  023E' 501F'              	btfss	status,2
 10827  0240' A4D8               	goto	u6081
 10828  0242' EF00' F000'        	goto	u6080
 10829  0246' EF00' F000'        u6081:
 10830  024A'                    	goto	l4583
 10831  024A' EF00' F000'        u6080:
 10832  024E'                    	line	128
 10833                           	
 10834                           l4579:
 10835  024E'                    	movlw	low(normalize32(0x0))
 10836  024E' 0E00               	movwf	((c:?___fladd)),c
 10837  0250' 6E0D'              	movlw	high(normalize32(0x0))
 10838  0252' 0E00               	movwf	((c:?___fladd+1)),c
 10839  0254' 6E0E'              	movlw	low highword(normalize32(0x0))
 10840  0256' 0E00               	movwf	((c:?___fladd+2)),c
 10841  0258' 6E0F'              	movlw	high highword(normalize32(0x0))
 10842  025A' 0E00               	movwf	((c:?___fladd+3)),c
 10843  025C' 6E10'              	goto	l916
 10844  025E' EF00' F000'        	
 10845                           l4581:
 10846  0262'                    	goto	l916
 10847  0262' EF00' F000'        	line	129
 10848                           	
 10849                           l915:
 10850  0266'                    	line	132
 10851                           	
 10852                           l4583:
 10853  0266'                    	movf	((c:___fladd@a)),c,w
 10854  0266' 5011'              	addwf	((c:___fladd@b)),c
 10855  0268' 260D'              	movf	((c:___fladd@a+1)),c,w
 10856  026A' 5012'              	addwfc	((c:___fladd@b+1)),c
 10857  026C' 220E'              	movf	((c:___fladd@a+2)),c,w
 10858  026E' 5013'              	addwfc	((c:___fladd@b+2)),c
 10859  0270' 220F'              	movf	((c:___fladd@a+3)),c,w
 10860  0272' 5014'              	addwfc	((c:___fladd@b+3)),c
 10861  0274' 2210'              	line	134
 10862                           	
 10863                           l4585:
 10864  0276'                    	
 10865                           	btfss	((c:___fladd@b+3)),c,(24)&7
 10866  0276' A010'              	goto	u6091
 10867  0278' EF00' F000'        	goto	u6090
 10868  027C' EF00' F000'        u6091:
 10869  0280'                    	goto	l4637
 10870  0280' EF00' F000'        u6090:
 10871  0284'                    	line	135
 10872                           	
 10873                           l4587:
 10874  0284'                    	
 10875                           	btfss	((c:___fladd@grs)),c,(0)&7
 10876  0284' A020'              	goto	u6101
 10877  0286' EF00' F000'        	goto	u6100
 10878  028A' EF00' F000'        u6101:
 10879  028E'                    	goto	l4591
 10880  028E' EF00' F000'        u6100:
 10881  0292'                    	line	136
 10882                           	
 10883                           l4589:
 10884  0292'                    	bcf	status,0
 10885  0292' 90D8               	rrcf	((c:___fladd@grs)),c,w
 10886  0294' 3020'              	iorlw	low(01h)
 10887  0296' 0901               	movwf	((c:___fladd@grs)),c
 10888  0298' 6E20'              	line	137
 10889                           	goto	l4593
 10890  029A' EF00' F000'        	line	138
 10891                           	
 10892                           l918:
 10893  029E'                    	line	139
 10894                           	
 10895                           l4591:
 10896  029E'                    	bcf status,0
 10897  029E' 90D8               	rrcf	((c:___fladd@grs)),c
 10898  02A0' 3220'              
 10899                           	goto	l4593
 10900  02A2' EF00' F000'        	line	140
 10901                           	
 10902                           l919:
 10903  02A6'                    	line	141
 10904                           	
 10905                           l4593:
 10906  02A6'                    	
 10907                           	btfss	((c:___fladd@b)),c,(0)&7
 10908  02A6' A00D'              	goto	u6111
 10909  02A8' EF00' F000'        	goto	u6110
 10910  02AC' EF00' F000'        u6111:
 10911  02B0'                    	goto	l4597
 10912  02B0' EF00' F000'        u6110:
 10913  02B4'                    	line	142
 10914                           	
 10915                           l4595:
 10916  02B4'                    	bsf	(0+(7/8)+(c:___fladd@grs)),c,(7)&7
 10917  02B4' 8E20'              	goto	l4597
 10918  02B6' EF00' F000'        	line	143
 10919                           	
 10920                           l920:
 10921  02BA'                    	line	144
 10922                           	
 10923                           l4597:
 10924  02BA'                    	rlcf	((c:___fladd@b+3)),c,w
 10925  02BA' 3410'              	rrcf	((c:___fladd@b+3)),c
 10926  02BC' 3210'              	rrcf	((c:___fladd@b+2)),c
 10927  02BE' 320F'              	rrcf	((c:___fladd@b+1)),c
 10928  02C0' 320E'              	rrcf	((c:___fladd@b)),c
 10929  02C2' 320D'              	line	145
 10930                           	
 10931                           l4599:
 10932  02C4'                    	incf	((c:___fladd@bexp)),c
 10933  02C4' 2A1F'              	goto	l4637
 10934  02C6' EF00' F000'        	line	146
 10935                           	
 10936                           l917:
 10937  02CA'                    	line	148
 10938                           	goto	l4637
 10939  02CA' EF00' F000'        	line	149
 10940                           	
 10941                           l914:
 10942  02CE'                    	line	153
 10943                           	
 10944                           l4601:
 10945  02CE'                    		movf	((c:___fladd@a)),c,w
 10946  02CE' 5011'              	subwf	((c:___fladd@b)),c,w
 10947  02D0' 5C0D'              	movf	((c:___fladd@a+1)),c,w
 10948  02D2' 5012'              	subwfb	((c:___fladd@b+1)),c,w
 10949  02D4' 580E'              	movf	((c:___fladd@a+2)),c,w
 10950  02D6' 5013'              	subwfb	((c:___fladd@b+2)),c,w
 10951  02D8' 580F'              	movf	((c:___fladd@b+3)),c,w
 10952  02DA' 5010'              	xorlw	80h
 10953  02DC' 0A80               	movwf	(??___fladd+0+0)&0ffh,c
 10954  02DE' 6E00'              	movf	((c:___fladd@a+3)),c,w
 10955  02E0' 5014'              	xorlw	80h
 10956  02E2' 0A80               	subwfb	(??___fladd+0+0)&0ffh,c,w
 10957  02E4' 5800'              	btfsc	status,0
 10958  02E6' B0D8               	goto	u6121
 10959  02E8' EF00' F000'        	goto	u6120
 10960  02EC' EF00' F000'        
 10961                           u6121:
 10962  02F0'                    	goto	l4611
 10963  02F0' EF00' F000'        u6120:
 10964  02F4'                    	line	154
 10965                           	
 10966                           l4603:
 10967  02F4'                    	movff	(c:___fladd@b),??___fladd+0+0
 10968  02F4' C00D' F015'        	movff	(c:___fladd@b+1),??___fladd+0+0+1
 10969  02F8' C00E' F016'        	movff	(c:___fladd@b+2),??___fladd+0+0+2
 10970  02FC' C00F' F017'        	movff	(c:___fladd@b+3),??___fladd+0+0+3
 10971  0300' C010' F018'        	comf	(??___fladd+0+0),c
 10972  0304' 1E15'              	comf	(??___fladd+0+1),c
 10973  0306' 1E16'              	comf	(??___fladd+0+2),c
 10974  0308' 1E17'              	comf	(??___fladd+0+3),c
 10975  030A' 1E18'              	incf	(??___fladd+0+0),c
 10976  030C' 2A15'              	movlw	0
 10977  030E' 0E00               	addwfc	(??___fladd+0+1),c
 10978  0310' 2216'              	addwfc	(??___fladd+0+2),c
 10979  0312' 2217'              	addwfc	(??___fladd+0+3),c
 10980  0314' 2218'              	movf	((c:___fladd@a)),c,w
 10981  0316' 5011'              	addwf	(??___fladd+0+0),c,w
 10982  0318' 2415'              	movwf	(??___fladd+4+0)&0ffh,c
 10983  031A' 6E00'              	movf	((c:___fladd@a+1)),c,w
 10984  031C' 5012'              	addwfc	(??___fladd+0+1),c,w
 10985  031E' 2016'              	movwf	1+(??___fladd+4+0)&0ffh,c
 10986  0320' 6E00'              	
 10987                           	movf	((c:___fladd@a+2)),c,w
 10988  0322' 5013'              	addwfc	(??___fladd+0+2),c,w
 10989  0324' 2017'              	movwf	2+(??___fladd+4+0)&0ffh,c
 10990  0326' 6E00'              	
 10991                           	movf	((c:___fladd@a+3)),c,w
 10992  0328' 5014'              	addwfc	(??___fladd+0+3),c,w
 10993  032A' 2018'              	movwf	3+(??___fladd+4+0)&0ffh,c
 10994  032C' 6E00'              	movlw	0FFh
 10995  032E' 0EFF               	addwf	(??___fladd+4+0),c,w
 10996  0330' 2419'              	movwf	((c:___fladd@b)),c
 10997  0332' 6E0D'              	movlw	0FFh
 10998  0334' 0EFF               	addwfc	(??___fladd+4+1),c,w
 10999  0336' 201A'              	movwf	1+((c:___fladd@b)),c
 11000  0338' 6E0E'              	
 11001                           	movlw	0FFh
 11002  033A' 0EFF               	addwfc	(??___fladd+4+2),c,w
 11003  033C' 201B'              	movwf	2+((c:___fladd@b)),c
 11004  033E' 6E0F'              	
 11005                           	movlw	0FFh
 11006  0340' 0EFF               	addwfc	(??___fladd+4+3),c,w
 11007  0342' 201C'              	movwf	3+((c:___fladd@b)),c
 11008  0344' 6E10'              	line	155
 11009                           	movlw	(080h)&0ffh
 11010  0346' 0E80               	xorwf	((c:___fladd@signs)),c
 11011  0348' 1A1D'              	line	156
 11012                           	
 11013                           l4605:
 11014  034A'                    	negf	((c:___fladd@grs)),c
 11015  034A' 6C20'              	line	157
 11016                           	
 11017                           l4607:
 11018  034C'                    	movf	((c:___fladd@grs)),c,w
 11019  034C' 5020'              	btfss	status,2
 11020  034E' A4D8               	goto	u6131
 11021  0350' EF00' F000'        	goto	u6130
 11022  0354' EF00' F000'        u6131:
 11023  0358'                    	goto	l924
 11024  0358' EF00' F000'        u6130:
 11025  035C'                    	line	158
 11026                           	
 11027                           l4609:
 11028  035C'                    	movlw	low(01h)
 11029  035C' 0E01               	addwf	((c:___fladd@b)),c
 11030  035E' 260D'              	movlw	0
 11031  0360' 0E00               	addwfc	((c:___fladd@b+1)),c
 11032  0362' 220E'              	addwfc	((c:___fladd@b+2)),c
 11033  0364' 220F'              	addwfc	((c:___fladd@b+3)),c
 11034  0366' 2210'              	goto	l924
 11035  0368' EF00' F000'        	line	159
 11036                           	
 11037                           l923:
 11038  036C'                    	line	160
 11039                           	goto	l924
 11040  036C' EF00' F000'        	line	161
 11041                           	
 11042                           l922:
 11043  0370'                    	line	162
 11044                           	
 11045                           l4611:
 11046  0370'                    	movf	((c:___fladd@a)),c,w
 11047  0370' 5011'              	subwf	((c:___fladd@b)),c
 11048  0372' 5E0D'              	movf	((c:___fladd@a+1)),c,w
 11049  0374' 5012'              	subwfb	((c:___fladd@b+1)),c
 11050  0376' 5A0E'              	movf	((c:___fladd@a+2)),c,w
 11051  0378' 5013'              	subwfb	((c:___fladd@b+2)),c
 11052  037A' 5A0F'              	movf	((c:___fladd@a+3)),c,w
 11053  037C' 5014'              	subwfb	((c:___fladd@b+3)),c
 11054  037E' 5A10'              	line	163
 11055                           	
 11056                           l924:
 11057  0380'                    	line	166
 11058                           	movf	((c:___fladd@b)),c,w
 11059  0380' 500D'              iorwf	((c:___fladd@b+1)),c,w
 11060  0382' 100E'              iorwf	((c:___fladd@b+2)),c,w
 11061  0384' 100F'              iorwf	((c:___fladd@b+3)),c,w
 11062  0386' 1010'              	btfss	status,2
 11063  0388' A4D8               	goto	u6141
 11064  038A' EF00' F000'        	goto	u6140
 11065  038E' EF00' F000'        
 11066                           u6141:
 11067  0392'                    	goto	l4635
 11068  0392' EF00' F000'        u6140:
 11069  0396'                    	
 11070                           l4613:
 11071  0396'                    	movf	((c:___fladd@grs)),c,w
 11072  0396' 5020'              	btfss	status,2
 11073  0398' A4D8               	goto	u6151
 11074  039A' EF00' F000'        	goto	u6150
 11075  039E' EF00' F000'        u6151:
 11076  03A2'                    	goto	l4635
 11077  03A2' EF00' F000'        u6150:
 11078  03A6'                    	line	167
 11079                           	
 11080                           l4615:
 11081  03A6'                    	movlw	low(normalize32(0x0))
 11082  03A6' 0E00               	movwf	((c:?___fladd)),c
 11083  03A8' 6E0D'              	movlw	high(normalize32(0x0))
 11084  03AA' 0E00               	movwf	((c:?___fladd+1)),c
 11085  03AC' 6E0E'              	movlw	low highword(normalize32(0x0))
 11086  03AE' 0E00               	movwf	((c:?___fladd+2)),c
 11087  03B0' 6E0F'              	movlw	high highword(normalize32(0x0))
 11088  03B2' 0E00               	movwf	((c:?___fladd+3)),c
 11089  03B4' 6E10'              	goto	l916
 11090  03B6' EF00' F000'        	
 11091                           l4617:
 11092  03BA'                    	goto	l916
 11093  03BA' EF00' F000'        	line	168
 11094                           	
 11095                           l925:
 11096  03BE'                    	line	171
 11097                           	goto	l4635
 11098  03BE' EF00' F000'        	
 11099                           l927:
 11100  03C2'                    	line	172
 11101                           	
 11102                           l4619:
 11103  03C2'                    	bcf	status,0
 11104  03C2' 90D8               	rlcf	((c:___fladd@b)),c
 11105  03C4' 360D'              	rlcf	((c:___fladd@b+1)),c
 11106  03C6' 360E'              	rlcf	((c:___fladd@b+2)),c
 11107  03C8' 360F'              	rlcf	((c:___fladd@b+3)),c
 11108  03CA' 3610'              	line	173
 11109                           	
 11110                           l4621:
 11111  03CC'                    	
 11112                           	btfss	((c:___fladd@grs)),c,(7)&7
 11113  03CC' AE20'              	goto	u6161
 11114  03CE' EF00' F000'        	goto	u6160
 11115  03D2' EF00' F000'        u6161:
 11116  03D6'                    	goto	l4625
 11117  03D6' EF00' F000'        u6160:
 11118  03DA'                    	line	174
 11119                           	
 11120                           l4623:
 11121  03DA'                    	bsf	(0+(0/8)+(c:___fladd@b)),c,(0)&7
 11122  03DA' 800D'              	goto	l4625
 11123  03DC' EF00' F000'        	line	175
 11124                           	
 11125                           l928:
 11126  03E0'                    	line	176
 11127                           	
 11128                           l4625:
 11129  03E0'                    	
 11130                           	btfss	((c:___fladd@grs)),c,(0)&7
 11131  03E0' A020'              	goto	u6171
 11132  03E2' EF00' F000'        	goto	u6170
 11133  03E6' EF00' F000'        u6171:
 11134  03EA'                    	goto	l4629
 11135  03EA' EF00' F000'        u6170:
 11136  03EE'                    	line	177
 11137                           	
 11138                           l4627:
 11139  03EE'                    	bsf	status,0
 11140  03EE' 80D8               	
 11141                           	rlcf	((c:___fladd@grs)),c
 11142  03F0' 3620'              	line	178
 11143                           	goto	l4631
 11144  03F2' EF00' F000'        	line	179
 11145                           	
 11146                           l929:
 11147  03F6'                    	line	180
 11148                           	
 11149                           l4629:
 11150  03F6'                    	bcf status,0
 11151  03F6' 90D8               	rlcf	((c:___fladd@grs)),c
 11152  03F8' 3620'              
 11153                           	goto	l4631
 11154  03FA' EF00' F000'        	line	181
 11155                           	
 11156                           l930:
 11157  03FE'                    	line	182
 11158                           	
 11159                           l4631:
 11160  03FE'                    	movf	((c:___fladd@bexp)),c,w
 11161  03FE' 501F'              	btfsc	status,2
 11162  0400' B4D8               	goto	u6181
 11163  0402' EF00' F000'        	goto	u6180
 11164  0406' EF00' F000'        u6181:
 11165  040A'                    	goto	l4635
 11166  040A' EF00' F000'        u6180:
 11167  040E'                    	line	183
 11168                           	
 11169                           l4633:
 11170  040E'                    	decf	((c:___fladd@bexp)),c
 11171  040E' 061F'              	goto	l4635
 11172  0410' EF00' F000'        	line	184
 11173                           	
 11174                           l931:
 11175  0414'                    	goto	l4635
 11176  0414' EF00' F000'        	line	185
 11177                           	
 11178                           l926:
 11179  0418'                    	line	171
 11180                           	
 11181                           l4635:
 11182  0418'                    	
 11183                           	btfss	((c:___fladd@b+2)),c,(23)&7
 11184  0418' AE0F'              	goto	u6191
 11185  041A' EF00' F000'        	goto	u6190
 11186  041E' EF00' F000'        u6191:
 11187  0422'                    	goto	l4619
 11188  0422' EF00' F000'        u6190:
 11189  0426'                    	goto	l4637
 11190  0426' EF00' F000'        	
 11191                           l932:
 11192  042A'                    	goto	l4637
 11193  042A' EF00' F000'        	line	186
 11194                           	
 11195                           l921:
 11196  042E'                    	line	192
 11197                           	
 11198                           l4637:
 11199  042E'                    	movlw	low(0)
 11200  042E' 0E00               	movwf	((c:___fladd@aexp)),c
 11201  0430' 6E1E'              	line	193
 11202                           	
 11203                           l4639:
 11204  0432'                    	
 11205                           	btfss	((c:___fladd@grs)),c,(7)&7
 11206  0432' AE20'              	goto	u6201
 11207  0434' EF00' F000'        	goto	u6200
 11208  0438' EF00' F000'        u6201:
 11209  043C'                    	goto	l933
 11210  043C' EF00' F000'        u6200:
 11211  0440'                    	line	194
 11212                           	
 11213                           l4641:
 11214  0440'                    	movff	(c:___fladd@grs),??___fladd+0+0
 11215  0440' C020' F015'        	movlw	07Fh
 11216  0444' 0E7F               	andwf	(??___fladd+0+0),c
 11217  0446' 1615'              	btfsc	status,2
 11218  0448' B4D8               	goto	u6211
 11219  044A' EF00' F000'        	goto	u6210
 11220  044E' EF00' F000'        u6211:
 11221  0452'                    	goto	l934
 11222  0452' EF00' F000'        u6210:
 11223  0456'                    	line	195
 11224                           	
 11225                           l4643:
 11226  0456'                    	movlw	low(01h)
 11227  0456' 0E01               	movwf	((c:___fladd@aexp)),c
 11228  0458' 6E1E'              	line	196
 11229                           	goto	l933
 11230  045A' EF00' F000'        	line	197
 11231                           	
 11232                           l934:
 11233  045E'                    	line	198
 11234                           	
 11235                           	btfss	((c:___fladd@b)),c,(0)&7
 11236  045E' A00D'              	goto	u6221
 11237  0460' EF00' F000'        	goto	u6220
 11238  0464' EF00' F000'        u6221:
 11239  0468'                    	goto	l933
 11240  0468' EF00' F000'        u6220:
 11241  046C'                    	line	199
 11242                           	
 11243                           l4645:
 11244  046C'                    	movlw	low(01h)
 11245  046C' 0E01               	movwf	((c:___fladd@aexp)),c
 11246  046E' 6E1E'              	goto	l933
 11247  0470' EF00' F000'        	line	200
 11248                           	
 11249                           l936:
 11250  0474'                    	goto	l933
 11251  0474' EF00' F000'        	line	201
 11252                           	
 11253                           l935:
 11254  0478'                    	line	202
 11255                           	
 11256                           l933:
 11257  0478'                    	line	203
 11258                           	movf	((c:___fladd@aexp)),c,w
 11259  0478' 501E'              	btfsc	status,2
 11260  047A' B4D8               	goto	u6231
 11261  047C' EF00' F000'        	goto	u6230
 11262  0480' EF00' F000'        u6231:
 11263  0484'                    	goto	l4655
 11264  0484' EF00' F000'        u6230:
 11265  0488'                    	line	204
 11266                           	
 11267                           l4647:
 11268  0488'                    	movlw	low(01h)
 11269  0488' 0E01               	addwf	((c:___fladd@b)),c
 11270  048A' 260D'              	movlw	0
 11271  048C' 0E00               	addwfc	((c:___fladd@b+1)),c
 11272  048E' 220E'              	addwfc	((c:___fladd@b+2)),c
 11273  0490' 220F'              	addwfc	((c:___fladd@b+3)),c
 11274  0492' 2210'              	line	205
 11275                           	
 11276                           l4649:
 11277  0494'                    	
 11278                           	btfss	((c:___fladd@b+3)),c,(24)&7
 11279  0494' A010'              	goto	u6241
 11280  0496' EF00' F000'        	goto	u6240
 11281  049A' EF00' F000'        u6241:
 11282  049E'                    	goto	l4655
 11283  049E' EF00' F000'        u6240:
 11284  04A2'                    	line	206
 11285                           	
 11286                           l4651:
 11287  04A2'                    	movff	(c:___fladd@b),??___fladd+0+0
 11288  04A2' C00D' F015'        	movff	(c:___fladd@b+1),??___fladd+0+0+1
 11289  04A6' C00E' F016'        	movff	(c:___fladd@b+2),??___fladd+0+0+2
 11290  04AA' C00F' F017'        	movff	(c:___fladd@b+3),??___fladd+0+0+3
 11291  04AE' C010' F018'        	rlcf	(??___fladd+0+3),c,w
 11292  04B2' 3418'              	rrcf	(??___fladd+0+3),c
 11293  04B4' 3218'              	rrcf	(??___fladd+0+2),c
 11294  04B6' 3217'              	rrcf	(??___fladd+0+1),c
 11295  04B8' 3216'              	rrcf	(??___fladd+0+0),c
 11296  04BA' 3215'              	movff	??___fladd+0+0,(c:___fladd@b)
 11297  04BC' C015' F00D'        	movff	??___fladd+0+1,(c:___fladd@b+1)
 11298  04C0' C016' F00E'        	movff	??___fladd+0+2,(c:___fladd@b+2)
 11299  04C4' C017' F00F'        	movff	??___fladd+0+3,(c:___fladd@b+3)
 11300  04C8' C018' F010'        	line	207
 11301                           		incf	((c:___fladd@bexp)),c,w
 11302  04CC' 281F'              	btfsc	status,2
 11303  04CE' B4D8               	goto	u6251
 11304  04D0' EF00' F000'        	goto	u6250
 11305  04D4' EF00' F000'        
 11306                           u6251:
 11307  04D8'                    	goto	l4655
 11308  04D8' EF00' F000'        u6250:
 11309  04DC'                    	line	208
 11310                           	
 11311                           l4653:
 11312  04DC'                    	incf	((c:___fladd@bexp)),c
 11313  04DC' 2A1F'              	goto	l4655
 11314  04DE' EF00' F000'        	line	209
 11315                           	
 11316                           l939:
 11317  04E2'                    	goto	l4655
 11318  04E2' EF00' F000'        	line	210
 11319                           	
 11320                           l938:
 11321  04E6'                    	goto	l4655
 11322  04E6' EF00' F000'        	line	211
 11323                           	
 11324                           l937:
 11325  04EA'                    	line	215
 11326                           	
 11327                           l4655:
 11328  04EA'                    		incf	((c:___fladd@bexp)),c,w
 11329  04EA' 281F'              	btfsc	status,2
 11330  04EC' B4D8               	goto	u6261
 11331  04EE' EF00' F000'        	goto	u6260
 11332  04F2' EF00' F000'        
 11333                           u6261:
 11334  04F6'                    	goto	l4659
 11335  04F6' EF00' F000'        u6260:
 11336  04FA'                    	
 11337                           l4657:
 11338  04FA'                    	movf	((c:___fladd@bexp)),c,w
 11339  04FA' 501F'              	btfss	status,2
 11340  04FC' A4D8               	goto	u6271
 11341  04FE' EF00' F000'        	goto	u6270
 11342  0502' EF00' F000'        u6271:
 11343  0506'                    	goto	l4663
 11344  0506' EF00' F000'        u6270:
 11345  050A'                    	goto	l4659
 11346  050A' EF00' F000'        	
 11347                           l942:
 11348  050E'                    	line	216
 11349                           	
 11350                           l4659:
 11351  050E'                    	movlw	low(0)
 11352  050E' 0E00               	movwf	((c:___fladd@b)),c
 11353  0510' 6E0D'              	movlw	high(0)
 11354  0512' 0E00               	movwf	((c:___fladd@b+1)),c
 11355  0514' 6E0E'              	movlw	low highword(0)
 11356  0516' 0E00               	movwf	((c:___fladd@b+2)),c
 11357  0518' 6E0F'              	movlw	high highword(0)
 11358  051A' 0E00               	movwf	((c:___fladd@b+3)),c
 11359  051C' 6E10'              	line	218
 11360                           	movf	((c:___fladd@bexp)),c,w
 11361  051E' 501F'              	btfss	status,2
 11362  0520' A4D8               	goto	u6281
 11363  0522' EF00' F000'        	goto	u6280
 11364  0526' EF00' F000'        u6281:
 11365  052A'                    	goto	l4663
 11366  052A' EF00' F000'        u6280:
 11367  052E'                    	line	219
 11368                           	
 11369                           l4661:
 11370  052E'                    	movlw	low(0)
 11371  052E' 0E00               	movwf	((c:___fladd@signs)),c
 11372  0530' 6E1D'              	goto	l4663
 11373  0532' EF00' F000'        	line	220
 11374                           	
 11375                           l943:
 11376  0536'                    	goto	l4663
 11377  0536' EF00' F000'        	line	221
 11378                           	
 11379                           l940:
 11380  053A'                    	line	225
 11381                           	
 11382                           l4663:
 11383  053A'                    	
 11384                           	btfss	((c:___fladd@bexp)),c,(0)&7
 11385  053A' A01F'              	goto	u6291
 11386  053C' EF00' F000'        	goto	u6290
 11387  0540' EF00' F000'        u6291:
 11388  0544'                    	goto	l4667
 11389  0544' EF00' F000'        u6290:
 11390  0548'                    	line	226
 11391                           	
 11392                           l4665:
 11393  0548'                    	bsf	(0+(7/8)+0+((c:___fladd@b)+02h)),c,(7)&7
 11394  0548' 8E0F'              	line	227
 11395                           	goto	l4669
 11396  054A' EF00' F000'        	line	229
 11397                           	
 11398                           l944:
 11399  054E'                    	line	230
 11400                           	
 11401                           l4667:
 11402  054E'                    	bcf	(0+(7/8)+0+((c:___fladd@b)+02h)),c,(7)&7
 11403  054E' 9E0F'              	goto	l4669
 11404  0550' EF00' F000'        	line	231
 11405                           	
 11406                           l945:
 11407  0554'                    	line	232
 11408                           	
 11409                           l4669:
 11410  0554'                    	bcf	status,0
 11411  0554' 90D8               	rrcf	((c:___fladd@bexp)),c,w
 11412  0556' 301F'              	movwf	(0+((c:___fladd@b)+03h)),c
 11413  0558' 6E10'              	line	233
 11414                           	
 11415                           l4671:
 11416  055A'                    	
 11417                           	btfss	((c:___fladd@signs)),c,(7)&7
 11418  055A' AE1D'              	goto	u6301
 11419  055C' EF00' F000'        	goto	u6300
 11420  0560' EF00' F000'        u6301:
 11421  0564'                    	goto	l4675
 11422  0564' EF00' F000'        u6300:
 11423  0568'                    	line	234
 11424                           	
 11425                           l4673:
 11426  0568'                    	bsf	(0+(7/8)+0+((c:___fladd@b)+03h)),c,(7)&7
 11427  0568' 8E10'              	goto	l4675
 11428  056A' EF00' F000'        	line	235
 11429                           	
 11430                           l946:
 11431  056E'                    	line	236
 11432                           	
 11433                           l4675:
 11434  056E'                    	movff	(c:___fladd@b),(c:?___fladd)
 11435  056E' C00D' F00D'        	movff	(c:___fladd@b+1),(c:?___fladd+1)
 11436  0572' C00E' F00E'        	movff	(c:___fladd@b+2),(c:?___fladd+2)
 11437  0576' C00F' F00F'        	movff	(c:___fladd@b+3),(c:?___fladd+3)
 11438  057A' C010' F010'        	goto	l916
 11439  057E' EF00' F000'        	
 11440                           l4677:
 11441  0582'                    	line	237
 11442                           	
 11443                           l916:
 11444  0582'                    	return	;funcret
 11445  0582' 0012               	opt stack 0
 11446                           GLOBAL	__end_of___fladd
 11447                           	__end_of___fladd:
 11448  0584'                    	signat	___fladd,8316
 11449                           	global	___flneg
 11450                           
 11451 ;; *************** function ___flneg *****************
 11452 ;; Defined at:
 11453 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 11454 ;; Parameters:    Size  Location     Type
 11455 ;;  f1              4   13[COMRAM] unsigned char 
 11456 ;; Auto vars:     Size  Location     Type
 11457 ;;		None
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  4   13[COMRAM] unsigned char 
 11460 ;; Registers used:
 11461 ;;		wreg, status,2, status,0
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11467 ;;      Params:         4       0       0       0       0       0       0
 11468 ;;      Locals:         0       0       0       0       0       0       0
 11469 ;;      Temps:          0       0       0       0       0       0       0
 11470 ;;      Totals:         4       0       0       0       0       0       0
 11471 ;;Total ram usage:        4 bytes
 11472 ;; Hardware stack levels used:    1
 11473 ;; Hardware stack levels required when called:    4
 11474 ;; This function calls:
 11475 ;;		Nothing
 11476 ;; This function is called by:
 11477 ;;		_efgtoa
 11478 ;; This function uses a non-reentrant model
 11479 ;;
 11480                           psect	text27,class=CODE,space=0,reloc=2,group=1
 11481                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 11482                           	line	15
 11483                           global __ptext27
 11484                           __ptext27:
 11485  0000'                    psect	text27
 11486                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
 11487                           	line	15
 11488                           	global	__size_of___flneg
 11489                           	__size_of___flneg	equ	__end_of___flneg-___flneg
 11490  0000                     	
 11491                           ___flneg:
 11492  0000'                    ;incstack = 0
 11493                           	opt	stack 21
 11494                           	line	17
 11495                           	
 11496                           l5167:
 11497  0000'                    	movf	((c:___flneg@f1)),c,w
 11498  0000' 500D'              iorwf	((c:___flneg@f1+1)),c,w
 11499  0002' 100E'              iorwf	((c:___flneg@f1+2)),c,w
 11500  0004' 100F'              iorwf	((c:___flneg@f1+3)),c,w
 11501  0006' 1010'              	btfsc	status,2
 11502  0008' B4D8               	goto	u7211
 11503  000A' EF00' F000'        	goto	u7210
 11504  000E' EF00' F000'        
 11505                           u7211:
 11506  0012'                    	goto	l5171
 11507  0012' EF00' F000'        u7210:
 11508  0016'                    	line	18
 11509                           	
 11510                           l5169:
 11511  0016'                    	movlw	0
 11512  0016' 0E00               	xorwf	((c:___flneg@f1)),c
 11513  0018' 1A0D'              	movlw	0
 11514  001A' 0E00               	xorwf	((c:___flneg@f1+1)),c
 11515  001C' 1A0E'              	movlw	0
 11516  001E' 0E00               	xorwf	((c:___flneg@f1+2)),c
 11517  0020' 1A0F'              	movlw	080h
 11518  0022' 0E80               	xorwf	((c:___flneg@f1+3)),c
 11519  0024' 1A10'              	goto	l5171
 11520  0026' EF00' F000'        	
 11521                           l652:
 11522  002A'                    	line	19
 11523                           	
 11524                           l5171:
 11525  002A'                    	movff	(c:___flneg@f1),(c:?___flneg)
 11526  002A' C00D' F00D'        	movff	(c:___flneg@f1+1),(c:?___flneg+1)
 11527  002E' C00E' F00E'        	movff	(c:___flneg@f1+2),(c:?___flneg+2)
 11528  0032' C00F' F00F'        	movff	(c:___flneg@f1+3),(c:?___flneg+3)
 11529  0036' C010' F010'        	goto	l653
 11530  003A' EF00' F000'        	
 11531                           l5173:
 11532  003E'                    	line	20
 11533                           	
 11534                           l653:
 11535  003E'                    	return	;funcret
 11536  003E' 0012               	opt stack 0
 11537                           GLOBAL	__end_of___flneg
 11538                           	__end_of___flneg:
 11539  0040'                    	signat	___flneg,4220
 11540                           	global	___flmul
 11541                           
 11542 ;; *************** function ___flmul *****************
 11543 ;; Defined at:
 11544 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 11545 ;; Parameters:    Size  Location     Type
 11546 ;;  b               4   27[COMRAM] unsigned char 
 11547 ;;  a               4   31[COMRAM] unsigned char 
 11548 ;; Auto vars:     Size  Location     Type
 11549 ;;  prod            4   46[COMRAM] struct .
 11550 ;;  grs             4   41[COMRAM] unsigned long 
 11551 ;;  temp            2   50[COMRAM] struct .
 11552 ;;  bexp            1   45[COMRAM] unsigned char 
 11553 ;;  aexp            1   40[COMRAM] unsigned char 
 11554 ;;  sign            1   39[COMRAM] unsigned char 
 11555 ;; Return value:  Size  Location     Type
 11556 ;;                  4   27[COMRAM] unsigned char 
 11557 ;; Registers used:
 11558 ;;		wreg, status,2, status,0, prodl, prodh
 11559 ;; Tracked objects:
 11560 ;;		On entry : 0/0
 11561 ;;		On exit  : 0/0
 11562 ;;		Unchanged: 0/0
 11563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11564 ;;      Params:         8       0       0       0       0       0       0
 11565 ;;      Locals:        13       0       0       0       0       0       0
 11566 ;;      Temps:          4       0       0       0       0       0       0
 11567 ;;      Totals:        25       0       0       0       0       0       0
 11568 ;;Total ram usage:       25 bytes
 11569 ;; Hardware stack levels used:    1
 11570 ;; Hardware stack levels required when called:    4
 11571 ;; This function calls:
 11572 ;;		Nothing
 11573 ;; This function is called by:
 11574 ;;		_Mode3
 11575 ;;		_efgtoa
 11576 ;; This function uses a non-reentrant model
 11577 ;;
 11578                           psect	text28,class=CODE,space=0,reloc=2,group=1
 11579                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 11580                           	line	8
 11581                           global __ptext28
 11582                           __ptext28:
 11583  0000'                    psect	text28
 11584                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
 11585                           	line	8
 11586                           	global	__size_of___flmul
 11587                           	__size_of___flmul	equ	__end_of___flmul-___flmul
 11588  0000                     	
 11589                           ___flmul:
 11590  0000'                    ;incstack = 0
 11591                           	opt	stack 21
 11592                           	line	17
 11593                           	
 11594                           l4913:
 11595  0000'                    	movf	(0+((c:___flmul@b)+03h)),c,w
 11596  0000' 501E'              	andlw	low(080h)
 11597  0002' 0B80               	movwf	((c:___flmul@sign)),c
 11598  0004' 6E27'              	line	18
 11599                           	movf	(0+((c:___flmul@b)+03h)),c,w
 11600  0006' 501E'              	addwf	(0+((c:___flmul@b)+03h)),c,w
 11601  0008' 241E'              	movwf	((c:___flmul@bexp)),c
 11602  000A' 6E2D'              	line	19
 11603                           	
 11604                           l4915:
 11605  000C'                    	
 11606                           	btfss	(0+((c:___flmul@b)+02h)),c,(7)&7
 11607  000C' AE1D'              	goto	u6821
 11608  000E' EF00' F000'        	goto	u6820
 11609  0012' EF00' F000'        u6821:
 11610  0016'                    	goto	l4919
 11611  0016' EF00' F000'        u6820:
 11612  001A'                    	line	20
 11613                           	
 11614                           l4917:
 11615  001A'                    	bsf	(0+(0/8)+(c:___flmul@bexp)),c,(0)&7
 11616  001A' 802D'              	goto	l4919
 11617  001C' EF00' F000'        	line	21
 11618                           	
 11619                           l986:
 11620  0020'                    	line	24
 11621                           	
 11622                           l4919:
 11623  0020'                    	movf	((c:___flmul@bexp)),c,w
 11624  0020' 502D'              	btfsc	status,2
 11625  0022' B4D8               	goto	u6831
 11626  0024' EF00' F000'        	goto	u6830
 11627  0028' EF00' F000'        u6831:
 11628  002C'                    	goto	l4927
 11629  002C' EF00' F000'        u6830:
 11630  0030'                    	line	26
 11631                           	
 11632                           l4921:
 11633  0030'                    		incf	((c:___flmul@bexp)),c,w
 11634  0030' 282D'              	btfss	status,2
 11635  0032' A4D8               	goto	u6841
 11636  0034' EF00' F000'        	goto	u6840
 11637  0038' EF00' F000'        
 11638                           u6841:
 11639  003C'                    	goto	l4925
 11640  003C' EF00' F000'        u6840:
 11641  0040'                    	line	28
 11642                           	
 11643                           l4923:
 11644  0040'                    	movlw	low(normalize32(0x0))
 11645  0040' 0E00               	movwf	((c:___flmul@b)),c
 11646  0042' 6E1B'              	movlw	high(normalize32(0x0))
 11647  0044' 0E00               	movwf	((c:___flmul@b+1)),c
 11648  0046' 6E1C'              	movlw	low highword(normalize32(0x0))
 11649  0048' 0E00               	movwf	((c:___flmul@b+2)),c
 11650  004A' 6E1D'              	movlw	high highword(normalize32(0x0))
 11651  004C' 0E00               	movwf	((c:___flmul@b+3)),c
 11652  004E' 6E1E'              	goto	l4925
 11653  0050' EF00' F000'        	line	29
 11654                           	
 11655                           l988:
 11656  0054'                    	line	31
 11657                           	
 11658                           l4925:
 11659  0054'                    	bsf	(0+(23/8)+(c:___flmul@b)),c,(23)&7
 11660  0054' 8E1D'              	line	33
 11661                           	goto	l4929
 11662  0056' EF00' F000'        	line	34
 11663                           	
 11664                           l987:
 11665  005A'                    	line	36
 11666                           	
 11667                           l4927:
 11668  005A'                    	movlw	low(normalize32(0x0))
 11669  005A' 0E00               	movwf	((c:___flmul@b)),c
 11670  005C' 6E1B'              	movlw	high(normalize32(0x0))
 11671  005E' 0E00               	movwf	((c:___flmul@b+1)),c
 11672  0060' 6E1C'              	movlw	low highword(normalize32(0x0))
 11673  0062' 0E00               	movwf	((c:___flmul@b+2)),c
 11674  0064' 6E1D'              	movlw	high highword(normalize32(0x0))
 11675  0066' 0E00               	movwf	((c:___flmul@b+3)),c
 11676  0068' 6E1E'              	goto	l4929
 11677  006A' EF00' F000'        	line	37
 11678                           	
 11679                           l989:
 11680  006E'                    	line	39
 11681                           	
 11682                           l4929:
 11683  006E'                    	movf	(0+((c:___flmul@a)+03h)),c,w
 11684  006E' 5022'              	andlw	low(080h)
 11685  0070' 0B80               	xorwf	((c:___flmul@sign)),c
 11686  0072' 1A27'              	line	40
 11687                           	
 11688                           l4931:
 11689  0074'                    	movf	(0+((c:___flmul@a)+03h)),c,w
 11690  0074' 5022'              	addwf	(0+((c:___flmul@a)+03h)),c,w
 11691  0076' 2422'              	movwf	((c:___flmul@aexp)),c
 11692  0078' 6E28'              	line	41
 11693                           	
 11694                           l4933:
 11695  007A'                    	
 11696                           	btfss	(0+((c:___flmul@a)+02h)),c,(7)&7
 11697  007A' AE21'              	goto	u6851
 11698  007C' EF00' F000'        	goto	u6850
 11699  0080' EF00' F000'        u6851:
 11700  0084'                    	goto	l4937
 11701  0084' EF00' F000'        u6850:
 11702  0088'                    	line	42
 11703                           	
 11704                           l4935:
 11705  0088'                    	bsf	(0+(0/8)+(c:___flmul@aexp)),c,(0)&7
 11706  0088' 8028'              	goto	l4937
 11707  008A' EF00' F000'        	line	43
 11708                           	
 11709                           l990:
 11710  008E'                    	line	45
 11711                           	
 11712                           l4937:
 11713  008E'                    	movf	((c:___flmul@aexp)),c,w
 11714  008E' 5028'              	btfsc	status,2
 11715  0090' B4D8               	goto	u6861
 11716  0092' EF00' F000'        	goto	u6860
 11717  0096' EF00' F000'        u6861:
 11718  009A'                    	goto	l4945
 11719  009A' EF00' F000'        u6860:
 11720  009E'                    	line	48
 11721                           	
 11722                           l4939:
 11723  009E'                    		incf	((c:___flmul@aexp)),c,w
 11724  009E' 2828'              	btfss	status,2
 11725  00A0' A4D8               	goto	u6871
 11726  00A2' EF00' F000'        	goto	u6870
 11727  00A6' EF00' F000'        
 11728                           u6871:
 11729  00AA'                    	goto	l4943
 11730  00AA' EF00' F000'        u6870:
 11731  00AE'                    	line	50
 11732                           	
 11733                           l4941:
 11734  00AE'                    	movlw	low(normalize32(0x0))
 11735  00AE' 0E00               	movwf	((c:___flmul@a)),c
 11736  00B0' 6E1F'              	movlw	high(normalize32(0x0))
 11737  00B2' 0E00               	movwf	((c:___flmul@a+1)),c
 11738  00B4' 6E20'              	movlw	low highword(normalize32(0x0))
 11739  00B6' 0E00               	movwf	((c:___flmul@a+2)),c
 11740  00B8' 6E21'              	movlw	high highword(normalize32(0x0))
 11741  00BA' 0E00               	movwf	((c:___flmul@a+3)),c
 11742  00BC' 6E22'              	goto	l4943
 11743  00BE' EF00' F000'        	line	51
 11744                           	
 11745                           l992:
 11746  00C2'                    	line	53
 11747                           	
 11748                           l4943:
 11749  00C2'                    	bsf	(0+(23/8)+(c:___flmul@a)),c,(23)&7
 11750  00C2' 8E21'              	line	54
 11751                           	goto	l993
 11752  00C4' EF00' F000'        	line	55
 11753                           	
 11754                           l991:
 11755  00C8'                    	line	57
 11756                           	
 11757                           l4945:
 11758  00C8'                    	movlw	low(normalize32(0x0))
 11759  00C8' 0E00               	movwf	((c:___flmul@a)),c
 11760  00CA' 6E1F'              	movlw	high(normalize32(0x0))
 11761  00CC' 0E00               	movwf	((c:___flmul@a+1)),c
 11762  00CE' 6E20'              	movlw	low highword(normalize32(0x0))
 11763  00D0' 0E00               	movwf	((c:___flmul@a+2)),c
 11764  00D2' 6E21'              	movlw	high highword(normalize32(0x0))
 11765  00D4' 0E00               	movwf	((c:___flmul@a+3)),c
 11766  00D6' 6E22'              	line	58
 11767                           	
 11768                           l993:
 11769  00D8'                    	line	65
 11770                           	movf	((c:___flmul@aexp)),c,w
 11771  00D8' 5028'              	btfsc	status,2
 11772  00DA' B4D8               	goto	u6881
 11773  00DC' EF00' F000'        	goto	u6880
 11774  00E0' EF00' F000'        u6881:
 11775  00E4'                    	goto	l4949
 11776  00E4' EF00' F000'        u6880:
 11777  00E8'                    	
 11778                           l4947:
 11779  00E8'                    	movf	((c:___flmul@bexp)),c,w
 11780  00E8' 502D'              	btfss	status,2
 11781  00EA' A4D8               	goto	u6891
 11782  00EC' EF00' F000'        	goto	u6890
 11783  00F0' EF00' F000'        u6891:
 11784  00F4'                    	goto	l4953
 11785  00F4' EF00' F000'        u6890:
 11786  00F8'                    	goto	l4949
 11787  00F8' EF00' F000'        	
 11788                           l996:
 11789  00FC'                    	line	66
 11790                           	
 11791                           l4949:
 11792  00FC'                    	movlw	low(normalize32(0x0))
 11793  00FC' 0E00               	movwf	((c:?___flmul)),c
 11794  00FE' 6E1B'              	movlw	high(normalize32(0x0))
 11795  0100' 0E00               	movwf	((c:?___flmul+1)),c
 11796  0102' 6E1C'              	movlw	low highword(normalize32(0x0))
 11797  0104' 0E00               	movwf	((c:?___flmul+2)),c
 11798  0106' 6E1D'              	movlw	high highword(normalize32(0x0))
 11799  0108' 0E00               	movwf	((c:?___flmul+3)),c
 11800  010A' 6E1E'              	goto	l997
 11801  010C' EF00' F000'        	
 11802                           l4951:
 11803  0110'                    	goto	l997
 11804  0110' EF00' F000'        	line	67
 11805                           	
 11806                           l994:
 11807  0114'                    	line	95
 11808                           	
 11809                           l4953:
 11810  0114'                    	movf	(0+((c:___flmul@a)+02h)),c,w
 11811  0114' 5021'              	mulwf	((c:___flmul@b)),c
 11812  0116' 021B'              	movff	prodl,(c:___flmul@temp)
 11813  0118' CFF3 F032'         	movff	prodh,(c:___flmul@temp+1)
 11814  011C' CFF4 F033'         	line	96
 11815                           	
 11816                           l4955:
 11817  0120'                    	movf	((c:___flmul@temp)),c,w
 11818  0120' 5032'              	movwf	((c:___flmul@grs)),c
 11819  0122' 6E29'              	clrf	((c:___flmul@grs+1)),c
 11820  0124' 6A2A'              	clrf	((c:___flmul@grs+2)),c
 11821  0126' 6A2B'              	clrf	((c:___flmul@grs+3)),c
 11822  0128' 6A2C'              
 11823                           	line	97
 11824                           	
 11825                           l4957:
 11826  012A'                    	movf	(0+((c:___flmul@temp)+01h)),c,w
 11827  012A' 5033'              	movwf	((c:___flmul@prod)),c
 11828  012C' 6E2E'              	clrf	((c:___flmul@prod+1)),c
 11829  012E' 6A2F'              	clrf	((c:___flmul@prod+2)),c
 11830  0130' 6A30'              	clrf	((c:___flmul@prod+3)),c
 11831  0132' 6A31'              
 11832                           	line	98
 11833                           	movf	(0+((c:___flmul@a)+01h)),c,w
 11834  0134' 5020'              	mulwf	(0+((c:___flmul@b)+01h)),c
 11835  0136' 021C'              	movff	prodl,(c:___flmul@temp)
 11836  0138' CFF3 F032'         	movff	prodh,(c:___flmul@temp+1)
 11837  013C' CFF4 F033'         	line	99
 11838                           	
 11839                           l4959:
 11840  0140'                    	movf	((c:___flmul@temp)),c,w
 11841  0140' 5032'              	addwf	((c:___flmul@grs)),c
 11842  0142' 2629'              	movlw	0
 11843  0144' 0E00               	addwfc	((c:___flmul@grs+1)),c
 11844  0146' 222A'              	addwfc	((c:___flmul@grs+2)),c
 11845  0148' 222B'              	addwfc	((c:___flmul@grs+3)),c
 11846  014A' 222C'              	line	100
 11847                           	
 11848                           l4961:
 11849  014C'                    	movf	(0+((c:___flmul@temp)+01h)),c,w
 11850  014C' 5033'              	addwf	((c:___flmul@prod)),c
 11851  014E' 262E'              	movlw	0
 11852  0150' 0E00               	addwfc	((c:___flmul@prod+1)),c
 11853  0152' 222F'              	addwfc	((c:___flmul@prod+2)),c
 11854  0154' 2230'              	addwfc	((c:___flmul@prod+3)),c
 11855  0156' 2231'              	line	101
 11856                           	movf	((c:___flmul@a)),c,w
 11857  0158' 501F'              	mulwf	(0+((c:___flmul@b)+02h)),c
 11858  015A' 021D'              	movff	prodl,(c:___flmul@temp)
 11859  015C' CFF3 F032'         	movff	prodh,(c:___flmul@temp+1)
 11860  0160' CFF4 F033'         	line	102
 11861                           	
 11862                           l4963:
 11863  0164'                    	movf	((c:___flmul@temp)),c,w
 11864  0164' 5032'              	addwf	((c:___flmul@grs)),c
 11865  0166' 2629'              	movlw	0
 11866  0168' 0E00               	addwfc	((c:___flmul@grs+1)),c
 11867  016A' 222A'              	addwfc	((c:___flmul@grs+2)),c
 11868  016C' 222B'              	addwfc	((c:___flmul@grs+3)),c
 11869  016E' 222C'              	line	103
 11870                           	
 11871                           l4965:
 11872  0170'                    	movf	(0+((c:___flmul@temp)+01h)),c,w
 11873  0170' 5033'              	addwf	((c:___flmul@prod)),c
 11874  0172' 262E'              	movlw	0
 11875  0174' 0E00               	addwfc	((c:___flmul@prod+1)),c
 11876  0176' 222F'              	addwfc	((c:___flmul@prod+2)),c
 11877  0178' 2230'              	addwfc	((c:___flmul@prod+3)),c
 11878  017A' 2231'              	line	104
 11879                           	
 11880                           l4967:
 11881  017C'                    	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
 11882  017C' C02B' F02C'        	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
 11883  0180' C02A' F02B'        	movff	(c:___flmul@grs),(c:___flmul@grs+1)
 11884  0184' C029' F02A'        	clrf	((c:___flmul@grs)),c
 11885  0188' 6A29'              	line	105
 11886                           	
 11887                           l4969:
 11888  018A'                    	movf	((c:___flmul@a)),c,w
 11889  018A' 501F'              	mulwf	(0+((c:___flmul@b)+01h)),c
 11890  018C' 021C'              	movff	prodl,(c:___flmul@temp)
 11891  018E' CFF3 F032'         	movff	prodh,(c:___flmul@temp+1)
 11892  0192' CFF4 F033'         	line	106
 11893                           	
 11894                           l4971:
 11895  0196'                    	movf	((c:___flmul@temp)),c,w
 11896  0196' 5032'              	addwf	((c:___flmul@grs)),c
 11897  0198' 2629'              	movf	((c:___flmul@temp+1)),c,w
 11898  019A' 5033'              	addwfc	((c:___flmul@grs+1)),c
 11899  019C' 222A'              	movlw	0
 11900  019E' 0E00               	addwfc	((c:___flmul@grs+2)),c
 11901  01A0' 222B'              	movlw	0
 11902  01A2' 0E00               	addwfc	((c:___flmul@grs+3)),c
 11903  01A4' 222C'              
 11904                           	line	107
 11905                           	
 11906                           l4973:
 11907  01A6'                    	movf	(0+((c:___flmul@a)+01h)),c,w
 11908  01A6' 5020'              	mulwf	((c:___flmul@b)),c
 11909  01A8' 021B'              	movff	prodl,(c:___flmul@temp)
 11910  01AA' CFF3 F032'         	movff	prodh,(c:___flmul@temp+1)
 11911  01AE' CFF4 F033'         	line	108
 11912                           	
 11913                           l4975:
 11914  01B2'                    	movf	((c:___flmul@temp)),c,w
 11915  01B2' 5032'              	addwf	((c:___flmul@grs)),c
 11916  01B4' 2629'              	movf	((c:___flmul@temp+1)),c,w
 11917  01B6' 5033'              	addwfc	((c:___flmul@grs+1)),c
 11918  01B8' 222A'              	movlw	0
 11919  01BA' 0E00               	addwfc	((c:___flmul@grs+2)),c
 11920  01BC' 222B'              	movlw	0
 11921  01BE' 0E00               	addwfc	((c:___flmul@grs+3)),c
 11922  01C0' 222C'              
 11923                           	line	109
 11924                           	
 11925                           l4977:
 11926  01C2'                    	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
 11927  01C2' C02B' F02C'        	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
 11928  01C6' C02A' F02B'        	movff	(c:___flmul@grs),(c:___flmul@grs+1)
 11929  01CA' C029' F02A'        	clrf	((c:___flmul@grs)),c
 11930  01CE' 6A29'              	line	110
 11931                           	movf	((c:___flmul@a)),c,w
 11932  01D0' 501F'              	mulwf	((c:___flmul@b)),c
 11933  01D2' 021B'              	movff	prodl,(c:___flmul@temp)
 11934  01D4' CFF3 F032'         	movff	prodh,(c:___flmul@temp+1)
 11935  01D8' CFF4 F033'         	line	111
 11936                           	
 11937                           l4979:
 11938  01DC'                    	movf	((c:___flmul@temp)),c,w
 11939  01DC' 5032'              	addwf	((c:___flmul@grs)),c
 11940  01DE' 2629'              	movf	((c:___flmul@temp+1)),c,w
 11941  01E0' 5033'              	addwfc	((c:___flmul@grs+1)),c
 11942  01E2' 222A'              	movlw	0
 11943  01E4' 0E00               	addwfc	((c:___flmul@grs+2)),c
 11944  01E6' 222B'              	movlw	0
 11945  01E8' 0E00               	addwfc	((c:___flmul@grs+3)),c
 11946  01EA' 222C'              
 11947                           	line	112
 11948                           	
 11949                           l4981:
 11950  01EC'                    	movf	(0+((c:___flmul@a)+02h)),c,w
 11951  01EC' 5021'              	mulwf	(0+((c:___flmul@b)+01h)),c
 11952  01EE' 021C'              	movff	prodl,(c:___flmul@temp)
 11953  01F0' CFF3 F032'         	movff	prodh,(c:___flmul@temp+1)
 11954  01F4' CFF4 F033'         	line	113
 11955                           	movf	((c:___flmul@temp)),c,w
 11956  01F8' 5032'              	addwf	((c:___flmul@prod)),c
 11957  01FA' 262E'              	movf	((c:___flmul@temp+1)),c,w
 11958  01FC' 5033'              	addwfc	((c:___flmul@prod+1)),c
 11959  01FE' 222F'              	movlw	0
 11960  0200' 0E00               	addwfc	((c:___flmul@prod+2)),c
 11961  0202' 2230'              	movlw	0
 11962  0204' 0E00               	addwfc	((c:___flmul@prod+3)),c
 11963  0206' 2231'              
 11964                           	line	114
 11965                           	
 11966                           l4983:
 11967  0208'                    	movf	(0+((c:___flmul@a)+01h)),c,w
 11968  0208' 5020'              	mulwf	(0+((c:___flmul@b)+02h)),c
 11969  020A' 021D'              	movff	prodl,(c:___flmul@temp)
 11970  020C' CFF3 F032'         	movff	prodh,(c:___flmul@temp+1)
 11971  0210' CFF4 F033'         	line	115
 11972                           	
 11973                           l4985:
 11974  0214'                    	movf	((c:___flmul@temp)),c,w
 11975  0214' 5032'              	addwf	((c:___flmul@prod)),c
 11976  0216' 262E'              	movf	((c:___flmul@temp+1)),c,w
 11977  0218' 5033'              	addwfc	((c:___flmul@prod+1)),c
 11978  021A' 222F'              	movlw	0
 11979  021C' 0E00               	addwfc	((c:___flmul@prod+2)),c
 11980  021E' 2230'              	movlw	0
 11981  0220' 0E00               	addwfc	((c:___flmul@prod+3)),c
 11982  0222' 2231'              
 11983                           	line	116
 11984                           	movf	(0+((c:___flmul@a)+02h)),c,w
 11985  0224' 5021'              	mulwf	(0+((c:___flmul@b)+02h)),c
 11986  0226' 021D'              	movff	prodl,(c:___flmul@temp)
 11987  0228' CFF3 F032'         	movff	prodh,(c:___flmul@temp+1)
 11988  022C' CFF4 F033'         	line	117
 11989                           	
 11990                           l4987:
 11991  0230'                    	movf	((c:___flmul@temp)),c,w
 11992  0230' 5032'              	movwf	(??___flmul+0+0)&0ffh,c
 11993  0232' 6E00'              	movf	((c:___flmul@temp+1)),c,w
 11994  0234' 5033'              	movwf	1+(??___flmul+0+0)&0ffh,c
 11995  0236' 6E00'              	
 11996                           	clrf	2+(??___flmul+0+0)&0ffh,c
 11997  0238' 6A00'              	
 11998                           	clrf	3+(??___flmul+0+0)&0ffh,c
 11999  023A' 6A00'              	movff	??___flmul+0+2,??___flmul+0+3
 12000  023C' C025' F026'        	movff	??___flmul+0+1,??___flmul+0+2
 12001  0240' C024' F025'        	movff	??___flmul+0+0,??___flmul+0+1
 12002  0244' C023' F024'        	clrf	(??___flmul+0+0),c
 12003  0248' 6A23'              	movf	(??___flmul+0+0),c,w
 12004  024A' 5023'              	addwf	((c:___flmul@prod)),c
 12005  024C' 262E'              	movf	(??___flmul+0+1),c,w
 12006  024E' 5024'              	addwfc	((c:___flmul@prod+1)),c
 12007  0250' 222F'              	movf	(??___flmul+0+2),c,w
 12008  0252' 5025'              	addwfc	((c:___flmul@prod+2)),c
 12009  0254' 2230'              	movf	(??___flmul+0+3),c,w
 12010  0256' 5026'              	addwfc	((c:___flmul@prod+3)),c
 12011  0258' 2231'              
 12012                           	line	145
 12013                           	
 12014                           l4989:
 12015  025A'                    	movff	(c:___flmul@grs),??___flmul+0+0
 12016  025A' C029' F023'        	movff	(c:___flmul@grs+1),??___flmul+0+0+1
 12017  025E' C02A' F024'        	movff	(c:___flmul@grs+2),??___flmul+0+0+2
 12018  0262' C02B' F025'        	movff	(c:___flmul@grs+3),??___flmul+0+0+3
 12019  0266' C02C' F026'        	movlw	018h+1
 12020  026A' 0E19               	goto	u6900
 12021  026C' EF00' F000'        u6905:
 12022  0270'                    	bcf	status,0
 12023  0270' 90D8               	rrcf	(??___flmul+0+3),c
 12024  0272' 3226'              	rrcf	(??___flmul+0+2),c
 12025  0274' 3225'              	rrcf	(??___flmul+0+1),c
 12026  0276' 3224'              	rrcf	(??___flmul+0+0),c
 12027  0278' 3223'              u6900:
 12028  027A'                    	decfsz	wreg
 12029  027A' 2EE8               	goto	u6905
 12030  027C' EF00' F000'        	movf	(??___flmul+0+0),c,w
 12031  0280' 5023'              	addwf	((c:___flmul@prod)),c
 12032  0282' 262E'              	movf	(??___flmul+0+1),c,w
 12033  0284' 5024'              	addwfc	((c:___flmul@prod+1)),c
 12034  0286' 222F'              	movf	(??___flmul+0+2),c,w
 12035  0288' 5025'              	addwfc	((c:___flmul@prod+2)),c
 12036  028A' 2230'              	movf	(??___flmul+0+3),c,w
 12037  028C' 5026'              	addwfc	((c:___flmul@prod+3)),c
 12038  028E' 2231'              
 12039                           	line	146
 12040                           	
 12041                           l4991:
 12042  0290'                    	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
 12043  0290' C02B' F02C'        	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
 12044  0294' C02A' F02B'        	movff	(c:___flmul@grs),(c:___flmul@grs+1)
 12045  0298' C029' F02A'        	clrf	((c:___flmul@grs)),c
 12046  029C' 6A29'              	line	149
 12047                           	
 12048                           l4993:
 12049  029E'                    	movf	((c:___flmul@aexp)),c,w
 12050  029E' 5028'              	movff	(c:___flmul@bexp),??___flmul+0+0
 12051  02A0' C02D' F023'        	clrf	(??___flmul+0+0+1)&0ffh,c
 12052  02A4' 6A00'              	addwf	(??___flmul+0+0),c
 12053  02A6' 2623'              	movlw	0
 12054  02A8' 0E00               	addwfc	(??___flmul+0+1),c
 12055  02AA' 2224'              	movlw	low(-126)
 12056  02AC' 0E82               	addwf	(??___flmul+0+0),c,w
 12057  02AE' 2423'              	movwf	((c:___flmul@temp)),c
 12058  02B0' 6E32'              	movlw	high(-126)
 12059  02B2' 0EFF               	addwfc	(??___flmul+0+1),c,w
 12060  02B4' 2024'              	movwf	1+((c:___flmul@temp)),c
 12061  02B6' 6E33'              	line	152
 12062                           	goto	l5001
 12063  02B8' EF00' F000'        	
 12064                           l999:
 12065  02BC'                    	line	153
 12066                           	
 12067                           l4995:
 12068  02BC'                    	bcf	status,0
 12069  02BC' 90D8               	rlcf	((c:___flmul@prod)),c
 12070  02BE' 362E'              	rlcf	((c:___flmul@prod+1)),c
 12071  02C0' 362F'              	rlcf	((c:___flmul@prod+2)),c
 12072  02C2' 3630'              	rlcf	((c:___flmul@prod+3)),c
 12073  02C4' 3631'              	line	154
 12074                           	
 12075                           l4997:
 12076  02C6'                    	
 12077                           	btfss	((c:___flmul@grs+3)),c,(31)&7
 12078  02C6' AE2C'              	goto	u6911
 12079  02C8' EF00' F000'        	goto	u6910
 12080  02CC' EF00' F000'        u6911:
 12081  02D0'                    	goto	l1000
 12082  02D0' EF00' F000'        u6910:
 12083  02D4'                    	line	155
 12084                           	
 12085                           l4999:
 12086  02D4'                    	bsf	(0+(0/8)+(c:___flmul@prod)),c,(0)&7
 12087  02D4' 802E'              	line	156
 12088                           	
 12089                           l1000:
 12090  02D6'                    	line	157
 12091                           	bcf	status,0
 12092  02D6' 90D8               	rlcf	((c:___flmul@grs)),c
 12093  02D8' 3629'              	rlcf	((c:___flmul@grs+1)),c
 12094  02DA' 362A'              	rlcf	((c:___flmul@grs+2)),c
 12095  02DC' 362B'              	rlcf	((c:___flmul@grs+3)),c
 12096  02DE' 362C'              	line	158
 12097                           	decf	((c:___flmul@temp)),c
 12098  02E0' 0632'              	btfss	status,0
 12099  02E2' A0D8               	decf	((c:___flmul@temp+1)),c
 12100  02E4' 0633'              	goto	l5001
 12101  02E6' EF00' F000'        	line	159
 12102                           	
 12103                           l998:
 12104  02EA'                    	line	152
 12105                           	
 12106                           l5001:
 12107  02EA'                    	
 12108                           	btfss	((c:___flmul@prod+2)),c,(23)&7
 12109  02EA' AE30'              	goto	u6921
 12110  02EC' EF00' F000'        	goto	u6920
 12111  02F0' EF00' F000'        u6921:
 12112  02F4'                    	goto	l4995
 12113  02F4' EF00' F000'        u6920:
 12114  02F8'                    	goto	l5003
 12115  02F8' EF00' F000'        	
 12116                           l1001:
 12117  02FC'                    	line	163
 12118                           	
 12119                           l5003:
 12120  02FC'                    	movlw	low(0)
 12121  02FC' 0E00               	movwf	((c:___flmul@aexp)),c
 12122  02FE' 6E28'              	line	164
 12123                           	
 12124                           l5005:
 12125  0300'                    	
 12126                           	btfss	((c:___flmul@grs+3)),c,(31)&7
 12127  0300' AE2C'              	goto	u6931
 12128  0302' EF00' F000'        	goto	u6930
 12129  0306' EF00' F000'        u6931:
 12130  030A'                    	goto	l1002
 12131  030A' EF00' F000'        u6930:
 12132  030E'                    	line	165
 12133                           	
 12134                           l5007:
 12135  030E'                    	movlw	0FFh
 12136  030E' 0EFF               	andwf	((c:___flmul@grs)),c,w
 12137  0310' 1429'              	movwf	(??___flmul+0+0)&0ffh,c
 12138  0312' 6E00'              	movlw	0FFh
 12139  0314' 0EFF               	andwf	((c:___flmul@grs+1)),c,w
 12140  0316' 142A'              	movwf	1+(??___flmul+0+0)&0ffh,c
 12141  0318' 6E00'              	
 12142                           	movlw	0FFh
 12143  031A' 0EFF               	andwf	((c:___flmul@grs+2)),c,w
 12144  031C' 142B'              	movwf	2+(??___flmul+0+0)&0ffh,c
 12145  031E' 6E00'              	
 12146                           	movlw	07Fh
 12147  0320' 0E7F               	andwf	((c:___flmul@grs+3)),c,w
 12148  0322' 142C'              	movwf	3+(??___flmul+0+0)&0ffh,c
 12149  0324' 6E00'              	movf	(??___flmul+0+0),c,w
 12150  0326' 5023'              iorwf	(??___flmul+0+1),c,w
 12151  0328' 1024'              iorwf	(??___flmul+0+2),c,w
 12152  032A' 1025'              iorwf	(??___flmul+0+3),c,w
 12153  032C' 1026'              	btfsc	status,2
 12154  032E' B4D8               	goto	u6941
 12155  0330' EF00' F000'        	goto	u6940
 12156  0334' EF00' F000'        
 12157                           u6941:
 12158  0338'                    	goto	l1003
 12159  0338' EF00' F000'        u6940:
 12160  033C'                    	line	166
 12161                           	
 12162                           l5009:
 12163  033C'                    	movlw	low(01h)
 12164  033C' 0E01               	movwf	((c:___flmul@aexp)),c
 12165  033E' 6E28'              	line	167
 12166                           	goto	l1002
 12167  0340' EF00' F000'        	line	168
 12168                           	
 12169                           l1003:
 12170  0344'                    	line	169
 12171                           	
 12172                           	btfss	((c:___flmul@prod)),c,(0)&7
 12173  0344' A02E'              	goto	u6951
 12174  0346' EF00' F000'        	goto	u6950
 12175  034A' EF00' F000'        u6951:
 12176  034E'                    	goto	l1002
 12177  034E' EF00' F000'        u6950:
 12178  0352'                    	line	170
 12179                           	
 12180                           l5011:
 12181  0352'                    	movlw	low(01h)
 12182  0352' 0E01               	movwf	((c:___flmul@aexp)),c
 12183  0354' 6E28'              	goto	l1002
 12184  0356' EF00' F000'        	line	171
 12185                           	
 12186                           l1005:
 12187  035A'                    	goto	l1002
 12188  035A' EF00' F000'        	line	172
 12189                           	
 12190                           l1004:
 12191  035E'                    	line	173
 12192                           	
 12193                           l1002:
 12194  035E'                    	line	174
 12195                           	movf	((c:___flmul@aexp)),c,w
 12196  035E' 5028'              	btfsc	status,2
 12197  0360' B4D8               	goto	u6961
 12198  0362' EF00' F000'        	goto	u6960
 12199  0366' EF00' F000'        u6961:
 12200  036A'                    	goto	l5021
 12201  036A' EF00' F000'        u6960:
 12202  036E'                    	line	175
 12203                           	
 12204                           l5013:
 12205  036E'                    	movlw	low(01h)
 12206  036E' 0E01               	addwf	((c:___flmul@prod)),c
 12207  0370' 262E'              	movlw	0
 12208  0372' 0E00               	addwfc	((c:___flmul@prod+1)),c
 12209  0374' 222F'              	addwfc	((c:___flmul@prod+2)),c
 12210  0376' 2230'              	addwfc	((c:___flmul@prod+3)),c
 12211  0378' 2231'              	line	176
 12212                           	
 12213                           l5015:
 12214  037A'                    	
 12215                           	btfss	((c:___flmul@prod+3)),c,(24)&7
 12216  037A' A031'              	goto	u6971
 12217  037C' EF00' F000'        	goto	u6970
 12218  0380' EF00' F000'        u6971:
 12219  0384'                    	goto	l5021
 12220  0384' EF00' F000'        u6970:
 12221  0388'                    	line	177
 12222                           	
 12223                           l5017:
 12224  0388'                    	movff	(c:___flmul@prod),??___flmul+0+0
 12225  0388' C02E' F023'        	movff	(c:___flmul@prod+1),??___flmul+0+0+1
 12226  038C' C02F' F024'        	movff	(c:___flmul@prod+2),??___flmul+0+0+2
 12227  0390' C030' F025'        	movff	(c:___flmul@prod+3),??___flmul+0+0+3
 12228  0394' C031' F026'        	rlcf	(??___flmul+0+3),c,w
 12229  0398' 3426'              	rrcf	(??___flmul+0+3),c
 12230  039A' 3226'              	rrcf	(??___flmul+0+2),c
 12231  039C' 3225'              	rrcf	(??___flmul+0+1),c
 12232  039E' 3224'              	rrcf	(??___flmul+0+0),c
 12233  03A0' 3223'              	movff	??___flmul+0+0,(c:___flmul@prod)
 12234  03A2' C023' F02E'        	movff	??___flmul+0+1,(c:___flmul@prod+1)
 12235  03A6' C024' F02F'        	movff	??___flmul+0+2,(c:___flmul@prod+2)
 12236  03AA' C025' F030'        	movff	??___flmul+0+3,(c:___flmul@prod+3)
 12237  03AE' C026' F031'        	line	178
 12238                           	
 12239                           l5019:
 12240  03B2'                    	infsnz	((c:___flmul@temp)),c
 12241  03B2' 4A32'              	incf	((c:___flmul@temp+1)),c
 12242  03B4' 2A33'              	goto	l5021
 12243  03B6' EF00' F000'        	line	179
 12244                           	
 12245                           l1007:
 12246  03BA'                    	goto	l5021
 12247  03BA' EF00' F000'        	line	180
 12248                           	
 12249                           l1006:
 12250  03BE'                    	line	183
 12251                           	
 12252                           l5021:
 12253  03BE'                    	btfsc	((c:___flmul@temp+1)),c,7
 12254  03BE' BE33'              	goto	u6981
 12255  03C0' EF00' F000'        	movf	((c:___flmul@temp+1)),c,w
 12256  03C4' 5033'              	bnz	u6980
 12257  03C6' E108               	incf	((c:___flmul@temp)),c,w
 12258  03C8' 2832'              	btfss	status,0
 12259  03CA' A0D8               	goto	u6981
 12260  03CC' EF00' F000'        	goto	u6980
 12261  03D0' EF00' F000'        
 12262                           u6981:
 12263  03D4'                    	goto	l5025
 12264  03D4' EF00' F000'        u6980:
 12265  03D8'                    	line	184
 12266                           	
 12267                           l5023:
 12268  03D8'                    	movlw	low(07F800000h)
 12269  03D8' 0E00               	movwf	((c:___flmul@prod)),c
 12270  03DA' 6E2E'              	movlw	high(07F800000h)
 12271  03DC' 0E00               	movwf	((c:___flmul@prod+1)),c
 12272  03DE' 6E2F'              	movlw	low highword(07F800000h)
 12273  03E0' 0E80               	movwf	((c:___flmul@prod+2)),c
 12274  03E2' 6E30'              	movlw	high highword(07F800000h)
 12275  03E4' 0E7F               	movwf	((c:___flmul@prod+3)),c
 12276  03E6' 6E31'              	line	185
 12277                           	goto	l5037
 12278  03E8' EF00' F000'        	line	187
 12279                           	
 12280                           l1008:
 12281  03EC'                    	
 12282                           l5025:
 12283  03EC'                    	btfsc	((c:___flmul@temp+1)),c,7
 12284  03EC' BE33'              	goto	u6990
 12285  03EE' EF00' F000'        	movf	((c:___flmul@temp+1)),c,w
 12286  03F2' 5033'              	bnz	u6991
 12287  03F4' E106               	decf	((c:___flmul@temp)),c,w
 12288  03F6' 0432'              	btfsc	status,0
 12289  03F8' B0D8               	goto	u6991
 12290  03FA' EF00' F000'        	goto	u6990
 12291  03FE' EF00' F000'        
 12292                           u6991:
 12293  0402'                    	goto	l1010
 12294  0402' EF00' F000'        u6990:
 12295  0406'                    	line	188
 12296                           	
 12297                           l5027:
 12298  0406'                    	movlw	low(0)
 12299  0406' 0E00               	movwf	((c:___flmul@prod)),c
 12300  0408' 6E2E'              	movlw	high(0)
 12301  040A' 0E00               	movwf	((c:___flmul@prod+1)),c
 12302  040C' 6E2F'              	movlw	low highword(0)
 12303  040E' 0E00               	movwf	((c:___flmul@prod+2)),c
 12304  0410' 6E30'              	movlw	high highword(0)
 12305  0412' 0E00               	movwf	((c:___flmul@prod+3)),c
 12306  0414' 6E31'              	line	190
 12307                           	movlw	low(0)
 12308  0416' 0E00               	movwf	((c:___flmul@sign)),c
 12309  0418' 6E27'              	line	191
 12310                           	goto	l5037
 12311  041A' EF00' F000'        	line	192
 12312                           	
 12313                           l1010:
 12314  041E'                    	line	194
 12315                           	movff	(c:___flmul@temp),(c:___flmul@bexp)
 12316  041E' C032' F02D'        	line	195
 12317                           	
 12318                           l5029:
 12319  0422'                    	movlw	0FFh
 12320  0422' 0EFF               	andwf	((c:___flmul@prod)),c
 12321  0424' 162E'              	movlw	0FFh
 12322  0426' 0EFF               	andwf	((c:___flmul@prod+1)),c
 12323  0428' 162F'              	movlw	07Fh
 12324  042A' 0E7F               	andwf	((c:___flmul@prod+2)),c
 12325  042C' 1630'              	movlw	0
 12326  042E' 0E00               	andwf	((c:___flmul@prod+3)),c
 12327  0430' 1631'              	line	196
 12328                           	
 12329                           l5031:
 12330  0432'                    	
 12331                           	btfss	((c:___flmul@bexp)),c,(0)&7
 12332  0432' A02D'              	goto	u7001
 12333  0434' EF00' F000'        	goto	u7000
 12334  0438' EF00' F000'        u7001:
 12335  043C'                    	goto	l5035
 12336  043C' EF00' F000'        u7000:
 12337  0440'                    	line	197
 12338                           	
 12339                           l5033:
 12340  0440'                    	bsf	(0+(7/8)+0+((c:___flmul@prod)+02h)),c,(7)&7
 12341  0440' 8E30'              	goto	l5035
 12342  0442' EF00' F000'        	line	198
 12343                           	
 12344                           l1012:
 12345  0446'                    	line	199
 12346                           	
 12347                           l5035:
 12348  0446'                    	bcf	status,0
 12349  0446' 90D8               	rrcf	((c:___flmul@bexp)),c,w
 12350  0448' 302D'              	movwf	(0+((c:___flmul@prod)+03h)),c
 12351  044A' 6E31'              	goto	l5037
 12352  044C' EF00' F000'        	line	200
 12353                           	
 12354                           l1011:
 12355  0450'                    	goto	l5037
 12356  0450' EF00' F000'        	
 12357                           l1009:
 12358  0454'                    	line	201
 12359                           	
 12360                           l5037:
 12361  0454'                    	movf	((c:___flmul@sign)),c,w
 12362  0454' 5027'              	iorwf	(0+((c:___flmul@prod)+03h)),c
 12363  0456' 1231'              	line	203
 12364                           	
 12365                           l5039:
 12366  0458'                    	movff	(c:___flmul@prod),(c:?___flmul)
 12367  0458' C02E' F01B'        	movff	(c:___flmul@prod+1),(c:?___flmul+1)
 12368  045C' C02F' F01C'        	movff	(c:___flmul@prod+2),(c:?___flmul+2)
 12369  0460' C030' F01D'        	movff	(c:___flmul@prod+3),(c:?___flmul+3)
 12370  0464' C031' F01E'        	goto	l997
 12371  0468' EF00' F000'        	
 12372                           l5041:
 12373  046C'                    	line	205
 12374                           	
 12375                           l997:
 12376  046C'                    	return	;funcret
 12377  046C' 0012               	opt stack 0
 12378                           GLOBAL	__end_of___flmul
 12379                           	__end_of___flmul:
 12380  046E'                    	signat	___flmul,8316
 12381                           	global	___flge
 12382                           
 12383 ;; *************** function ___flge *****************
 12384 ;; Defined at:
 12385 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 12386 ;; Parameters:    Size  Location     Type
 12387 ;;  ff1             4   52[COMRAM] unsigned char 
 12388 ;;  ff2             4   56[COMRAM] unsigned char 
 12389 ;; Auto vars:     Size  Location     Type
 12390 ;;		None
 12391 ;; Return value:  Size  Location     Type
 12392 ;;		None               void
 12393 ;; Registers used:
 12394 ;;		wreg, status,2, status,0
 12395 ;; Tracked objects:
 12396 ;;		On entry : 0/0
 12397 ;;		On exit  : 0/0
 12398 ;;		Unchanged: 0/0
 12399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12400 ;;      Params:         8       0       0       0       0       0       0
 12401 ;;      Locals:         0       0       0       0       0       0       0
 12402 ;;      Temps:          4       0       0       0       0       0       0
 12403 ;;      Totals:        12       0       0       0       0       0       0
 12404 ;;Total ram usage:       12 bytes
 12405 ;; Hardware stack levels used:    1
 12406 ;; Hardware stack levels required when called:    4
 12407 ;; This function calls:
 12408 ;;		Nothing
 12409 ;; This function is called by:
 12410 ;;		_efgtoa
 12411 ;; This function uses a non-reentrant model
 12412 ;;
 12413                           psect	text29,class=CODE,space=0,reloc=2,group=1
 12414                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 12415                           	line	4
 12416                           global __ptext29
 12417                           __ptext29:
 12418  0000'                    psect	text29
 12419                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 12420                           	line	4
 12421                           	global	__size_of___flge
 12422                           	__size_of___flge	equ	__end_of___flge-___flge
 12423  0000                     	
 12424                           ___flge:
 12425  0000'                    ;incstack = 0
 12426                           	opt	stack 21
 12427                           	line	7
 12428                           	
 12429                           l5145:
 12430  0000'                    	movlw	0
 12431  0000' 0E00               	andwf	((c:___flge@ff1)),c,w
 12432  0002' 1434'              	movwf	(??___flge+0+0)&0ffh,c
 12433  0004' 6E00'              	movlw	0
 12434  0006' 0E00               	andwf	((c:___flge@ff1+1)),c,w
 12435  0008' 1435'              	movwf	1+(??___flge+0+0)&0ffh,c
 12436  000A' 6E00'              	
 12437                           	movlw	080h
 12438  000C' 0E80               	andwf	((c:___flge@ff1+2)),c,w
 12439  000E' 1436'              	movwf	2+(??___flge+0+0)&0ffh,c
 12440  0010' 6E00'              	
 12441                           	movlw	07Fh
 12442  0012' 0E7F               	andwf	((c:___flge@ff1+3)),c,w
 12443  0014' 1437'              	movwf	3+(??___flge+0+0)&0ffh,c
 12444  0016' 6E00'              	movf	(??___flge+0+0),c,w
 12445  0018' 503C'              iorwf	(??___flge+0+1),c,w
 12446  001A' 103D'              iorwf	(??___flge+0+2),c,w
 12447  001C' 103E'              iorwf	(??___flge+0+3),c,w
 12448  001E' 103F'              	btfss	status,2
 12449  0020' A4D8               	goto	u7161
 12450  0022' EF00' F000'        	goto	u7160
 12451  0026' EF00' F000'        
 12452                           u7161:
 12453  002A'                    	goto	l5149
 12454  002A' EF00' F000'        u7160:
 12455  002E'                    	line	8
 12456                           	
 12457                           l5147:
 12458  002E'                    	movlw	low(0)
 12459  002E' 0E00               	movwf	((c:___flge@ff1)),c
 12460  0030' 6E34'              	movlw	high(0)
 12461  0032' 0E00               	movwf	((c:___flge@ff1+1)),c
 12462  0034' 6E35'              	movlw	low highword(0)
 12463  0036' 0E00               	movwf	((c:___flge@ff1+2)),c
 12464  0038' 6E36'              	movlw	high highword(0)
 12465  003A' 0E00               	movwf	((c:___flge@ff1+3)),c
 12466  003C' 6E37'              	goto	l5149
 12467  003E' EF00' F000'        	
 12468                           l641:
 12469  0042'                    	line	9
 12470                           	
 12471                           l5149:
 12472  0042'                    	movlw	0
 12473  0042' 0E00               	andwf	((c:___flge@ff2)),c,w
 12474  0044' 1438'              	movwf	(??___flge+0+0)&0ffh,c
 12475  0046' 6E00'              	movlw	0
 12476  0048' 0E00               	andwf	((c:___flge@ff2+1)),c,w
 12477  004A' 1439'              	movwf	1+(??___flge+0+0)&0ffh,c
 12478  004C' 6E00'              	
 12479                           	movlw	080h
 12480  004E' 0E80               	andwf	((c:___flge@ff2+2)),c,w
 12481  0050' 143A'              	movwf	2+(??___flge+0+0)&0ffh,c
 12482  0052' 6E00'              	
 12483                           	movlw	07Fh
 12484  0054' 0E7F               	andwf	((c:___flge@ff2+3)),c,w
 12485  0056' 143B'              	movwf	3+(??___flge+0+0)&0ffh,c
 12486  0058' 6E00'              	movf	(??___flge+0+0),c,w
 12487  005A' 503C'              iorwf	(??___flge+0+1),c,w
 12488  005C' 103D'              iorwf	(??___flge+0+2),c,w
 12489  005E' 103E'              iorwf	(??___flge+0+3),c,w
 12490  0060' 103F'              	btfss	status,2
 12491  0062' A4D8               	goto	u7171
 12492  0064' EF00' F000'        	goto	u7170
 12493  0068' EF00' F000'        
 12494                           u7171:
 12495  006C'                    	goto	l5153
 12496  006C' EF00' F000'        u7170:
 12497  0070'                    	line	10
 12498                           	
 12499                           l5151:
 12500  0070'                    	movlw	low(0)
 12501  0070' 0E00               	movwf	((c:___flge@ff2)),c
 12502  0072' 6E38'              	movlw	high(0)
 12503  0074' 0E00               	movwf	((c:___flge@ff2+1)),c
 12504  0076' 6E39'              	movlw	low highword(0)
 12505  0078' 0E00               	movwf	((c:___flge@ff2+2)),c
 12506  007A' 6E3A'              	movlw	high highword(0)
 12507  007C' 0E00               	movwf	((c:___flge@ff2+3)),c
 12508  007E' 6E3B'              	goto	l5153
 12509  0080' EF00' F000'        	
 12510                           l642:
 12511  0084'                    	line	12
 12512                           	
 12513                           l5153:
 12514  0084'                    	
 12515                           	btfss	((c:___flge@ff1+3)),c,(31)&7
 12516  0084' AE37'              	goto	u7181
 12517  0086' EF00' F000'        	goto	u7180
 12518  008A' EF00' F000'        u7181:
 12519  008E'                    	goto	l5157
 12520  008E' EF00' F000'        u7180:
 12521  0092'                    	line	13
 12522                           	
 12523                           l5155:
 12524  0092'                    	movff	(c:___flge@ff1),??___flge+0+0
 12525  0092' C034' F03C'        	movff	(c:___flge@ff1+1),??___flge+0+0+1
 12526  0096' C035' F03D'        	movff	(c:___flge@ff1+2),??___flge+0+0+2
 12527  009A' C036' F03E'        	movff	(c:___flge@ff1+3),??___flge+0+0+3
 12528  009E' C037' F03F'        	comf	(??___flge+0+0),c
 12529  00A2' 1E3C'              	comf	(??___flge+0+1),c
 12530  00A4' 1E3D'              	comf	(??___flge+0+2),c
 12531  00A6' 1E3E'              	comf	(??___flge+0+3),c
 12532  00A8' 1E3F'              	incf	(??___flge+0+0),c
 12533  00AA' 2A3C'              	movlw	0
 12534  00AC' 0E00               	addwfc	(??___flge+0+1),c
 12535  00AE' 223D'              	addwfc	(??___flge+0+2),c
 12536  00B0' 223E'              	addwfc	(??___flge+0+3),c
 12537  00B2' 223F'              	movlw	0
 12538  00B4' 0E00               	addwf	(??___flge+0+0),c,w
 12539  00B6' 243C'              	movwf	((c:___flge@ff1)),c
 12540  00B8' 6E34'              	movlw	0
 12541  00BA' 0E00               	addwfc	(??___flge+0+1),c,w
 12542  00BC' 203D'              	movwf	1+((c:___flge@ff1)),c
 12543  00BE' 6E35'              	
 12544                           	movlw	0
 12545  00C0' 0E00               	addwfc	(??___flge+0+2),c,w
 12546  00C2' 203E'              	movwf	2+((c:___flge@ff1)),c
 12547  00C4' 6E36'              	
 12548                           	movlw	080h
 12549  00C6' 0E80               	addwfc	(??___flge+0+3),c,w
 12550  00C8' 203F'              	movwf	3+((c:___flge@ff1)),c
 12551  00CA' 6E37'              	goto	l5157
 12552  00CC' EF00' F000'        	
 12553                           l643:
 12554  00D0'                    	line	14
 12555                           	
 12556                           l5157:
 12557  00D0'                    	
 12558                           	btfss	((c:___flge@ff2+3)),c,(31)&7
 12559  00D0' AE3B'              	goto	u7191
 12560  00D2' EF00' F000'        	goto	u7190
 12561  00D6' EF00' F000'        u7191:
 12562  00DA'                    	goto	l644
 12563  00DA' EF00' F000'        u7190:
 12564  00DE'                    	line	15
 12565                           	
 12566                           l5159:
 12567  00DE'                    	movff	(c:___flge@ff2),??___flge+0+0
 12568  00DE' C038' F03C'        	movff	(c:___flge@ff2+1),??___flge+0+0+1
 12569  00E2' C039' F03D'        	movff	(c:___flge@ff2+2),??___flge+0+0+2
 12570  00E6' C03A' F03E'        	movff	(c:___flge@ff2+3),??___flge+0+0+3
 12571  00EA' C03B' F03F'        	comf	(??___flge+0+0),c
 12572  00EE' 1E3C'              	comf	(??___flge+0+1),c
 12573  00F0' 1E3D'              	comf	(??___flge+0+2),c
 12574  00F2' 1E3E'              	comf	(??___flge+0+3),c
 12575  00F4' 1E3F'              	incf	(??___flge+0+0),c
 12576  00F6' 2A3C'              	movlw	0
 12577  00F8' 0E00               	addwfc	(??___flge+0+1),c
 12578  00FA' 223D'              	addwfc	(??___flge+0+2),c
 12579  00FC' 223E'              	addwfc	(??___flge+0+3),c
 12580  00FE' 223F'              	movlw	0
 12581  0100' 0E00               	addwf	(??___flge+0+0),c,w
 12582  0102' 243C'              	movwf	((c:___flge@ff2)),c
 12583  0104' 6E38'              	movlw	0
 12584  0106' 0E00               	addwfc	(??___flge+0+1),c,w
 12585  0108' 203D'              	movwf	1+((c:___flge@ff2)),c
 12586  010A' 6E39'              	
 12587                           	movlw	0
 12588  010C' 0E00               	addwfc	(??___flge+0+2),c,w
 12589  010E' 203E'              	movwf	2+((c:___flge@ff2)),c
 12590  0110' 6E3A'              	
 12591                           	movlw	080h
 12592  0112' 0E80               	addwfc	(??___flge+0+3),c,w
 12593  0114' 203F'              	movwf	3+((c:___flge@ff2)),c
 12594  0116' 6E3B'              	
 12595                           l644:
 12596  0118'                    	line	16
 12597                           	movlw	0
 12598  0118' 0E00               	xorwf	((c:___flge@ff1)),c
 12599  011A' 1A34'              	movlw	0
 12600  011C' 0E00               	xorwf	((c:___flge@ff1+1)),c
 12601  011E' 1A35'              	movlw	0
 12602  0120' 0E00               	xorwf	((c:___flge@ff1+2)),c
 12603  0122' 1A36'              	movlw	080h
 12604  0124' 0E80               	xorwf	((c:___flge@ff1+3)),c
 12605  0126' 1A37'              	line	17
 12606                           	movlw	0
 12607  0128' 0E00               	xorwf	((c:___flge@ff2)),c
 12608  012A' 1A38'              	movlw	0
 12609  012C' 0E00               	xorwf	((c:___flge@ff2+1)),c
 12610  012E' 1A39'              	movlw	0
 12611  0130' 0E00               	xorwf	((c:___flge@ff2+2)),c
 12612  0132' 1A3A'              	movlw	080h
 12613  0134' 0E80               	xorwf	((c:___flge@ff2+3)),c
 12614  0136' 1A3B'              	line	18
 12615                           		movf	((c:___flge@ff2)),c,w
 12616  0138' 5038'              	subwf	((c:___flge@ff1)),c,w
 12617  013A' 5C34'              	movf	((c:___flge@ff2+1)),c,w
 12618  013C' 5039'              	subwfb	((c:___flge@ff1+1)),c,w
 12619  013E' 5835'              	movf	((c:___flge@ff2+2)),c,w
 12620  0140' 503A'              	subwfb	((c:___flge@ff1+2)),c,w
 12621  0142' 5836'              	movf	((c:___flge@ff2+3)),c,w
 12622  0144' 503B'              	subwfb	((c:___flge@ff1+3)),c,w
 12623  0146' 5837'              	btfsc	status,0
 12624  0148' B0D8               	goto	u7201
 12625  014A' EF00' F000'        	goto	u7200
 12626  014E' EF00' F000'        
 12627                           u7201:
 12628  0152'                    	goto	l5163
 12629  0152' EF00' F000'        u7200:
 12630  0156'                    	
 12631                           l5161:
 12632  0156'                    	bcf	status,0
 12633  0156' 90D8               	goto	l649
 12634  0158' EF00' F000'        	
 12635                           l646:
 12636  015C'                    	
 12637                           l5163:
 12638  015C'                    	bsf	status,0
 12639  015C' 80D8               	goto	l649
 12640  015E' EF00' F000'        	
 12641                           l648:
 12642  0162'                    	goto	l649
 12643  0162' EF00' F000'        	
 12644                           l5165:
 12645  0166'                    	line	19
 12646                           	
 12647                           l649:
 12648  0166'                    	return	;funcret
 12649  0166' 0012               	opt stack 0
 12650                           GLOBAL	__end_of___flge
 12651                           	__end_of___flge:
 12652  0168'                    	signat	___flge,8312
 12653                           	global	___fleq
 12654                           
 12655 ;; *************** function ___fleq *****************
 12656 ;; Defined at:
 12657 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 12658 ;; Parameters:    Size  Location     Type
 12659 ;;  ff1             4   13[COMRAM] unsigned char 
 12660 ;;  ff2             4   17[COMRAM] unsigned char 
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;		None
 12663 ;; Return value:  Size  Location     Type
 12664 ;;		None               void
 12665 ;; Registers used:
 12666 ;;		wreg, status,2, status,0
 12667 ;; Tracked objects:
 12668 ;;		On entry : 0/0
 12669 ;;		On exit  : 0/0
 12670 ;;		Unchanged: 0/0
 12671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12672 ;;      Params:         8       0       0       0       0       0       0
 12673 ;;      Locals:         0       0       0       0       0       0       0
 12674 ;;      Temps:          4       0       0       0       0       0       0
 12675 ;;      Totals:        12       0       0       0       0       0       0
 12676 ;;Total ram usage:       12 bytes
 12677 ;; Hardware stack levels used:    1
 12678 ;; Hardware stack levels required when called:    4
 12679 ;; This function calls:
 12680 ;;		Nothing
 12681 ;; This function is called by:
 12682 ;;		_efgtoa
 12683 ;; This function uses a non-reentrant model
 12684 ;;
 12685                           psect	text30,class=CODE,space=0,reloc=2,group=1
 12686                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 12687                           	line	4
 12688                           global __ptext30
 12689                           __ptext30:
 12690  0000'                    psect	text30
 12691                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fleq.c"
 12692                           	line	4
 12693                           	global	__size_of___fleq
 12694                           	__size_of___fleq	equ	__end_of___fleq-___fleq
 12695  0000                     	
 12696                           ___fleq:
 12697  0000'                    ;incstack = 0
 12698                           	opt	stack 21
 12699                           	line	7
 12700                           	
 12701                           l5129:
 12702  0000'                    	movlw	0
 12703  0000' 0E00               	andwf	((c:___fleq@ff1)),c,w
 12704  0002' 140D'              	movwf	(??___fleq+0+0)&0ffh,c
 12705  0004' 6E00'              	movlw	0
 12706  0006' 0E00               	andwf	((c:___fleq@ff1+1)),c,w
 12707  0008' 140E'              	movwf	1+(??___fleq+0+0)&0ffh,c
 12708  000A' 6E00'              	
 12709                           	movlw	080h
 12710  000C' 0E80               	andwf	((c:___fleq@ff1+2)),c,w
 12711  000E' 140F'              	movwf	2+(??___fleq+0+0)&0ffh,c
 12712  0010' 6E00'              	
 12713                           	movlw	07Fh
 12714  0012' 0E7F               	andwf	((c:___fleq@ff1+3)),c,w
 12715  0014' 1410'              	movwf	3+(??___fleq+0+0)&0ffh,c
 12716  0016' 6E00'              	movf	(??___fleq+0+0),c,w
 12717  0018' 5015'              iorwf	(??___fleq+0+1),c,w
 12718  001A' 1016'              iorwf	(??___fleq+0+2),c,w
 12719  001C' 1017'              iorwf	(??___fleq+0+3),c,w
 12720  001E' 1018'              	btfss	status,2
 12721  0020' A4D8               	goto	u7131
 12722  0022' EF00' F000'        	goto	u7130
 12723  0026' EF00' F000'        
 12724                           u7131:
 12725  002A'                    	goto	l5133
 12726  002A' EF00' F000'        u7130:
 12727  002E'                    	line	8
 12728                           	
 12729                           l5131:
 12730  002E'                    	movlw	low(0)
 12731  002E' 0E00               	movwf	((c:___fleq@ff1)),c
 12732  0030' 6E0D'              	movlw	high(0)
 12733  0032' 0E00               	movwf	((c:___fleq@ff1+1)),c
 12734  0034' 6E0E'              	movlw	low highword(0)
 12735  0036' 0E00               	movwf	((c:___fleq@ff1+2)),c
 12736  0038' 6E0F'              	movlw	high highword(0)
 12737  003A' 0E00               	movwf	((c:___fleq@ff1+3)),c
 12738  003C' 6E10'              	goto	l5133
 12739  003E' EF00' F000'        	
 12740                           l632:
 12741  0042'                    	line	9
 12742                           	
 12743                           l5133:
 12744  0042'                    	movlw	0
 12745  0042' 0E00               	andwf	((c:___fleq@ff2)),c,w
 12746  0044' 1411'              	movwf	(??___fleq+0+0)&0ffh,c
 12747  0046' 6E00'              	movlw	0
 12748  0048' 0E00               	andwf	((c:___fleq@ff2+1)),c,w
 12749  004A' 1412'              	movwf	1+(??___fleq+0+0)&0ffh,c
 12750  004C' 6E00'              	
 12751                           	movlw	080h
 12752  004E' 0E80               	andwf	((c:___fleq@ff2+2)),c,w
 12753  0050' 1413'              	movwf	2+(??___fleq+0+0)&0ffh,c
 12754  0052' 6E00'              	
 12755                           	movlw	07Fh
 12756  0054' 0E7F               	andwf	((c:___fleq@ff2+3)),c,w
 12757  0056' 1414'              	movwf	3+(??___fleq+0+0)&0ffh,c
 12758  0058' 6E00'              	movf	(??___fleq+0+0),c,w
 12759  005A' 5015'              iorwf	(??___fleq+0+1),c,w
 12760  005C' 1016'              iorwf	(??___fleq+0+2),c,w
 12761  005E' 1017'              iorwf	(??___fleq+0+3),c,w
 12762  0060' 1018'              	btfss	status,2
 12763  0062' A4D8               	goto	u7141
 12764  0064' EF00' F000'        	goto	u7140
 12765  0068' EF00' F000'        
 12766                           u7141:
 12767  006C'                    	goto	l5137
 12768  006C' EF00' F000'        u7140:
 12769  0070'                    	line	10
 12770                           	
 12771                           l5135:
 12772  0070'                    	movlw	low(0)
 12773  0070' 0E00               	movwf	((c:___fleq@ff2)),c
 12774  0072' 6E11'              	movlw	high(0)
 12775  0074' 0E00               	movwf	((c:___fleq@ff2+1)),c
 12776  0076' 6E12'              	movlw	low highword(0)
 12777  0078' 0E00               	movwf	((c:___fleq@ff2+2)),c
 12778  007A' 6E13'              	movlw	high highword(0)
 12779  007C' 0E00               	movwf	((c:___fleq@ff2+3)),c
 12780  007E' 6E14'              	goto	l5137
 12781  0080' EF00' F000'        	
 12782                           l633:
 12783  0084'                    	line	11
 12784                           	
 12785                           l5137:
 12786  0084'                    	movf	((c:___fleq@ff2)),c,w
 12787  0084' 5011'              xorwf	((c:___fleq@ff1)),c,w
 12788  0086' 180D'              	bnz	u7150
 12789  0088' E10F               movf	((c:___fleq@ff2+1)),c,w
 12790  008A' 5012'              xorwf	((c:___fleq@ff1+1)),c,w
 12791  008C' 180E'              	bnz	u7150
 12792  008E' E10C               movf	((c:___fleq@ff2+2)),c,w
 12793  0090' 5013'              xorwf	((c:___fleq@ff1+2)),c,w
 12794  0092' 180F'              	bnz	u7150
 12795  0094' E109               movf	((c:___fleq@ff2+3)),c,w
 12796  0096' 5014'              xorwf	((c:___fleq@ff1+3)),c,w
 12797  0098' 1810'              	btfsc	status,2
 12798  009A' B4D8               	goto	u7151
 12799  009C' EF00' F000'        	goto	u7150
 12800  00A0' EF00' F000'        
 12801                           u7151:
 12802  00A4'                    	goto	l5141
 12803  00A4' EF00' F000'        u7150:
 12804  00A8'                    	
 12805                           l5139:
 12806  00A8'                    	bcf	status,0
 12807  00A8' 90D8               	goto	l638
 12808  00AA' EF00' F000'        	
 12809                           l635:
 12810  00AE'                    	
 12811                           l5141:
 12812  00AE'                    	bsf	status,0
 12813  00AE' 80D8               	goto	l638
 12814  00B0' EF00' F000'        	
 12815                           l637:
 12816  00B4'                    	goto	l638
 12817  00B4' EF00' F000'        	
 12818                           l5143:
 12819  00B8'                    	line	12
 12820                           	
 12821                           l638:
 12822  00B8'                    	return	;funcret
 12823  00B8' 0012               	opt stack 0
 12824                           GLOBAL	__end_of___fleq
 12825                           	__end_of___fleq:
 12826  00BA'                    	signat	___fleq,8312
 12827                           	global	___fldiv
 12828                           
 12829 ;; *************** function ___fldiv *****************
 12830 ;; Defined at:
 12831 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 12832 ;; Parameters:    Size  Location     Type
 12833 ;;  b               4   13[COMRAM] unsigned char 
 12834 ;;  a               4   17[COMRAM] unsigned char 
 12835 ;; Auto vars:     Size  Location     Type
 12836 ;;  grs             4   32[COMRAM] unsigned long 
 12837 ;;  rem             4   25[COMRAM] unsigned long 
 12838 ;;  new_exp         2   30[COMRAM] short 
 12839 ;;  aexp            1   37[COMRAM] unsigned char 
 12840 ;;  bexp            1   36[COMRAM] unsigned char 
 12841 ;;  sign            1   29[COMRAM] unsigned char 
 12842 ;; Return value:  Size  Location     Type
 12843 ;;                  4   13[COMRAM] unsigned char 
 12844 ;; Registers used:
 12845 ;;		wreg, status,2, status,0
 12846 ;; Tracked objects:
 12847 ;;		On entry : 0/0
 12848 ;;		On exit  : 0/0
 12849 ;;		Unchanged: 0/0
 12850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12851 ;;      Params:         8       0       0       0       0       0       0
 12852 ;;      Locals:        13       0       0       0       0       0       0
 12853 ;;      Temps:          4       0       0       0       0       0       0
 12854 ;;      Totals:        25       0       0       0       0       0       0
 12855 ;;Total ram usage:       25 bytes
 12856 ;; Hardware stack levels used:    1
 12857 ;; Hardware stack levels required when called:    4
 12858 ;; This function calls:
 12859 ;;		Nothing
 12860 ;; This function is called by:
 12861 ;;		_efgtoa
 12862 ;; This function uses a non-reentrant model
 12863 ;;
 12864                           psect	text31,class=CODE,space=0,reloc=2,group=1
 12865                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 12866                           	line	11
 12867                           global __ptext31
 12868                           __ptext31:
 12869  0000'                    psect	text31
 12870                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 12871                           	line	11
 12872                           	global	__size_of___fldiv
 12873                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
 12874  0000                     	
 12875                           ___fldiv:
 12876  0000'                    ;incstack = 0
 12877                           	opt	stack 21
 12878                           	line	26
 12879                           	
 12880                           l4775:
 12881  0000'                    	movf	(0+((c:___fldiv@b)+03h)),c,w
 12882  0000' 5010'              	andlw	low(080h)
 12883  0002' 0B80               	movwf	((c:___fldiv@sign)),c
 12884  0004' 6E1D'              	line	27
 12885                           	movf	(0+((c:___fldiv@b)+03h)),c,w
 12886  0006' 5010'              	addwf	(0+((c:___fldiv@b)+03h)),c,w
 12887  0008' 2410'              	movwf	((c:___fldiv@bexp)),c
 12888  000A' 6E24'              	line	28
 12889                           	
 12890                           l4777:
 12891  000C'                    	
 12892                           	btfss	(0+((c:___fldiv@b)+02h)),c,(7)&7
 12893  000C' AE0F'              	goto	u6591
 12894  000E' EF00' F000'        	goto	u6590
 12895  0012' EF00' F000'        u6591:
 12896  0016'                    	goto	l4781
 12897  0016' EF00' F000'        u6590:
 12898  001A'                    	line	29
 12899                           	
 12900                           l4779:
 12901  001A'                    	bsf	(0+(0/8)+(c:___fldiv@bexp)),c,(0)&7
 12902  001A' 8024'              	goto	l4781
 12903  001C' EF00' F000'        	line	30
 12904                           	
 12905                           l952:
 12906  0020'                    	line	33
 12907                           	
 12908                           l4781:
 12909  0020'                    	movf	((c:___fldiv@bexp)),c,w
 12910  0020' 5024'              	btfsc	status,2
 12911  0022' B4D8               	goto	u6601
 12912  0024' EF00' F000'        	goto	u6600
 12913  0028' EF00' F000'        u6601:
 12914  002C'                    	goto	l4791
 12915  002C' EF00' F000'        u6600:
 12916  0030'                    	line	35
 12917                           	
 12918                           l4783:
 12919  0030'                    		incf	((c:___fldiv@bexp)),c,w
 12920  0030' 2824'              	btfss	status,2
 12921  0032' A4D8               	goto	u6611
 12922  0034' EF00' F000'        	goto	u6610
 12923  0038' EF00' F000'        
 12924                           u6611:
 12925  003C'                    	goto	l4787
 12926  003C' EF00' F000'        u6610:
 12927  0040'                    	line	37
 12928                           	
 12929                           l4785:
 12930  0040'                    	movlw	low(normalize32(0x0))
 12931  0040' 0E00               	movwf	((c:___fldiv@b)),c
 12932  0042' 6E0D'              	movlw	high(normalize32(0x0))
 12933  0044' 0E00               	movwf	((c:___fldiv@b+1)),c
 12934  0046' 6E0E'              	movlw	low highword(normalize32(0x0))
 12935  0048' 0E00               	movwf	((c:___fldiv@b+2)),c
 12936  004A' 6E0F'              	movlw	high highword(normalize32(0x0))
 12937  004C' 0E00               	movwf	((c:___fldiv@b+3)),c
 12938  004E' 6E10'              	goto	l4787
 12939  0050' EF00' F000'        	line	38
 12940                           	
 12941                           l954:
 12942  0054'                    	line	40
 12943                           	
 12944                           l4787:
 12945  0054'                    	bsf	(0+(23/8)+(c:___fldiv@b)),c,(23)&7
 12946  0054' 8E0F'              	line	42
 12947                           	
 12948                           l4789:
 12949  0056'                    	movlw	low(0)
 12950  0056' 0E00               	movwf	(0+((c:___fldiv@b)+03h)),c
 12951  0058' 6E10'              	line	43
 12952                           	goto	l4793
 12953  005A' EF00' F000'        	line	44
 12954                           	
 12955                           l953:
 12956  005E'                    	line	46
 12957                           	
 12958                           l4791:
 12959  005E'                    	movlw	low(normalize32(0x0))
 12960  005E' 0E00               	movwf	((c:___fldiv@b)),c
 12961  0060' 6E0D'              	movlw	high(normalize32(0x0))
 12962  0062' 0E00               	movwf	((c:___fldiv@b+1)),c
 12963  0064' 6E0E'              	movlw	low highword(normalize32(0x0))
 12964  0066' 0E00               	movwf	((c:___fldiv@b+2)),c
 12965  0068' 6E0F'              	movlw	high highword(normalize32(0x0))
 12966  006A' 0E00               	movwf	((c:___fldiv@b+3)),c
 12967  006C' 6E10'              	goto	l4793
 12968  006E' EF00' F000'        	line	47
 12969                           	
 12970                           l955:
 12971  0072'                    	line	49
 12972                           	
 12973                           l4793:
 12974  0072'                    	movf	(0+((c:___fldiv@a)+03h)),c,w
 12975  0072' 5014'              	andlw	low(080h)
 12976  0074' 0B80               	xorwf	((c:___fldiv@sign)),c
 12977  0076' 1A1D'              	line	50
 12978                           	
 12979                           l4795:
 12980  0078'                    	movf	(0+((c:___fldiv@a)+03h)),c,w
 12981  0078' 5014'              	addwf	(0+((c:___fldiv@a)+03h)),c,w
 12982  007A' 2414'              	movwf	((c:___fldiv@aexp)),c
 12983  007C' 6E25'              	line	51
 12984                           	
 12985                           l4797:
 12986  007E'                    	
 12987                           	btfss	(0+((c:___fldiv@a)+02h)),c,(7)&7
 12988  007E' AE13'              	goto	u6621
 12989  0080' EF00' F000'        	goto	u6620
 12990  0084' EF00' F000'        u6621:
 12991  0088'                    	goto	l4801
 12992  0088' EF00' F000'        u6620:
 12993  008C'                    	line	52
 12994                           	
 12995                           l4799:
 12996  008C'                    	bsf	(0+(0/8)+(c:___fldiv@aexp)),c,(0)&7
 12997  008C' 8025'              	goto	l4801
 12998  008E' EF00' F000'        	line	53
 12999                           	
 13000                           l956:
 13001  0092'                    	line	56
 13002                           	
 13003                           l4801:
 13004  0092'                    	movf	((c:___fldiv@aexp)),c,w
 13005  0092' 5025'              	btfsc	status,2
 13006  0094' B4D8               	goto	u6631
 13007  0096' EF00' F000'        	goto	u6630
 13008  009A' EF00' F000'        u6631:
 13009  009E'                    	goto	l4811
 13010  009E' EF00' F000'        u6630:
 13011  00A2'                    	line	58
 13012                           	
 13013                           l4803:
 13014  00A2'                    		incf	((c:___fldiv@aexp)),c,w
 13015  00A2' 2825'              	btfss	status,2
 13016  00A4' A4D8               	goto	u6641
 13017  00A6' EF00' F000'        	goto	u6640
 13018  00AA' EF00' F000'        
 13019                           u6641:
 13020  00AE'                    	goto	l4807
 13021  00AE' EF00' F000'        u6640:
 13022  00B2'                    	line	60
 13023                           	
 13024                           l4805:
 13025  00B2'                    	movlw	low(normalize32(0x0))
 13026  00B2' 0E00               	movwf	((c:___fldiv@a)),c
 13027  00B4' 6E11'              	movlw	high(normalize32(0x0))
 13028  00B6' 0E00               	movwf	((c:___fldiv@a+1)),c
 13029  00B8' 6E12'              	movlw	low highword(normalize32(0x0))
 13030  00BA' 0E00               	movwf	((c:___fldiv@a+2)),c
 13031  00BC' 6E13'              	movlw	high highword(normalize32(0x0))
 13032  00BE' 0E00               	movwf	((c:___fldiv@a+3)),c
 13033  00C0' 6E14'              	goto	l4807
 13034  00C2' EF00' F000'        	line	61
 13035                           	
 13036                           l958:
 13037  00C6'                    	line	63
 13038                           	
 13039                           l4807:
 13040  00C6'                    	bsf	(0+(23/8)+(c:___fldiv@a)),c,(23)&7
 13041  00C6' 8E13'              	line	65
 13042                           	
 13043                           l4809:
 13044  00C8'                    	movlw	low(0)
 13045  00C8' 0E00               	movwf	(0+((c:___fldiv@a)+03h)),c
 13046  00CA' 6E14'              	line	66
 13047                           	goto	l4813
 13048  00CC' EF00' F000'        	line	67
 13049                           	
 13050                           l957:
 13051  00D0'                    	line	69
 13052                           	
 13053                           l4811:
 13054  00D0'                    	movlw	low(normalize32(0x0))
 13055  00D0' 0E00               	movwf	((c:___fldiv@a)),c
 13056  00D2' 6E11'              	movlw	high(normalize32(0x0))
 13057  00D4' 0E00               	movwf	((c:___fldiv@a+1)),c
 13058  00D6' 6E12'              	movlw	low highword(normalize32(0x0))
 13059  00D8' 0E00               	movwf	((c:___fldiv@a+2)),c
 13060  00DA' 6E13'              	movlw	high highword(normalize32(0x0))
 13061  00DC' 0E00               	movwf	((c:___fldiv@a+3)),c
 13062  00DE' 6E14'              	goto	l4813
 13063  00E0' EF00' F000'        	line	70
 13064                           	
 13065                           l959:
 13066  00E4'                    	line	75
 13067                           	
 13068                           l4813:
 13069  00E4'                    	movf	((c:___fldiv@a)),c,w
 13070  00E4' 5011'              iorwf	((c:___fldiv@a+1)),c,w
 13071  00E6' 1012'              iorwf	((c:___fldiv@a+2)),c,w
 13072  00E8' 1013'              iorwf	((c:___fldiv@a+3)),c,w
 13073  00EA' 1014'              	btfss	status,2
 13074  00EC' A4D8               	goto	u6651
 13075  00EE' EF00' F000'        	goto	u6650
 13076  00F2' EF00' F000'        
 13077                           u6651:
 13078  00F6'                    	goto	l4825
 13079  00F6' EF00' F000'        u6650:
 13080  00FA'                    	line	76
 13081                           	
 13082                           l4815:
 13083  00FA'                    	movlw	low(0)
 13084  00FA' 0E00               	movwf	((c:___fldiv@b)),c
 13085  00FC' 6E0D'              	movlw	high(0)
 13086  00FE' 0E00               	movwf	((c:___fldiv@b+1)),c
 13087  0100' 6E0E'              	movlw	low highword(0)
 13088  0102' 0E00               	movwf	((c:___fldiv@b+2)),c
 13089  0104' 6E0F'              	movlw	high highword(0)
 13090  0106' 0E00               	movwf	((c:___fldiv@b+3)),c
 13091  0108' 6E10'              	line	77
 13092                           	
 13093                           l4817:
 13094  010A'                    	movlw	low(07F80h)
 13095  010A' 0E80               	iorwf	(0+((c:___fldiv@b)+02h)),c
 13096  010C' 120F'              	movlw	high(07F80h)
 13097  010E' 0E7F               	iorwf	(1+((c:___fldiv@b)+02h)),c
 13098  0110' 1210'              	line	78
 13099                           	
 13100                           l4819:
 13101  0112'                    	movf	((c:___fldiv@sign)),c,w
 13102  0112' 501D'              	iorwf	(0+((c:___fldiv@b)+03h)),c
 13103  0114' 1210'              	line	79
 13104                           	
 13105                           l4821:
 13106  0116'                    	movff	(c:___fldiv@b),(c:?___fldiv)
 13107  0116' C00D' F00D'        	movff	(c:___fldiv@b+1),(c:?___fldiv+1)
 13108  011A' C00E' F00E'        	movff	(c:___fldiv@b+2),(c:?___fldiv+2)
 13109  011E' C00F' F00F'        	movff	(c:___fldiv@b+3),(c:?___fldiv+3)
 13110  0122' C010' F010'        	goto	l961
 13111  0126' EF00' F000'        	
 13112                           l4823:
 13113  012A'                    	goto	l961
 13114  012A' EF00' F000'        	line	80
 13115                           	
 13116                           l960:
 13117  012E'                    	line	83
 13118                           	
 13119                           l4825:
 13120  012E'                    	movf	((c:___fldiv@bexp)),c,w
 13121  012E' 5024'              	btfss	status,2
 13122  0130' A4D8               	goto	u6661
 13123  0132' EF00' F000'        	goto	u6660
 13124  0136' EF00' F000'        u6661:
 13125  013A'                    	goto	l4833
 13126  013A' EF00' F000'        u6660:
 13127  013E'                    	line	84
 13128                           	
 13129                           l4827:
 13130  013E'                    	movlw	low(0)
 13131  013E' 0E00               	movwf	((c:___fldiv@b)),c
 13132  0140' 6E0D'              	movlw	high(0)
 13133  0142' 0E00               	movwf	((c:___fldiv@b+1)),c
 13134  0144' 6E0E'              	movlw	low highword(0)
 13135  0146' 0E00               	movwf	((c:___fldiv@b+2)),c
 13136  0148' 6E0F'              	movlw	high highword(0)
 13137  014A' 0E00               	movwf	((c:___fldiv@b+3)),c
 13138  014C' 6E10'              	line	85
 13139                           	
 13140                           l4829:
 13141  014E'                    	movff	(c:___fldiv@b),(c:?___fldiv)
 13142  014E' C00D' F00D'        	movff	(c:___fldiv@b+1),(c:?___fldiv+1)
 13143  0152' C00E' F00E'        	movff	(c:___fldiv@b+2),(c:?___fldiv+2)
 13144  0156' C00F' F00F'        	movff	(c:___fldiv@b+3),(c:?___fldiv+3)
 13145  015A' C010' F010'        	goto	l961
 13146  015E' EF00' F000'        	
 13147                           l4831:
 13148  0162'                    	goto	l961
 13149  0162' EF00' F000'        	line	86
 13150                           	
 13151                           l962:
 13152  0166'                    	line	89
 13153                           	
 13154                           l4833:
 13155  0166'                    	movf	((c:___fldiv@aexp)),c,w
 13156  0166' 5025'              	movwf	(??___fldiv+0+0)&0ffh,c
 13157  0168' 6E00'              	clrf	(??___fldiv+0+0+1)&0ffh,c
 13158  016A' 6A00'              
 13159                           	comf	(??___fldiv+0+0),c
 13160  016C' 1E15'              	comf	(??___fldiv+0+1),c
 13161  016E' 1E16'              	infsnz	(??___fldiv+0+0),c
 13162  0170' 4A15'              	incf	(??___fldiv+0+1),c
 13163  0172' 2A16'              	movf	((c:___fldiv@bexp)),c,w
 13164  0174' 5024'              	movwf	(??___fldiv+2+0)&0ffh,c
 13165  0176' 6E00'              	clrf	(??___fldiv+2+0+1)&0ffh,c
 13166  0178' 6A00'              
 13167                           	movf	(??___fldiv+0+0),c,w
 13168  017A' 5015'              	addwf	(??___fldiv+2+0),c
 13169  017C' 2617'              	movf	(??___fldiv+0+1),c,w
 13170  017E' 5016'              	addwfc	(??___fldiv+2+1),c
 13171  0180' 2218'              	movlw	low(07Fh)
 13172  0182' 0E7F               	addwf	(??___fldiv+2+0),c,w
 13173  0184' 2417'              	movwf	((c:___fldiv@new_exp)),c
 13174  0186' 6E1E'              	movlw	high(07Fh)
 13175  0188' 0E00               	addwfc	(??___fldiv+2+1),c,w
 13176  018A' 2018'              	movwf	1+((c:___fldiv@new_exp)),c
 13177  018C' 6E1F'              	line	92
 13178                           	
 13179                           l4835:
 13180  018E'                    	movff	(c:___fldiv@b),(c:___fldiv@rem)
 13181  018E' C00D' F019'        	movff	(c:___fldiv@b+1),(c:___fldiv@rem+1)
 13182  0192' C00E' F01A'        	movff	(c:___fldiv@b+2),(c:___fldiv@rem+2)
 13183  0196' C00F' F01B'        	movff	(c:___fldiv@b+3),(c:___fldiv@rem+3)
 13184  019A' C010' F01C'        	line	93
 13185                           	
 13186                           l4837:
 13187  019E'                    	movlw	low(0)
 13188  019E' 0E00               	movwf	((c:___fldiv@b)),c
 13189  01A0' 6E0D'              	movlw	high(0)
 13190  01A2' 0E00               	movwf	((c:___fldiv@b+1)),c
 13191  01A4' 6E0E'              	movlw	low highword(0)
 13192  01A6' 0E00               	movwf	((c:___fldiv@b+2)),c
 13193  01A8' 6E0F'              	movlw	high highword(0)
 13194  01AA' 0E00               	movwf	((c:___fldiv@b+3)),c
 13195  01AC' 6E10'              	line	94
 13196                           	
 13197                           l4839:
 13198  01AE'                    	movlw	low(0)
 13199  01AE' 0E00               	movwf	((c:___fldiv@grs)),c
 13200  01B0' 6E20'              	movlw	high(0)
 13201  01B2' 0E00               	movwf	((c:___fldiv@grs+1)),c
 13202  01B4' 6E21'              	movlw	low highword(0)
 13203  01B6' 0E00               	movwf	((c:___fldiv@grs+2)),c
 13204  01B8' 6E22'              	movlw	high highword(0)
 13205  01BA' 0E00               	movwf	((c:___fldiv@grs+3)),c
 13206  01BC' 6E23'              	line	96
 13207                           	
 13208                           l4841:
 13209  01BE'                    	movlw	low(0)
 13210  01BE' 0E00               	movwf	((c:___fldiv@aexp)),c
 13211  01C0' 6E25'              	line	97
 13212                           	goto	l963
 13213  01C2' EF00' F000'        	
 13214                           l964:
 13215  01C6'                    	line	100
 13216                           	
 13217                           l4843:
 13218  01C6'                    	movf	((c:___fldiv@aexp)),c,w
 13219  01C6' 5025'              	btfsc	status,2
 13220  01C8' B4D8               	goto	u6671
 13221  01CA' EF00' F000'        	goto	u6670
 13222  01CE' EF00' F000'        u6671:
 13223  01D2'                    	goto	l4851
 13224  01D2' EF00' F000'        u6670:
 13225  01D6'                    	line	101
 13226                           	
 13227                           l4845:
 13228  01D6'                    	bcf	status,0
 13229  01D6' 90D8               	rlcf	((c:___fldiv@rem)),c
 13230  01D8' 3619'              	rlcf	((c:___fldiv@rem+1)),c
 13231  01DA' 361A'              	rlcf	((c:___fldiv@rem+2)),c
 13232  01DC' 361B'              	rlcf	((c:___fldiv@rem+3)),c
 13233  01DE' 361C'              	line	102
 13234                           	bcf	status,0
 13235  01E0' 90D8               	rlcf	((c:___fldiv@b)),c
 13236  01E2' 360D'              	rlcf	((c:___fldiv@b+1)),c
 13237  01E4' 360E'              	rlcf	((c:___fldiv@b+2)),c
 13238  01E6' 360F'              	rlcf	((c:___fldiv@b+3)),c
 13239  01E8' 3610'              	line	103
 13240                           	
 13241                           l4847:
 13242  01EA'                    	
 13243                           	btfss	((c:___fldiv@grs+3)),c,(31)&7
 13244  01EA' AE23'              	goto	u6681
 13245  01EC' EF00' F000'        	goto	u6680
 13246  01F0' EF00' F000'        u6681:
 13247  01F4'                    	goto	l966
 13248  01F4' EF00' F000'        u6680:
 13249  01F8'                    	line	104
 13250                           	
 13251                           l4849:
 13252  01F8'                    	bsf	(0+(0/8)+(c:___fldiv@b)),c,(0)&7
 13253  01F8' 800D'              	line	105
 13254                           	
 13255                           l966:
 13256  01FA'                    	line	106
 13257                           	bcf	status,0
 13258  01FA' 90D8               	rlcf	((c:___fldiv@grs)),c
 13259  01FC' 3620'              	rlcf	((c:___fldiv@grs+1)),c
 13260  01FE' 3621'              	rlcf	((c:___fldiv@grs+2)),c
 13261  0200' 3622'              	rlcf	((c:___fldiv@grs+3)),c
 13262  0202' 3623'              	goto	l4851
 13263  0204' EF00' F000'        	line	107
 13264                           	
 13265                           l965:
 13266  0208'                    	line	112
 13267                           	
 13268                           l4851:
 13269  0208'                    		movf	((c:___fldiv@a)),c,w
 13270  0208' 5011'              	subwf	((c:___fldiv@rem)),c,w
 13271  020A' 5C19'              	movf	((c:___fldiv@a+1)),c,w
 13272  020C' 5012'              	subwfb	((c:___fldiv@rem+1)),c,w
 13273  020E' 581A'              	movf	((c:___fldiv@a+2)),c,w
 13274  0210' 5013'              	subwfb	((c:___fldiv@rem+2)),c,w
 13275  0212' 581B'              	movf	((c:___fldiv@a+3)),c,w
 13276  0214' 5014'              	subwfb	((c:___fldiv@rem+3)),c,w
 13277  0216' 581C'              	btfss	status,0
 13278  0218' A0D8               	goto	u6691
 13279  021A' EF00' F000'        	goto	u6690
 13280  021E' EF00' F000'        
 13281                           u6691:
 13282  0222'                    	goto	l4857
 13283  0222' EF00' F000'        u6690:
 13284  0226'                    	line	115
 13285                           	
 13286                           l4853:
 13287  0226'                    	bsf	(0+(30/8)+(c:___fldiv@grs)),c,(30)&7
 13288  0226' 8C23'              	line	116
 13289                           	
 13290                           l4855:
 13291  0228'                    	movf	((c:___fldiv@a)),c,w
 13292  0228' 5011'              	subwf	((c:___fldiv@rem)),c
 13293  022A' 5E19'              	movf	((c:___fldiv@a+1)),c,w
 13294  022C' 5012'              	subwfb	((c:___fldiv@rem+1)),c
 13295  022E' 5A1A'              	movf	((c:___fldiv@a+2)),c,w
 13296  0230' 5013'              	subwfb	((c:___fldiv@rem+2)),c
 13297  0232' 5A1B'              	movf	((c:___fldiv@a+3)),c,w
 13298  0234' 5014'              	subwfb	((c:___fldiv@rem+3)),c
 13299  0236' 5A1C'              	goto	l4857
 13300  0238' EF00' F000'        	line	117
 13301                           	
 13302                           l967:
 13303  023C'                    	line	118
 13304                           	
 13305                           l4857:
 13306  023C'                    	incf	((c:___fldiv@aexp)),c
 13307  023C' 2A25'              	line	119
 13308                           	
 13309                           l963:
 13310  023E'                    	line	97
 13311                           		movlw	01Ah-1
 13312  023E' 0E19               	cpfsgt	((c:___fldiv@aexp)),c
 13313  0240' 6425'              	goto	u6701
 13314  0242' EF00' F000'        	goto	u6700
 13315  0246' EF00' F000'        
 13316                           u6701:
 13317  024A'                    	goto	l4843
 13318  024A' EF00' F000'        u6700:
 13319  024E'                    	goto	l4859
 13320  024E' EF00' F000'        	
 13321                           l968:
 13322  0252'                    	line	122
 13323                           	
 13324                           l4859:
 13325  0252'                    	movf	((c:___fldiv@rem)),c,w
 13326  0252' 5019'              iorwf	((c:___fldiv@rem+1)),c,w
 13327  0254' 101A'              iorwf	((c:___fldiv@rem+2)),c,w
 13328  0256' 101B'              iorwf	((c:___fldiv@rem+3)),c,w
 13329  0258' 101C'              	btfsc	status,2
 13330  025A' B4D8               	goto	u6711
 13331  025C' EF00' F000'        	goto	u6710
 13332  0260' EF00' F000'        
 13333                           u6711:
 13334  0264'                    	goto	l4869
 13335  0264' EF00' F000'        u6710:
 13336  0268'                    	line	123
 13337                           	
 13338                           l4861:
 13339  0268'                    	bsf	(0+(0/8)+(c:___fldiv@grs)),c,(0)&7
 13340  0268' 8020'              	goto	l4869
 13341  026A' EF00' F000'        	line	124
 13342                           	
 13343                           l969:
 13344  026E'                    	line	127
 13345                           	goto	l4869
 13346  026E' EF00' F000'        	
 13347                           l971:
 13348  0272'                    	line	128
 13349                           	
 13350                           l4863:
 13351  0272'                    	bcf	status,0
 13352  0272' 90D8               	rlcf	((c:___fldiv@b)),c
 13353  0274' 360D'              	rlcf	((c:___fldiv@b+1)),c
 13354  0276' 360E'              	rlcf	((c:___fldiv@b+2)),c
 13355  0278' 360F'              	rlcf	((c:___fldiv@b+3)),c
 13356  027A' 3610'              	line	129
 13357                           	
 13358                           l4865:
 13359  027C'                    	
 13360                           	btfss	((c:___fldiv@grs+3)),c,(31)&7
 13361  027C' AE23'              	goto	u6721
 13362  027E' EF00' F000'        	goto	u6720
 13363  0282' EF00' F000'        u6721:
 13364  0286'                    	goto	l972
 13365  0286' EF00' F000'        u6720:
 13366  028A'                    	line	130
 13367                           	
 13368                           l4867:
 13369  028A'                    	bsf	(0+(0/8)+(c:___fldiv@b)),c,(0)&7
 13370  028A' 800D'              	line	131
 13371                           	
 13372                           l972:
 13373  028C'                    	line	132
 13374                           	bcf	status,0
 13375  028C' 90D8               	rlcf	((c:___fldiv@grs)),c
 13376  028E' 3620'              	rlcf	((c:___fldiv@grs+1)),c
 13377  0290' 3621'              	rlcf	((c:___fldiv@grs+2)),c
 13378  0292' 3622'              	rlcf	((c:___fldiv@grs+3)),c
 13379  0294' 3623'              	line	133
 13380                           	decf	((c:___fldiv@new_exp)),c
 13381  0296' 061E'              	btfss	status,0
 13382  0298' A0D8               	decf	((c:___fldiv@new_exp+1)),c
 13383  029A' 061F'              	goto	l4869
 13384  029C' EF00' F000'        	line	134
 13385                           	
 13386                           l970:
 13387  02A0'                    	line	127
 13388                           	
 13389                           l4869:
 13390  02A0'                    	
 13391                           	btfss	((c:___fldiv@b+2)),c,(23)&7
 13392  02A0' AE0F'              	goto	u6731
 13393  02A2' EF00' F000'        	goto	u6730
 13394  02A6' EF00' F000'        u6731:
 13395  02AA'                    	goto	l4863
 13396  02AA' EF00' F000'        u6730:
 13397  02AE'                    	goto	l4871
 13398  02AE' EF00' F000'        	
 13399                           l973:
 13400  02B2'                    	line	139
 13401                           	
 13402                           l4871:
 13403  02B2'                    	movlw	low(0)
 13404  02B2' 0E00               	movwf	((c:___fldiv@aexp)),c
 13405  02B4' 6E25'              	line	140
 13406                           	
 13407                           l4873:
 13408  02B6'                    	
 13409                           	btfss	((c:___fldiv@grs+3)),c,(31)&7
 13410  02B6' AE23'              	goto	u6741
 13411  02B8' EF00' F000'        	goto	u6740
 13412  02BC' EF00' F000'        u6741:
 13413  02C0'                    	goto	l974
 13414  02C0' EF00' F000'        u6740:
 13415  02C4'                    	line	141
 13416                           	
 13417                           l4875:
 13418  02C4'                    	movlw	0FFh
 13419  02C4' 0EFF               	andwf	((c:___fldiv@grs)),c,w
 13420  02C6' 1420'              	movwf	(??___fldiv+0+0)&0ffh,c
 13421  02C8' 6E00'              	movlw	0FFh
 13422  02CA' 0EFF               	andwf	((c:___fldiv@grs+1)),c,w
 13423  02CC' 1421'              	movwf	1+(??___fldiv+0+0)&0ffh,c
 13424  02CE' 6E00'              	
 13425                           	movlw	0FFh
 13426  02D0' 0EFF               	andwf	((c:___fldiv@grs+2)),c,w
 13427  02D2' 1422'              	movwf	2+(??___fldiv+0+0)&0ffh,c
 13428  02D4' 6E00'              	
 13429                           	movlw	07Fh
 13430  02D6' 0E7F               	andwf	((c:___fldiv@grs+3)),c,w
 13431  02D8' 1423'              	movwf	3+(??___fldiv+0+0)&0ffh,c
 13432  02DA' 6E00'              	movf	(??___fldiv+0+0),c,w
 13433  02DC' 5015'              iorwf	(??___fldiv+0+1),c,w
 13434  02DE' 1016'              iorwf	(??___fldiv+0+2),c,w
 13435  02E0' 1017'              iorwf	(??___fldiv+0+3),c,w
 13436  02E2' 1018'              	btfsc	status,2
 13437  02E4' B4D8               	goto	u6751
 13438  02E6' EF00' F000'        	goto	u6750
 13439  02EA' EF00' F000'        
 13440                           u6751:
 13441  02EE'                    	goto	l975
 13442  02EE' EF00' F000'        u6750:
 13443  02F2'                    	line	142
 13444                           	
 13445                           l4877:
 13446  02F2'                    	movlw	low(01h)
 13447  02F2' 0E01               	movwf	((c:___fldiv@aexp)),c
 13448  02F4' 6E25'              	line	143
 13449                           	goto	l974
 13450  02F6' EF00' F000'        	line	144
 13451                           	
 13452                           l975:
 13453  02FA'                    	line	145
 13454                           	
 13455                           	btfss	((c:___fldiv@b)),c,(0)&7
 13456  02FA' A00D'              	goto	u6761
 13457  02FC' EF00' F000'        	goto	u6760
 13458  0300' EF00' F000'        u6761:
 13459  0304'                    	goto	l974
 13460  0304' EF00' F000'        u6760:
 13461  0308'                    	line	146
 13462                           	
 13463                           l4879:
 13464  0308'                    	movlw	low(01h)
 13465  0308' 0E01               	movwf	((c:___fldiv@aexp)),c
 13466  030A' 6E25'              	goto	l974
 13467  030C' EF00' F000'        	line	147
 13468                           	
 13469                           l977:
 13470  0310'                    	goto	l974
 13471  0310' EF00' F000'        	line	148
 13472                           	
 13473                           l976:
 13474  0314'                    	line	149
 13475                           	
 13476                           l974:
 13477  0314'                    	line	150
 13478                           	movf	((c:___fldiv@aexp)),c,w
 13479  0314' 5025'              	btfsc	status,2
 13480  0316' B4D8               	goto	u6771
 13481  0318' EF00' F000'        	goto	u6770
 13482  031C' EF00' F000'        u6771:
 13483  0320'                    	goto	l4889
 13484  0320' EF00' F000'        u6770:
 13485  0324'                    	line	151
 13486                           	
 13487                           l4881:
 13488  0324'                    	movlw	low(01h)
 13489  0324' 0E01               	addwf	((c:___fldiv@b)),c
 13490  0326' 260D'              	movlw	0
 13491  0328' 0E00               	addwfc	((c:___fldiv@b+1)),c
 13492  032A' 220E'              	addwfc	((c:___fldiv@b+2)),c
 13493  032C' 220F'              	addwfc	((c:___fldiv@b+3)),c
 13494  032E' 2210'              	line	152
 13495                           	
 13496                           l4883:
 13497  0330'                    	
 13498                           	btfss	((c:___fldiv@b+3)),c,(24)&7
 13499  0330' A010'              	goto	u6781
 13500  0332' EF00' F000'        	goto	u6780
 13501  0336' EF00' F000'        u6781:
 13502  033A'                    	goto	l4889
 13503  033A' EF00' F000'        u6780:
 13504  033E'                    	line	153
 13505                           	
 13506                           l4885:
 13507  033E'                    	movff	(c:___fldiv@b),??___fldiv+0+0
 13508  033E' C00D' F015'        	movff	(c:___fldiv@b+1),??___fldiv+0+0+1
 13509  0342' C00E' F016'        	movff	(c:___fldiv@b+2),??___fldiv+0+0+2
 13510  0346' C00F' F017'        	movff	(c:___fldiv@b+3),??___fldiv+0+0+3
 13511  034A' C010' F018'        	rlcf	(??___fldiv+0+3),c,w
 13512  034E' 3418'              	rrcf	(??___fldiv+0+3),c
 13513  0350' 3218'              	rrcf	(??___fldiv+0+2),c
 13514  0352' 3217'              	rrcf	(??___fldiv+0+1),c
 13515  0354' 3216'              	rrcf	(??___fldiv+0+0),c
 13516  0356' 3215'              	movff	??___fldiv+0+0,(c:___fldiv@b)
 13517  0358' C015' F00D'        	movff	??___fldiv+0+1,(c:___fldiv@b+1)
 13518  035C' C016' F00E'        	movff	??___fldiv+0+2,(c:___fldiv@b+2)
 13519  0360' C017' F00F'        	movff	??___fldiv+0+3,(c:___fldiv@b+3)
 13520  0364' C018' F010'        	line	154
 13521                           	
 13522                           l4887:
 13523  0368'                    	infsnz	((c:___fldiv@new_exp)),c
 13524  0368' 4A1E'              	incf	((c:___fldiv@new_exp+1)),c
 13525  036A' 2A1F'              	goto	l4889
 13526  036C' EF00' F000'        	line	155
 13527                           	
 13528                           l979:
 13529  0370'                    	goto	l4889
 13530  0370' EF00' F000'        	line	156
 13531                           	
 13532                           l978:
 13533  0374'                    	line	159
 13534                           	
 13535                           l4889:
 13536  0374'                    	btfsc	((c:___fldiv@new_exp+1)),c,7
 13537  0374' BE1F'              	goto	u6791
 13538  0376' EF00' F000'        	movf	((c:___fldiv@new_exp+1)),c,w
 13539  037A' 501F'              	bnz	u6790
 13540  037C' E108               	incf	((c:___fldiv@new_exp)),c,w
 13541  037E' 281E'              	btfss	status,0
 13542  0380' A0D8               	goto	u6791
 13543  0382' EF00' F000'        	goto	u6790
 13544  0386' EF00' F000'        
 13545                           u6791:
 13546  038A'                    	goto	l4893
 13547  038A' EF00' F000'        u6790:
 13548  038E'                    	line	160
 13549                           	
 13550                           l4891:
 13551  038E'                    	movlw	high(0FFh)
 13552  038E' 0E00               	movwf	((c:___fldiv@new_exp+1)),c
 13553  0390' 6E1F'              	setf	((c:___fldiv@new_exp)),c
 13554  0392' 681E'              	line	161
 13555                           	movlw	low(0)
 13556  0394' 0E00               	movwf	((c:___fldiv@b)),c
 13557  0396' 6E0D'              	movlw	high(0)
 13558  0398' 0E00               	movwf	((c:___fldiv@b+1)),c
 13559  039A' 6E0E'              	movlw	low highword(0)
 13560  039C' 0E00               	movwf	((c:___fldiv@b+2)),c
 13561  039E' 6E0F'              	movlw	high highword(0)
 13562  03A0' 0E00               	movwf	((c:___fldiv@b+3)),c
 13563  03A2' 6E10'              	goto	l4893
 13564  03A4' EF00' F000'        	line	162
 13565                           	
 13566                           l980:
 13567  03A8'                    	line	165
 13568                           	
 13569                           l4893:
 13570  03A8'                    	btfsc	((c:___fldiv@new_exp+1)),c,7
 13571  03A8' BE1F'              	goto	u6800
 13572  03AA' EF00' F000'        	movf	((c:___fldiv@new_exp+1)),c,w
 13573  03AE' 501F'              	bnz	u6801
 13574  03B0' E106               	decf	((c:___fldiv@new_exp)),c,w
 13575  03B2' 041E'              	btfsc	status,0
 13576  03B4' B0D8               	goto	u6801
 13577  03B6' EF00' F000'        	goto	u6800
 13578  03BA' EF00' F000'        
 13579                           u6801:
 13580  03BE'                    	goto	l4897
 13581  03BE' EF00' F000'        u6800:
 13582  03C2'                    	line	166
 13583                           	
 13584                           l4895:
 13585  03C2'                    	movlw	high(0)
 13586  03C2' 0E00               	movwf	((c:___fldiv@new_exp+1)),c
 13587  03C4' 6E1F'              	movlw	low(0)
 13588  03C6' 0E00               	movwf	((c:___fldiv@new_exp)),c
 13589  03C8' 6E1E'              	line	167
 13590                           	movlw	low(0)
 13591  03CA' 0E00               	movwf	((c:___fldiv@b)),c
 13592  03CC' 6E0D'              	movlw	high(0)
 13593  03CE' 0E00               	movwf	((c:___fldiv@b+1)),c
 13594  03D0' 6E0E'              	movlw	low highword(0)
 13595  03D2' 0E00               	movwf	((c:___fldiv@b+2)),c
 13596  03D4' 6E0F'              	movlw	high highword(0)
 13597  03D6' 0E00               	movwf	((c:___fldiv@b+3)),c
 13598  03D8' 6E10'              	line	169
 13599                           	movlw	low(0)
 13600  03DA' 0E00               	movwf	((c:___fldiv@sign)),c
 13601  03DC' 6E1D'              	goto	l4897
 13602  03DE' EF00' F000'        	line	170
 13603                           	
 13604                           l981:
 13605  03E2'                    	line	173
 13606                           	
 13607                           l4897:
 13608  03E2'                    	movff	(c:___fldiv@new_exp),(c:___fldiv@bexp)
 13609  03E2' C01E' F024'        	line	175
 13610                           	
 13611                           l4899:
 13612  03E6'                    	
 13613                           	btfss	((c:___fldiv@bexp)),c,(0)&7
 13614  03E6' A024'              	goto	u6811
 13615  03E8' EF00' F000'        	goto	u6810
 13616  03EC' EF00' F000'        u6811:
 13617  03F0'                    	goto	l4903
 13618  03F0' EF00' F000'        u6810:
 13619  03F4'                    	line	176
 13620                           	
 13621                           l4901:
 13622  03F4'                    	bsf	(0+(7/8)+0+((c:___fldiv@b)+02h)),c,(7)&7
 13623  03F4' 8E0F'              	line	177
 13624                           	goto	l4905
 13625  03F6' EF00' F000'        	line	179
 13626                           	
 13627                           l982:
 13628  03FA'                    	line	180
 13629                           	
 13630                           l4903:
 13631  03FA'                    	bcf	(0+(7/8)+0+((c:___fldiv@b)+02h)),c,(7)&7
 13632  03FA' 9E0F'              	goto	l4905
 13633  03FC' EF00' F000'        	line	181
 13634                           	
 13635                           l983:
 13636  0400'                    	line	182
 13637                           	
 13638                           l4905:
 13639  0400'                    	bcf	status,0
 13640  0400' 90D8               	rrcf	((c:___fldiv@bexp)),c,w
 13641  0402' 3024'              	movwf	(0+((c:___fldiv@b)+03h)),c
 13642  0404' 6E10'              	line	183
 13643                           	
 13644                           l4907:
 13645  0406'                    	movf	((c:___fldiv@sign)),c,w
 13646  0406' 501D'              	iorwf	(0+((c:___fldiv@b)+03h)),c
 13647  0408' 1210'              	line	184
 13648                           	
 13649                           l4909:
 13650  040A'                    	movff	(c:___fldiv@b),(c:?___fldiv)
 13651  040A' C00D' F00D'        	movff	(c:___fldiv@b+1),(c:?___fldiv+1)
 13652  040E' C00E' F00E'        	movff	(c:___fldiv@b+2),(c:?___fldiv+2)
 13653  0412' C00F' F00F'        	movff	(c:___fldiv@b+3),(c:?___fldiv+3)
 13654  0416' C010' F010'        	goto	l961
 13655  041A' EF00' F000'        	
 13656                           l4911:
 13657  041E'                    	line	185
 13658                           	
 13659                           l961:
 13660  041E'                    	return	;funcret
 13661  041E' 0012               	opt stack 0
 13662                           GLOBAL	__end_of___fldiv
 13663                           	__end_of___fldiv:
 13664  0420'                    	signat	___fldiv,8316
 13665                           	global	___awmod
 13666                           
 13667 ;; *************** function ___awmod *****************
 13668 ;; Defined at:
 13669 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13670 ;; Parameters:    Size  Location     Type
 13671 ;;  dividend        2   13[COMRAM] int 
 13672 ;;  divisor         2   15[COMRAM] int 
 13673 ;; Auto vars:     Size  Location     Type
 13674 ;;  sign            1   18[COMRAM] unsigned char 
 13675 ;;  counter         1   17[COMRAM] unsigned char 
 13676 ;; Return value:  Size  Location     Type
 13677 ;;                  2   13[COMRAM] int 
 13678 ;; Registers used:
 13679 ;;		wreg, status,2, status,0
 13680 ;; Tracked objects:
 13681 ;;		On entry : 0/0
 13682 ;;		On exit  : 0/0
 13683 ;;		Unchanged: 0/0
 13684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13685 ;;      Params:         4       0       0       0       0       0       0
 13686 ;;      Locals:         2       0       0       0       0       0       0
 13687 ;;      Temps:          0       0       0       0       0       0       0
 13688 ;;      Totals:         6       0       0       0       0       0       0
 13689 ;;Total ram usage:        6 bytes
 13690 ;; Hardware stack levels used:    1
 13691 ;; Hardware stack levels required when called:    4
 13692 ;; This function calls:
 13693 ;;		Nothing
 13694 ;; This function is called by:
 13695 ;;		_efgtoa
 13696 ;; This function uses a non-reentrant model
 13697 ;;
 13698                           psect	text32,class=CODE,space=0,reloc=2,group=1
 13699                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13700                           	line	7
 13701                           global __ptext32
 13702                           __ptext32:
 13703  0000'                    psect	text32
 13704                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 13705                           	line	7
 13706                           	global	__size_of___awmod
 13707                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 13708  0000                     	
 13709                           ___awmod:
 13710  0000'                    ;incstack = 0
 13711                           	opt	stack 21
 13712                           	line	12
 13713                           	
 13714                           l5093:
 13715  0000'                    	movlw	low(0)
 13716  0000' 0E00               	movwf	((c:___awmod@sign)),c
 13717  0002' 6E12'              	line	13
 13718                           	
 13719                           l5095:
 13720  0004'                    	btfsc	((c:___awmod@dividend+1)),c,7
 13721  0004' BE0E'              	goto	u7070
 13722  0006' EF00' F000'        	goto	u7071
 13723  000A' EF00' F000'        
 13724                           u7071:
 13725  000E'                    	goto	l5101
 13726  000E' EF00' F000'        u7070:
 13727  0012'                    	line	14
 13728                           	
 13729                           l5097:
 13730  0012'                    	negf	((c:___awmod@dividend)),c
 13731  0012' 6C0D'              	comf	((c:___awmod@dividend+1)),c
 13732  0014' 1E0E'              	btfsc	status,0
 13733  0016' B0D8               	incf	((c:___awmod@dividend+1)),c
 13734  0018' 2A0E'              	line	15
 13735                           	
 13736                           l5099:
 13737  001A'                    	movlw	low(01h)
 13738  001A' 0E01               	movwf	((c:___awmod@sign)),c
 13739  001C' 6E12'              	goto	l5101
 13740  001E' EF00' F000'        	line	16
 13741                           	
 13742                           l613:
 13743  0022'                    	line	17
 13744                           	
 13745                           l5101:
 13746  0022'                    	btfsc	((c:___awmod@divisor+1)),c,7
 13747  0022' BE10'              	goto	u7080
 13748  0024' EF00' F000'        	goto	u7081
 13749  0028' EF00' F000'        
 13750                           u7081:
 13751  002C'                    	goto	l5105
 13752  002C' EF00' F000'        u7080:
 13753  0030'                    	line	18
 13754                           	
 13755                           l5103:
 13756  0030'                    	negf	((c:___awmod@divisor)),c
 13757  0030' 6C0F'              	comf	((c:___awmod@divisor+1)),c
 13758  0032' 1E10'              	btfsc	status,0
 13759  0034' B0D8               	incf	((c:___awmod@divisor+1)),c
 13760  0036' 2A10'              	goto	l5105
 13761  0038' EF00' F000'        	
 13762                           l614:
 13763  003C'                    	line	19
 13764                           	
 13765                           l5105:
 13766  003C'                    	movf	((c:___awmod@divisor)),c,w
 13767  003C' 500F'              iorwf	((c:___awmod@divisor+1)),c,w
 13768  003E' 1010'              	btfsc	status,2
 13769  0040' B4D8               	goto	u7091
 13770  0042' EF00' F000'        	goto	u7090
 13771  0046' EF00' F000'        
 13772                           u7091:
 13773  004A'                    	goto	l5121
 13774  004A' EF00' F000'        u7090:
 13775  004E'                    	line	20
 13776                           	
 13777                           l5107:
 13778  004E'                    	movlw	low(01h)
 13779  004E' 0E01               	movwf	((c:___awmod@counter)),c
 13780  0050' 6E11'              	line	21
 13781                           	goto	l5111
 13782  0052' EF00' F000'        	
 13783                           l617:
 13784  0056'                    	line	22
 13785                           	
 13786                           l5109:
 13787  0056'                    	bcf	status,0
 13788  0056' 90D8               	rlcf	((c:___awmod@divisor)),c
 13789  0058' 360F'              	rlcf	((c:___awmod@divisor+1)),c
 13790  005A' 3610'              	line	23
 13791                           	incf	((c:___awmod@counter)),c
 13792  005C' 2A11'              	goto	l5111
 13793  005E' EF00' F000'        	line	24
 13794                           	
 13795                           l616:
 13796  0062'                    	line	21
 13797                           	
 13798                           l5111:
 13799  0062'                    	
 13800                           	btfss	((c:___awmod@divisor+1)),c,(15)&7
 13801  0062' AE10'              	goto	u7101
 13802  0064' EF00' F000'        	goto	u7100
 13803  0068' EF00' F000'        u7101:
 13804  006C'                    	goto	l5109
 13805  006C' EF00' F000'        u7100:
 13806  0070'                    	goto	l5113
 13807  0070' EF00' F000'        	
 13808                           l618:
 13809  0074'                    	goto	l5113
 13810  0074' EF00' F000'        	line	25
 13811                           	
 13812                           l619:
 13813  0078'                    	line	26
 13814                           	
 13815                           l5113:
 13816  0078'                    		movf	((c:___awmod@divisor)),c,w
 13817  0078' 500F'              	subwf	((c:___awmod@dividend)),c,w
 13818  007A' 5C0D'              	movf	((c:___awmod@divisor+1)),c,w
 13819  007C' 5010'              	subwfb	((c:___awmod@dividend+1)),c,w
 13820  007E' 580E'              	btfss	status,0
 13821  0080' A0D8               	goto	u7111
 13822  0082' EF00' F000'        	goto	u7110
 13823  0086' EF00' F000'        
 13824                           u7111:
 13825  008A'                    	goto	l5117
 13826  008A' EF00' F000'        u7110:
 13827  008E'                    	line	27
 13828                           	
 13829                           l5115:
 13830  008E'                    	movf	((c:___awmod@divisor)),c,w
 13831  008E' 500F'              	subwf	((c:___awmod@dividend)),c
 13832  0090' 5E0D'              	movf	((c:___awmod@divisor+1)),c,w
 13833  0092' 5010'              	subwfb	((c:___awmod@dividend+1)),c
 13834  0094' 5A0E'              
 13835                           	goto	l5117
 13836  0096' EF00' F000'        	
 13837                           l620:
 13838  009A'                    	line	28
 13839                           	
 13840                           l5117:
 13841  009A'                    	bcf	status,0
 13842  009A' 90D8               	rrcf	((c:___awmod@divisor+1)),c
 13843  009C' 3210'              	rrcf	((c:___awmod@divisor)),c
 13844  009E' 320F'              	line	29
 13845                           	
 13846                           l5119:
 13847  00A0'                    	decfsz	((c:___awmod@counter)),c
 13848  00A0' 2E11'              	
 13849                           	goto	l5113
 13850  00A2' EF00' F000'        	goto	l5121
 13851  00A6' EF00' F000'        	
 13852                           l621:
 13853  00AA'                    	goto	l5121
 13854  00AA' EF00' F000'        	line	30
 13855                           	
 13856                           l615:
 13857  00AE'                    	line	31
 13858                           	
 13859                           l5121:
 13860  00AE'                    	movf	((c:___awmod@sign)),c,w
 13861  00AE' 5012'              	btfsc	status,2
 13862  00B0' B4D8               	goto	u7121
 13863  00B2' EF00' F000'        	goto	u7120
 13864  00B6' EF00' F000'        u7121:
 13865  00BA'                    	goto	l5125
 13866  00BA' EF00' F000'        u7120:
 13867  00BE'                    	line	32
 13868                           	
 13869                           l5123:
 13870  00BE'                    	negf	((c:___awmod@dividend)),c
 13871  00BE' 6C0D'              	comf	((c:___awmod@dividend+1)),c
 13872  00C0' 1E0E'              	btfsc	status,0
 13873  00C2' B0D8               	incf	((c:___awmod@dividend+1)),c
 13874  00C4' 2A0E'              	goto	l5125
 13875  00C6' EF00' F000'        	
 13876                           l622:
 13877  00CA'                    	line	33
 13878                           	
 13879                           l5125:
 13880  00CA'                    	movff	(c:___awmod@dividend),(c:?___awmod)
 13881  00CA' C00D' F00D'        	movff	(c:___awmod@dividend+1),(c:?___awmod+1)
 13882  00CE' C00E' F00E'        	goto	l623
 13883  00D2' EF00' F000'        	
 13884                           l5127:
 13885  00D6'                    	line	34
 13886                           	
 13887                           l623:
 13888  00D6'                    	return	;funcret
 13889  00D6' 0012               	opt stack 0
 13890                           GLOBAL	__end_of___awmod
 13891                           	__end_of___awmod:
 13892  00D8'                    	signat	___awmod,8314
 13893                           	global	___awdiv
 13894                           
 13895 ;; *************** function ___awdiv *****************
 13896 ;; Defined at:
 13897 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13898 ;; Parameters:    Size  Location     Type
 13899 ;;  dividend        2   13[COMRAM] int 
 13900 ;;  divisor         2   15[COMRAM] int 
 13901 ;; Auto vars:     Size  Location     Type
 13902 ;;  quotient        2   19[COMRAM] int 
 13903 ;;  sign            1   18[COMRAM] unsigned char 
 13904 ;;  counter         1   17[COMRAM] unsigned char 
 13905 ;; Return value:  Size  Location     Type
 13906 ;;                  2   13[COMRAM] int 
 13907 ;; Registers used:
 13908 ;;		wreg, status,2, status,0
 13909 ;; Tracked objects:
 13910 ;;		On entry : 0/0
 13911 ;;		On exit  : 0/0
 13912 ;;		Unchanged: 0/0
 13913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13914 ;;      Params:         4       0       0       0       0       0       0
 13915 ;;      Locals:         4       0       0       0       0       0       0
 13916 ;;      Temps:          0       0       0       0       0       0       0
 13917 ;;      Totals:         8       0       0       0       0       0       0
 13918 ;;Total ram usage:        8 bytes
 13919 ;; Hardware stack levels used:    1
 13920 ;; Hardware stack levels required when called:    4
 13921 ;; This function calls:
 13922 ;;		Nothing
 13923 ;; This function is called by:
 13924 ;;		_efgtoa
 13925 ;; This function uses a non-reentrant model
 13926 ;;
 13927                           psect	text33,class=CODE,space=0,reloc=2,group=1
 13928                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13929                           	line	7
 13930                           global __ptext33
 13931                           __ptext33:
 13932  0000'                    psect	text33
 13933                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 13934                           	line	7
 13935                           	global	__size_of___awdiv
 13936                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 13937  0000                     	
 13938                           ___awdiv:
 13939  0000'                    ;incstack = 0
 13940                           	opt	stack 21
 13941                           	line	13
 13942                           	
 13943                           l5049:
 13944  0000'                    	movlw	low(0)
 13945  0000' 0E00               	movwf	((c:___awdiv@sign)),c
 13946  0002' 6E12'              	line	14
 13947                           	
 13948                           l5051:
 13949  0004'                    	btfsc	((c:___awdiv@divisor+1)),c,7
 13950  0004' BE10'              	goto	u7010
 13951  0006' EF00' F000'        	goto	u7011
 13952  000A' EF00' F000'        
 13953                           u7011:
 13954  000E'                    	goto	l5057
 13955  000E' EF00' F000'        u7010:
 13956  0012'                    	line	15
 13957                           	
 13958                           l5053:
 13959  0012'                    	negf	((c:___awdiv@divisor)),c
 13960  0012' 6C0F'              	comf	((c:___awdiv@divisor+1)),c
 13961  0014' 1E10'              	btfsc	status,0
 13962  0016' B0D8               	incf	((c:___awdiv@divisor+1)),c
 13963  0018' 2A10'              	line	16
 13964                           	
 13965                           l5055:
 13966  001A'                    	movlw	low(01h)
 13967  001A' 0E01               	movwf	((c:___awdiv@sign)),c
 13968  001C' 6E12'              	goto	l5057
 13969  001E' EF00' F000'        	line	17
 13970                           	
 13971                           l600:
 13972  0022'                    	line	18
 13973                           	
 13974                           l5057:
 13975  0022'                    	btfsc	((c:___awdiv@dividend+1)),c,7
 13976  0022' BE0E'              	goto	u7020
 13977  0024' EF00' F000'        	goto	u7021
 13978  0028' EF00' F000'        
 13979                           u7021:
 13980  002C'                    	goto	l5063
 13981  002C' EF00' F000'        u7020:
 13982  0030'                    	line	19
 13983                           	
 13984                           l5059:
 13985  0030'                    	negf	((c:___awdiv@dividend)),c
 13986  0030' 6C0D'              	comf	((c:___awdiv@dividend+1)),c
 13987  0032' 1E0E'              	btfsc	status,0
 13988  0034' B0D8               	incf	((c:___awdiv@dividend+1)),c
 13989  0036' 2A0E'              	line	20
 13990                           	
 13991                           l5061:
 13992  0038'                    	movlw	(01h)&0ffh
 13993  0038' 0E01               	xorwf	((c:___awdiv@sign)),c
 13994  003A' 1A12'              	goto	l5063
 13995  003C' EF00' F000'        	line	21
 13996                           	
 13997                           l601:
 13998  0040'                    	line	22
 13999                           	
 14000                           l5063:
 14001  0040'                    	movlw	high(0)
 14002  0040' 0E00               	movwf	((c:___awdiv@quotient+1)),c
 14003  0042' 6E14'              	movlw	low(0)
 14004  0044' 0E00               	movwf	((c:___awdiv@quotient)),c
 14005  0046' 6E13'              	line	23
 14006                           	
 14007                           l5065:
 14008  0048'                    	movf	((c:___awdiv@divisor)),c,w
 14009  0048' 500F'              iorwf	((c:___awdiv@divisor+1)),c,w
 14010  004A' 1010'              	btfsc	status,2
 14011  004C' B4D8               	goto	u7031
 14012  004E' EF00' F000'        	goto	u7030
 14013  0052' EF00' F000'        
 14014                           u7031:
 14015  0056'                    	goto	l5085
 14016  0056' EF00' F000'        u7030:
 14017  005A'                    	line	24
 14018                           	
 14019                           l5067:
 14020  005A'                    	movlw	low(01h)
 14021  005A' 0E01               	movwf	((c:___awdiv@counter)),c
 14022  005C' 6E11'              	line	25
 14023                           	goto	l5071
 14024  005E' EF00' F000'        	
 14025                           l604:
 14026  0062'                    	line	26
 14027                           	
 14028                           l5069:
 14029  0062'                    	bcf	status,0
 14030  0062' 90D8               	rlcf	((c:___awdiv@divisor)),c
 14031  0064' 360F'              	rlcf	((c:___awdiv@divisor+1)),c
 14032  0066' 3610'              	line	27
 14033                           	incf	((c:___awdiv@counter)),c
 14034  0068' 2A11'              	goto	l5071
 14035  006A' EF00' F000'        	line	28
 14036                           	
 14037                           l603:
 14038  006E'                    	line	25
 14039                           	
 14040                           l5071:
 14041  006E'                    	
 14042                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
 14043  006E' AE10'              	goto	u7041
 14044  0070' EF00' F000'        	goto	u7040
 14045  0074' EF00' F000'        u7041:
 14046  0078'                    	goto	l5069
 14047  0078' EF00' F000'        u7040:
 14048  007C'                    	goto	l5073
 14049  007C' EF00' F000'        	
 14050                           l605:
 14051  0080'                    	goto	l5073
 14052  0080' EF00' F000'        	line	29
 14053                           	
 14054                           l606:
 14055  0084'                    	line	30
 14056                           	
 14057                           l5073:
 14058  0084'                    	bcf	status,0
 14059  0084' 90D8               	rlcf	((c:___awdiv@quotient)),c
 14060  0086' 3613'              	rlcf	((c:___awdiv@quotient+1)),c
 14061  0088' 3614'              	line	31
 14062                           	
 14063                           l5075:
 14064  008A'                    		movf	((c:___awdiv@divisor)),c,w
 14065  008A' 500F'              	subwf	((c:___awdiv@dividend)),c,w
 14066  008C' 5C0D'              	movf	((c:___awdiv@divisor+1)),c,w
 14067  008E' 5010'              	subwfb	((c:___awdiv@dividend+1)),c,w
 14068  0090' 580E'              	btfss	status,0
 14069  0092' A0D8               	goto	u7051
 14070  0094' EF00' F000'        	goto	u7050
 14071  0098' EF00' F000'        
 14072                           u7051:
 14073  009C'                    	goto	l5081
 14074  009C' EF00' F000'        u7050:
 14075  00A0'                    	line	32
 14076                           	
 14077                           l5077:
 14078  00A0'                    	movf	((c:___awdiv@divisor)),c,w
 14079  00A0' 500F'              	subwf	((c:___awdiv@dividend)),c
 14080  00A2' 5E0D'              	movf	((c:___awdiv@divisor+1)),c,w
 14081  00A4' 5010'              	subwfb	((c:___awdiv@dividend+1)),c
 14082  00A6' 5A0E'              
 14083                           	line	33
 14084                           	
 14085                           l5079:
 14086  00A8'                    	bsf	(0+(0/8)+(c:___awdiv@quotient)),c,(0)&7
 14087  00A8' 8013'              	goto	l5081
 14088  00AA' EF00' F000'        	line	34
 14089                           	
 14090                           l607:
 14091  00AE'                    	line	35
 14092                           	
 14093                           l5081:
 14094  00AE'                    	bcf	status,0
 14095  00AE' 90D8               	rrcf	((c:___awdiv@divisor+1)),c
 14096  00B0' 3210'              	rrcf	((c:___awdiv@divisor)),c
 14097  00B2' 320F'              	line	36
 14098                           	
 14099                           l5083:
 14100  00B4'                    	decfsz	((c:___awdiv@counter)),c
 14101  00B4' 2E11'              	
 14102                           	goto	l5073
 14103  00B6' EF00' F000'        	goto	l5085
 14104  00BA' EF00' F000'        	
 14105                           l608:
 14106  00BE'                    	goto	l5085
 14107  00BE' EF00' F000'        	line	37
 14108                           	
 14109                           l602:
 14110  00C2'                    	line	38
 14111                           	
 14112                           l5085:
 14113  00C2'                    	movf	((c:___awdiv@sign)),c,w
 14114  00C2' 5012'              	btfsc	status,2
 14115  00C4' B4D8               	goto	u7061
 14116  00C6' EF00' F000'        	goto	u7060
 14117  00CA' EF00' F000'        u7061:
 14118  00CE'                    	goto	l5089
 14119  00CE' EF00' F000'        u7060:
 14120  00D2'                    	line	39
 14121                           	
 14122                           l5087:
 14123  00D2'                    	negf	((c:___awdiv@quotient)),c
 14124  00D2' 6C13'              	comf	((c:___awdiv@quotient+1)),c
 14125  00D4' 1E14'              	btfsc	status,0
 14126  00D6' B0D8               	incf	((c:___awdiv@quotient+1)),c
 14127  00D8' 2A14'              	goto	l5089
 14128  00DA' EF00' F000'        	
 14129                           l609:
 14130  00DE'                    	line	40
 14131                           	
 14132                           l5089:
 14133  00DE'                    	movff	(c:___awdiv@quotient),(c:?___awdiv)
 14134  00DE' C013' F00D'        	movff	(c:___awdiv@quotient+1),(c:?___awdiv+1)
 14135  00E2' C014' F00E'        	goto	l610
 14136  00E6' EF00' F000'        	
 14137                           l5091:
 14138  00EA'                    	line	41
 14139                           	
 14140                           l610:
 14141  00EA'                    	return	;funcret
 14142  00EA' 0012               	opt stack 0
 14143                           GLOBAL	__end_of___awdiv
 14144                           	__end_of___awdiv:
 14145  00EC'                    	signat	___awdiv,8314
 14146                           	global	___xxtofl
 14147                           
 14148 ;; *************** function ___xxtofl *****************
 14149 ;; Defined at:
 14150 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 14151 ;; Parameters:    Size  Location     Type
 14152 ;;  sign            1    wreg     unsigned char 
 14153 ;;  val             4   13[COMRAM] long 
 14154 ;; Auto vars:     Size  Location     Type
 14155 ;;  sign            1   21[COMRAM] unsigned char 
 14156 ;;  arg             4   23[COMRAM] unsigned long 
 14157 ;;  exp             1   22[COMRAM] unsigned char 
 14158 ;; Return value:  Size  Location     Type
 14159 ;;                  4   13[COMRAM] unsigned char 
 14160 ;; Registers used:
 14161 ;;		wreg, status,2, status,0
 14162 ;; Tracked objects:
 14163 ;;		On entry : 0/0
 14164 ;;		On exit  : 0/0
 14165 ;;		Unchanged: 0/0
 14166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14167 ;;      Params:         4       0       0       0       0       0       0
 14168 ;;      Locals:         6       0       0       0       0       0       0
 14169 ;;      Temps:          4       0       0       0       0       0       0
 14170 ;;      Totals:        14       0       0       0       0       0       0
 14171 ;;Total ram usage:       14 bytes
 14172 ;; Hardware stack levels used:    1
 14173 ;; Hardware stack levels required when called:    4
 14174 ;; This function calls:
 14175 ;;		Nothing
 14176 ;; This function is called by:
 14177 ;;		_Mode3
 14178 ;; This function uses a non-reentrant model
 14179 ;;
 14180                           psect	text34,class=CODE,space=0,reloc=2,group=1
 14181                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 14182                           	line	10
 14183                           global __ptext34
 14184                           __ptext34:
 14185  0000'                    psect	text34
 14186                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 14187                           	line	10
 14188                           	global	__size_of___xxtofl
 14189                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
 14190  0000                     	
 14191                           ___xxtofl:
 14192  0000'                    ;incstack = 0
 14193                           	opt	stack 25
 14194                           ;___xxtofl@sign stored from wreg
 14195                           	movwf	((c:___xxtofl@sign)),c
 14196  0000' 6E15'              	line	15
 14197                           	
 14198                           l4245:
 14199  0002'                    	movf	((c:___xxtofl@sign)),c,w
 14200  0002' 5015'              	btfsc	status,2
 14201  0004' B4D8               	goto	u5561
 14202  0006' EF00' F000'        	goto	u5560
 14203  000A' EF00' F000'        u5561:
 14204  000E'                    	goto	l1034
 14205  000E' EF00' F000'        u5560:
 14206  0012'                    	
 14207                           l4247:
 14208  0012'                    	btfsc	((c:___xxtofl@val+3)),c,7
 14209  0012' BE10'              	goto	u5570
 14210  0014' EF00' F000'        	goto	u5571
 14211  0018' EF00' F000'        
 14212                           u5571:
 14213  001C'                    	goto	l1034
 14214  001C' EF00' F000'        u5570:
 14215  0020'                    	line	16
 14216                           	
 14217                           l4249:
 14218  0020'                    	movff	(c:___xxtofl@val),??___xxtofl+0+0
 14219  0020' C00D' F011'        	movff	(c:___xxtofl@val+1),??___xxtofl+0+0+1
 14220  0024' C00E' F012'        	movff	(c:___xxtofl@val+2),??___xxtofl+0+0+2
 14221  0028' C00F' F013'        	movff	(c:___xxtofl@val+3),??___xxtofl+0+0+3
 14222  002C' C010' F014'        	comf	(??___xxtofl+0+0),c
 14223  0030' 1E11'              	comf	(??___xxtofl+0+1),c
 14224  0032' 1E12'              	comf	(??___xxtofl+0+2),c
 14225  0034' 1E13'              	comf	(??___xxtofl+0+3),c
 14226  0036' 1E14'              	incf	(??___xxtofl+0+0),c
 14227  0038' 2A11'              	movlw	0
 14228  003A' 0E00               	addwfc	(??___xxtofl+0+1),c
 14229  003C' 2212'              	addwfc	(??___xxtofl+0+2),c
 14230  003E' 2213'              	addwfc	(??___xxtofl+0+3),c
 14231  0040' 2214'              	movff	??___xxtofl+0+0,(c:___xxtofl@arg)
 14232  0042' C011' F017'        	movff	??___xxtofl+0+1,(c:___xxtofl@arg+1)
 14233  0046' C012' F018'        	movff	??___xxtofl+0+2,(c:___xxtofl@arg+2)
 14234  004A' C013' F019'        	movff	??___xxtofl+0+3,(c:___xxtofl@arg+3)
 14235  004E' C014' F01A'        	line	17
 14236                           	goto	l4251
 14237  0052' EF00' F000'        	line	18
 14238                           	
 14239                           l1034:
 14240  0056'                    	line	19
 14241                           	movff	(c:___xxtofl@val),(c:___xxtofl@arg)
 14242  0056' C00D' F017'        	movff	(c:___xxtofl@val+1),(c:___xxtofl@arg+1)
 14243  005A' C00E' F018'        	movff	(c:___xxtofl@val+2),(c:___xxtofl@arg+2)
 14244  005E' C00F' F019'        	movff	(c:___xxtofl@val+3),(c:___xxtofl@arg+3)
 14245  0062' C010' F01A'        	goto	l4251
 14246  0066' EF00' F000'        	line	20
 14247                           	
 14248                           l1035:
 14249  006A'                    	line	21
 14250                           	
 14251                           l4251:
 14252  006A'                    	movf	((c:___xxtofl@val)),c,w
 14253  006A' 500D'              iorwf	((c:___xxtofl@val+1)),c,w
 14254  006C' 100E'              iorwf	((c:___xxtofl@val+2)),c,w
 14255  006E' 100F'              iorwf	((c:___xxtofl@val+3)),c,w
 14256  0070' 1010'              	btfss	status,2
 14257  0072' A4D8               	goto	u5581
 14258  0074' EF00' F000'        	goto	u5580
 14259  0078' EF00' F000'        
 14260                           u5581:
 14261  007C'                    	goto	l4257
 14262  007C' EF00' F000'        u5580:
 14263  0080'                    	line	22
 14264                           	
 14265                           l4253:
 14266  0080'                    	movlw	low(normalize32(0x0))
 14267  0080' 0E00               	movwf	((c:?___xxtofl)),c
 14268  0082' 6E0D'              	movlw	high(normalize32(0x0))
 14269  0084' 0E00               	movwf	((c:?___xxtofl+1)),c
 14270  0086' 6E0E'              	movlw	low highword(normalize32(0x0))
 14271  0088' 0E00               	movwf	((c:?___xxtofl+2)),c
 14272  008A' 6E0F'              	movlw	high highword(normalize32(0x0))
 14273  008C' 0E00               	movwf	((c:?___xxtofl+3)),c
 14274  008E' 6E10'              	goto	l1037
 14275  0090' EF00' F000'        	
 14276                           l4255:
 14277  0094'                    	goto	l1037
 14278  0094' EF00' F000'        	
 14279                           l1036:
 14280  0098'                    	line	23
 14281                           	
 14282                           l4257:
 14283  0098'                    	movlw	low(096h)
 14284  0098' 0E96               	movwf	((c:___xxtofl@exp)),c
 14285  009A' 6E16'              	line	24
 14286                           	goto	l4261
 14287  009C' EF00' F000'        	
 14288                           l1039:
 14289  00A0'                    	line	25
 14290                           	
 14291                           l4259:
 14292  00A0'                    	incf	((c:___xxtofl@exp)),c
 14293  00A0' 2A16'              	line	26
 14294                           	bcf	status,0
 14295  00A2' 90D8               	rrcf	((c:___xxtofl@arg+3)),c
 14296  00A4' 321A'              	rrcf	((c:___xxtofl@arg+2)),c
 14297  00A6' 3219'              	rrcf	((c:___xxtofl@arg+1)),c
 14298  00A8' 3218'              	rrcf	((c:___xxtofl@arg)),c
 14299  00AA' 3217'              	goto	l4261
 14300  00AC' EF00' F000'        	line	27
 14301                           	
 14302                           l1038:
 14303  00B0'                    	line	24
 14304                           	
 14305                           l4261:
 14306  00B0'                    	movlw	0
 14307  00B0' 0E00               	andwf	((c:___xxtofl@arg)),c,w
 14308  00B2' 1417'              	movwf	(??___xxtofl+0+0)&0ffh,c
 14309  00B4' 6E00'              	movlw	0
 14310  00B6' 0E00               	andwf	((c:___xxtofl@arg+1)),c,w
 14311  00B8' 1418'              	movwf	1+(??___xxtofl+0+0)&0ffh,c
 14312  00BA' 6E00'              	
 14313                           	movlw	0
 14314  00BC' 0E00               	andwf	((c:___xxtofl@arg+2)),c,w
 14315  00BE' 1419'              	movwf	2+(??___xxtofl+0+0)&0ffh,c
 14316  00C0' 6E00'              	
 14317                           	movlw	0FEh
 14318  00C2' 0EFE               	andwf	((c:___xxtofl@arg+3)),c,w
 14319  00C4' 141A'              	movwf	3+(??___xxtofl+0+0)&0ffh,c
 14320  00C6' 6E00'              	movf	(??___xxtofl+0+0),c,w
 14321  00C8' 5011'              iorwf	(??___xxtofl+0+1),c,w
 14322  00CA' 1012'              iorwf	(??___xxtofl+0+2),c,w
 14323  00CC' 1013'              iorwf	(??___xxtofl+0+3),c,w
 14324  00CE' 1014'              	btfss	status,2
 14325  00D0' A4D8               	goto	u5591
 14326  00D2' EF00' F000'        	goto	u5590
 14327  00D6' EF00' F000'        
 14328                           u5591:
 14329  00DA'                    	goto	l4259
 14330  00DA' EF00' F000'        u5590:
 14331  00DE'                    	goto	l1041
 14332  00DE' EF00' F000'        	
 14333                           l1040:
 14334  00E2'                    	line	28
 14335                           	goto	l1041
 14336  00E2' EF00' F000'        	
 14337                           l1042:
 14338  00E6'                    	line	29
 14339                           	
 14340                           l4263:
 14341  00E6'                    	incf	((c:___xxtofl@exp)),c
 14342  00E6' 2A16'              	line	30
 14343                           	
 14344                           l4265:
 14345  00E8'                    	movlw	low(01h)
 14346  00E8' 0E01               	addwf	((c:___xxtofl@arg)),c
 14347  00EA' 2617'              	movlw	0
 14348  00EC' 0E00               	addwfc	((c:___xxtofl@arg+1)),c
 14349  00EE' 2218'              	addwfc	((c:___xxtofl@arg+2)),c
 14350  00F0' 2219'              	addwfc	((c:___xxtofl@arg+3)),c
 14351  00F2' 221A'              	line	31
 14352                           	
 14353                           l4267:
 14354  00F4'                    	bcf	status,0
 14355  00F4' 90D8               	rrcf	((c:___xxtofl@arg+3)),c
 14356  00F6' 321A'              	rrcf	((c:___xxtofl@arg+2)),c
 14357  00F8' 3219'              	rrcf	((c:___xxtofl@arg+1)),c
 14358  00FA' 3218'              	rrcf	((c:___xxtofl@arg)),c
 14359  00FC' 3217'              	line	32
 14360                           	
 14361                           l1041:
 14362  00FE'                    	line	28
 14363                           	movlw	0
 14364  00FE' 0E00               	andwf	((c:___xxtofl@arg)),c,w
 14365  0100' 1417'              	movwf	(??___xxtofl+0+0)&0ffh,c
 14366  0102' 6E00'              	movlw	0
 14367  0104' 0E00               	andwf	((c:___xxtofl@arg+1)),c,w
 14368  0106' 1418'              	movwf	1+(??___xxtofl+0+0)&0ffh,c
 14369  0108' 6E00'              	
 14370                           	movlw	0
 14371  010A' 0E00               	andwf	((c:___xxtofl@arg+2)),c,w
 14372  010C' 1419'              	movwf	2+(??___xxtofl+0+0)&0ffh,c
 14373  010E' 6E00'              	
 14374                           	movlw	0FFh
 14375  0110' 0EFF               	andwf	((c:___xxtofl@arg+3)),c,w
 14376  0112' 141A'              	movwf	3+(??___xxtofl+0+0)&0ffh,c
 14377  0114' 6E00'              	movf	(??___xxtofl+0+0),c,w
 14378  0116' 5011'              iorwf	(??___xxtofl+0+1),c,w
 14379  0118' 1012'              iorwf	(??___xxtofl+0+2),c,w
 14380  011A' 1013'              iorwf	(??___xxtofl+0+3),c,w
 14381  011C' 1014'              	btfss	status,2
 14382  011E' A4D8               	goto	u5601
 14383  0120' EF00' F000'        	goto	u5600
 14384  0124' EF00' F000'        
 14385                           u5601:
 14386  0128'                    	goto	l4263
 14387  0128' EF00' F000'        u5600:
 14388  012C'                    	goto	l4271
 14389  012C' EF00' F000'        	
 14390                           l1043:
 14391  0130'                    	line	33
 14392                           	goto	l4271
 14393  0130' EF00' F000'        	
 14394                           l1045:
 14395  0134'                    	line	34
 14396                           	
 14397                           l4269:
 14398  0134'                    	decf	((c:___xxtofl@exp)),c
 14399  0134' 0616'              	line	35
 14400                           	bcf	status,0
 14401  0136' 90D8               	rlcf	((c:___xxtofl@arg)),c
 14402  0138' 3617'              	rlcf	((c:___xxtofl@arg+1)),c
 14403  013A' 3618'              	rlcf	((c:___xxtofl@arg+2)),c
 14404  013C' 3619'              	rlcf	((c:___xxtofl@arg+3)),c
 14405  013E' 361A'              	goto	l4271
 14406  0140' EF00' F000'        	line	36
 14407                           	
 14408                           l1044:
 14409  0144'                    	line	33
 14410                           	
 14411                           l4271:
 14412  0144'                    	
 14413                           	btfsc	((c:___xxtofl@arg+2)),c,(23)&7
 14414  0144' BE19'              	goto	u5611
 14415  0146' EF00' F000'        	goto	u5610
 14416  014A' EF00' F000'        u5611:
 14417  014E'                    	goto	l1048
 14418  014E' EF00' F000'        u5610:
 14419  0152'                    	
 14420                           l4273:
 14421  0152'                    		movlw	02h-0
 14422  0152' 0E02               	cpfslt	((c:___xxtofl@exp)),c
 14423  0154' 6016'              	goto	u5621
 14424  0156' EF00' F000'        	goto	u5620
 14425  015A' EF00' F000'        
 14426                           u5621:
 14427  015E'                    	goto	l4269
 14428  015E' EF00' F000'        u5620:
 14429  0162'                    	goto	l1048
 14430  0162' EF00' F000'        	
 14431                           l1047:
 14432  0166'                    	
 14433                           l1048:
 14434  0166'                    	line	37
 14435                           	
 14436                           	btfsc	((c:___xxtofl@exp)),c,(0)&7
 14437  0166' B016'              	goto	u5631
 14438  0168' EF00' F000'        	goto	u5630
 14439  016C' EF00' F000'        u5631:
 14440  0170'                    	goto	l4277
 14441  0170' EF00' F000'        u5630:
 14442  0174'                    	line	38
 14443                           	
 14444                           l4275:
 14445  0174'                    	bcf	(0+(23/8)+(c:___xxtofl@arg)),c,(23)&7
 14446  0174' 9E19'              	goto	l4277
 14447  0176' EF00' F000'        	
 14448                           l1049:
 14449  017A'                    	line	39
 14450                           	
 14451                           l4277:
 14452  017A'                    	bcf status,0
 14453  017A' 90D8               	rrcf	((c:___xxtofl@exp)),c
 14454  017C' 3216'              
 14455                           	line	40
 14456                           	
 14457                           l4279:
 14458  017E'                    	movff	(c:___xxtofl@exp),??___xxtofl+0+0
 14459  017E' C016' F011'        	clrf	(??___xxtofl+0+0+1)&0ffh,c
 14460  0182' 6A00'              	clrf	(??___xxtofl+0+0+2)&0ffh,c
 14461  0184' 6A00'              	clrf	(??___xxtofl+0+0+3)&0ffh,c
 14462  0186' 6A00'              	movff	??___xxtofl+0+0,??___xxtofl+0+3
 14463  0188' C011' F014'        	clrf	(??___xxtofl+0+2),c
 14464  018C' 6A13'              	clrf	(??___xxtofl+0+1),c
 14465  018E' 6A12'              	clrf	(??___xxtofl+0+0),c
 14466  0190' 6A11'              	movf	(??___xxtofl+0+0),c,w
 14467  0192' 5011'              	iorwf	((c:___xxtofl@arg)),c
 14468  0194' 1217'              	movf	(??___xxtofl+0+1),c,w
 14469  0196' 5012'              	iorwf	((c:___xxtofl@arg+1)),c
 14470  0198' 1218'              	movf	(??___xxtofl+0+2),c,w
 14471  019A' 5013'              	iorwf	((c:___xxtofl@arg+2)),c
 14472  019C' 1219'              	movf	(??___xxtofl+0+3),c,w
 14473  019E' 5014'              	iorwf	((c:___xxtofl@arg+3)),c
 14474  01A0' 121A'              
 14475                           	line	41
 14476                           	
 14477                           l4281:
 14478  01A2'                    	movf	((c:___xxtofl@sign)),c,w
 14479  01A2' 5015'              	btfsc	status,2
 14480  01A4' B4D8               	goto	u5641
 14481  01A6' EF00' F000'        	goto	u5640
 14482  01AA' EF00' F000'        u5641:
 14483  01AE'                    	goto	l4287
 14484  01AE' EF00' F000'        u5640:
 14485  01B2'                    	
 14486                           l4283:
 14487  01B2'                    	btfsc	((c:___xxtofl@val+3)),c,7
 14488  01B2' BE10'              	goto	u5650
 14489  01B4' EF00' F000'        	goto	u5651
 14490  01B8' EF00' F000'        
 14491                           u5651:
 14492  01BC'                    	goto	l4287
 14493  01BC' EF00' F000'        u5650:
 14494  01C0'                    	line	42
 14495                           	
 14496                           l4285:
 14497  01C0'                    	bsf	(0+(31/8)+(c:___xxtofl@arg)),c,(31)&7
 14498  01C0' 8E1A'              	goto	l4287
 14499  01C2' EF00' F000'        	
 14500                           l1050:
 14501  01C6'                    	line	43
 14502                           	
 14503                           l4287:
 14504  01C6'                    	movff	(c:___xxtofl@arg),(c:?___xxtofl)
 14505  01C6' C017' F00D'        	movff	(c:___xxtofl@arg+1),(c:?___xxtofl+1)
 14506  01CA' C018' F00E'        	movff	(c:___xxtofl@arg+2),(c:?___xxtofl+2)
 14507  01CE' C019' F00F'        	movff	(c:___xxtofl@arg+3),(c:?___xxtofl+3)
 14508  01D2' C01A' F010'        	goto	l1037
 14509  01D6' EF00' F000'        	
 14510                           l4289:
 14511  01DA'                    	line	44
 14512                           	
 14513                           l1037:
 14514  01DA'                    	return	;funcret
 14515  01DA' 0012               	opt stack 0
 14516                           GLOBAL	__end_of___xxtofl
 14517                           	__end_of___xxtofl:
 14518  01DC'                    	signat	___xxtofl,8316
 14519                           	global	_ADC_Read
 14520                           
 14521 ;; *************** function _ADC_Read *****************
 14522 ;; Defined at:
 14523 ;;		line 11 in file "setting_hardaware/adc.c"
 14524 ;; Parameters:    Size  Location     Type
 14525 ;;  channel         2   13[COMRAM] int 
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;  digital         2   19[COMRAM] int 
 14528 ;; Return value:  Size  Location     Type
 14529 ;;                  2   13[COMRAM] int 
 14530 ;; Registers used:
 14531 ;;		wreg, status,2, status,0
 14532 ;; Tracked objects:
 14533 ;;		On entry : 0/0
 14534 ;;		On exit  : 0/0
 14535 ;;		Unchanged: 0/0
 14536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14537 ;;      Params:         2       0       0       0       0       0       0
 14538 ;;      Locals:         2       0       0       0       0       0       0
 14539 ;;      Temps:          4       0       0       0       0       0       0
 14540 ;;      Totals:         8       0       0       0       0       0       0
 14541 ;;Total ram usage:        8 bytes
 14542 ;; Hardware stack levels used:    1
 14543 ;; Hardware stack levels required when called:    4
 14544 ;; This function calls:
 14545 ;;		Nothing
 14546 ;; This function is called by:
 14547 ;;		_Mode3
 14548 ;; This function uses a non-reentrant model
 14549 ;;
 14550                           psect	text35,class=CODE,space=0,reloc=2,group=0
 14551                           	file	"setting_hardaware/adc.c"
 14552                           	line	11
 14553                           global __ptext35
 14554                           __ptext35:
 14555  0000'                    psect	text35
 14556                           	file	"setting_hardaware/adc.c"
 14557                           	line	11
 14558                           	global	__size_of_ADC_Read
 14559                           	__size_of_ADC_Read	equ	__end_of_ADC_Read-_ADC_Read
 14560  0000                     	
 14561                           _ADC_Read:
 14562  0000'                    ;incstack = 0
 14563                           	opt	stack 25
 14564                           	line	14
 14565                           	
 14566                           l4193:
 14567  0000'                    ;setting_hardaware/adc.c: 11: int ADC_Read(int channel);setting_hardaware/adc.c: 12: {;s
                                 etting_hardaware/adc.c: 13:     int digital;;setting_hardaware/adc.c: 14:     ADCON0 =(A
                                 DCON0 & 0b11000011)|((channel<<2) & 0b00111100);
 14568                           	movff	(c:ADC_Read@channel),??_ADC_Read+0+0
 14569  0000' C00D' F00F'        	bcf	status,0
 14570  0004' 90D8               	rlcf	(??_ADC_Read+0+0),c
 14571  0006' 360F'              	bcf	status,0
 14572  0008' 90D8               	rlcf	(??_ADC_Read+0+0),c
 14573  000A' 360F'              
 14574                           	movlw	03Ch
 14575  000C' 0E3C               	andwf	(??_ADC_Read+0+0),c
 14576  000E' 160F'              	movf	((c:4034)),c,w	;volatile
 14577  0010' 50C2               	andlw	low(0C3h)
 14578  0012' 0BC3               	iorwf	(??_ADC_Read+0+0),c,w
 14579  0014' 100F'              	movwf	((c:4034)),c	;volatile
 14580  0016' 6EC2               	line	17
 14581                           ;setting_hardaware/adc.c: 17:     ADCON0 |= ((1<<ADON)|(1<<GO));
 14582                           	btfsc	c:(32273/8),(32273)&7	;volatile
 14583  0018' B2C2               	goto	u5431
 14584  001A' EF00' F000'        	goto	u5430
 14585  001E' EF00' F000'        u5431:
 14586  0022'                    	clrf	(??_ADC_Read+0+0)&0ffh,c
 14587  0022' 6A00'              	incf	(??_ADC_Read+0+0)&0ffh,c
 14588  0024' 2A00'              	goto	u5448
 14589  0026' EF00' F000'        u5430:
 14590  002A'                    	clrf	(??_ADC_Read+0+0)&0ffh,c
 14591  002A' 6A00'              u5448:
 14592  002C'                    	movlw	(01h)&0ffh
 14593  002C' 0E01               	movwf	(??_ADC_Read+1+0)&0ffh,c
 14594  002E' 6E00'              	incf	(??_ADC_Read+0+0),c
 14595  0030' 2A0F'              	goto	u5454
 14596  0032' EF00' F000'        u5455:
 14597  0036'                    	bcf	status,0
 14598  0036' 90D8               	rlcf	((??_ADC_Read+1+0)),c
 14599  0038' 3610'              u5454:
 14600  003A'                    	decfsz	(??_ADC_Read+0+0),c
 14601  003A' 2E0F'              	goto	u5455
 14602  003C' EF00' F000'        	btfsc	c:(32272/8),(32272)&7	;volatile
 14603  0040' B0C2               	goto	u5461
 14604  0042' EF00' F000'        	goto	u5460
 14605  0046' EF00' F000'        u5461:
 14606  004A'                    	clrf	(??_ADC_Read+2+0)&0ffh,c
 14607  004A' 6A00'              	incf	(??_ADC_Read+2+0)&0ffh,c
 14608  004C' 2A00'              	goto	u5478
 14609  004E' EF00' F000'        u5460:
 14610  0052'                    	clrf	(??_ADC_Read+2+0)&0ffh,c
 14611  0052' 6A00'              u5478:
 14612  0054'                    	movlw	(01h)&0ffh
 14613  0054' 0E01               	movwf	(??_ADC_Read+3+0)&0ffh,c
 14614  0056' 6E00'              	incf	(??_ADC_Read+2+0),c
 14615  0058' 2A11'              	goto	u5484
 14616  005A' EF00' F000'        u5485:
 14617  005E'                    	bcf	status,0
 14618  005E' 90D8               	rlcf	((??_ADC_Read+3+0)),c
 14619  0060' 3612'              u5484:
 14620  0062'                    	decfsz	(??_ADC_Read+2+0),c
 14621  0062' 2E11'              	goto	u5485
 14622  0064' EF00' F000'        	movf	((??_ADC_Read+3+0)),c,w
 14623  0068' 5012'              	iorwf	((??_ADC_Read+1+0)),c,w
 14624  006A' 1010'              	iorwf	((c:4034)),c	;volatile
 14625  006C' 12C2               	line	20
 14626                           ;setting_hardaware/adc.c: 20:     while(ADCON0bits.GO_nDONE==1);
 14627                           	goto	l205
 14628  006E' EF00' F000'        	
 14629                           l206:
 14630  0072'                    	
 14631                           l205:
 14632  0072'                    	btfsc	((c:4034)),c,1	;volatile
 14633  0072' B2C2               	goto	u5491
 14634  0074' EF00' F000'        	goto	u5490
 14635  0078' EF00' F000'        u5491:
 14636  007C'                    	goto	l205
 14637  007C' EF00' F000'        u5490:
 14638  0080'                    	goto	l4195
 14639  0080' EF00' F000'        	
 14640                           l207:
 14641  0084'                    	line	22
 14642                           	
 14643                           l4195:
 14644  0084'                    ;setting_hardaware/adc.c: 22:     digital = (ADRESH*256) | (ADRESL);
 14645                           	movf	((c:4035)),c,w	;volatile
 14646  0084' 50C3               	movff	(c:4036),??_ADC_Read+0+0	;volatile
 14647  0086' CFC4 F00F'         	clrf	(??_ADC_Read+0+0+1)&0ffh,c
 14648  008A' 6A00'              	movff	??_ADC_Read+0+0,??_ADC_Read+0+1
 14649  008C' C00F' F010'        	clrf	(??_ADC_Read+0+0),c
 14650  0090' 6A0F'              	iorwf	(??_ADC_Read+0+0),c,w
 14651  0092' 100F'              	movwf	((c:ADC_Read@digital)),c
 14652  0094' 6E13'              	movf	(??_ADC_Read+0+1),c,w
 14653  0096' 5010'              	movwf	1+((c:ADC_Read@digital)),c
 14654  0098' 6E14'              	line	23
 14655                           	
 14656                           l4197:
 14657  009A'                    ;setting_hardaware/adc.c: 23:     return(digital);
 14658                           	movff	(c:ADC_Read@digital),(c:?_ADC_Read)
 14659  009A' C013' F00D'        	movff	(c:ADC_Read@digital+1),(c:?_ADC_Read+1)
 14660  009E' C014' F00E'        	goto	l208
 14661  00A2' EF00' F000'        	
 14662                           l4199:
 14663  00A6'                    	line	24
 14664                           	
 14665                           l208:
 14666  00A6'                    	return	;funcret
 14667  00A6' 0012               	opt stack 0
 14668                           GLOBAL	__end_of_ADC_Read
 14669                           	__end_of_ADC_Read:
 14670  00A8'                    	signat	_ADC_Read,4218
 14671                           	global	_Mode2
 14672                           
 14673 ;; *************** function _Mode2 *****************
 14674 ;; Defined at:
 14675 ;;		line 15 in file "main.c"
 14676 ;; Parameters:    Size  Location     Type
 14677 ;;		None
 14678 ;; Auto vars:     Size  Location     Type
 14679 ;;		None
 14680 ;; Return value:  Size  Location     Type
 14681 ;;                  1    wreg      void 
 14682 ;; Registers used:
 14683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
       temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
       , btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
       , btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 14684 ;; Tracked objects:
 14685 ;;		On entry : 0/0
 14686 ;;		On exit  : 0/0
 14687 ;;		Unchanged: 0/0
 14688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14689 ;;      Params:         0       0       0       0       0       0       0
 14690 ;;      Locals:         0       0       0       0       0       0       0
 14691 ;;      Temps:          0       0       0       0       0       0       0
 14692 ;;      Totals:         0       0       0       0       0       0       0
 14693 ;;Total ram usage:        0 bytes
 14694 ;; Hardware stack levels used:    1
 14695 ;; Hardware stack levels required when called:    7
 14696 ;; This function calls:
 14697 ;;		_ClearBuffer
 14698 ;;		_GetString
 14699 ;;		_PrintBuffer
 14700 ;;		_atoi
 14701 ;;		_strtok
 14702 ;; This function is called by:
 14703 ;;		_main
 14704 ;; This function uses a non-reentrant model
 14705 ;;
 14706                           psect	text36,class=CODE,space=0,reloc=2,group=0
 14707                           	file	"main.c"
 14708                           	line	15
 14709                           global __ptext36
 14710                           __ptext36:
 14711  0000'                    psect	text36
 14712                           	file	"main.c"
 14713                           	line	15
 14714                           	global	__size_of_Mode2
 14715                           	__size_of_Mode2	equ	__end_of_Mode2-_Mode2
 14716  0000                     	
 14717                           _Mode2:
 14718  0000'                    ;incstack = 0
 14719                           	opt	stack 23
 14720                           	line	17
 14721                           	
 14722                           l5725:
 14723  0000'                    ;main.c: 17:     ClearBuffer();
 14724                           	call	_ClearBuffer	;wreg free
 14725  0000' EC00' F000'        	line	19
 14726                           	
 14727                           l5727:
 14728  0004'                    ;main.c: 19:     TMR3 = 0 ;
 14729                           	movlw	high(0)
 14730  0004' 0E00               	movwf	((c:4018+1)),c	;volatile
 14731  0006' 6EB3               	movlw	low(0)
 14732  0008' 0E00               	movwf	((c:4018)),c	;volatile
 14733  000A' 6EB2               	line	20
 14734                           	
 14735                           l5729:
 14736  000C'                    ;main.c: 20:     T3CON = 0xC0;
 14737                           	movlw	low(0C0h)
 14738  000C' 0EC0               	movwf	((c:4017)),c	;volatile
 14739  000E' 6EB1               	line	22
 14740                           ;main.c: 22:     while(RCREG != '^');
 14741                           	goto	l5731
 14742  0010' EF00' F000'        	
 14743                           l53:
 14744  0014'                    	goto	l5731
 14745  0014' EF00' F000'        	
 14746                           l52:
 14747  0018'                    	
 14748                           l5731:
 14749  0018'                    		movlw	94
 14750  0018' 0E5E               	xorwf	((c:4014)),c,w	;volatile
 14751  001A' 18AE               	btfss	status,2
 14752  001C' A4D8               	goto	u8241
 14753  001E' EF00' F000'        	goto	u8240
 14754  0022' EF00' F000'        
 14755                           u8241:
 14756  0026'                    	goto	l5731
 14757  0026' EF00' F000'        u8240:
 14758  002A'                    	goto	l5733
 14759  002A' EF00' F000'        	
 14760                           l54:
 14761  002E'                    	line	23
 14762                           	
 14763                           l5733:
 14764  002E'                    ;main.c: 23:     ClearBuffer();
 14765                           	call	_ClearBuffer	;wreg free
 14766  002E' EC00' F000'        	line	24
 14767                           ;main.c: 24:     while(RCREG != '$');
 14768                           	goto	l5735
 14769  0032' EF00' F000'        	
 14770                           l56:
 14771  0036'                    	goto	l5735
 14772  0036' EF00' F000'        	
 14773                           l55:
 14774  003A'                    	
 14775                           l5735:
 14776  003A'                    		movlw	36
 14777  003A' 0E24               	xorwf	((c:4014)),c,w	;volatile
 14778  003C' 18AE               	btfss	status,2
 14779  003E' A4D8               	goto	u8251
 14780  0040' EF00' F000'        	goto	u8250
 14781  0044' EF00' F000'        
 14782                           u8251:
 14783  0048'                    	goto	l5735
 14784  0048' EF00' F000'        u8250:
 14785  004C'                    	goto	l5737
 14786  004C' EF00' F000'        	
 14787                           l57:
 14788  0050'                    	line	26
 14789                           	
 14790                           l5737:
 14791  0050'                    ;main.c: 26:     PrintBuffer(strtok(GetString(), "$"));
 14792                           	call	_GetString	;wreg free
 14793  0050' EC00' F000'        	movff	0+?_GetString,(c:strtok@s)
 14794  0054' C00D' F01A'        	movff	1+?_GetString,(c:strtok@s+1)
 14795  0058' C00E' F01B'        		movlw	low(STR_2)
 14796  005C' 0E00'              	movwf	((c:strtok@sep)),c
 14797  005E' 6E1C'              	movlw	high(STR_2)
 14798  0060' 0E00'              	movwf	((c:strtok@sep+1)),c
 14799  0062' 6E1D'              
 14800                           	call	_strtok	;wreg free
 14801  0064' EC00' F000'        	movff	0+?_strtok,(c:?_PrintBuffer)
 14802  0068' C01A' F000'        	movff	1+?_strtok,(c:?_PrintBuffer+1)
 14803  006C' C01B' F001'        	call	_PrintBuffer	;wreg free
 14804  0070' EC00' F000'        	line	27
 14805                           	
 14806                           l5739:
 14807  0074'                    ;main.c: 27:     CCPR1 = atoi( strtok(GetString(), "$") );
 14808                           	call	_GetString	;wreg free
 14809  0074' EC00' F000'        	movff	0+?_GetString,(c:strtok@s)
 14810  0078' C00D' F01A'        	movff	1+?_GetString,(c:strtok@s+1)
 14811  007C' C00E' F01B'        		movlw	low(STR_3)
 14812  0080' 0E00'              	movwf	((c:strtok@sep)),c
 14813  0082' 6E1C'              	movlw	high(STR_3)
 14814  0084' 0E00'              	movwf	((c:strtok@sep+1)),c
 14815  0086' 6E1D'              
 14816                           	call	_strtok	;wreg free
 14817  0088' EC00' F000'        	movff	0+?_strtok,(c:atoi@s)
 14818  008C' C01A' F01E'        	movff	1+?_strtok,(c:atoi@s+1)
 14819  0090' C01B' F01F'        	call	_atoi	;wreg free
 14820  0094' EC00' F000'        	movff	0+?_atoi,(c:4030)	;volatile
 14821  0098' C01E' FFBE         	movff	1+?_atoi,(c:4030+1)	;volatile
 14822  009C' C01F' FFBF         	line	28
 14823                           	
 14824                           l5741:
 14825  00A0'                    ;main.c: 28:     T3CONbits.TMR3ON = 1;
 14826                           	bsf	((c:4017)),c,0	;volatile
 14827  00A0' 80B1               	line	29
 14828                           ;main.c: 29:     while(PIR1bits.CCP1IF==0);
 14829                           	goto	l58
 14830  00A2' EF00' F000'        	
 14831                           l59:
 14832  00A6'                    	
 14833                           l58:
 14834  00A6'                    	btfss	((c:3998)),c,2	;volatile
 14835  00A6' A49E               	goto	u8261
 14836  00A8' EF00' F000'        	goto	u8260
 14837  00AC' EF00' F000'        u8261:
 14838  00B0'                    	goto	l58
 14839  00B0' EF00' F000'        u8260:
 14840  00B4'                    	
 14841                           l60:
 14842  00B4'                    	line	30
 14843                           ;main.c: 30:     if( RC2 == 1) PrintBuffer("True");
 14844                           	btfss	c:(31762/8),(31762)&7	;volatile
 14845  00B4' A482               	goto	u8271
 14846  00B6' EF00' F000'        	goto	u8270
 14847  00BA' EF00' F000'        u8271:
 14848  00BE'                    	goto	l5745
 14849  00BE' EF00' F000'        u8270:
 14850  00C2'                    	
 14851                           l5743:
 14852  00C2'                    		movlw	low(STR_4)
 14853  00C2' 0E00'              	movwf	((c:?_PrintBuffer)),c
 14854  00C4' 6E00'              	movlw	high(STR_4)
 14855  00C6' 0E00'              	movwf	((c:?_PrintBuffer+1)),c
 14856  00C8' 6E01'              
 14857                           	call	_PrintBuffer	;wreg free
 14858  00CA' EC00' F000'        	goto	l5747
 14859  00CE' EF00' F000'        	line	31
 14860                           ;main.c: 31:     else PrintBuffer("False");
 14861                           	
 14862                           l61:
 14863  00D2'                    	
 14864                           l5745:
 14865  00D2'                    		movlw	low(STR_5)
 14866  00D2' 0E00'              	movwf	((c:?_PrintBuffer)),c
 14867  00D4' 6E00'              	movlw	high(STR_5)
 14868  00D6' 0E00'              	movwf	((c:?_PrintBuffer+1)),c
 14869  00D8' 6E01'              
 14870                           	call	_PrintBuffer	;wreg free
 14871  00DA' EC00' F000'        	goto	l5747
 14872  00DE' EF00' F000'        	
 14873                           l62:
 14874  00E2'                    	line	32
 14875                           	
 14876                           l5747:
 14877  00E2'                    ;main.c: 32:     PIR1bits.CCP1IF=0;
 14878                           	bcf	((c:3998)),c,2	;volatile
 14879  00E2' 949E               	line	33
 14880                           	
 14881                           l5749:
 14882  00E4'                    ;main.c: 33:     TMR3 = 0;
 14883                           	movlw	high(0)
 14884  00E4' 0E00               	movwf	((c:4018+1)),c	;volatile
 14885  00E6' 6EB3               	movlw	low(0)
 14886  00E8' 0E00               	movwf	((c:4018)),c	;volatile
 14887  00EA' 6EB2               	line	34
 14888                           	
 14889                           l63:
 14890  00EC'                    	return	;funcret
 14891  00EC' 0012               	opt stack 0
 14892                           GLOBAL	__end_of_Mode2
 14893                           	__end_of_Mode2:
 14894  00EE'                    	signat	_Mode2,89
 14895                           	global	_strtok
 14896                           
 14897 ;; *************** function _strtok *****************
 14898 ;; Defined at:
 14899 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strtok.c"
 14900 ;; Parameters:    Size  Location     Type
 14901 ;;  s               2   26[COMRAM] PTR unsigned char 
 14902 ;;		 -> mystring(10), NULL(0), 
 14903 ;;  sep             2   28[COMRAM] PTR const unsigned char 
 14904 ;;		 -> STR_3(2), STR_2(2), 
 14905 ;; Auto vars:     Size  Location     Type
 14906 ;;		None
 14907 ;; Return value:  Size  Location     Type
 14908 ;;                  2   26[COMRAM] PTR unsigned char 
 14909 ;; Registers used:
 14910 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14911 ;; Tracked objects:
 14912 ;;		On entry : 0/0
 14913 ;;		On exit  : 0/0
 14914 ;;		Unchanged: 0/0
 14915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14916 ;;      Params:         4       0       0       0       0       0       0
 14917 ;;      Locals:         0       0       0       0       0       0       0
 14918 ;;      Temps:          0       0       0       0       0       0       0
 14919 ;;      Totals:         4       0       0       0       0       0       0
 14920 ;;Total ram usage:        4 bytes
 14921 ;; Hardware stack levels used:    1
 14922 ;; Hardware stack levels required when called:    6
 14923 ;; This function calls:
 14924 ;;		_strcspn
 14925 ;;		_strspn
 14926 ;; This function is called by:
 14927 ;;		_Mode2
 14928 ;; This function uses a non-reentrant model
 14929 ;;
 14930                           psect	text37,class=CODE,space=0,reloc=2,group=2
 14931                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strtok.c"
 14932                           	line	3
 14933                           global __ptext37
 14934                           __ptext37:
 14935  0000'                    psect	text37
 14936                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strtok.c"
 14937                           	line	3
 14938                           	global	__size_of_strtok
 14939                           	__size_of_strtok	equ	__end_of_strtok-_strtok
 14940  0000                     	
 14941                           _strtok:
 14942  0000'                    ;incstack = 0
 14943                           	opt	stack 23
 14944                           	line	6
 14945                           	
 14946                           l4165:
 14947  0000'                    	movf	((c:strtok@s)),c,w
 14948  0000' 501A'              iorwf	((c:strtok@s+1)),c,w
 14949  0002' 101B'              	btfss	status,2
 14950  0004' A4D8               	goto	u5391
 14951  0006' EF00' F000'        	goto	u5390
 14952  000A' EF00' F000'        
 14953                           u5391:
 14954  000E'                    	goto	l4173
 14955  000E' EF00' F000'        u5390:
 14956  0012'                    	
 14957                           l4167:
 14958  0012'                    		movff	(c:strtok@p),(c:strtok@s)
 14959  0012' C008' F01A'        	movff	(c:strtok@p+1),(c:strtok@s+1)
 14960  0016' C009' F01B'        
 14961                           	movf	((c:strtok@s)),c,w
 14962  001A' 501A'              iorwf	((c:strtok@s+1)),c,w
 14963  001C' 101B'              	btfss	status,2
 14964  001E' A4D8               	goto	u5401
 14965  0020' EF00' F000'        	goto	u5400
 14966  0024' EF00' F000'        
 14967                           u5401:
 14968  0028'                    	goto	l4173
 14969  0028' EF00' F000'        u5400:
 14970  002C'                    	
 14971                           l4169:
 14972  002C'                    		movlw	low(0)
 14973  002C' 0E00               	movwf	((c:?_strtok)),c
 14974  002E' 6E1A'              	movlw	high(0)
 14975  0030' 0E00               	movwf	((c:?_strtok+1)),c
 14976  0032' 6E1B'              
 14977                           	goto	l1209
 14978  0034' EF00' F000'        	
 14979                           l4171:
 14980  0038'                    	goto	l1209
 14981  0038' EF00' F000'        	
 14982                           l1208:
 14983  003C'                    	line	7
 14984                           	
 14985                           l4173:
 14986  003C'                    		movff	(c:strtok@s),(c:strspn@s)
 14987  003C' C01A' F013'        	movff	(c:strtok@s+1),(c:strspn@s+1)
 14988  0040' C01B' F014'        
 14989                           		movff	(c:strtok@sep),(c:strspn@c)
 14990  0044' C01C' F015'        	movff	(c:strtok@sep+1),(c:strspn@c+1)
 14991  0048' C01D' F016'        
 14992                           	call	_strspn	;wreg free
 14993  004C' EC00' F000'        	movf	(0+?_strspn),c,w
 14994  0050' 5013'              	addwf	((c:strtok@s)),c
 14995  0052' 261A'              	movf	(1+?_strspn),c,w
 14996  0054' 5014'              	addwfc	((c:strtok@s+1)),c
 14997  0056' 221B'              
 14998                           	line	8
 14999                           	
 15000                           l4175:
 15001  0058'                    	movff	(c:strtok@s),fsr2l
 15002  0058' C01A' FFD9         	movff	(c:strtok@s+1),fsr2h
 15003  005C' C01B' FFDA         	movf	indf2,w
 15004  0060' 50DF               	btfss	status,2
 15005  0062' A4D8               	goto	u5411
 15006  0064' EF00' F000'        	goto	u5410
 15007  0068' EF00' F000'        u5411:
 15008  006C'                    	goto	l4181
 15009  006C' EF00' F000'        u5410:
 15010  0070'                    	
 15011                           l4177:
 15012  0070'                    		movlw	low(0)
 15013  0070' 0E00               	movwf	((c:strtok@p)),c
 15014  0072' 6E08'              	movlw	high(0)
 15015  0074' 0E00               	movwf	((c:strtok@p+1)),c
 15016  0076' 6E09'              
 15017                           		movff	(c:strtok@p),(c:?_strtok)
 15018  0078' C008' F01A'        	movff	(c:strtok@p+1),(c:?_strtok+1)
 15019  007C' C009' F01B'        
 15020                           	goto	l1209
 15021  0080' EF00' F000'        	
 15022                           l4179:
 15023  0084'                    	goto	l1209
 15024  0084' EF00' F000'        	
 15025                           l1210:
 15026  0088'                    	line	9
 15027                           	
 15028                           l4181:
 15029  0088'                    		movff	(c:strtok@s),(c:strcspn@s)
 15030  0088' C01A' F013'        	movff	(c:strtok@s+1),(c:strcspn@s+1)
 15031  008C' C01B' F014'        
 15032                           		movff	(c:strtok@sep),(c:strcspn@c)
 15033  0090' C01C' F015'        	movff	(c:strtok@sep+1),(c:strcspn@c+1)
 15034  0094' C01D' F016'        
 15035                           	call	_strcspn	;wreg free
 15036  0098' EC00' F000'        	movf	(0+?_strcspn),c,w
 15037  009C' 5013'              	addwf	((c:strtok@s)),c,w
 15038  009E' 241A'              	movwf	((c:strtok@p)),c
 15039  00A0' 6E08'              	movf	(1+?_strcspn),c,w
 15040  00A2' 5014'              	addwfc	((c:strtok@s+1)),c,w
 15041  00A4' 201B'              	movwf	1+((c:strtok@p)),c
 15042  00A6' 6E09'              	line	10
 15043                           	
 15044                           l4183:
 15045  00A8'                    	movff	(c:strtok@p),fsr2l
 15046  00A8' C008' FFD9         	movff	(c:strtok@p+1),fsr2h
 15047  00AC' C009' FFDA         	movf	indf2,w
 15048  00B0' 50DF               	btfsc	status,2
 15049  00B2' B4D8               	goto	u5421
 15050  00B4' EF00' F000'        	goto	u5420
 15051  00B8' EF00' F000'        u5421:
 15052  00BC'                    	goto	l4189
 15053  00BC' EF00' F000'        u5420:
 15054  00C0'                    	
 15055                           l4185:
 15056  00C0'                    	movff	(c:strtok@p),fsr2l
 15057  00C0' C008' FFD9         	movff	(c:strtok@p+1),fsr2h
 15058  00C4' C009' FFDA         	movlw	low(0)
 15059  00C8' 0E00               	movwf	indf2
 15060  00CA' 6EDF               	
 15061                           l4187:
 15062  00CC'                    	infsnz	((c:strtok@p)),c
 15063  00CC' 4A08'              	incf	((c:strtok@p+1)),c
 15064  00CE' 2A09'              	goto	l1212
 15065  00D0' EF00' F000'        	line	11
 15066                           	
 15067                           l1211:
 15068  00D4'                    	
 15069                           l4189:
 15070  00D4'                    		movlw	low(0)
 15071  00D4' 0E00               	movwf	((c:strtok@p)),c
 15072  00D6' 6E08'              	movlw	high(0)
 15073  00D8' 0E00               	movwf	((c:strtok@p+1)),c
 15074  00DA' 6E09'              
 15075                           	
 15076                           l1212:
 15077  00DC'                    	line	12
 15078                           		movff	(c:strtok@s),(c:?_strtok)
 15079  00DC' C01A' F01A'        	movff	(c:strtok@s+1),(c:?_strtok+1)
 15080  00E0' C01B' F01B'        
 15081                           	goto	l1209
 15082  00E4' EF00' F000'        	
 15083                           l4191:
 15084  00E8'                    	line	13
 15085                           	
 15086                           l1209:
 15087  00E8'                    	return	;funcret
 15088  00E8' 0012               	opt stack 0
 15089                           GLOBAL	__end_of_strtok
 15090                           	__end_of_strtok:
 15091  00EA'                    	signat	_strtok,8314
 15092                           	global	_strspn
 15093                           
 15094 ;; *************** function _strspn *****************
 15095 ;; Defined at:
 15096 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strspn.c"
 15097 ;; Parameters:    Size  Location     Type
 15098 ;;  s               2   19[COMRAM] PTR const unsigned char 
 15099 ;;		 -> mystring(10), NULL(0), 
 15100 ;;  c               2   21[COMRAM] PTR const unsigned char 
 15101 ;;		 -> STR_3(2), STR_2(2), 
 15102 ;; Auto vars:     Size  Location     Type
 15103 ;;  i               2   24[COMRAM] unsigned int 
 15104 ;; Return value:  Size  Location     Type
 15105 ;;                  2   19[COMRAM] unsigned int 
 15106 ;; Registers used:
 15107 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15108 ;; Tracked objects:
 15109 ;;		On entry : 0/0
 15110 ;;		On exit  : 0/0
 15111 ;;		Unchanged: 0/0
 15112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15113 ;;      Params:         4       0       0       0       0       0       0
 15114 ;;      Locals:         2       0       0       0       0       0       0
 15115 ;;      Temps:          1       0       0       0       0       0       0
 15116 ;;      Totals:         7       0       0       0       0       0       0
 15117 ;;Total ram usage:        7 bytes
 15118 ;; Hardware stack levels used:    1
 15119 ;; Hardware stack levels required when called:    5
 15120 ;; This function calls:
 15121 ;;		_strchr
 15122 ;; This function is called by:
 15123 ;;		_strtok
 15124 ;; This function uses a non-reentrant model
 15125 ;;
 15126                           psect	text38,class=CODE,space=0,reloc=2,group=2
 15127                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strspn.c"
 15128                           	line	8
 15129                           global __ptext38
 15130                           __ptext38:
 15131  0000'                    psect	text38
 15132                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strspn.c"
 15133                           	line	8
 15134                           	global	__size_of_strspn
 15135                           	__size_of_strspn	equ	__end_of_strspn-_strspn
 15136  0000                     	
 15137                           _strspn:
 15138  0000'                    ;incstack = 0
 15139                           	opt	stack 23
 15140                           	line	13
 15141                           	
 15142                           l4133:
 15143  0000'                    	movlw	high(0)
 15144  0000' 0E00               	movwf	((c:strspn@i+1)),c
 15145  0002' 6E19'              	movlw	low(0)
 15146  0004' 0E00               	movwf	((c:strspn@i)),c
 15147  0006' 6E18'              	line	14
 15148                           	goto	l4137
 15149  0008' EF00' F000'        	
 15150                           l1247:
 15151  000C'                    	line	15
 15152                           	
 15153                           l4135:
 15154  000C'                    	infsnz	((c:strspn@s)),c
 15155  000C' 4A13'              	incf	((c:strspn@s+1)),c
 15156  000E' 2A14'              	line	16
 15157                           	infsnz	((c:strspn@i)),c
 15158  0010' 4A18'              	incf	((c:strspn@i+1)),c
 15159  0012' 2A19'              	goto	l4137
 15160  0014' EF00' F000'        	line	17
 15161                           	
 15162                           l1246:
 15163  0018'                    	line	14
 15164                           	
 15165                           l4137:
 15166  0018'                    	movff	(c:strspn@s),fsr2l
 15167  0018' C013' FFD9         	movff	(c:strspn@s+1),fsr2h
 15168  001C' C014' FFDA         	movf	indf2,w
 15169  0020' 50DF               	btfsc	status,2
 15170  0022' B4D8               	goto	u5331
 15171  0024' EF00' F000'        	goto	u5330
 15172  0028' EF00' F000'        u5331:
 15173  002C'                    	goto	l1250
 15174  002C' EF00' F000'        u5330:
 15175  0030'                    	
 15176                           l4139:
 15177  0030'                    		movff	(c:strspn@c),(c:strchr@s)
 15178  0030' C015' F00D'        	movff	(c:strspn@c+1),(c:strchr@s+1)
 15179  0034' C016' F00E'        
 15180                           	movff	(c:strspn@s),fsr2l
 15181  0038' C013' FFD9         	movff	(c:strspn@s+1),fsr2h
 15182  003C' C014' FFDA         	movf	indf2,w
 15183  0040' 50DF               	movwf	(??_strspn+0+0)&0ffh,c
 15184  0042' 6E00'              	movf	((??_strspn+0+0)),c,w
 15185  0044' 5017'              	movwf	((c:strchr@c)),c
 15186  0046' 6E0F'              	clrf	((c:strchr@c+1)),c
 15187  0048' 6A10'              	call	_strchr	;wreg free
 15188  004A' EC00' F000'        	movf	(0+?_strchr),c,w
 15189  004E' 500D'              iorwf	(1+?_strchr),c,w
 15190  0050' 100E'              	btfss	status,2
 15191  0052' A4D8               	goto	u5341
 15192  0054' EF00' F000'        	goto	u5340
 15193  0058' EF00' F000'        
 15194                           u5341:
 15195  005C'                    	goto	l4135
 15196  005C' EF00' F000'        u5340:
 15197  0060'                    	goto	l1250
 15198  0060' EF00' F000'        	
 15199                           l1249:
 15200  0064'                    	
 15201                           l1250:
 15202  0064'                    	line	18
 15203                           	movff	(c:strspn@i),(c:?_strspn)
 15204  0064' C018' F013'        	movff	(c:strspn@i+1),(c:?_strspn+1)
 15205  0068' C019' F014'        	line	33
 15206                           	
 15207                           l1251:
 15208  006C'                    	return	;funcret
 15209  006C' 0012               	opt stack 0
 15210                           GLOBAL	__end_of_strspn
 15211                           	__end_of_strspn:
 15212  006E'                    	signat	_strspn,8314
 15213                           	global	_strcspn
 15214                           
 15215 ;; *************** function _strcspn *****************
 15216 ;; Defined at:
 15217 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcspn.c"
 15218 ;; Parameters:    Size  Location     Type
 15219 ;;  s               2   19[COMRAM] PTR const unsigned char 
 15220 ;;		 -> mystring(10), NULL(0), 
 15221 ;;  c               2   21[COMRAM] PTR const unsigned char 
 15222 ;;		 -> STR_3(2), STR_2(2), 
 15223 ;; Auto vars:     Size  Location     Type
 15224 ;;  i               2   24[COMRAM] unsigned int 
 15225 ;; Return value:  Size  Location     Type
 15226 ;;                  2   19[COMRAM] unsigned int 
 15227 ;; Registers used:
 15228 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15229 ;; Tracked objects:
 15230 ;;		On entry : 0/0
 15231 ;;		On exit  : 0/0
 15232 ;;		Unchanged: 0/0
 15233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15234 ;;      Params:         4       0       0       0       0       0       0
 15235 ;;      Locals:         2       0       0       0       0       0       0
 15236 ;;      Temps:          1       0       0       0       0       0       0
 15237 ;;      Totals:         7       0       0       0       0       0       0
 15238 ;;Total ram usage:        7 bytes
 15239 ;; Hardware stack levels used:    1
 15240 ;; Hardware stack levels required when called:    5
 15241 ;; This function calls:
 15242 ;;		_strchr
 15243 ;; This function is called by:
 15244 ;;		_strtok
 15245 ;; This function uses a non-reentrant model
 15246 ;;
 15247                           psect	text39,class=CODE,space=0,reloc=2,group=2
 15248                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcspn.c"
 15249                           	line	10
 15250                           global __ptext39
 15251                           __ptext39:
 15252  0000'                    psect	text39
 15253                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcspn.c"
 15254                           	line	10
 15255                           	global	__size_of_strcspn
 15256                           	__size_of_strcspn	equ	__end_of_strcspn-_strcspn
 15257  0000                     	
 15258                           _strcspn:
 15259  0000'                    ;incstack = 0
 15260                           	opt	stack 23
 15261                           	line	15
 15262                           	
 15263                           l4141:
 15264  0000'                    	movlw	high(0)
 15265  0000' 0E00               	movwf	((c:strcspn@i+1)),c
 15266  0002' 6E19'              	movlw	low(0)
 15267  0004' 0E00               	movwf	((c:strcspn@i)),c
 15268  0006' 6E18'              	line	16
 15269                           	goto	l4145
 15270  0008' EF00' F000'        	
 15271                           l1237:
 15272  000C'                    	line	17
 15273                           	
 15274                           l4143:
 15275  000C'                    	infsnz	((c:strcspn@s)),c
 15276  000C' 4A13'              	incf	((c:strcspn@s+1)),c
 15277  000E' 2A14'              	line	18
 15278                           	infsnz	((c:strcspn@i)),c
 15279  0010' 4A18'              	incf	((c:strcspn@i+1)),c
 15280  0012' 2A19'              	goto	l4145
 15281  0014' EF00' F000'        	line	19
 15282                           	
 15283                           l1236:
 15284  0018'                    	line	16
 15285                           	
 15286                           l4145:
 15287  0018'                    	movff	(c:strcspn@s),fsr2l
 15288  0018' C013' FFD9         	movff	(c:strcspn@s+1),fsr2h
 15289  001C' C014' FFDA         	movf	indf2,w
 15290  0020' 50DF               	btfsc	status,2
 15291  0022' B4D8               	goto	u5351
 15292  0024' EF00' F000'        	goto	u5350
 15293  0028' EF00' F000'        u5351:
 15294  002C'                    	goto	l1240
 15295  002C' EF00' F000'        u5350:
 15296  0030'                    	
 15297                           l4147:
 15298  0030'                    		movff	(c:strcspn@c),(c:strchr@s)
 15299  0030' C015' F00D'        	movff	(c:strcspn@c+1),(c:strchr@s+1)
 15300  0034' C016' F00E'        
 15301                           	movff	(c:strcspn@s),fsr2l
 15302  0038' C013' FFD9         	movff	(c:strcspn@s+1),fsr2h
 15303  003C' C014' FFDA         	movf	indf2,w
 15304  0040' 50DF               	movwf	(??_strcspn+0+0)&0ffh,c
 15305  0042' 6E00'              	movf	((??_strcspn+0+0)),c,w
 15306  0044' 5017'              	movwf	((c:strchr@c)),c
 15307  0046' 6E0F'              	clrf	((c:strchr@c+1)),c
 15308  0048' 6A10'              	call	_strchr	;wreg free
 15309  004A' EC00' F000'        	movf	(0+?_strchr),c,w
 15310  004E' 500D'              iorwf	(1+?_strchr),c,w
 15311  0050' 100E'              	btfsc	status,2
 15312  0052' B4D8               	goto	u5361
 15313  0054' EF00' F000'        	goto	u5360
 15314  0058' EF00' F000'        
 15315                           u5361:
 15316  005C'                    	goto	l4143
 15317  005C' EF00' F000'        u5360:
 15318  0060'                    	goto	l1240
 15319  0060' EF00' F000'        	
 15320                           l1239:
 15321  0064'                    	
 15322                           l1240:
 15323  0064'                    	line	20
 15324                           	movff	(c:strcspn@i),(c:?_strcspn)
 15325  0064' C018' F013'        	movff	(c:strcspn@i+1),(c:?_strcspn+1)
 15326  0068' C019' F014'        	line	32
 15327                           	
 15328                           l1241:
 15329  006C'                    	return	;funcret
 15330  006C' 0012               	opt stack 0
 15331                           GLOBAL	__end_of_strcspn
 15332                           	__end_of_strcspn:
 15333  006E'                    	signat	_strcspn,8314
 15334                           	global	_strchr
 15335                           
 15336 ;; *************** function _strchr *****************
 15337 ;; Defined at:
 15338 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
 15339 ;; Parameters:    Size  Location     Type
 15340 ;;  s               2   13[COMRAM] PTR const unsigned char 
 15341 ;;		 -> mystring(10), NULL(0), STR_3(2), STR_2(2), 
 15342 ;;  c               2   15[COMRAM] int 
 15343 ;; Auto vars:     Size  Location     Type
 15344 ;;		None
 15345 ;; Return value:  Size  Location     Type
 15346 ;;                  2   13[COMRAM] PTR unsigned char 
 15347 ;; Registers used:
 15348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 15349 ;; Tracked objects:
 15350 ;;		On entry : 0/0
 15351 ;;		On exit  : 0/0
 15352 ;;		Unchanged: 0/0
 15353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15354 ;;      Params:         4       0       0       0       0       0       0
 15355 ;;      Locals:         0       0       0       0       0       0       0
 15356 ;;      Temps:          2       0       0       0       0       0       0
 15357 ;;      Totals:         6       0       0       0       0       0       0
 15358 ;;Total ram usage:        6 bytes
 15359 ;; Hardware stack levels used:    1
 15360 ;; Hardware stack levels required when called:    4
 15361 ;; This function calls:
 15362 ;;		Nothing
 15363 ;; This function is called by:
 15364 ;;		_strstr
 15365 ;;		_strcspn
 15366 ;;		_strspn
 15367 ;; This function uses a non-reentrant model
 15368 ;;
 15369                           psect	text40,class=CODE,space=0,reloc=2,group=2
 15370                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
 15371                           	line	7
 15372                           global __ptext40
 15373                           __ptext40:
 15374  0000'                    psect	text40
 15375                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
 15376                           	line	7
 15377                           	global	__size_of_strchr
 15378                           	__size_of_strchr	equ	__end_of_strchr-_strchr
 15379  0000                     	
 15380                           _strchr:
 15381  0000'                    ;incstack = 0
 15382                           	opt	stack 25
 15383                           	line	13
 15384                           	
 15385                           l1228:
 15386  0000'                    	line	14
 15387                           	
 15388                           l4109:
 15389  0000'                    	movff	(c:strchr@s),tblptrl
 15390  0000' C00D' FFF6         	movff	(c:strchr@s+1),tblptrh
 15391  0004' C00E' FFF7         	clrf	tblptru
 15392  0008' 6AF8               	
 15393                           	movlw	high __ramtop-1
 15394  000A' 0EFF'              	cpfsgt	tblptrh
 15395  000C' 64F7               	bra	u5277
 15396  000E' D003               	tblrd	*
 15397  0010' 0008               	
 15398                           	movf	tablat,w
 15399  0012' 50F5               	bra	u5270
 15400  0014' D005               u5277:
 15401  0016'                    	movff	tblptrl,fsr0l
 15402  0016' CFF6 FFE9          	movff	tblptrh,fsr0h
 15403  001A' CFF7 FFEA          	movf	indf0,w
 15404  001E' 50EF               u5270:
 15405  0020'                    	xorwf	((c:strchr@c)),c,w
 15406  0020' 180F'              	btfss	status,2
 15407  0022' A4D8               	goto	u5281
 15408  0024' EF00' F000'        	goto	u5280
 15409  0028' EF00' F000'        u5281:
 15410  002C'                    	goto	l4115
 15411  002C' EF00' F000'        u5280:
 15412  0030'                    	line	15
 15413                           	
 15414                           l4111:
 15415  0030'                    		movff	(c:strchr@s),(c:?_strchr)
 15416  0030' C00D' F00D'        	movff	(c:strchr@s+1),(c:?_strchr+1)
 15417  0034' C00E' F00E'        
 15418                           	goto	l1230
 15419  0038' EF00' F000'        	
 15420                           l4113:
 15421  003C'                    	goto	l1230
 15422  003C' EF00' F000'        	line	16
 15423                           	
 15424                           l1229:
 15425  0040'                    	line	17
 15426                           	
 15427                           l4115:
 15428  0040'                    	movf	((c:strchr@s)),c,w
 15429  0040' 500D'              	movwf	(??_strchr+0+0)&0ffh,c
 15430  0042' 6E00'              	movf	((c:strchr@s+1)),c,w
 15431  0044' 500E'              	movwf	1+(??_strchr+0+0)&0ffh,c
 15432  0046' 6E00'              	infsnz	((c:strchr@s)),c
 15433  0048' 4A0D'              	incf	((c:strchr@s+1)),c
 15434  004A' 2A0E'              	movff	??_strchr+0+0,tblptrl
 15435  004C' C011' FFF6         	movff	??_strchr+0+1,tblptrh
 15436  0050' C012' FFF7         	clrf	tblptru
 15437  0054' 6AF8               	
 15438                           	movlw	high __ramtop-1
 15439  0056' 0EFF'              	cpfsgt	tblptrh
 15440  0058' 64F7               	bra	u5297
 15441  005A' D003               	tblrd	*
 15442  005C' 0008               	
 15443                           	movf	tablat,w
 15444  005E' 50F5               	bra	u5290
 15445  0060' D005               u5297:
 15446  0062'                    	movff	tblptrl,fsr0l
 15447  0062' CFF6 FFE9          	movff	tblptrh,fsr0h
 15448  0066' CFF7 FFEA          	movf	indf0,w
 15449  006A' 50EF               u5290:
 15450  006C'                    	iorlw	0
 15451  006C' 0900               	btfss	status,2
 15452  006E' A4D8               	goto	u5301
 15453  0070' EF00' F000'        	goto	u5300
 15454  0074' EF00' F000'        u5301:
 15455  0078'                    	goto	l1228
 15456  0078' EF00' F000'        u5300:
 15457  007C'                    	goto	l4117
 15458  007C' EF00' F000'        	
 15459                           l1231:
 15460  0080'                    	line	18
 15461                           	
 15462                           l4117:
 15463  0080'                    		movlw	low(0)
 15464  0080' 0E00               	movwf	((c:?_strchr)),c
 15465  0082' 6E0D'              	movlw	high(0)
 15466  0084' 0E00               	movwf	((c:?_strchr+1)),c
 15467  0086' 6E0E'              
 15468                           	goto	l1230
 15469  0088' EF00' F000'        	
 15470                           l4119:
 15471  008C'                    	line	20
 15472                           	
 15473                           l1230:
 15474  008C'                    	return	;funcret
 15475  008C' 0012               	opt stack 0
 15476                           GLOBAL	__end_of_strchr
 15477                           	__end_of_strchr:
 15478  008E'                    	signat	_strchr,8314
 15479                           	global	_atoi
 15480                           
 15481 ;; *************** function _atoi *****************
 15482 ;; Defined at:
 15483 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 15484 ;; Parameters:    Size  Location     Type
 15485 ;;  s               2   30[COMRAM] PTR const unsigned char 
 15486 ;;		 -> mystring(10), NULL(0), STR_8(5), 
 15487 ;; Auto vars:     Size  Location     Type
 15488 ;;  n               2   43[COMRAM] int 
 15489 ;;  neg             2   36[COMRAM] int 
 15490 ;; Return value:  Size  Location     Type
 15491 ;;                  2   30[COMRAM] int 
 15492 ;; Registers used:
 15493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15494 ;; Tracked objects:
 15495 ;;		On entry : 0/0
 15496 ;;		On exit  : 0/0
 15497 ;;		Unchanged: 0/0
 15498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15499 ;;      Params:         2       0       0       0       0       0       0
 15500 ;;      Locals:         9       0       0       0       0       0       0
 15501 ;;      Temps:          4       0       0       0       0       0       0
 15502 ;;      Totals:        15       0       0       0       0       0       0
 15503 ;;Total ram usage:       15 bytes
 15504 ;; Hardware stack levels used:    1
 15505 ;; Hardware stack levels required when called:    5
 15506 ;; This function calls:
 15507 ;;		___wmul
 15508 ;;		_isdigit
 15509 ;;		_isspace
 15510 ;; This function is called by:
 15511 ;;		_Mode2
 15512 ;;		_vfpfcnvrt
 15513 ;; This function uses a non-reentrant model
 15514 ;;
 15515                           psect	text41,class=CODE,space=0,reloc=2,group=2
 15516                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 15517                           	line	4
 15518                           global __ptext41
 15519                           __ptext41:
 15520  0000'                    psect	text41
 15521                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\atoi.c"
 15522                           	line	4
 15523                           	global	__size_of_atoi
 15524                           	__size_of_atoi	equ	__end_of_atoi-_atoi
 15525  0000                     	
 15526                           _atoi:
 15527  0000'                    ;incstack = 0
 15528                           	opt	stack 21
 15529                           	line	6
 15530                           	
 15531                           l5231:
 15532  0000'                    	movlw	high(0)
 15533  0000' 0E00               	movwf	((c:atoi@n+1)),c
 15534  0002' 6E2C'              	movlw	low(0)
 15535  0004' 0E00               	movwf	((c:atoi@n)),c
 15536  0006' 6E2B'              	movlw	high(0)
 15537  0008' 0E00               	movwf	((c:atoi@neg+1)),c
 15538  000A' 6E25'              	movlw	low(0)
 15539  000C' 0E00               	movwf	((c:atoi@neg)),c
 15540  000E' 6E24'              	line	7
 15541                           	goto	l5235
 15542  0010' EF00' F000'        	
 15543                           l1069:
 15544  0014'                    	
 15545                           l5233:
 15546  0014'                    	infsnz	((c:atoi@s)),c
 15547  0014' 4A1E'              	incf	((c:atoi@s+1)),c
 15548  0016' 2A1F'              	goto	l5235
 15549  0018' EF00' F000'        	
 15550                           l1068:
 15551  001C'                    	
 15552                           l5235:
 15553  001C'                    	movlw	low(01h)
 15554  001C' 0E01               	movwf	((c:_atoi$1466)),c
 15555  001E' 6E2A'              	
 15556                           l5237:
 15557  0020'                    	movff	(c:atoi@s),tblptrl
 15558  0020' C01E' FFF6         	movff	(c:atoi@s+1),tblptrh
 15559  0024' C01F' FFF7         	clrf	tblptru
 15560  0028' 6AF8               	
 15561                           	movlw	high __ramtop-1
 15562  002A' 0EFF'              	cpfsgt	tblptrh
 15563  002C' 64F7               	bra	u7317
 15564  002E' D003               	tblrd	*
 15565  0030' 0008               	
 15566                           	movf	tablat,w
 15567  0032' 50F5               	bra	u7310
 15568  0034' D005               u7317:
 15569  0036'                    	movff	tblptrl,fsr0l
 15570  0036' CFF6 FFE9          	movff	tblptrh,fsr0h
 15571  003A' CFF7 FFEA          	movf	indf0,w
 15572  003E' 50EF               u7310:
 15573  0040'                    	xorlw	020h
 15574  0040' 0A20               	btfsc	status,2
 15575  0042' B4D8               	goto	u7321
 15576  0044' EF00' F000'        	goto	u7320
 15577  0048' EF00' F000'        u7321:
 15578  004C'                    	goto	l5243
 15579  004C' EF00' F000'        u7320:
 15580  0050'                    	
 15581                           l5239:
 15582  0050'                    	movlw	low(0FFF7h)
 15583  0050' 0EF7               	movwf	(??_atoi+0+0)&0ffh,c
 15584  0052' 6E00'              	movlw	high(0FFF7h)
 15585  0054' 0EFF               	movwf	1+(??_atoi+0+0)&0ffh,c
 15586  0056' 6E00'              	movff	(c:atoi@s),tblptrl
 15587  0058' C01E' FFF6         	movff	(c:atoi@s+1),tblptrh
 15588  005C' C01F' FFF7         	clrf	tblptru
 15589  0060' 6AF8               	
 15590                           	movlw	high __ramtop-1
 15591  0062' 0EFF'              	cpfsgt	tblptrh
 15592  0064' 64F7               	bra	u7337
 15593  0066' D003               	tblrd	*
 15594  0068' 0008               	
 15595                           	movf	tablat,w
 15596  006A' 50F5               	bra	u7330
 15597  006C' D005               u7337:
 15598  006E'                    	movff	tblptrl,fsr0l
 15599  006E' CFF6 FFE9          	movff	tblptrh,fsr0h
 15600  0072' CFF7 FFEA          	movf	indf0,w
 15601  0076' 50EF               u7330:
 15602  0078'                    	movwf	(??_atoi+2+0)&0ffh,c
 15603  0078' 6E00'              	clrf	(??_atoi+2+0+1)&0ffh,c
 15604  007A' 6A00'              
 15605                           	movf	(??_atoi+0+0),c,w
 15606  007C' 5020'              	addwf	(??_atoi+2+0),c
 15607  007E' 2622'              	movf	(??_atoi+0+1),c,w
 15608  0080' 5021'              	addwfc	(??_atoi+2+1),c
 15609  0082' 2223'              		movf	(??_atoi+2+1),c,w
 15610  0084' 5023'              	bnz	u7340
 15611  0086' E109               	movlw	5
 15612  0088' 0E05               	subwf	 (??_atoi+2+0),c,w
 15613  008A' 5C22'              	btfss	status,0
 15614  008C' A0D8               	goto	u7341
 15615  008E' EF00' F000'        	goto	u7340
 15616  0092' EF00' F000'        
 15617                           u7341:
 15618  0096'                    	goto	l5243
 15619  0096' EF00' F000'        u7340:
 15620  009A'                    	
 15621                           l5241:
 15622  009A'                    	movlw	low(0)
 15623  009A' 0E00               	movwf	((c:_atoi$1466)),c
 15624  009C' 6E2A'              	goto	l5243
 15625  009E' EF00' F000'        	
 15626                           l1075:
 15627  00A2'                    	
 15628                           l5243:
 15629  00A2'                    	movff	(c:_atoi$1466),(c:_atoi$1465)
 15630  00A2' C02A' F026'        	clrf	((c:_atoi$1465+1)),c
 15631  00A6' 6A27'              	goto	l5247
 15632  00A8' EF00' F000'        	
 15633                           l1071:
 15634  00AC'                    	
 15635                           l5245:
 15636  00AC'                    	movff	(c:atoi@s),tblptrl
 15637  00AC' C01E' FFF6         	movff	(c:atoi@s+1),tblptrh
 15638  00B0' C01F' FFF7         	clrf	tblptru
 15639  00B4' 6AF8               	
 15640                           	movlw	high __ramtop-1
 15641  00B6' 0EFF'              	cpfsgt	tblptrh
 15642  00B8' 64F7               	bra	u7357
 15643  00BA' D003               	tblrd	*
 15644  00BC' 0008               	
 15645                           	movf	tablat,w
 15646  00BE' 50F5               	bra	u7350
 15647  00C0' D005               u7357:
 15648  00C2'                    	movff	tblptrl,fsr0l
 15649  00C2' CFF6 FFE9          	movff	tblptrh,fsr0h
 15650  00C6' CFF7 FFEA          	movf	indf0,w
 15651  00CA' 50EF               u7350:
 15652  00CC'                    	movwf	(??_atoi+0+0)&0ffh,c
 15653  00CC' 6E00'              	movf	((??_atoi+0+0)),c,w
 15654  00CE' 5020'              	movwf	((c:isspace@c)),c
 15655  00D0' 6E0D'              	clrf	((c:isspace@c+1)),c
 15656  00D2' 6A0E'              	call	_isspace	;wreg free
 15657  00D4' EC00' F000'        	movff	0+?_isspace,(c:_atoi$1465)
 15658  00D8' C00D' F026'        	movff	1+?_isspace,(c:_atoi$1465+1)
 15659  00DC' C00E' F027'        	goto	l5247
 15660  00E0' EF00' F000'        	
 15661                           l1073:
 15662  00E4'                    	
 15663                           l5247:
 15664  00E4'                    	movf	((c:_atoi$1465)),c,w
 15665  00E4' 5026'              iorwf	((c:_atoi$1465+1)),c,w
 15666  00E6' 1027'              	btfss	status,2
 15667  00E8' A4D8               	goto	u7361
 15668  00EA' EF00' F000'        	goto	u7360
 15669  00EE' EF00' F000'        
 15670                           u7361:
 15671  00F2'                    	goto	l5233
 15672  00F2' EF00' F000'        u7360:
 15673  00F6'                    	goto	l5253
 15674  00F6' EF00' F000'        	
 15675                           l1076:
 15676  00FA'                    	line	8
 15677                           	goto	l5253
 15678  00FA' EF00' F000'        	line	9
 15679                           	
 15680                           l1078:
 15681  00FE'                    	
 15682                           l5249:
 15683  00FE'                    	movlw	high(01h)
 15684  00FE' 0E00               	movwf	((c:atoi@neg+1)),c
 15685  0100' 6E25'              	movlw	low(01h)
 15686  0102' 0E01               	movwf	((c:atoi@neg)),c
 15687  0104' 6E24'              	goto	l5251
 15688  0106' EF00' F000'        	line	10
 15689                           	
 15690                           l1079:
 15691  010A'                    	
 15692                           l5251:
 15693  010A'                    	infsnz	((c:atoi@s)),c
 15694  010A' 4A1E'              	incf	((c:atoi@s+1)),c
 15695  010C' 2A1F'              	line	11
 15696                           	goto	l5259
 15697  010E' EF00' F000'        	
 15698                           l1077:
 15699  0112'                    	
 15700                           l5253:
 15701  0112'                    	movff	(c:atoi@s),tblptrl
 15702  0112' C01E' FFF6         	movff	(c:atoi@s+1),tblptrh
 15703  0116' C01F' FFF7         	clrf	tblptru
 15704  011A' 6AF8               	
 15705                           	movlw	high __ramtop-1
 15706  011C' 0EFF'              	cpfsgt	tblptrh
 15707  011E' 64F7               	bra	u7377
 15708  0120' D003               	tblrd	*
 15709  0122' 0008               	
 15710                           	movf	tablat,w
 15711  0124' 50F5               	bra	u7370
 15712  0126' D005               u7377:
 15713  0128'                    	movff	tblptrl,fsr0l
 15714  0128' CFF6 FFE9          	movff	tblptrh,fsr0h
 15715  012C' CFF7 FFEA          	movf	indf0,w
 15716  0130' 50EF               u7370:
 15717  0132'                    	movwf	(??_atoi+0+0)&0ffh,c
 15718  0132' 6E00'              	clrf	(??_atoi+0+0+1)&0ffh,c
 15719  0134' 6A00'              
 15720                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 15721                           ; Switch size 1, requested type "space"
 15722                           ; Number of cases is 1, Range of values is 0 to 0
 15723                           ; switch strategies available:
 15724                           ; Name         Instructions Cycles
 15725                           ; simple_byte            4     3 (average)
 15726                           ;	Chosen strategy is simple_byte
 15727                           
 15728                           	movf ??_atoi+0+1,c,w
 15729  0136' 5021'              	xorlw	0^0	; case 0
 15730  0138' 0A00               	skipnz
 15731  013A' B4D8               	goto	l5815
 15732  013C' EF00' F000'        	goto	l5259
 15733  0140' EF00' F000'        	
 15734                           l5815:
 15735  0144'                    ; Switch size 1, requested type "space"
 15736                           ; Number of cases is 2, Range of values is 43 to 45
 15737                           ; switch strategies available:
 15738                           ; Name         Instructions Cycles
 15739                           ; simple_byte            7     4 (average)
 15740                           ;	Chosen strategy is simple_byte
 15741                           
 15742                           	movf ??_atoi+0+0,c,w
 15743  0144' 5020'              	xorlw	43^0	; case 43
 15744  0146' 0A2B               	skipnz
 15745  0148' B4D8               	goto	l5251
 15746  014A' EF00' F000'        	xorlw	45^43	; case 45
 15747  014E' 0A06               	skipnz
 15748  0150' B4D8               	goto	l5249
 15749  0152' EF00' F000'        	goto	l5259
 15750  0156' EF00' F000'        
 15751                           	
 15752                           l1080:
 15753  015A'                    	line	13
 15754                           	goto	l5259
 15755  015A' EF00' F000'        	
 15756                           l1082:
 15757  015E'                    	line	14
 15758                           	
 15759                           l5255:
 15760  015E'                    	movlw	low(0FFD0h)
 15761  015E' 0ED0               	movwf	(??_atoi+0+0)&0ffh,c
 15762  0160' 6E00'              	movlw	high(0FFD0h)
 15763  0162' 0EFF               	movwf	1+(??_atoi+0+0)&0ffh,c
 15764  0164' 6E00'              	movff	(c:atoi@s),tblptrl
 15765  0166' C01E' FFF6         	movff	(c:atoi@s+1),tblptrh
 15766  016A' C01F' FFF7         	clrf	tblptru
 15767  016E' 6AF8               	
 15768                           	movlw	high __ramtop-1
 15769  0170' 0EFF'              	cpfsgt	tblptrh
 15770  0172' 64F7               	bra	u7387
 15771  0174' D003               	tblrd	*
 15772  0176' 0008               	
 15773                           	movf	tablat,w
 15774  0178' 50F5               	bra	u7380
 15775  017A' D005               u7387:
 15776  017C'                    	movff	tblptrl,fsr0l
 15777  017C' CFF6 FFE9          	movff	tblptrh,fsr0h
 15778  0180' CFF7 FFEA          	movf	indf0,w
 15779  0184' 50EF               u7380:
 15780  0186'                    	movwf	(??_atoi+2+0)&0ffh,c
 15781  0186' 6E00'              	clrf	(??_atoi+2+0+1)&0ffh,c
 15782  0188' 6A00'              
 15783                           	movf	(??_atoi+0+0),c,w
 15784  018A' 5020'              	addwf	(??_atoi+2+0),c
 15785  018C' 2622'              	movf	(??_atoi+0+1),c,w
 15786  018E' 5021'              	addwfc	(??_atoi+2+1),c
 15787  0190' 2223'              	comf	(??_atoi+2+0),c
 15788  0192' 1E22'              	comf	(??_atoi+2+1),c
 15789  0194' 1E23'              	infsnz	(??_atoi+2+0),c
 15790  0196' 4A22'              	incf	(??_atoi+2+1),c
 15791  0198' 2A23'              	movff	(c:atoi@n),(c:___wmul@multiplier)
 15792  019A' C02B' F00D'        	movff	(c:atoi@n+1),(c:___wmul@multiplier+1)
 15793  019E' C02C' F00E'        	movlw	high(0Ah)
 15794  01A2' 0E00               	movwf	((c:___wmul@multiplicand+1)),c
 15795  01A4' 6E10'              	movlw	low(0Ah)
 15796  01A6' 0E0A               	movwf	((c:___wmul@multiplicand)),c
 15797  01A8' 6E0F'              	call	___wmul	;wreg free
 15798  01AA' EC00' F000'        	movf	(??_atoi+2+0),c,w
 15799  01AE' 5022'              	addwf	(0+?___wmul),c,w
 15800  01B0' 240D'              	movwf	((c:atoi@n)),c
 15801  01B2' 6E2B'              	movf	(??_atoi+2+1),c,w
 15802  01B4' 5023'              	addwfc	(1+?___wmul),c,w
 15803  01B6' 200E'              	movwf	1+((c:atoi@n)),c
 15804  01B8' 6E2C'              	
 15805                           l5257:
 15806  01BA'                    	infsnz	((c:atoi@s)),c
 15807  01BA' 4A1E'              	incf	((c:atoi@s+1)),c
 15808  01BC' 2A1F'              	goto	l5259
 15809  01BE' EF00' F000'        	
 15810                           l1081:
 15811  01C2'                    	line	13
 15812                           	
 15813                           l5259:
 15814  01C2'                    	movlw	low(0FFD0h)
 15815  01C2' 0ED0               	movwf	(??_atoi+0+0)&0ffh,c
 15816  01C4' 6E00'              	movlw	high(0FFD0h)
 15817  01C6' 0EFF               	movwf	1+(??_atoi+0+0)&0ffh,c
 15818  01C8' 6E00'              	movff	(c:atoi@s),tblptrl
 15819  01CA' C01E' FFF6         	movff	(c:atoi@s+1),tblptrh
 15820  01CE' C01F' FFF7         	clrf	tblptru
 15821  01D2' 6AF8               	
 15822                           	movlw	high __ramtop-1
 15823  01D4' 0EFF'              	cpfsgt	tblptrh
 15824  01D6' 64F7               	bra	u7397
 15825  01D8' D003               	tblrd	*
 15826  01DA' 0008               	
 15827                           	movf	tablat,w
 15828  01DC' 50F5               	bra	u7390
 15829  01DE' D005               u7397:
 15830  01E0'                    	movff	tblptrl,fsr0l
 15831  01E0' CFF6 FFE9          	movff	tblptrh,fsr0h
 15832  01E4' CFF7 FFEA          	movf	indf0,w
 15833  01E8' 50EF               u7390:
 15834  01EA'                    	movwf	(??_atoi+2+0)&0ffh,c
 15835  01EA' 6E00'              	clrf	(??_atoi+2+0+1)&0ffh,c
 15836  01EC' 6A00'              
 15837                           	movf	(??_atoi+0+0),c,w
 15838  01EE' 5020'              	addwf	(??_atoi+2+0),c
 15839  01F0' 2622'              	movf	(??_atoi+0+1),c,w
 15840  01F2' 5021'              	addwfc	(??_atoi+2+1),c
 15841  01F4' 2223'              		movf	(??_atoi+2+1),c,w
 15842  01F6' 5023'              	bnz	u7400
 15843  01F8' E10A               	movlw	10
 15844  01FA' 0E0A               	subwf	 (??_atoi+2+0),c,w
 15845  01FC' 5C22'              	btfss	status,0
 15846  01FE' A0D8               	goto	u7401
 15847  0200' EF00' F000'        	goto	u7400
 15848  0204' EF00' F000'        
 15849                           u7401:
 15850  0208'                    	movlw	1
 15851  0208' 0E01               	goto	u7410
 15852  020A' EF00' F000'        u7400:
 15853  020E'                    	movlw	0
 15854  020E' 0E00               u7410:
 15855  0210'                    	movwf	((c:_atoi$1467)),c
 15856  0210' 6E28'              	clrf	((c:_atoi$1467+1)),c
 15857  0212' 6A29'              	goto	l5263
 15858  0214' EF00' F000'        	
 15859                           l1084:
 15860  0218'                    	
 15861                           l5261:
 15862  0218'                    	movff	(c:atoi@s),tblptrl
 15863  0218' C01E' FFF6         	movff	(c:atoi@s+1),tblptrh
 15864  021C' C01F' FFF7         	clrf	tblptru
 15865  0220' 6AF8               	
 15866                           	movlw	high __ramtop-1
 15867  0222' 0EFF'              	cpfsgt	tblptrh
 15868  0224' 64F7               	bra	u7427
 15869  0226' D003               	tblrd	*
 15870  0228' 0008               	
 15871                           	movf	tablat,w
 15872  022A' 50F5               	bra	u7420
 15873  022C' D005               u7427:
 15874  022E'                    	movff	tblptrl,fsr0l
 15875  022E' CFF6 FFE9          	movff	tblptrh,fsr0h
 15876  0232' CFF7 FFEA          	movf	indf0,w
 15877  0236' 50EF               u7420:
 15878  0238'                    	movwf	(??_atoi+0+0)&0ffh,c
 15879  0238' 6E00'              	movf	((??_atoi+0+0)),c,w
 15880  023A' 5020'              	movwf	((c:isdigit@c)),c
 15881  023C' 6E0D'              	clrf	((c:isdigit@c+1)),c
 15882  023E' 6A0E'              	call	_isdigit	;wreg free
 15883  0240' EC00' F000'        	movff	0+?_isdigit,(c:_atoi$1467)
 15884  0244' C00D' F028'        	movff	1+?_isdigit,(c:_atoi$1467+1)
 15885  0248' C00E' F029'        	goto	l5263
 15886  024C' EF00' F000'        	
 15887                           l1086:
 15888  0250'                    	
 15889                           l5263:
 15890  0250'                    	movf	((c:_atoi$1467)),c,w
 15891  0250' 5028'              iorwf	((c:_atoi$1467+1)),c,w
 15892  0252' 1029'              	btfss	status,2
 15893  0254' A4D8               	goto	u7431
 15894  0256' EF00' F000'        	goto	u7430
 15895  025A' EF00' F000'        
 15896                           u7431:
 15897  025E'                    	goto	l5255
 15898  025E' EF00' F000'        u7430:
 15899  0262'                    	goto	l5265
 15900  0262' EF00' F000'        	
 15901                           l1087:
 15902  0266'                    	line	15
 15903                           	
 15904                           l5265:
 15905  0266'                    	movf	((c:atoi@neg)),c,w
 15906  0266' 5024'              iorwf	((c:atoi@neg+1)),c,w
 15907  0268' 1025'              	btfss	status,2
 15908  026A' A4D8               	goto	u7441
 15909  026C' EF00' F000'        	goto	u7440
 15910  0270' EF00' F000'        
 15911                           u7441:
 15912  0274'                    	goto	l1089
 15913  0274' EF00' F000'        u7440:
 15914  0278'                    	
 15915                           l5267:
 15916  0278'                    	movff	(c:atoi@n),??_atoi+0+0
 15917  0278' C02B' F020'        	movff	(c:atoi@n+1),??_atoi+0+0+1
 15918  027C' C02C' F021'        	comf	(??_atoi+0+0),c
 15919  0280' 1E20'              	comf	(??_atoi+0+1),c
 15920  0282' 1E21'              	infsnz	(??_atoi+0+0),c
 15921  0284' 4A20'              	incf	(??_atoi+0+1),c
 15922  0286' 2A21'              	movff	??_atoi+0+0,(c:?_atoi)
 15923  0288' C020' F01E'        	movff	??_atoi+0+1,(c:?_atoi+1)
 15924  028C' C021' F01F'        	goto	l1092
 15925  0290' EF00' F000'        	
 15926                           l1089:
 15927  0294'                    	movff	(c:atoi@n),(c:?_atoi)
 15928  0294' C02B' F01E'        	movff	(c:atoi@n+1),(c:?_atoi+1)
 15929  0298' C02C' F01F'        	goto	l1092
 15930  029C' EF00' F000'        	
 15931                           l1091:
 15932  02A0'                    	line	16
 15933                           	
 15934                           l1092:
 15935  02A0'                    	return	;funcret
 15936  02A0' 0012               	opt stack 0
 15937                           GLOBAL	__end_of_atoi
 15938                           	__end_of_atoi:
 15939  02A2'                    	signat	_atoi,4218
 15940                           	global	_isspace
 15941                           
 15942 ;; *************** function _isspace *****************
 15943 ;; Defined at:
 15944 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 15945 ;; Parameters:    Size  Location     Type
 15946 ;;  c               2   13[COMRAM] int 
 15947 ;; Auto vars:     Size  Location     Type
 15948 ;;		None
 15949 ;; Return value:  Size  Location     Type
 15950 ;;                  2   13[COMRAM] int 
 15951 ;; Registers used:
 15952 ;;		wreg, status,2, status,0
 15953 ;; Tracked objects:
 15954 ;;		On entry : 0/0
 15955 ;;		On exit  : 0/0
 15956 ;;		Unchanged: 0/0
 15957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15958 ;;      Params:         2       0       0       0       0       0       0
 15959 ;;      Locals:         1       0       0       0       0       0       0
 15960 ;;      Temps:          4       0       0       0       0       0       0
 15961 ;;      Totals:         7       0       0       0       0       0       0
 15962 ;;Total ram usage:        7 bytes
 15963 ;; Hardware stack levels used:    1
 15964 ;; Hardware stack levels required when called:    4
 15965 ;; This function calls:
 15966 ;;		Nothing
 15967 ;; This function is called by:
 15968 ;;		_atoi
 15969 ;; This function uses a non-reentrant model
 15970 ;;
 15971                           psect	text42,class=CODE,space=0,reloc=2,group=2
 15972                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 15973                           	line	5
 15974                           global __ptext42
 15975                           __ptext42:
 15976  0000'                    psect	text42
 15977                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isspace.c"
 15978                           	line	5
 15979                           	global	__size_of_isspace
 15980                           	__size_of_isspace	equ	__end_of_isspace-_isspace
 15981  0000                     	
 15982                           _isspace:
 15983  0000'                    ;incstack = 0
 15984                           	opt	stack 21
 15985                           	line	7
 15986                           	
 15987                           l5219:
 15988  0000'                    	movlw	low(01h)
 15989  0000' 0E01               	movwf	((c:_isspace$1496)),c
 15990  0002' 6E13'              	
 15991                           l5221:
 15992  0004'                    		movlw	32
 15993  0004' 0E20               	xorwf	((c:isspace@c)),c,w
 15994  0006' 180D'              iorwf	((c:isspace@c+1)),c,w
 15995  0008' 100E'              	btfsc	status,2
 15996  000A' B4D8               	goto	u7291
 15997  000C' EF00' F000'        	goto	u7290
 15998  0010' EF00' F000'        
 15999                           u7291:
 16000  0014'                    	goto	l5227
 16001  0014' EF00' F000'        u7290:
 16002  0018'                    	
 16003                           l5223:
 16004  0018'                    	movlw	low(0FFF7h)
 16005  0018' 0EF7               	movwf	(??_isspace+0+0)&0ffh,c
 16006  001A' 6E00'              	movlw	high(0FFF7h)
 16007  001C' 0EFF               	movwf	1+(??_isspace+0+0)&0ffh,c
 16008  001E' 6E00'              	movff	(c:isspace@c),??_isspace+2+0
 16009  0020' C00D' F011'        	movff	(c:isspace@c+1),??_isspace+2+0+1
 16010  0024' C00E' F012'        	movf	(??_isspace+0+0),c,w
 16011  0028' 500F'              	addwf	(??_isspace+2+0),c
 16012  002A' 2611'              	movf	(??_isspace+0+1),c,w
 16013  002C' 5010'              	addwfc	(??_isspace+2+1),c
 16014  002E' 2212'              		movf	(??_isspace+2+1),c,w
 16015  0030' 5012'              	bnz	u7300
 16016  0032' E109               	movlw	5
 16017  0034' 0E05               	subwf	 (??_isspace+2+0),c,w
 16018  0036' 5C11'              	btfss	status,0
 16019  0038' A0D8               	goto	u7301
 16020  003A' EF00' F000'        	goto	u7300
 16021  003E' EF00' F000'        
 16022                           u7301:
 16023  0042'                    	goto	l5227
 16024  0042' EF00' F000'        u7300:
 16025  0046'                    	
 16026                           l5225:
 16027  0046'                    	movlw	low(0)
 16028  0046' 0E00               	movwf	((c:_isspace$1496)),c
 16029  0048' 6E13'              	goto	l5227
 16030  004A' EF00' F000'        	
 16031                           l1115:
 16032  004E'                    	
 16033                           l5227:
 16034  004E'                    	movff	(c:_isspace$1496),(c:?_isspace)
 16035  004E' C013' F00D'        	clrf	((c:?_isspace+1)),c
 16036  0052' 6A0E'              	goto	l1116
 16037  0054' EF00' F000'        	
 16038                           l5229:
 16039  0058'                    	line	8
 16040                           	
 16041                           l1116:
 16042  0058'                    	return	;funcret
 16043  0058' 0012               	opt stack 0
 16044                           GLOBAL	__end_of_isspace
 16045                           	__end_of_isspace:
 16046  005A'                    	signat	_isspace,4218
 16047                           	global	_isdigit
 16048                           
 16049 ;; *************** function _isdigit *****************
 16050 ;; Defined at:
 16051 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 16052 ;; Parameters:    Size  Location     Type
 16053 ;;  c               2   13[COMRAM] int 
 16054 ;; Auto vars:     Size  Location     Type
 16055 ;;		None
 16056 ;; Return value:  Size  Location     Type
 16057 ;;                  2   13[COMRAM] int 
 16058 ;; Registers used:
 16059 ;;		wreg, status,2, status,0
 16060 ;; Tracked objects:
 16061 ;;		On entry : 0/0
 16062 ;;		On exit  : 0/0
 16063 ;;		Unchanged: 0/0
 16064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16065 ;;      Params:         2       0       0       0       0       0       0
 16066 ;;      Locals:         0       0       0       0       0       0       0
 16067 ;;      Temps:          4       0       0       0       0       0       0
 16068 ;;      Totals:         6       0       0       0       0       0       0
 16069 ;;Total ram usage:        6 bytes
 16070 ;; Hardware stack levels used:    1
 16071 ;; Hardware stack levels required when called:    4
 16072 ;; This function calls:
 16073 ;;		Nothing
 16074 ;; This function is called by:
 16075 ;;		_vfpfcnvrt
 16076 ;;		_atoi
 16077 ;; This function uses a non-reentrant model
 16078 ;;
 16079                           psect	text43,class=CODE,space=0,reloc=2,group=2
 16080                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 16081                           	line	5
 16082                           global __ptext43
 16083                           __ptext43:
 16084  0000'                    psect	text43
 16085                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isdigit.c"
 16086                           	line	5
 16087                           	global	__size_of_isdigit
 16088                           	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
 16089  0000                     	
 16090                           _isdigit:
 16091  0000'                    ;incstack = 0
 16092                           	opt	stack 22
 16093                           	line	7
 16094                           	
 16095                           l4765:
 16096  0000'                    	movlw	low(0FFD0h)
 16097  0000' 0ED0               	movwf	(??_isdigit+0+0)&0ffh,c
 16098  0002' 6E00'              	movlw	high(0FFD0h)
 16099  0004' 0EFF               	movwf	1+(??_isdigit+0+0)&0ffh,c
 16100  0006' 6E00'              	movff	(c:isdigit@c),??_isdigit+2+0
 16101  0008' C00D' F011'        	movff	(c:isdigit@c+1),??_isdigit+2+0+1
 16102  000C' C00E' F012'        	movf	(??_isdigit+0+0),c,w
 16103  0010' 500F'              	addwf	(??_isdigit+2+0),c
 16104  0012' 2611'              	movf	(??_isdigit+0+1),c,w
 16105  0014' 5010'              	addwfc	(??_isdigit+2+1),c
 16106  0016' 2212'              		movf	(??_isdigit+2+1),c,w
 16107  0018' 5012'              	bnz	u6570
 16108  001A' E10A               	movlw	10
 16109  001C' 0E0A               	subwf	 (??_isdigit+2+0),c,w
 16110  001E' 5C11'              	btfss	status,0
 16111  0020' A0D8               	goto	u6571
 16112  0022' EF00' F000'        	goto	u6570
 16113  0026' EF00' F000'        
 16114                           u6571:
 16115  002A'                    	movlw	1
 16116  002A' 0E01               	goto	u6580
 16117  002C' EF00' F000'        u6570:
 16118  0030'                    	movlw	0
 16119  0030' 0E00               u6580:
 16120  0032'                    	movwf	((c:?_isdigit)),c
 16121  0032' 6E0D'              	clrf	((c:?_isdigit+1)),c
 16122  0034' 6A0E'              	goto	l1108
 16123  0036' EF00' F000'        	
 16124                           l4767:
 16125  003A'                    	line	8
 16126                           	
 16127                           l1108:
 16128  003A'                    	return	;funcret
 16129  003A' 0012               	opt stack 0
 16130                           GLOBAL	__end_of_isdigit
 16131                           	__end_of_isdigit:
 16132  003C'                    	signat	_isdigit,4218
 16133                           	global	___wmul
 16134                           
 16135 ;; *************** function ___wmul *****************
 16136 ;; Defined at:
 16137 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 16138 ;; Parameters:    Size  Location     Type
 16139 ;;  multiplier      2   13[COMRAM] unsigned int 
 16140 ;;  multiplicand    2   15[COMRAM] unsigned int 
 16141 ;; Auto vars:     Size  Location     Type
 16142 ;;  product         2   17[COMRAM] unsigned int 
 16143 ;; Return value:  Size  Location     Type
 16144 ;;                  2   13[COMRAM] unsigned int 
 16145 ;; Registers used:
 16146 ;;		wreg, status,2, status,0, prodl, prodh
 16147 ;; Tracked objects:
 16148 ;;		On entry : 0/0
 16149 ;;		On exit  : 0/0
 16150 ;;		Unchanged: 0/0
 16151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16152 ;;      Params:         4       0       0       0       0       0       0
 16153 ;;      Locals:         2       0       0       0       0       0       0
 16154 ;;      Temps:          0       0       0       0       0       0       0
 16155 ;;      Totals:         6       0       0       0       0       0       0
 16156 ;;Total ram usage:        6 bytes
 16157 ;; Hardware stack levels used:    1
 16158 ;; Hardware stack levels required when called:    4
 16159 ;; This function calls:
 16160 ;;		Nothing
 16161 ;; This function is called by:
 16162 ;;		_atoi
 16163 ;; This function uses a non-reentrant model
 16164 ;;
 16165                           psect	text44,class=CODE,space=0,reloc=2,group=1
 16166                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 16167                           	line	15
 16168                           global __ptext44
 16169                           __ptext44:
 16170  0000'                    psect	text44
 16171                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 16172                           	line	15
 16173                           	global	__size_of___wmul
 16174                           	__size_of___wmul	equ	__end_of___wmul-___wmul
 16175  0000                     	
 16176                           ___wmul:
 16177  0000'                    ;incstack = 0
 16178                           	opt	stack 21
 16179                           	line	37
 16180                           	
 16181                           l4769:
 16182  0000'                    	movf	((c:___wmul@multiplier)),c,w
 16183  0000' 500D'              	mulwf	((c:___wmul@multiplicand)),c
 16184  0002' 020F'              	movff	prodl,(c:___wmul@product)
 16185  0004' CFF3 F011'         	movff	prodh,(c:___wmul@product+1)
 16186  0008' CFF4 F012'         	line	38
 16187                           	movf	((c:___wmul@multiplier)),c,w
 16188  000C' 500D'              	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
 16189  000E' 0210'              	movf	(prodl),c,w
 16190  0010' 50F3               	addwf	((c:___wmul@product+1)),c
 16191  0012' 2612'              
 16192                           	line	39
 16193                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
 16194  0014' 500E'              	mulwf	((c:___wmul@multiplicand)),c
 16195  0016' 020F'              	movf	(prodl),c,w
 16196  0018' 50F3               	addwf	((c:___wmul@product+1)),c
 16197  001A' 2612'              
 16198                           	line	52
 16199                           	
 16200                           l4771:
 16201  001C'                    	movff	(c:___wmul@product),(c:?___wmul)
 16202  001C' C011' F00D'        	movff	(c:___wmul@product+1),(c:?___wmul+1)
 16203  0020' C012' F00E'        	goto	l379
 16204  0024' EF00' F000'        	
 16205                           l4773:
 16206  0028'                    	line	53
 16207                           	
 16208                           l379:
 16209  0028'                    	return	;funcret
 16210  0028' 0012               	opt stack 0
 16211                           GLOBAL	__end_of___wmul
 16212                           	__end_of___wmul:
 16213  002A'                    	signat	___wmul,8314
 16214                           	global	_GetString
 16215                           
 16216 ;; *************** function _GetString *****************
 16217 ;; Defined at:
 16218 ;;		line 46 in file "setting_hardaware/uart.c"
 16219 ;; Parameters:    Size  Location     Type
 16220 ;;		None
 16221 ;; Auto vars:     Size  Location     Type
 16222 ;;		None
 16223 ;; Return value:  Size  Location     Type
 16224 ;;                  2   13[COMRAM] PTR unsigned char 
 16225 ;; Registers used:
 16226 ;;		wreg, status,2, status,0
 16227 ;; Tracked objects:
 16228 ;;		On entry : 0/0
 16229 ;;		On exit  : 0/0
 16230 ;;		Unchanged: 0/0
 16231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16232 ;;      Params:         2       0       0       0       0       0       0
 16233 ;;      Locals:         0       0       0       0       0       0       0
 16234 ;;      Temps:          0       0       0       0       0       0       0
 16235 ;;      Totals:         2       0       0       0       0       0       0
 16236 ;;Total ram usage:        2 bytes
 16237 ;; Hardware stack levels used:    1
 16238 ;; Hardware stack levels required when called:    4
 16239 ;; This function calls:
 16240 ;;		Nothing
 16241 ;; This function is called by:
 16242 ;;		_Mode2
 16243 ;;		_Mode3
 16244 ;;		_main
 16245 ;; This function uses a non-reentrant model
 16246 ;;
 16247                           psect	text45,class=CODE,space=0,reloc=2,group=0
 16248                           	file	"setting_hardaware/uart.c"
 16249                           	line	46
 16250                           global __ptext45
 16251                           __ptext45:
 16252  0000'                    psect	text45
 16253                           	file	"setting_hardaware/uart.c"
 16254                           	line	46
 16255                           	global	__size_of_GetString
 16256                           	__size_of_GetString	equ	__end_of_GetString-_GetString
 16257  0000                     	
 16258                           _GetString:
 16259  0000'                    ;incstack = 0
 16260                           	opt	stack 25
 16261                           	line	47
 16262                           	
 16263                           l4161:
 16264  0000'                    ;setting_hardaware/uart.c: 47:     return mystring;
 16265                           		movlw	low(_mystring)
 16266  0000' 0E00'              	movwf	((c:?_GetString)),c
 16267  0002' 6E0D'              	movlw	high(_mystring)
 16268  0004' 0E00'              	movwf	((c:?_GetString+1)),c
 16269  0006' 6E0E'              
 16270                           	goto	l151
 16271  0008' EF00' F000'        	
 16272                           l4163:
 16273  000C'                    	line	48
 16274                           	
 16275                           l151:
 16276  000C'                    	return	;funcret
 16277  000C' 0012               	opt stack 0
 16278                           GLOBAL	__end_of_GetString
 16279                           	__end_of_GetString:
 16280  000E'                    	signat	_GetString,90
 16281                           	global	_Mode1
 16282                           
 16283 ;; *************** function _Mode1 *****************
 16284 ;; Defined at:
 16285 ;;		line 9 in file "main.c"
 16286 ;; Parameters:    Size  Location     Type
 16287 ;;		None
 16288 ;; Auto vars:     Size  Location     Type
 16289 ;;		None
 16290 ;; Return value:  Size  Location     Type
 16291 ;;                  1    wreg      void 
 16292 ;; Registers used:
 16293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
       temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
       , btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
       , btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 16294 ;; Tracked objects:
 16295 ;;		On entry : 0/0
 16296 ;;		On exit  : 0/0
 16297 ;;		Unchanged: 0/0
 16298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16299 ;;      Params:         0       0       0       0       0       0       0
 16300 ;;      Locals:         0       0       0       0       0       0       0
 16301 ;;      Temps:          0       0       0       0       0       0       0
 16302 ;;      Totals:         0       0       0       0       0       0       0
 16303 ;;Total ram usage:        0 bytes
 16304 ;; Hardware stack levels used:    1
 16305 ;; Hardware stack levels required when called:    5
 16306 ;; This function calls:
 16307 ;;		_ClearBuffer
 16308 ;;		_PrintBuffer
 16309 ;; This function is called by:
 16310 ;;		_main
 16311 ;; This function uses a non-reentrant model
 16312 ;;
 16313                           psect	text46,class=CODE,space=0,reloc=2,group=0
 16314                           	file	"main.c"
 16315                           	line	9
 16316                           global __ptext46
 16317                           __ptext46:
 16318  0000'                    psect	text46
 16319                           	file	"main.c"
 16320                           	line	9
 16321                           	global	__size_of_Mode1
 16322                           	__size_of_Mode1	equ	__end_of_Mode1-_Mode1
 16323  0000                     	
 16324                           _Mode1:
 16325  0000'                    ;incstack = 0
 16326                           	opt	stack 25
 16327                           	line	11
 16328                           	
 16329                           l4327:
 16330  0000'                    ;main.c: 11:     ClearBuffer();
 16331                           	call	_ClearBuffer	;wreg free
 16332  0000' EC00' F000'        	line	12
 16333                           	
 16334                           l4329:
 16335  0004'                    ;main.c: 12:     PrintBuffer("Hello world!\n");
 16336                           		movlw	low(STR_1)
 16337  0004' 0E00'              	movwf	((c:?_PrintBuffer)),c
 16338  0006' 6E00'              	movlw	high(STR_1)
 16339  0008' 0E00'              	movwf	((c:?_PrintBuffer+1)),c
 16340  000A' 6E01'              
 16341                           	call	_PrintBuffer	;wreg free
 16342  000C' EC00' F000'        	line	13
 16343                           	
 16344                           l49:
 16345  0010'                    	return	;funcret
 16346  0010' 0012               	opt stack 0
 16347                           GLOBAL	__end_of_Mode1
 16348                           	__end_of_Mode1:
 16349  0012'                    	signat	_Mode1,89
 16350                           	global	_PrintBuffer
 16351                           	global	_ClearBuffer
 16352                           
 16353 ;; *************** function _ClearBuffer *****************
 16354 ;; Defined at:
 16355 ;;		line 55 in file "setting_hardaware/uart.c"
 16356 ;; Parameters:    Size  Location     Type
 16357 ;;		None
 16358 ;; Auto vars:     Size  Location     Type
 16359 ;;  i               2   13[COMRAM] int 
 16360 ;; Return value:  Size  Location     Type
 16361 ;;                  1    wreg      void 
 16362 ;; Registers used:
 16363 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16364 ;; Tracked objects:
 16365 ;;		On entry : 0/0
 16366 ;;		On exit  : 0/0
 16367 ;;		Unchanged: 0/0
 16368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16369 ;;      Params:         0       0       0       0       0       0       0
 16370 ;;      Locals:         2       0       0       0       0       0       0
 16371 ;;      Temps:          0       0       0       0       0       0       0
 16372 ;;      Totals:         2       0       0       0       0       0       0
 16373 ;;Total ram usage:        2 bytes
 16374 ;; Hardware stack levels used:    1
 16375 ;; Hardware stack levels required when called:    4
 16376 ;; This function calls:
 16377 ;;		Nothing
 16378 ;; This function is called by:
 16379 ;;		_Mode1
 16380 ;;		_Mode2
 16381 ;;		_Mode3
 16382 ;;		_main
 16383 ;; This function uses a non-reentrant model
 16384 ;;
 16385                           psect	text47,class=CODE,space=0,reloc=2,group=0
 16386                           	file	"setting_hardaware/uart.c"
 16387                           	line	55
 16388                           global __ptext47
 16389                           __ptext47:
 16390  0000'                    psect	text47
 16391                           	file	"setting_hardaware/uart.c"
 16392                           	line	55
 16393                           	global	__size_of_ClearBuffer
 16394                           	__size_of_ClearBuffer	equ	__end_of_ClearBuffer-_ClearBuffer
 16395  0000                     	
 16396                           _ClearBuffer:
 16397  0000'                    ;incstack = 0
 16398                           	opt	stack 25
 16399                           	line	56
 16400                           	
 16401                           l4149:
 16402  0000'                    ;setting_hardaware/uart.c: 56:     for(int i = 0; i < 10 ; i++)
 16403                           	movlw	high(0)
 16404  0000' 0E00               	movwf	((c:ClearBuffer@i+1)),c
 16405  0002' 6E0E'              	movlw	low(0)
 16406  0004' 0E00               	movwf	((c:ClearBuffer@i)),c
 16407  0006' 6E0D'              	
 16408                           l4151:
 16409  0008'                    	btfsc	((c:ClearBuffer@i+1)),c,7
 16410  0008' BE0E'              	goto	u5371
 16411  000A' EF00' F000'        	movf	((c:ClearBuffer@i+1)),c,w
 16412  000E' 500E'              	bnz	u5370
 16413  0010' E109               	movlw	10
 16414  0012' 0E0A               	subwf	 ((c:ClearBuffer@i)),c,w
 16415  0014' 5C0D'              	btfss	status,0
 16416  0016' A0D8               	goto	u5371
 16417  0018' EF00' F000'        	goto	u5370
 16418  001C' EF00' F000'        
 16419                           u5371:
 16420  0020'                    	goto	l4155
 16421  0020' EF00' F000'        u5370:
 16422  0024'                    	goto	l162
 16423  0024' EF00' F000'        	
 16424                           l4153:
 16425  0028'                    	goto	l162
 16426  0028' EF00' F000'        	
 16427                           l160:
 16428  002C'                    	line	57
 16429                           	
 16430                           l4155:
 16431  002C'                    ;setting_hardaware/uart.c: 57:         mystring[i] = '\0';
 16432                           	movlw	low(_mystring)
 16433  002C' 0E00'              	addwf	((c:ClearBuffer@i)),c,w
 16434  002E' 240D'              	movwf	c:fsr2l
 16435  0030' 6ED9               	movlw	high(_mystring)
 16436  0032' 0E00'              	addwfc	((c:ClearBuffer@i+1)),c,w
 16437  0034' 200E'              	movwf	1+c:fsr2l
 16438  0036' 6EDA               	movlw	low(0)
 16439  0038' 0E00               	movwf	indf2
 16440  003A' 6EDF               	
 16441                           l4157:
 16442  003C'                    	infsnz	((c:ClearBuffer@i)),c
 16443  003C' 4A0D'              	incf	((c:ClearBuffer@i+1)),c
 16444  003E' 2A0E'              	
 16445                           l4159:
 16446  0040'                    	btfsc	((c:ClearBuffer@i+1)),c,7
 16447  0040' BE0E'              	goto	u5381
 16448  0042' EF00' F000'        	movf	((c:ClearBuffer@i+1)),c,w
 16449  0046' 500E'              	bnz	u5380
 16450  0048' E109               	movlw	10
 16451  004A' 0E0A               	subwf	 ((c:ClearBuffer@i)),c,w
 16452  004C' 5C0D'              	btfss	status,0
 16453  004E' A0D8               	goto	u5381
 16454  0050' EF00' F000'        	goto	u5380
 16455  0054' EF00' F000'        
 16456                           u5381:
 16457  0058'                    	goto	l4155
 16458  0058' EF00' F000'        u5380:
 16459  005C'                    	goto	l162
 16460  005C' EF00' F000'        	
 16461                           l161:
 16462  0060'                    	line	58
 16463                           	
 16464                           l162:
 16465  0060'                    	return	;funcret
 16466  0060' 0012               	opt stack 0
 16467                           GLOBAL	__end_of_ClearBuffer
 16468                           	__end_of_ClearBuffer:
 16469  0062'                    	signat	_ClearBuffer,89
 16470                           	global	_Lo_ISR
 16471                           
 16472 ;; *************** function _Lo_ISR *****************
 16473 ;; Defined at:
 16474 ;;		line 87 in file "main.c"
 16475 ;; Parameters:    Size  Location     Type
 16476 ;;		None
 16477 ;; Auto vars:     Size  Location     Type
 16478 ;;		None
 16479 ;; Return value:  Size  Location     Type
 16480 ;;                  1    wreg      void 
 16481 ;; Registers used:
 16482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16483 ;; Tracked objects:
 16484 ;;		On entry : 0/0
 16485 ;;		On exit  : 0/0
 16486 ;;		Unchanged: 0/0
 16487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16488 ;;      Params:         0       0       0       0       0       0       0
 16489 ;;      Locals:         0       0       0       0       0       0       0
 16490 ;;      Temps:          5       0       0       0       0       0       0
 16491 ;;      Totals:         5       0       0       0       0       0       0
 16492 ;;Total ram usage:        5 bytes
 16493 ;; Hardware stack levels used:    1
 16494 ;; Hardware stack levels required when called:    3
 16495 ;; This function calls:
 16496 ;;		_MyusartRead
 16497 ;; This function is called by:
 16498 ;;		Interrupt level 1
 16499 ;; This function uses a non-reentrant model
 16500 ;;
 16501                           psect	intcodelo,class=CODE,space=0,reloc=2
 16502                           global __pintcodelo
 16503                           __pintcodelo:
 16504  0000'                    psect	intcodelo
 16505                           	file	"main.c"
 16506                           	line	87
 16507                           	global	__size_of_Lo_ISR
 16508                           	__size_of_Lo_ISR	equ	__end_of_Lo_ISR-_Lo_ISR
 16509  0000                     	
 16510                           _Lo_ISR:
 16511  0000'                    ;incstack = 0
 16512                           	opt	stack 18
 16513                           	bsf int$flags,0,c ;set compiler interrupt flag (level 1)
 16514  0000' 8000'              	movff	status+0,??_Lo_ISR+0
 16515  0002' CFD8 F008'         	movff	wreg+0,??_Lo_ISR+1
 16516  0006' CFE8 F009'         	movff	bsr+0,??_Lo_ISR+2
 16517  000A' CFE0 F00A'         	movff	fsr2l+0,??_Lo_ISR+3
 16518  000E' CFD9 F00B'         	movff	fsr2h+0,??_Lo_ISR+4
 16519  0012' CFDA F00C'         	line	89
 16520                           	
 16521                           i1l4411:
 16522  0016'                    ;main.c: 89:     if(RCIF)
 16523                           	btfss	c:(31989/8),(31989)&7	;volatile
 16524  0016' AA9E               	goto	i1u581_21
 16525  0018' EF00' F000'        	goto	i1u581_20
 16526  001C' EF00' F000'        i1u581_21:
 16527  0020'                    	goto	i1l93
 16528  0020' EF00' F000'        i1u581_20:
 16529  0024'                    	line	91
 16530                           	
 16531                           i1l4413:
 16532  0024'                    ;main.c: 90:     {;main.c: 91:         if(RCSTAbits.OERR)
 16533                           	btfss	((c:4011)),c,1	;volatile
 16534  0024' A2AB               	goto	i1u582_21
 16535  0026' EF00' F000'        	goto	i1u582_20
 16536  002A' EF00' F000'        i1u582_21:
 16537  002E'                    	goto	i1l4417
 16538  002E' EF00' F000'        i1u582_20:
 16539  0032'                    	line	93
 16540                           	
 16541                           i1l4415:
 16542  0032'                    ;main.c: 92:         {;main.c: 93:             CREN = 0;
 16543                           	bcf	c:(32092/8),(32092)&7	;volatile
 16544  0032' 98AB               	line	94
 16545                           ;main.c: 94:             __nop();
 16546                           	opt	asmopt_push
 16547                           	opt	asmopt_off
 16548                           	nop
 16549  0034' F000               	opt	asmopt_pop
 16550                           	line	95
 16551                           ;main.c: 95:             CREN = 1;
 16552                           	bsf	c:(32092/8),(32092)&7	;volatile
 16553  0036' 88AB               	goto	i1l4417
 16554  0038' EF00' F000'        	line	96
 16555                           ;main.c: 96:         }
 16556                           	
 16557                           i1l92:
 16558  003C'                    	line	98
 16559                           	
 16560                           i1l4417:
 16561  003C'                    ;main.c: 98:         MyusartRead();
 16562                           	call	_MyusartRead	;wreg free
 16563  003C' EC00' F000'        	goto	i1l93
 16564  0040' EF00' F000'        	line	99
 16565                           ;main.c: 99:     }
 16566                           	
 16567                           i1l91:
 16568  0044'                    	goto	i1l93
 16569  0044' EF00' F000'        	line	102
 16570                           	
 16571                           i1l4419:
 16572  0048'                    	line	103
 16573                           ;main.c: 102:     return;
 16574                           	
 16575                           i1l93:
 16576  0048'                    	movff	??_Lo_ISR+4,fsr2h+0
 16577  0048' C00C' FFDA         	movff	??_Lo_ISR+3,fsr2l+0
 16578  004C' C00B' FFD9         	movff	??_Lo_ISR+2,bsr+0
 16579  0050' C00A' FFE0         	movff	??_Lo_ISR+1,wreg+0
 16580  0054' C009' FFE8         	movff	??_Lo_ISR+0,status+0
 16581  0058' C008' FFD8         	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
 16582  005C' 9000'              	retfie
 16583  005E' 0010               	opt stack 0
 16584                           GLOBAL	__end_of_Lo_ISR
 16585                           	__end_of_Lo_ISR:
 16586  0060'                    	signat	_Lo_ISR,89
 16587                           	global	_MyusartRead
 16588                           
 16589 ;; *************** function _MyusartRead *****************
 16590 ;; Defined at:
 16591 ;;		line 60 in file "setting_hardaware/uart.c"
 16592 ;; Parameters:    Size  Location     Type
 16593 ;;		None
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;		None
 16596 ;; Return value:  Size  Location     Type
 16597 ;;                  1    wreg      void 
 16598 ;; Registers used:
 16599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16600 ;; Tracked objects:
 16601 ;;		On entry : 0/0
 16602 ;;		On exit  : 0/0
 16603 ;;		Unchanged: 0/0
 16604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16605 ;;      Params:         0       0       0       0       0       0       0
 16606 ;;      Locals:         0       0       0       0       0       0       0
 16607 ;;      Temps:          2       0       0       0       0       0       0
 16608 ;;      Totals:         2       0       0       0       0       0       0
 16609 ;;Total ram usage:        2 bytes
 16610 ;; Hardware stack levels used:    1
 16611 ;; Hardware stack levels required when called:    2
 16612 ;; This function calls:
 16613 ;;		_UART_Write_Text
 16614 ;;		i1___awmod
 16615 ;; This function is called by:
 16616 ;;		_Lo_ISR
 16617 ;; This function uses a non-reentrant model
 16618 ;;
 16619                           psect	text49,class=CODE,space=0,reloc=2,group=0
 16620                           	file	"setting_hardaware/uart.c"
 16621                           	line	60
 16622                           global __ptext49
 16623                           __ptext49:
 16624  0000'                    psect	text49
 16625                           	file	"setting_hardaware/uart.c"
 16626                           	line	60
 16627                           	global	__size_of_MyusartRead
 16628                           	__size_of_MyusartRead	equ	__end_of_MyusartRead-_MyusartRead
 16629  0000                     	
 16630                           _MyusartRead:
 16631  0000'                    ;incstack = 0
 16632                           	opt	stack 18
 16633                           	line	62
 16634                           	
 16635                           i1l4383:
 16636  0000'                    ;setting_hardaware/uart.c: 62:     mystring[lenStr] = RCREG;
 16637                           	movlw	low(_mystring)
 16638  0000' 0E00'              	addwf	((c:_lenStr)),c,w
 16639  0002' 2412'              	movwf	c:fsr2l
 16640  0004' 6ED9               	movlw	high(_mystring)
 16641  0006' 0E00'              	addwfc	((c:_lenStr+1)),c,w
 16642  0008' 2013'              	movwf	1+c:fsr2l
 16643  000A' 6EDA               	movff	(c:4014),indf2	;volatile
 16644  000C' CFAE FFDF          
 16645                           	line	63
 16646                           	
 16647                           i1l4385:
 16648  0010'                    ;setting_hardaware/uart.c: 63:     UART_Write_Text(mystring[lenStr]);
 16649                           	movlw	low(_mystring)
 16650  0010' 0E00'              	addwf	((c:_lenStr)),c,w
 16651  0012' 2412'              	movwf	c:fsr2l
 16652  0014' 6ED9               	movlw	high(_mystring)
 16653  0016' 0E00'              	addwfc	((c:_lenStr+1)),c,w
 16654  0018' 2013'              	movwf	1+c:fsr2l
 16655  001A' 6EDA               	movf	indf2,w
 16656  001C' 50DF               	movwf	(??_MyusartRead+0+0)&0ffh,c
 16657  001E' 6E00'              	clrf	(??_MyusartRead+0+0+1)&0ffh,c
 16658  0020' 6A00'              
 16659                           	movff	??_MyusartRead+0+0,(c:UART_Write_Text@text)
 16660  0022' C006' F001'        	movff	??_MyusartRead+0+1,(c:UART_Write_Text@text+1)
 16661  0026' C007' F002'        	call	_UART_Write_Text	;wreg free
 16662  002A' EC00' F000'        	line	64
 16663                           	
 16664                           i1l4387:
 16665  002E'                    ;setting_hardaware/uart.c: 64:     lenStr++;
 16666                           	infsnz	((c:_lenStr)),c
 16667  002E' 4A12'              	incf	((c:_lenStr+1)),c
 16668  0030' 2A13'              	line	65
 16669                           	
 16670                           i1l4389:
 16671  0032'                    ;setting_hardaware/uart.c: 65:     lenStr %= 10;
 16672                           	movff	(c:_lenStr),(c:i1___awmod@dividend)
 16673  0032' C012' F000'        	movff	(c:_lenStr+1),(c:i1___awmod@dividend+1)
 16674  0036' C013' F001'        	movlw	high(0Ah)
 16675  003A' 0E00               	movwf	((c:i1___awmod@divisor+1)),c
 16676  003C' 6E03'              	movlw	low(0Ah)
 16677  003E' 0E0A               	movwf	((c:i1___awmod@divisor)),c
 16678  0040' 6E02'              	call	i1___awmod	;wreg free
 16679  0042' EC00' F000'        	movff	0+?i1___awmod,(c:_lenStr)
 16680  0046' C000' F012'        	movff	1+?i1___awmod,(c:_lenStr+1)
 16681  004A' C001' F013'        	goto	i1l165
 16682  004E' EF00' F000'        	line	68
 16683                           	
 16684                           i1l4391:
 16685  0052'                    	line	69
 16686                           ;setting_hardaware/uart.c: 68:     return ;
 16687                           	
 16688                           i1l165:
 16689  0052'                    	return	;funcret
 16690  0052' 0012               	opt stack 0
 16691                           GLOBAL	__end_of_MyusartRead
 16692                           	__end_of_MyusartRead:
 16693  0054'                    	signat	_MyusartRead,89
 16694                           	global	i1___awmod
 16695                           
 16696 ;; *************** function i1___awmod *****************
 16697 ;; Defined at:
 16698 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 16699 ;; Parameters:    Size  Location     Type
 16700 ;;  dividend        2    0[COMRAM] int 
 16701 ;;  divisor         2    2[COMRAM] int 
 16702 ;; Auto vars:     Size  Location     Type
 16703 ;;  __awmod         1    5[COMRAM] unsigned char 
 16704 ;;  __awmod         1    4[COMRAM] unsigned char 
 16705 ;; Return value:  Size  Location     Type
 16706 ;;                  2    0[COMRAM] int 
 16707 ;; Registers used:
 16708 ;;		wreg, status,2, status,0
 16709 ;; Tracked objects:
 16710 ;;		On entry : 0/0
 16711 ;;		On exit  : 0/0
 16712 ;;		Unchanged: 0/0
 16713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16714 ;;      Params:         4       0       0       0       0       0       0
 16715 ;;      Locals:         2       0       0       0       0       0       0
 16716 ;;      Temps:          0       0       0       0       0       0       0
 16717 ;;      Totals:         6       0       0       0       0       0       0
 16718 ;;Total ram usage:        6 bytes
 16719 ;; Hardware stack levels used:    1
 16720 ;; This function calls:
 16721 ;;		Nothing
 16722 ;; This function is called by:
 16723 ;;		_MyusartRead
 16724 ;; This function uses a non-reentrant model
 16725 ;;
 16726                           psect	text50,class=CODE,space=0,reloc=2,group=0
 16727                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 16728                           	line	7
 16729                           global __ptext50
 16730                           __ptext50:
 16731  0000'                    psect	text50
 16732                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 16733                           	line	7
 16734                           	global	__size_ofi1___awmod
 16735                           	__size_ofi1___awmod	equ	__end_ofi1___awmod-i1___awmod
 16736  0000                     	
 16737                           i1___awmod:
 16738  0000'                    ;incstack = 0
 16739                           	opt	stack 19
 16740                           	line	12
 16741                           	
 16742                           i1l4291:
 16743  0000'                    	movlw	low(0)
 16744  0000' 0E00               	movwf	((c:i1___awmod@sign)),c
 16745  0002' 6E05'              	line	13
 16746                           	
 16747                           i1l4293:
 16748  0004'                    	btfsc	((c:i1___awmod@dividend+1)),c,7
 16749  0004' BE01'              	goto	i1u566_20
 16750  0006' EF00' F000'        	goto	i1u566_21
 16751  000A' EF00' F000'        
 16752                           i1u566_21:
 16753  000E'                    	goto	i1l4299
 16754  000E' EF00' F000'        i1u566_20:
 16755  0012'                    	line	14
 16756                           	
 16757                           i1l4295:
 16758  0012'                    	negf	((c:i1___awmod@dividend)),c
 16759  0012' 6C00'              	comf	((c:i1___awmod@dividend+1)),c
 16760  0014' 1E01'              	btfsc	status,0
 16761  0016' B0D8               	incf	((c:i1___awmod@dividend+1)),c
 16762  0018' 2A01'              	line	15
 16763                           	
 16764                           i1l4297:
 16765  001A'                    	movlw	low(01h)
 16766  001A' 0E01               	movwf	((c:i1___awmod@sign)),c
 16767  001C' 6E05'              	goto	i1l4299
 16768  001E' EF00' F000'        	line	16
 16769                           	
 16770                           i1l613:
 16771  0022'                    	line	17
 16772                           	
 16773                           i1l4299:
 16774  0022'                    	btfsc	((c:i1___awmod@divisor+1)),c,7
 16775  0022' BE03'              	goto	i1u567_20
 16776  0024' EF00' F000'        	goto	i1u567_21
 16777  0028' EF00' F000'        
 16778                           i1u567_21:
 16779  002C'                    	goto	i1l4303
 16780  002C' EF00' F000'        i1u567_20:
 16781  0030'                    	line	18
 16782                           	
 16783                           i1l4301:
 16784  0030'                    	negf	((c:i1___awmod@divisor)),c
 16785  0030' 6C02'              	comf	((c:i1___awmod@divisor+1)),c
 16786  0032' 1E03'              	btfsc	status,0
 16787  0034' B0D8               	incf	((c:i1___awmod@divisor+1)),c
 16788  0036' 2A03'              	goto	i1l4303
 16789  0038' EF00' F000'        	
 16790                           i1l614:
 16791  003C'                    	line	19
 16792                           	
 16793                           i1l4303:
 16794  003C'                    	movf	((c:i1___awmod@divisor)),c,w
 16795  003C' 5002'              iorwf	((c:i1___awmod@divisor+1)),c,w
 16796  003E' 1003'              	btfsc	status,2
 16797  0040' B4D8               	goto	i1u568_21
 16798  0042' EF00' F000'        	goto	i1u568_20
 16799  0046' EF00' F000'        
 16800                           i1u568_21:
 16801  004A'                    	goto	i1l4319
 16802  004A' EF00' F000'        i1u568_20:
 16803  004E'                    	line	20
 16804                           	
 16805                           i1l4305:
 16806  004E'                    	movlw	low(01h)
 16807  004E' 0E01               	movwf	((c:i1___awmod@counter)),c
 16808  0050' 6E04'              	line	21
 16809                           	goto	i1l4309
 16810  0052' EF00' F000'        	
 16811                           i1l617:
 16812  0056'                    	line	22
 16813                           	
 16814                           i1l4307:
 16815  0056'                    	bcf	status,0
 16816  0056' 90D8               	rlcf	((c:i1___awmod@divisor)),c
 16817  0058' 3602'              	rlcf	((c:i1___awmod@divisor+1)),c
 16818  005A' 3603'              	line	23
 16819                           	incf	((c:i1___awmod@counter)),c
 16820  005C' 2A04'              	goto	i1l4309
 16821  005E' EF00' F000'        	line	24
 16822                           	
 16823                           i1l616:
 16824  0062'                    	line	21
 16825                           	
 16826                           i1l4309:
 16827  0062'                    	
 16828                           	btfss	((c:i1___awmod@divisor+1)),c,(15)&7
 16829  0062' AE03'              	goto	i1u569_21
 16830  0064' EF00' F000'        	goto	i1u569_20
 16831  0068' EF00' F000'        i1u569_21:
 16832  006C'                    	goto	i1l4307
 16833  006C' EF00' F000'        i1u569_20:
 16834  0070'                    	goto	i1l4311
 16835  0070' EF00' F000'        	
 16836                           i1l618:
 16837  0074'                    	goto	i1l4311
 16838  0074' EF00' F000'        	line	25
 16839                           	
 16840                           i1l619:
 16841  0078'                    	line	26
 16842                           	
 16843                           i1l4311:
 16844  0078'                    		movf	((c:i1___awmod@divisor)),c,w
 16845  0078' 5002'              	subwf	((c:i1___awmod@dividend)),c,w
 16846  007A' 5C00'              	movf	((c:i1___awmod@divisor+1)),c,w
 16847  007C' 5003'              	subwfb	((c:i1___awmod@dividend+1)),c,w
 16848  007E' 5801'              	btfss	status,0
 16849  0080' A0D8               	goto	i1u570_21
 16850  0082' EF00' F000'        	goto	i1u570_20
 16851  0086' EF00' F000'        
 16852                           i1u570_21:
 16853  008A'                    	goto	i1l4315
 16854  008A' EF00' F000'        i1u570_20:
 16855  008E'                    	line	27
 16856                           	
 16857                           i1l4313:
 16858  008E'                    	movf	((c:i1___awmod@divisor)),c,w
 16859  008E' 5002'              	subwf	((c:i1___awmod@dividend)),c
 16860  0090' 5E00'              	movf	((c:i1___awmod@divisor+1)),c,w
 16861  0092' 5003'              	subwfb	((c:i1___awmod@dividend+1)),c
 16862  0094' 5A01'              
 16863                           	goto	i1l4315
 16864  0096' EF00' F000'        	
 16865                           i1l620:
 16866  009A'                    	line	28
 16867                           	
 16868                           i1l4315:
 16869  009A'                    	bcf	status,0
 16870  009A' 90D8               	rrcf	((c:i1___awmod@divisor+1)),c
 16871  009C' 3203'              	rrcf	((c:i1___awmod@divisor)),c
 16872  009E' 3202'              	line	29
 16873                           	
 16874                           i1l4317:
 16875  00A0'                    	decfsz	((c:i1___awmod@counter)),c
 16876  00A0' 2E04'              	
 16877                           	goto	i1l4311
 16878  00A2' EF00' F000'        	goto	i1l4319
 16879  00A6' EF00' F000'        	
 16880                           i1l621:
 16881  00AA'                    	goto	i1l4319
 16882  00AA' EF00' F000'        	line	30
 16883                           	
 16884                           i1l615:
 16885  00AE'                    	line	31
 16886                           	
 16887                           i1l4319:
 16888  00AE'                    	movf	((c:i1___awmod@sign)),c,w
 16889  00AE' 5005'              	btfsc	status,2
 16890  00B0' B4D8               	goto	i1u571_21
 16891  00B2' EF00' F000'        	goto	i1u571_20
 16892  00B6' EF00' F000'        i1u571_21:
 16893  00BA'                    	goto	i1l4323
 16894  00BA' EF00' F000'        i1u571_20:
 16895  00BE'                    	line	32
 16896                           	
 16897                           i1l4321:
 16898  00BE'                    	negf	((c:i1___awmod@dividend)),c
 16899  00BE' 6C00'              	comf	((c:i1___awmod@dividend+1)),c
 16900  00C0' 1E01'              	btfsc	status,0
 16901  00C2' B0D8               	incf	((c:i1___awmod@dividend+1)),c
 16902  00C4' 2A01'              	goto	i1l4323
 16903  00C6' EF00' F000'        	
 16904                           i1l622:
 16905  00CA'                    	line	33
 16906                           	
 16907                           i1l4323:
 16908  00CA'                    	movff	(c:i1___awmod@dividend),(c:?i1___awmod)
 16909  00CA' C000' F000'        	movff	(c:i1___awmod@dividend+1),(c:?i1___awmod+1)
 16910  00CE' C001' F001'        	goto	i1l623
 16911  00D2' EF00' F000'        	
 16912                           i1l4325:
 16913  00D6'                    	line	34
 16914                           	
 16915                           i1l623:
 16916  00D6'                    	return	;funcret
 16917  00D6' 0012               	opt stack 0
 16918                           GLOBAL	__end_ofi1___awmod
 16919                           	__end_ofi1___awmod:
 16920  00D8'                    	signat	i1___awmod,90
 16921                           	global	_UART_Write_Text
 16922                           
 16923 ;; *************** function _UART_Write_Text *****************
 16924 ;; Defined at:
 16925 ;;		line 50 in file "setting_hardaware/uart.c"
 16926 ;; Parameters:    Size  Location     Type
 16927 ;;  text            2    1[COMRAM] PTR unsigned char 
 16928 ;;		 -> RAM(1535), 
 16929 ;; Auto vars:     Size  Location     Type
 16930 ;;  i               2    3[COMRAM] int 
 16931 ;; Return value:  Size  Location     Type
 16932 ;;                  1    wreg      void 
 16933 ;; Registers used:
 16934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16935 ;; Tracked objects:
 16936 ;;		On entry : 0/0
 16937 ;;		On exit  : 0/0
 16938 ;;		Unchanged: 0/0
 16939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16940 ;;      Params:         2       0       0       0       0       0       0
 16941 ;;      Locals:         2       0       0       0       0       0       0
 16942 ;;      Temps:          0       0       0       0       0       0       0
 16943 ;;      Totals:         4       0       0       0       0       0       0
 16944 ;;Total ram usage:        4 bytes
 16945 ;; Hardware stack levels used:    1
 16946 ;; Hardware stack levels required when called:    1
 16947 ;; This function calls:
 16948 ;;		_UART_Write
 16949 ;; This function is called by:
 16950 ;;		_MyusartRead
 16951 ;; This function uses a non-reentrant model
 16952 ;;
 16953                           psect	text51,class=CODE,space=0,reloc=2,group=0
 16954                           	file	"setting_hardaware/uart.c"
 16955                           	line	50
 16956                           global __ptext51
 16957                           __ptext51:
 16958  0000'                    psect	text51
 16959                           	file	"setting_hardaware/uart.c"
 16960                           	line	50
 16961                           	global	__size_of_UART_Write_Text
 16962                           	__size_of_UART_Write_Text	equ	__end_of_UART_Write_Text-_UART_Write_Text
 16963  0000                     	
 16964                           _UART_Write_Text:
 16965  0000'                    ;incstack = 0
 16966                           	opt	stack 18
 16967                           	line	51
 16968                           	
 16969                           i1l4237:
 16970  0000'                    ;setting_hardaware/uart.c: 51:     for(int i=0;text[i]!='\0';i++)
 16971                           	movlw	high(0)
 16972  0000' 0E00               	movwf	((c:UART_Write_Text@i+1)),c
 16973  0002' 6E04'              	movlw	low(0)
 16974  0004' 0E00               	movwf	((c:UART_Write_Text@i)),c
 16975  0006' 6E03'              	goto	i1l4243
 16976  0008' EF00' F000'        	
 16977                           i1l155:
 16978  000C'                    	line	52
 16979                           	
 16980                           i1l4239:
 16981  000C'                    ;setting_hardaware/uart.c: 52:         UART_Write(text[i]);
 16982                           	movf	((c:UART_Write_Text@i)),c,w
 16983  000C' 5003'              	addwf	((c:UART_Write_Text@text)),c,w
 16984  000E' 2401'              	movwf	c:fsr2l
 16985  0010' 6ED9               	movf	((c:UART_Write_Text@i+1)),c,w
 16986  0012' 5004'              	addwfc	((c:UART_Write_Text@text+1)),c,w
 16987  0014' 2002'              	movwf	1+c:fsr2l
 16988  0016' 6EDA               	movf	indf2,w
 16989  0018' 50DF               	
 16990                           	call	_UART_Write
 16991  001A' EC00' F000'        	
 16992                           i1l4241:
 16993  001E'                    	infsnz	((c:UART_Write_Text@i)),c
 16994  001E' 4A03'              	incf	((c:UART_Write_Text@i+1)),c
 16995  0020' 2A04'              	goto	i1l4243
 16996  0022' EF00' F000'        	
 16997                           i1l154:
 16998  0026'                    	
 16999                           i1l4243:
 17000  0026'                    	movf	((c:UART_Write_Text@i)),c,w
 17001  0026' 5003'              	addwf	((c:UART_Write_Text@text)),c,w
 17002  0028' 2401'              	movwf	c:fsr2l
 17003  002A' 6ED9               	movf	((c:UART_Write_Text@i+1)),c,w
 17004  002C' 5004'              	addwfc	((c:UART_Write_Text@text+1)),c,w
 17005  002E' 2002'              	movwf	1+c:fsr2l
 17006  0030' 6EDA               	movf	indf2,w
 17007  0032' 50DF               	btfss	status,2
 17008  0034' A4D8               	goto	i1u555_21
 17009  0036' EF00' F000'        	goto	i1u555_20
 17010  003A' EF00' F000'        i1u555_21:
 17011  003E'                    	goto	i1l4239
 17012  003E' EF00' F000'        i1u555_20:
 17013  0042'                    	goto	i1l157
 17014  0042' EF00' F000'        	
 17015                           i1l156:
 17016  0046'                    	line	53
 17017                           	
 17018                           i1l157:
 17019  0046'                    	return	;funcret
 17020  0046' 0012               	opt stack 0
 17021                           GLOBAL	__end_of_UART_Write_Text
 17022                           	__end_of_UART_Write_Text:
 17023  0048'                    	signat	_UART_Write_Text,4217
 17024                           	global	_UART_Write
 17025                           
 17026 ;; *************** function _UART_Write *****************
 17027 ;; Defined at:
 17028 ;;		line 40 in file "setting_hardaware/uart.c"
 17029 ;; Parameters:    Size  Location     Type
 17030 ;;  data            1    wreg     unsigned char 
 17031 ;; Auto vars:     Size  Location     Type
 17032 ;;  data            1    0[COMRAM] unsigned char 
 17033 ;; Return value:  Size  Location     Type
 17034 ;;                  1    wreg      void 
 17035 ;; Registers used:
 17036 ;;		wreg
 17037 ;; Tracked objects:
 17038 ;;		On entry : 0/0
 17039 ;;		On exit  : 0/0
 17040 ;;		Unchanged: 0/0
 17041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17042 ;;      Params:         0       0       0       0       0       0       0
 17043 ;;      Locals:         1       0       0       0       0       0       0
 17044 ;;      Temps:          0       0       0       0       0       0       0
 17045 ;;      Totals:         1       0       0       0       0       0       0
 17046 ;;Total ram usage:        1 bytes
 17047 ;; Hardware stack levels used:    1
 17048 ;; This function calls:
 17049 ;;		Nothing
 17050 ;; This function is called by:
 17051 ;;		_UART_Write_Text
 17052 ;; This function uses a non-reentrant model
 17053 ;;
 17054                           psect	text52,class=CODE,space=0,reloc=2,group=0
 17055                           	line	40
 17056                           global __ptext52
 17057                           __ptext52:
 17058  0000'                    psect	text52
 17059                           	file	"setting_hardaware/uart.c"
 17060                           	line	40
 17061                           	global	__size_of_UART_Write
 17062                           	__size_of_UART_Write	equ	__end_of_UART_Write-_UART_Write
 17063  0000                     	
 17064                           _UART_Write:
 17065  0000'                    ;incstack = 0
 17066                           	opt	stack 18
 17067                           ;UART_Write@data stored from wreg
 17068                           	movwf	((c:UART_Write@data)),c
 17069  0000' 6E00'              	line	42
 17070                           	
 17071                           i1l4121:
 17072  0002'                    ;setting_hardaware/uart.c: 40: void UART_Write(unsigned char data);setting_hardaware/uar
                                 t.c: 41: {;setting_hardaware/uart.c: 42:     while(!TXSTAbits.TRMT);
 17073                           	goto	i1l145
 17074  0002' EF00' F000'        	
 17075                           i1l146:
 17076  0006'                    	
 17077                           i1l145:
 17078  0006'                    	btfss	((c:4012)),c,1	;volatile
 17079  0006' A2AC               	goto	i1u531_21
 17080  0008' EF00' F000'        	goto	i1u531_20
 17081  000C' EF00' F000'        i1u531_21:
 17082  0010'                    	goto	i1l145
 17083  0010' EF00' F000'        i1u531_20:
 17084  0014'                    	goto	i1l4123
 17085  0014' EF00' F000'        	
 17086                           i1l147:
 17087  0018'                    	line	43
 17088                           	
 17089                           i1l4123:
 17090  0018'                    ;setting_hardaware/uart.c: 43:     TXREG = data;
 17091                           	movff	(c:UART_Write@data),(c:4013)	;volatile
 17092  0018' C000' FFAD         	line	44
 17093                           	
 17094                           i1l148:
 17095  001C'                    	return	;funcret
 17096  001C' 0012               	opt stack 0
 17097                           GLOBAL	__end_of_UART_Write
 17098                           	__end_of_UART_Write:
 17099  001E'                    	signat	_UART_Write,4217
 17100                           psect	smallconst
 17101                           	db 0	; dummy byte at the end
 17102  0054' 00                 	global	__smallconst
 17103                           	global	__mediumconst
 17104                           	GLOBAL	__activetblptr
 17105                           __activetblptr	EQU	2
 17106  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
 17107                           	PSECT	rparam,class=COMRAM,space=1,noexec
 17108                           	GLOBAL	__Lrparam
 17109                           	FNCONF	rparam,??,?
 17110                           	GLOBAL	___rparam_used
 17111                           	___rparam_used EQU 1
 17112  0000                     	GLOBAL	___param_bank
 17113                           	___param_bank EQU 0
 17114  0000                     GLOBAL	__Lparam, __Hparam
 17115                           GLOBAL	__Lrparam, __Hrparam
 17116                           __Lparam	EQU	__Lrparam
 17117  0000                     __Hparam	EQU	__Hrparam
 17118  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
 17119                           	global	btemp
 17120                           btemp:
 17121  0000'                    	ds	1
 17122  0000'                    	global	int$flags
 17123                           	int$flags	set btemp
 17124  0000                     	global	wtemp8
 17125                           	wtemp8 set btemp+1
 17126  0000                     	global	ttemp5
 17127                           	ttemp5 set btemp+1
 17128  0000                     	global	ttemp6
 17129                           	ttemp6 set btemp+4
 17130  0000                     	global	ttemp7
 17131                           	ttemp7 set btemp+8
 17132  0000                     	end


Data Sizes:
    Strings     83
    Constant    0
    Data        0
    BSS         120
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     92     112
    BANK0           128     96     116
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 10
		 -> mystring(BANK0[10]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 10
		 -> mystring(BANK0[10]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 10
		 -> mystring(BANK0[10]), NULL(NULL[0]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(BANK0[10]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(BANK0[10]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(BANK0[10]), NULL(NULL[0]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 10
		 -> mystring(BANK0[10]), NULL(NULL[0]), STR_3(CODE[2]), STR_2(CODE[2]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_17(CODE[6]), STR_15(CODE[6]), STR_13(CODE[6]), STR_11(CODE[6]), 
		 -> STR_7(CODE[5]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_28(CODE[3]), STR_17(CODE[6]), STR_15(CODE[6]), STR_13(CODE[6]), 
		 -> STR_11(CODE[6]), STR_7(CODE[5]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_28(CODE[3]), STR_17(CODE[6]), STR_15(CODE[6]), STR_13(CODE[6]), 
		 -> STR_11(CODE[6]), STR_7(CODE[5]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> vfpfcnvrt@ct(BANK0[3]), mystring(BANK0[10]), NULL(NULL[0]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> vfpfcnvrt@ct(BANK0[3]), mystring(BANK0[10]), NULL(NULL[0]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), STR_17(CODE[6]), STR_15(CODE[6]), STR_13(CODE[6]), 
		 -> STR_11(CODE[6]), STR_7(CODE[5]), str(BANK0[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), STR_17(CODE[6]), STR_15(CODE[6]), STR_13(CODE[6]), 
		 -> STR_11(CODE[6]), STR_7(CODE[5]), str(BANK0[10]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), str(BANK0[10]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), str(BANK0[10]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> dbuf(BANK1[80]), STR_9(CODE[3]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> dbuf(BANK1[80]), STR_9(CODE[3]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_9(CODE[3]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 10
		 -> str(BANK0[10]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> str(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> str(BANK0[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1509_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> str(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> str(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> mystring(BANK0[10]), NULL(NULL[0]), STR_8(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), str(BANK0[10]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(BANK0[10]), NULL(NULL[0]), STR_3(CODE[2]), STR_2(CODE[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 10
		 -> str(BANK0[10]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(BANK0[10]), NULL(NULL[0]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(BANK0[10]), 


Critical Paths under _main in COMRAM

    _strstr->_strncmp
    _strcat->_strcpy
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _strcpy->_strlen
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _Mode2->_atoi
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _atoi->_strtok
    _Mode1->_ClearBuffer

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _MyusartRead->i1___awmod
    _UART_Write_Text->_UART_Write

Critical Paths under _main in BANK0

    _main->_Mode3
    _Mode3->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   53609
                        _ClearBuffer
                          _GetString
                              _Mode1
                              _Mode2
                              _Mode3
                  _SYSTEM_Initialize
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mode3                                                8     8      0   46719
                                             88 BANK0      8     8      0
                           _ADC_Read
                        _ClearBuffer
                          _GetString
                        _PrintBuffer
                            ___flmul
                           ___xxtofl
                            _sprintf
                             _strcat
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               6     2      4    3025
                                             26 COMRAM     6     2      4
                          _GetString (ARG)
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     0      4    1897
                                             29 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   37717
                                             70 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   37213
                                             86 COMRAM     6     0      6
                                             68 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   36686
                                             76 COMRAM    10     4      6
                                             56 BANK0     12    12      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (2) _strncmp                                             13     7      6     865
                                             13 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   29517
                                             64 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             19 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                              10     6      4    1217
                                             19 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4137
                                             29 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     400
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             22 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             38 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                             13 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                             13 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             52 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    3442
                                             13 COMRAM    20    12      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                             13 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3413
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                             13 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     723
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             13 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                             13 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             8     6      2     121
                                             13 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _Mode2                                                0     0      0    3729
                        _ClearBuffer
                          _GetString
                        _PrintBuffer
                               _atoi
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               4     0      4    2056
                                             26 COMRAM     4     0      4
                          _GetString (ARG)
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               7     3      4     787
                                             19 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              7     3      4     787
                                             19 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strchr                                               6     2      4     544
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1605
                                             30 COMRAM    15    13      2
                          _GetString (ARG)
                             ___wmul
                            _isdigit
                            _isspace
                             _strtok (ARG)
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             13 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _GetString                                            2     0      2       0
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Mode1                                                0     0      0      68
                        _ClearBuffer
                        _PrintBuffer
 ---------------------------------------------------------------------------------
 (2) _PrintBuffer                                          2     0      2       0
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      68
                                             13 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Lo_ISR                                              5     5      0     536
                                              8 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (11) _MyusartRead                                         2     2      0     536
                                              6 COMRAM     2     2      0
                    _UART_Write_Text
                          i1___awmod
 ---------------------------------------------------------------------------------
 (12) i1___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) _UART_Write_Text                                     4     2      2     188
                                              1 COMRAM     4     2      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (13) _UART_Write                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _GetString
   _Mode1
     _ClearBuffer
     _PrintBuffer
   _Mode2
     _ClearBuffer
     _GetString
     _PrintBuffer
     _atoi
       _GetString (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
       _isspace (ARG)
       _strtok (ARG)
         _GetString (ARG)
         _strcspn (ARG)
           _strchr
         _strspn (ARG)
           _strchr
     _strtok
       _GetString (ARG)
       _strcspn (ARG)
         _strchr
       _strspn (ARG)
         _strchr
   _Mode3
     _ADC_Read
     _ClearBuffer
     _GetString
     _PrintBuffer
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _GetString (ARG)
             ___wmul (ARG)
             _isdigit (ARG)
             _isspace (ARG)
             _strtok (ARG)
               _GetString (ARG)
               _strcspn (ARG)
                 _strchr
               _strspn (ARG)
                 _strchr
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
               _strlen (ARG)
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strstr
       _GetString (ARG)
       _strchr (ARG)
       _strlen (ARG)
       _strncmp (ARG)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _UART_Initialize
   _strstr
     _GetString (ARG)
     _strchr (ARG)
     _strlen (ARG)
     _strncmp (ARG)

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write_Text
       _UART_Write
     i1___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80     60      74       5       90.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5C      70       1       88.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     134      15        0.0%
DATA                 0      0     134       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Dec 07 19:32:17 2018

                 ___fldiv@aexp 000025                   ___fldiv@bexp 000024                   ___fldiv@sign 00001D  
                           l60 0000B4                             l52 000018                             l61 0000D2  
                           l53 000014                             l62 0000E2                             l54 00002E  
                           l70 000114                             l63 0000EC                             l55 00003A  
                           l71 000118                             l56 000036                             l80 0000D8  
                           l49 000010                             l57 000050                             l81 00009E  
                           l58 0000A6                             l66 0000E6                             l82 0000D4  
                           l59 0000A6                             l67 000022                             l83 0000D0  
                           l68 0000DA                             l84 0000E0                             l76 000008  
                           l69 0000E2                             l85 0000E4                             l77 00003A  
                           l86 0000E4                             l78 0000DC                             l79 00006C  
                           _GO 007E11                   ___awdiv@sign 000012                             bsr 000FE0  
          ___wmul@multiplicand 00000F                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000        __end_of_CCP1_Initialize 00000A                   __CFG_CP2$OFF 000000  
                 __CFG_CP3$OFF 000000                            l112 000010                            l202 000012  
                          l300 00054C                            l205 000072                            l301 000596  
                          l206 000072                            l310 0007B8                            l142 000020  
                          l151 00000C                            l207 000084                            l311 000812  
                          l303 00058E                            l160 00002C                            l208 0000A6  
                          l320 0009EE                            l312 00080E                            l304 0005F4  
                          l161 000060                            l321 000990                            l305 0005D2  
                          l162 000060                            l250 000070                            l330 000B68  
                          l322 0009B8                            l314 000876                            l306 0005F0  
                          l251 000054                            l331 000BCE                            l323 000994  
                          l307 00071A                            l252 00008E                            l332 000B74  
                          l324 0009CE                            l316 00087E                            l308 000620  
                          l260 00008E                            l172 000006                            l253 0000B4  
                          l245 000026                            l341 000CC4                            l333 000BFE  
                          l317 000A8A                            l309 00073C                            l181 000008  
                          l254 0000D0                            l326 000AC8                            l318 00089A  
                          l270 00014C                            l262 0000AC                            l350 0000DE  
                          l247 000040                            l343 000C82                            l335 000C22  
                          l327 000ACC                            l319 000948                            l271 00019A  
                          l351 0001A0                            l600 000022                            l328 000B04  
                          l280 000434                            l272 000D22                            l264 0000B8  
                          l360 00024E                            l352 000110                            l601 000040  
                          l249 000048                            l329 000CFA                            l345 000C98  
                          l337 000C2E                            l281 00035C                            l273 0002CA  
                          l265 0001D0                            l257 000058                            l361 0002E8  
                          l353 0000FE                            l610 0000EA                            l602 0000C2  
                          l290 00049E                            l282 00031E                            l274 000276  
                          l266 00017C                            l258 0000D6                            l370 0004BE  
                          l362 00051A                            l603 00006E                            l339 000CB8  
                          l283 0003B6                            l363 000468                            l355 00015C  
                          l604 000062                            l620 00009A                            l292 0004AA  
                          l284 0003FA                            l276 000230                            l268 000136  
                          l348 0004DC                            l364 0003F8                            l605 000080  
                          l621 0000AA                            l613 000022                            l293 0004D8  
                          l285 0003BA                            l349 0001A4                            l357 000184  
                          l373 00003C                            l606 000084                            l622 0000CA  
                          l614 00003C                            l286 000430                            l278 000246  
                          l366 000388                            l358 00019C                            l374 000014  
                          l607 0000AE                            l623 0000D6                            l615 0000AE  
                          l295 0004C8                            l287 0004AE                            l279 000294  
                          l359 000252                            l375 000058                            l608 0000BE  
                          l616 000062                            l632 000042                            l288 000478  
                          l368 0003B0                            l376 000060                            l609 0000DE  
                          l617 000056                            l633 000084                            l641 000042  
                          l297 0004D4                            l369 000428                            l618 000074  
                          l642 000084                            l298 000550                            l379 000028  
                          l619 000078                            l635 0000AE                            l643 0000D0  
                          l299 000544                            l644 000118                            l652 00002A  
                          l900 0000AA                            l637 0000B4                            l653 00003E  
                          l901 0000E8                            l638 0000B8                            l646 00015C  
                          l910 0001F2                            l902 0000DE                            l911 0001FA  
                          l903 0000FC                            l648 000162                            l920 0002BA  
                          l912 00020E                            l904 000164                            l680 0000C0  
                          l649 000166                            l921 00042E                            l913 000230  
                          l905 000124                            l681 000118                            l930 0003FE  
                          l922 000370                            l914 0002CE                            l906 0001D4  
                          l682 0000EC                            l931 000414                            l923 00036C  
                          l915 000266                            l907 000230                            l683 000100  
                          l675 00002E                            l940 00053A                            l932 00042A  
                          l924 000380                            l916 000582                            l908 00021A  
                          l684 0000F0                            l676 000150                            l933 000478  
                          l925 0003BE                            l917 0002CA                            l909 0001D8  
                          l685 000114                            l677 0000C4                            l942 00050E  
                          l934 00045E                            l926 000418                            l918 00029E  
                          l686 00013C                            l678 0000A8                            l943 000536  
                          l935 000478                            l927 0003C2                            l919 0002A6  
                          l679 0000AC                            l960 00012E                            l952 000020  
                          l944 00054E                            l936 000474                            l928 0003E0  
                          l961 00041E                            l953 00005E                            l945 000554  
                          l937 0004EA                            l929 0003F6                            l970 0002A0  
                          l962 000166                            l954 000054                            l946 00056E  
                          l938 0004E6                            l971 000272                            l963 00023E  
                          l955 000072                            l939 0004E2                            l980 0003A8  
                          l972 00028C                            l964 0001C6                            l956 000092  
                          l981 0003E2                            l973 0002B2                            l965 000208  
                          l957 0000D0                            l949 000048                            l982 0003FA  
                          l974 000314                            l966 0001FA                            l958 0000C6  
                          l990 00008E                            l983 000400                            l975 0002FA  
                          l967 00023C                            l959 0000E4                            l991 0000C8  
                          l895 000020                            l976 000314                            l968 000252  
                          l992 0000C2                            l896 00005E                            l977 000310  
                          l969 00026E                            l993 0000D8                            l897 000054  
                          l978 000374                            l994 000114                            l986 000020  
                          l898 000072                            l979 000370                            l987 00005A  
                          l899 000090                            l996 0000FC                            l988 000054  
                          l997 00046C                            l989 00006E                            l998 0002EA  
                          l999 0002BC                   __CFG_CPB$OFF 000000                            _RC2 007C12  
                 __CFG_CPD$OFF 000000                            _pad 000000                            _str 00000A  
                 ___awmod@sign 000012                            wreg 000FE8                   __CFG_IESO$ON 000000  
                 ___flmul@aexp 000028                   ___flmul@bexp 00002D                   ___flmul@sign 000027  
                 ___flmul@temp 000032                   ___flmul@prod 00002E                   __CFG_LVP$OFF 000000  
                 ___fltol@exp1 000016                   __CFG_WDT$OFF 000000                           l1000 0002D6  
                         l1001 0002FC                           l1010 00041E                           l1002 00035E  
                         l1011 000450                           l1003 000344                           l1012 000446  
                         l1004 00035E                           l1100 000118                           l1005 00035A  
                         l1101 000164                           l1006 0003BE                           l1102 00021C  
                         l1007 0003BA                           l1103 0001D8                           l1040 0000E2  
                         l1008 0003EC                           l1104 000218                           l1041 0000FE  
                         l1009 000454                           l1105 000214                           l1210 000088  
                         l1050 0001C6                           l1042 0000E6                           l1034 000056  
                         l1130 000032                           l1122 00003A                           l1115 00004E  
                         l1211 0000D4                           l1043 000130                           l1035 00006A  
                         l1108 00003A                           l1116 000058                           l1212 0000DC  
                         l1044 000144                           l1036 000098                           l1060 00010C  
                         l1132 000028                           l1045 000134                           l1037 0001DA  
                         l1061 000100                           l1133 0000D8                           l1221 000052  
                         l1230 00008C                           l1038 0000B0                           l1134 0000D4  
                         l1142 000026                           l1222 00007E                           l1071 0000AC  
                         l1231 000080                           l1047 000166                           l1039 0000A0  
                         l1055 0000A6                           l1143 00000C                           l1080 00015A  
                         l1240 000064                           l1208 00003C                           l1048 000166  
                         l1136 00008A                           l1144 00004A                           l1152 00005C  
                         l1081 0001C2                           l1073 0000E4                           l1241 00006C  
                         l1209 0000E8                           l1049 00017A                           l1057 000092  
                         l1137 0000DC                           l1145 00004A                           l1217 000076  
                         l1082 00015E                           l1250 000064                           l1162 000028  
                         l1091 0002A0                           l1075 0000A2                           l1251 00006C  
                         l1059 00009E                           l1155 000000                           l1171 000014  
                         l1219 00003A                           l1092 0002A0                           l1084 000218  
                         l1076 0000FA                           l1068 00001C                           l1228 000000  
                         l1236 000018                           l1172 00000C                           l1180 00003E  
                         l1077 000112                           l1069 000014                           l1229 000040  
                         l1237 00000C                           l1173 000048                           l1165 000018  
                         l1086 000250                           l1078 0000FE                           l1246 000018  
                         l1174 000068                           l1166 000014                           l1182 0000F0  
                         l1087 000266                           l1079 00010A                           l1239 000064  
                         l1247 00000C                           l1167 000066                           l1183 0000F4  
                         l1168 000066                           l1192 0000E2                           l1089 000294  
                         l1249 000064                           l1097 00008A                           l1177 00003A  
                         l1193 000094                           l1098 000230                           l1178 00013E  
                         l1194 00002A                           l1099 000188                           l1179 000050  
                         l1195 000068                           l1196 0000EE                           l1198 0000DA  
                         l4111 000030                           l1199 0000DE                           l4113 00003C  
                         l5001 0002EA                           l4115 000040                           l5011 000352  
                         l5003 0002FC                           l4117 000080                           l4109 000000  
                         l4141 000000                           l4133 000000                           l5101 000022  
                         l5013 00036E                           l5021 0003BE                           l5005 000300  
                         l2621 000000                           l4151 000008                           l4119 00008C  
                         l4143 00000C                           l4135 00000C                           l5111 000062  
                         l5103 000030                           l5031 000432                           l5023 0003D8  
                         l5015 00037A                           l5007 00030E                           l2631 000012  
                         l2623 000000                           l4153 000028                           l4161 000000  
                         l4145 000018                           l4137 000018                           l5113 000078  
                         l5121 0000AE                           l5105 00003C                           l5041 00046C  
                         l5033 000440                           l5025 0003EC                           l5017 000388  
                         l5009 00033C                           l5201 0000C4                           l2641 00001C  
                         l2633 000014                           l2625 00000A                           l2801 000004  
                         l4155 00002C                           l4163 00000C                           l4147 000030  
                         l4139 000030                           l4171 000038                           l4251 00006A  
                         l5051 000004                           l5123 0000BE                           l5115 00008E  
                         l5107 00004E                           l5131 00002E                           l5035 000446  
                         l5027 000406                           l5019 0003B2                           l5043 000000  
                         l5203 0000D4                           l5211 000118                           l2651 000000  
                         l2643 00001E                           l2635 000016                           l2627 00000E  
                         l2803 000008                           l4157 00003C                           l4149 000000  
                         l5221 000004                           l4181 000088                           l4173 00003C  
                         l4165 000000                           l4261 0000B0                           l4253 000080  
                         l4245 000002                           l5061 000038                           l5053 000012  
                         l5125 0000CA                           l5117 00009A                           l5109 000056  
                         l5141 0000AE                           l5133 000042                           l5029 000422  
                         l5037 000454                           l4501 000090                           l5045 000010  
                         l5213 000128                           l5205 0000E8                           l5301 0000CC  
                         l2653 000002                           l2645 000000                           l2637 000018  
                         l2629 000010                           l2805 00000C                           l4159 000040  
                         l4327 000000                           l5223 000018                           l5231 000000  
                         l4191 0000E8                           l4183 0000A8                           l4175 000058  
                         l4167 000012                           l4271 000144                           l4263 0000E6  
                         l4255 000094                           l4247 000012                           l5071 00006E  
                         l5063 000040                           l5055 00001A                           l5127 0000D6  
                         l5119 0000A0                           l5143 0000B8                           l5135 000070  
                         l5151 000070                           l5039 000458                           l4511 0000CA  
                         l4503 000096                           l5047 000048                           l5215 00013C  
                         l5207 0000F0                           l5311 000160                           l5303 0000D6  
                         l2647 000002                           l2639 00001A                           l4329 000004  
                         l5225 000046                           l5241 00009A                           l5233 000014  
                         l4185 0000C0                           l4177 000070                           l4169 00002C  
                         l4193 000000                           l4281 0001A2                           l4273 000152  
                         l4265 0000E8                           l4257 000098                           l4249 000020  
                         l5081 0000AE                           l5073 000084                           l5065 000048  
                         l5057 000022                           l5049 000000                           l5137 000084  
                         l5129 000000                           l5161 000156                           l5153 000084  
                         l5145 000000                           l4601 0002CE                           l4521 00010E  
                         l4513 0000DE                           l4505 0000A4                           l5217 000150  
                         l5209 000100                           l4441 000000                           l5401 0005B6  
                         l5313 00017C                           l5305 0000FC                           l5321 0001D0  
                         l2649 000006                           l5227 00004E                           l5219 000000  
                         l5251 00010A                           l5243 0000A2                           l5235 00001C  
                         l4187 0000CC                           l4179 000084                           l4195 000084  
                         l4283 0001B2                           l4275 000174                           l4267 0000F4  
                         l4259 0000A0                           l5091 0000EA                           l5083 0000B4  
                         l5075 00008A                           l5067 00005A                           l5059 000030  
                         l5139 0000A8                           l5163 00015C                           l5155 000092  
                         l5147 00002E                           l5171 00002A                           l4603 0002F4  
                         l4611 000370                           l4531 000130                           l4523 00011C  
                         l4515 0000E0                           l4507 0000AA                           l4451 00008A  
                         l4443 000012                           l5411 00060C                           l5403 0005D2  
                         l5331 000276                           l5323 0001F6                           l5315 00019A  
                         l5307 000136                           l5229 000058                           l5261 000218  
                         l5253 000112                           l5245 0000AC                           l5237 000020  
                         l4189 0000D4                           l4197 00009A                           l4285 0001C0  
                         l4277 00017A                           l4269 000134                           l5077 0000A0  
                         l5069 000062                           l5085 0000C2                           l5093 000000  
                         l5165 000166                           l5157 0000D0                           l5149 000042  
                         l5173 00003E                           l4621 0003CC                           l4613 000396  
                         l4605 00034A                           l4541 000144                           l4533 000134  
                         l4525 000124                           l4509 0000BA                           l4517 0000E8  
                         l5181 00002E                           l4701 000000                           l4453 0000DC  
                         l4445 000028                           l4461 000026                           l5501 000AEC  
                         l5413 000620                           l5421 00071A                           l5405 0005E4  
                         l5341 0002E4                           l5333 000294                           l5325 000230  
                         l5317 0001A4                           l5309 00014C                           ?_pad 00001D  
                         l5263 000250                           l5255 00015E                           l5247 0000E4  
                         l5239 000050                           l4199 0000A6                           l4287 0001C6  
                         l4279 00017E                           l5087 0000D2                           l5079 0000A8  
                         l5095 000004                           l5159 0000DE                           l5167 000000  
                         l4631 0003FE                           l4623 0003DA                           l4615 0003A6  
                         l4607 00034C                           l4551 000158                           l4543 000148  
                         l4535 000138                           l4527 000128                           l4519 0000FC  
                         l5191 00007C                           l5183 000058                           l5175 000000  
                         l4711 0000A2                           l4703 000020                           l4447 000032  
                         l4455 000000                           l4471 000068                           l4463 000000  
                         l5511 000B2E                           l5503 000AFC                           l5431 0007EA  
                         l5423 00073C                           l5415 000684                           l5407 0005F4  
                         l5351 0003BA                           l5343 00031A                           l5335 00029E  
                         l5327 000246                           l5319 0001CC                           l5265 000266  
                         l5257 0001BA                           l5249 0000FE                           l4289 0001DA  
                         l5089 0000DE                           l5097 000012                           l4801 000092  
                         l5169 000016                           l4641 000440                           l4633 00040E  
                         l4625 0003E0                           l4617 0003BA                           l4609 00035C  
                         l4561 0001BC                           l4553 00015C                           l4545 00014C  
                         l4537 00013C                           l4529 00012C                           l4481 00001A  
                         l5193 000090                           l5185 00005A                           l5177 000016  
                         l4721 00010C                           l4705 00005E                           l4713 0000A6  
                         l4449 000050                           l4457 00000C                           l4465 00000C  
                         l4473 000000                           l5521 000B68                           l5513 000B3E  
                         l5505 000B04                           l5441 00086A                           l5433 0007FA  
                         l5425 000770                           l5417 0006DC                           l5409 0005FC  
                         l5361 000448                           l5353 0003EE                           l5345 00031E  
                         l5337 0002C6                           l5329 00025A                           l5281 000030  
                         l5273 000000                           l5601 00006A                           l5267 000278  
                         l5259 0001C2                           l5099 00001A                           l4803 0000A2  
                         l4811 0000D0                           l4651 0004A2                           l4643 000456  
                         l4627 0003EE                           l4619 0003C2                           l4635 000418  
                         l4571 000208                           l4563 0001CC                           l4547 000150  
                         l4539 000140                           l4555 000164                           l4491 000056  
                         l4483 000020                           l5195 0000A4                           l5187 00006A  
                         l5179 00002A                           l4715 0000B8                           l4707 000086  
                         l4459 00001E                           l4467 000014                           l4723 000000  
                         l4475 00003A                           l4731 000052                           l5531 000BC4  
                         l5523 000B74                           l5515 000B46                           l5507 000B14  
                         l5451 000920                           l5443 000876                           l5435 000812  
                         l5427 0007A2                           l5419 000710                           l5363 00045A  
                         l5371 0004AE                           l5355 0003FA                           l5347 000352  
                         l5339 0002CA                           l5291 00008E                           l5283 000058  
                         l5275 00000A                           l5611 0000FE                           l5603 000072  
                         l4901 0003F4                           l4821 000116                           l4813 0000E4  
                         l4805 0000B2                           l4661 00052E                           l4653 0004DC  
                         l4645 00046C                           l4629 0003F6                           l4637 00042E  
                         l4581 000262                           l4573 00020E                           l4565 0001E6  
                         l4557 000168                           l4549 000154                           l4485 000030  
                         l4493 00005E                           l4477 000000                           l5197 0000AC  
                         l5189 00006E                           l4717 0000FC                           l4709 000092  
                         l4741 000076                           l4469 000048                           l4725 000018  
                         l4733 000064                           l5541 000C16                           l5525 000B7A  
                         l5533 000BCE                           l5517 000B54                           l5509 000B26  
                         l5461 00096A                           l5453 000932                           l5445 00089A  
                         l5437 000846                           l5429 0007B8                           l5381 000506  
                         l5373 0004BC                           l5365 00046C                           l5349 00035C  
                         l5357 000434                           l5293 0000A0                           l5285 000062  
                         l5277 00001A                           l5621 0001C6                           l5613 000110  
                         l5605 000080                           l5701 000000                           l4911 00041E  
                         l4903 0003FA                           l4831 000162                           l4823 00012A  
                         l4815 0000FA                           l4807 0000C6                           l4671 00055A  
                         l4663 00053A                           l4647 000488                           l4655 0004EA  
                         l4639 000432                           l4591 00029E                           l4583 000266  
                         l4575 000218                           l4567 0001F2                           l4559 0001A0  
                         l4495 000072                           l4487 000040                           l4479 00000C  
                         l5199 0000B6                           l4719 000100                           l4751 000154  
                         l4743 00008A                           l4735 000072                           l4727 000000  
                         l5551 000C4A                           l5543 000C22                           l5535 000BE0  
                         l5527 000BA0                           l5519 000B5C                           l5471 0009A4  
                         l5463 00097A                           l5455 000940                           l5447 0008FE  
                         l5439 000856                           l5391 00056A                           l5383 00053C  
                         l5375 0004C8                           l5367 000478                           l5359 000444  
                         l5295 0000AC                           l5287 00006A                           l5279 000028  
                         l5631 000264                           l5623 0001D6                           l5615 00015C  
                         l5607 0000A4                           l5703 000028                           l5711 000058  
                         l2799 000000                           l4905 000400                           l4841 0001BE  
                         l4833 000166                           l4817 00010A                           l4825 00012E  
                         l4809 0000C8                           l4921 000030                           l4913 000000  
                         l4673 000568                           l4665 000548                           l4657 0004FA  
                         l4649 000494                           l4593 0002A6                           l4585 000276  
                         l4577 00023E                           l4569 0001FA                           l4497 000078  
                         l4489 000054                           l4761 00021C                           l4745 000098  
                         l4753 000188                           l4737 000000                           l4681 00000E  
                         l4729 00003A                           l5561 000CC4                           l5553 000C82  
                         l5545 000C2E                           l5537 000BFE                           l5529 000BBC  
                         l5481 0009E0                           l5473 0009A8                           l5465 00097E  
                         l5449 00090C                           l5457 000948                           l5393 00057C  
                         l5385 000544                           l5377 0004D8                           l5369 000492  
                         l5297 0000B8                           l5289 00007C                           l5633 00027A  
                         l5641 0002E8                           l5625 000208                           l5617 000184  
                         l5609 0000DE                           l5713 000064                           l5721 0000E2  
                         l5705 000000                           l4771 00001C                           l5731 000018  
                         l4907 000406                           l4851 000208                           l4843 0001C6  
                         l4835 00018E                           l4827 00013E                           l4819 000112  
                         l4931 000074                           l4923 000040                           l4915 00000C  
                         l4675 00056E                           l4667 00054E                           l4659 00050E  
                         l4595 0002B4                           l4587 000284                           l4579 00024E  
                         l4499 00008A                           l4763 000230                           l4755 0001C4  
                         l4747 000104                           l4739 000020                           l4691 000068  
                         l4683 000026                           l5563 000CD4                           l5555 000C98  
                         l5547 000C3E                           l5539 000C04                           l5491 000A82  
                         l5483 0009E4                           l5475 0009AE                           l5467 000984  
                         l5459 00095C                           l5395 00058E                           l5379 0004EA  
                         l5387 000550                           l5299 0000C8                           l5571 000000  
                         l5651 0003F8                           l5643 000316                           l5635 000288  
                         l5627 000218                           l5619 0001A4                           l5723 0000EE  
                         l5715 000068                           l5707 000012                           l4773 000028  
                         l4765 000000                           l5741 0000A0                           l5733 00002E  
                         l5725 000000                           l4909 00040A                           l4861 000268  
                         l4853 000226                           l4845 0001D6                           l4837 00019E  
                         l4829 00014E                           l4781 000020                           l4941 0000AE  
                         l4933 00007A                           l4925 000054                           l4917 00001A  
                         l4677 000582                           l4669 000554                           l4597 0002BA  
                         l4589 000292                           l4757 0001D8                           l4749 000118  
                         l4693 000070                           l4685 000034                           l5565 000CDA  
                         l5557 000CAC                           l5549 000C44                           l5469 000994  
                         l5477 0009B8                           l5485 0009EE                           l5493 000A8A  
                         l5397 000596                           l5389 000558                           l5581 000080  
                         l5573 00002A                           l5661 00049A                           l5653 000438  
                         l5645 000388                           l5637 0002B8                           l5629 000252  
                         l5709 00002A                           l5717 000094                           l4767 00003A  
                         l5815 000144                           l5743 0000C2                           l5735 00003A  
                         l5727 000004                           l4871 0002B2                           l4863 000272  
                         l4855 000228                           l4847 0001EA                           l4839 0001AE  
                         l4783 000030                           l4791 00005E                           l4775 000000  
                         l4951 000110                           l4943 0000C2                           l4935 000088  
                         l4927 00005A                           l4919 000020                           l4599 0002C4  
                         l4759 000200                           l4695 00009C                           l4687 000040  
                         l4679 000000                           l5559 000CB8                           l5567 000CFA  
                         l5495 000AA8                           l5487 000A46                           l5479 0009CE  
                         l5399 0005A8                           l5583 00009C                           l5575 000036  
                         l5671 0004D8                           l5663 0004AE                           l5655 000464  
                         l5647 0003B0                           l5639 0002E4                           l5591 000000  
                         l5719 0000A6                           l5751 000000                           l4769 000000  
                         l5745 0000D2                           l5737 000050                           l5729 00000C  
                         l4881 000324                           l4873 0002B6                           l4865 00027C  
                         l4857 00023C                           l4849 0001F8                           l4793 000072  
                         l4785 000040                           l4777 00000C                           l4961 00014C  
                         l4953 000114                           l4945 0000C8                           l4937 00008E  
                         l4929 00006E                           l4697 0000B4                           l4689 000054  
                         l5569 000D22                           l5497 000ACC                           l5489 000A7A  
                         l5585 0000AE                           l5577 00003E                           l5665 0004BA  
                         l5649 0003C4                           l5657 000468                           l5593 000024  
                         l5673 0004DC                           l5681 000000                           l5761 000082  
                         l5753 000004                           l5747 0000E2                           l5739 000074  
                         l4891 00038E                           l4883 000330                           l4875 0002C4  
                         l4867 00028A                           l4859 000252                           l4795 000078  
                         l4787 000054                           l4779 00001A                           l4971 000196  
                         l4963 000164                           l4955 000120                           l4947 0000E8  
                         l4939 00009E                           l4699 0000D0                           l5499 000ADE  
                         l5587 0000F4                           l5579 000050                           l5675 000500  
                         l5659 00048C                           l5667 0004BE                           l5595 000032  
                         l5683 000008                           l5691 000012                           l5771 0000DA  
                         l5763 0000A8                           l5755 00000E                           l5749 0000E4  
                         l4893 0003A8                           l4885 00033E                           l4877 0002F2  
                         l4869 0002A0                           l4797 00007E                           l4789 000056  
                         l4981 0001EC                           l4973 0001A6                           l4965 000170  
                         l4957 00012A                           l4949 0000FC                           l5589 00013E  
                         l5677 00050E                           l5669 0004CC                           l5597 000042  
                         l5685 000014                           l5693 00001A                           l5765 0000BC  
                         l5757 000022                           l5773 0000E6                           l5781 000032  
                         l4895 0003C2                           l4887 000368                           l4879 000308  
                         l4799 00008C                           l4991 000290                           l4983 000208  
                         l4975 0001B2                           l4967 00017C                           l4959 000140  
                         l5679 00051A                           l5599 000046                           l5687 00003C  
                         l5695 000022                           l5775 000114                           l5767 0000C8  
                         l5759 000036                           l5791 00009E                           l5783 00003A  
                         l4897 0003E2                           l4889 000374                           l4993 00029E  
                         l4985 000214                           l4977 0001C2                           l4969 00018A  
                         l5697 000046                           l5689 000000                           l5769 0000D6  
                         l5793 0000C8                           l5785 000064                           l5777 000000  
                         l4899 0003E6                           l4995 0002BC                           l4987 000230  
                         l4979 0001DC                           l5699 00005C                           l5787 00006C  
                         l5779 000008                           l4997 0002C6                           l4989 00025A  
                         l5789 000096                           l4999 0002D4                           _ADON 007E10  
                         STR_1 000001                           STR_2 000052                           STR_3 000000  
                         STR_4 00002D                           STR_5 000021                           STR_6 000037  
                         STR_7 000000                           STR_8 000032                           STR_9 00004F  
                         _CREN 007D5C                           u6000 00011C                           u6001 000118  
                         u6010 0001A0                           u6011 00019C                           u5300 00007C  
                         u6100 000292                           u6020 0001B8                           u5301 000078  
                         u6101 00028E                           u6021 0001B2                           u6110 0002B4  
                         u6030 0001BA                           u6111 0002B0                           u5400 00002C  
                         u7000 000440                           u6200 000440                           u6120 0002F4  
                         u6040 0001E6                           u5401 000028                           u7001 00043C  
                         u6201 00043C                           u6121 0002F0                           u6041 0001E2  
                         u5330 000030                           u5410 000070                           u7010 000012  
                         u6210 000456                           u6130 00035C                           u6050 000208  
                         u5331 00002C                           u5411 00006C                           u7011 00000E  
                         u6211 000452                           u6131 000358                           u6051 000204  
                         u5340 000060                           u5420 0000C0                           u7020 000030  
                         u7100 000070                           u6300 000568                           u6220 00046C  
                         u6140 000396                           u6060 00022C                           u5341 00005C  
                         u5421 0000BC                           u7021 00002C                           u7101 00006C  
                         u6301 000564                           u6221 000468                           u6141 000392  
                         u6061 000228                           u5270 000020                           u5350 000030  
                         u5430 00002A                           u7030 00005A                           u7110 00008E  
                         u6230 000488                           u6150 0003A6                           u6070 00023E  
                         u6310 00000E                           u5351 00002C                           u5431 000022  
                         u7031 000056                           u7111 00008A                           u6231 000484  
                         u6151 0003A2                           u6071 00023A                           u6311 00000A  
                         u5280 000030                           u5360 000060                           u5600 00012C  
                         u7040 00007C                           u7120 0000BE                           u7200 000156  
                         u6240 0004A2                           u6160 0003DA                           u6080 00024E  
                         u6400 0000F2                           u6320 000034                           u8000 00009C  
                         u5281 00002C                           u5361 00005C                           u5601 000128  
                         u7041 000078                           u7121 0000BA                           u7201 000152  
                         u6241 00049E                           u6161 0003D6                           u6081 00024A  
                         u6401 0000EC                           u6321 000030                           u8001 000098  
                         u5370 000024                           u5290 00006C                           u5610 000152  
                         u7050 0000A0                           u7130 00002E                           u7210 000016  
                         u6250 0004DC                           u6170 0003EE                           u6090 000284  
                         u6410 0000F4                           u6330 00008E                           u8010 0000AE  
                         u5371 000020                           u5611 00014E                           u7051 00009C  
                         u7131 00002A                           u7211 000012                           u6251 0004D8  
                         u6171 0003EA                           u6091 000280                           u6331 00008A  
                         u8011 0000AA                           u5380 00005C                           u7300 000046  
                         u5460 000052                           u5620 000162                           u7060 0000D2  
                         u7140 000070                           u6260 0004FA                           u6180 00040E  
                         u7220 000016                           u6340 00009C                           u6420 000050  
                         u8020 0000EC                           u8100 0001D6                           _RCIF 007CF5  
                         u5381 000058                           u7301 000042                           u5277 000016  
                         u5461 00004A                           u5621 00015E                           u7061 0000CE  
                         u7141 00006C                           u6261 0004F6                           u6181 00040A  
                         u7221 000012                           u6341 000098                           u8021 0000E8  
                         u8101 0001D2                           u7310 000040                           u5390 000012  
                         u5454 00003A                           u5630 000174                           u7070 000012  
                         u7150 0000A8                           u6270 00050A                           u6190 000426  
                         u7230 00004E                           u6350 000040                           u6510 000104  
                         u6430 000062                           u8030 00012C                           u8110 000218  
                         u5391 00000E                           u5455 000036                           u5631 000170  
                         u7071 00000E                           u7151 0000A4                           u6271 000506  
                         u6191 000422                           u6511 000100                           u6431 00005E  
                         u8111 000214                           u7400 00020E                           u7320 000050  
                         u5448 00002C                           u5640 0001B2                           u5560 000012  
                         u7080 000030                           u6600 000030                           u7160 00002E  
                         u6280 00052E                           u7240 00007C                           u6360 00005E  
                         u6520 000138                           u6440 000030                           u8120 000264  
                         u8040 000024                           u8200 000058                           u7401 000208  
                         u7321 00004C                           u5297 000062                           u5641 0001AE  
                         u5561 00000E                           u7081 00002C                           u6601 00002C  
                         u7161 00002A                           u6281 00052A                           u7241 000078  
                         u6361 00005A                           u6505 0000AC                           u6441 00002A  
                         u8025 0000DC                           u8121 000260                           u8041 000020  
                         u8201 000054                           u7410 000210                           u7330 000078  
                         u5490 000080                           u5650 0001C0                           u5570 000020  
                         u7090 00004E                           u6610 000040                           u7170 000070  
                         u6290 000548                           u7250 000090                           u6370 000086  
                         u6530 000154                           u6506 0000B6                           u6450 000032  
                         u8130 000316                           u8050 00006A                           u8210 0000A6  
                         i1l91 000044                           u5491 00007C                           u5651 0001BC  
                         u5571 00001C                           u7091 00004A                           u6611 00003C  
                         u7171 00006C                           u6291 000544                           u7251 00008C  
                         u7235 000044                           u6371 000082                           u6355 000036  
                         u6531 000150                           u6507 0000C6                           u6427 000046  
                         u8027 0000D2                           u8131 000312                           u8051 000066  
                         u8211 0000A2                           i1l92 00003C                           u7420 000238  
                         u7340 00009A                           u5484 000062                           u5580 000080  
                         u6700 00024E                           u6620 00008C                           u7180 000092  
                         u7260 0000D4                           u6380 0000B8                           u6540 0001A8  
                         u5900 000030                           u6460 000064                           u7500 00012A  
                         u8140 00037C                           u8060 0000A4                           u8220 0000C6  
                         u8300 000064                           i1l93 000048                           u7341 000096  
                         u7317 000036                           u5485 00005E                           u5581 00007C  
                         u6701 00024A                           u6621 000088                           u7181 00008E  
                         u7261 0000D0                           u6381 0000B4                           u6525 00012E  
                         u5901 00002A                           u6461 000060                           u7501 000124  
                         u8037 000122                           u8141 000376                           u8061 0000A0  
                         u8301 000060                           u7430 000262                           u7350 0000CC  
                         u5478 000054                           u5590 0000DE                           u6710 000268  
                         u6630 0000A2                           u7190 0000DE                           u7270 000110  
                         u6550 0001C4                           u6470 000048                           u5830 000012  
                         u5910 000032                           u7510 00012C                           u8150 00037E  
                         u8070 000150                           u8230 0000D6                           u8310 000096  
                         u7431 00025E                           u5591 0000DA                           u6711 000264  
                         u6631 00009E                           u7191 0000DA                           u7271 00010C  
                         u6551 0001C0                           u5831 00000E                           u8071 00014A  
                         u8231 0000D2                           u8311 000092                           u7440 000278  
                         u7360 0000F6                           u8240 00002A                           u6800 0003C2  
                         u6720 00028A                           u6640 0000B2                           u5920 00001A  
                         u7280 000128                           u6560 000200                           u6480 000076  
                         u5840 000024                           u7600 00045A                           u7520 000160  
                         u8160 0003C4                           u8080 000152                           u8320 0000C8  
                         u7441 000274                           u7361 0000F2                           u7337 00006E  
                         u8241 000026                           u6801 0003BE                           u6721 000286  
                         u6641 0000AE                           u5921 000016                           u7281 000124  
                         u6561 0001FC                           u6545 00019E                           u6481 000072  
                         u5841 000020                           u7601 000456                           u7521 00015C  
                         u8161 0003C0                           u8321 0000C4                           u6570 000030  
                         u7290 000018                           u7370 000132                           u8250 00004C  
                         u6810 0003F4                           u6730 0002AE                           u6650 0000FA  
                         u5930 000030                           u6490 000098                           u5850 000050  
                         u7610 00046C                           u7530 0001F6                           u7450 000028  
                         u8170 00048C                           u8090 000198                           u6571 00002A  
                         u7291 000014                           u7427 00022E                           u8251 000048  
                         u6811 0003F0                           u6731 0002AA                           u6651 0000F6  
                         u5931 00002C                           u6395 0000CA                           u6491 000094  
                         u6475 00003E                           u5851 00004C                           u7611 000468  
                         u7531 0001F2                           u7451 000024                           u8171 000488  
                         u8091 000194                           u8227 0000BC                           u6580 000032  
                         u7380 000186                           u8260 0000B4                           u6740 0002C4  
                         u6660 00013E                           u6900 00027A                           u6820 00001A  
                         u5940 000040                           u5860 000086                           u7700 0005A8  
                         u7620 000492                           u7540 000224                           u7460 00007C  
                         u8180 000058                           u7357 0000C2                           u8261 0000B0  
                         u6741 0002C0                           u6661 00013A                           u6821 000016  
                         u5941 00003C                           u5861 000082                           u7701 0005A4  
                         u7621 00048E                           u7541 00021E                           u7461 000078  
                         u8181 000054                           u7390 0001EA                           u8270 0000C2  
                         u6750 0002F2                           u6670 0001D6                           u6590 00001A  
                         u6910 0002D4                           u6830 000030                           u5950 00008A  
                         u5870 000046                           u7710 0005B6                           u7630 0004BC  
                         u7550 000226                           u7470 00008A                           u8190 000012  
                         u8271 0000BE                           u6751 0002EE                           u6671 0001D2  
                         u6591 000016                           u6911 0002D0                           u6831 00002C  
                         u5951 000086                           u5871 000042                           u7711 0005B2  
                         u7631 0004B8                           u7471 000086                           u8191 00000E  
                         u6760 000308                           u6680 0001F8                           u6920 0002F8  
                         u6840 000040                           u5960 0000A4                           u5880 000034  
                         u7800 000932                           u7720 0005E4                           u7640 0004EA  
                         u7560 00025A                           u7480 0000A0                           u8280 000110  
                         _RCON 000FD0                           u7377 000128                           u6761 000304  
                         u6681 0001F4                           u6921 0002F4                           u6905 000270  
                         u6841 00003C                           u5961 0000A0                           u7801 00092E  
                         u7721 0005E0                           u7641 0004E6                           u7561 000256  
                         u7481 00009C                           u8281 00010C                           u6770 000324  
                         u6690 000226                           u6930 00030E                           u6850 000088  
                         u5970 0000BA                           u5890 000044                           u7810 000940  
                         u7730 000738                           u7650 000506                           u7570 000316  
                         u7490 0000FC                           u8290 000032                           u7387 00017C  
                         u6771 000320                           u6691 000222                           u6931 00030A  
                         u6851 000084                           u5971 0000B6                           u5891 000040  
                         u7811 00093C                           u7731 000734                           u7651 000502  
                         u7571 000312                           u7491 0000F8                           u8291 00002E  
                         u6780 00033E                           u6940 00033C                           u6860 00009E  
                         u5980 0000CA                           u7900 000B54                           u7820 00095C  
                         u7740 0007A2                           u7660 00053C                           u7580 0003B2  
                         u7397 0001E0                           u6781 00033A                           u6941 000338  
                         u6861 00009A                           u5981 0000C6                           u7901 000B50  
                         u7821 000958                           u7741 00079E                           u7661 000538  
                         u7581 0003AE                           u6790 00038E                           u6950 000352  
                         u6870 0000AE                           u5990 00010E                           u7910 000BE0  
                         u7830 00096A                           u7750 0007EA                           u7670 00056A  
                         u7590 00042C                           u6791 00038A                           u6951 00034E  
                         u6871 0000AA                           u5991 00010A                           u5887 00002A  
                         u7911 000BDC                           u7831 000966                           u7751 0007E6  
                         u7671 000566                           u7591 000428                           u6960 00036E  
                         u6880 0000E8                           u7920 000BFA                           u7840 0009CA  
                         u7760 0007FA                           u7680 00057C                           u6961 00036A  
                         u6881 0000E4                           u7921 000BF6                           u7841 0009C6  
                         u7761 0007F6                           u7681 000578                           u6970 000388  
                         u6890 0000F8                           u7930 000C16                           u7850 000AA8  
                         u7770 00086A                           u7690 00058A                           u6971 000384  
                         u6891 0000F4                           u7931 000C12                           u7851 000AA4  
                         u7771 000866                           u7691 000586                           u6980 0003D8  
                         u7940 000C78                           u7860 000AC4                           u7780 00090C  
                         u6981 0003D4                           u7941 000C72                           u7861 000AC0  
                         u7781 000908                           u6990 000406                           u7950 000C7A  
                         u7870 000ADE                           u7790 000920                           u6991 000402  
                         u7871 000ADA                           u7791 00091C                           u7960 000CAC  
                         u7880 000AEC                           u7961 000CA8                           u7881 000AE8  
                         u7890 000B26                           u7970 00002A                           u7891 000B22  
                         u7971 000026                           u7980 000070                           u7990 000080  
                         u7991 00007C                           u7987 000066                           _TMR3 000FB2  
                 __CFG_WDTPS$1 000000                           _dbuf 000000                           _atoi 000000  
                         _main 000000                           _prec 00000E                           _nout 00000A  
                         pad@i 000024                           pad@p 000021                           fsr0h 000FEA  
                         fsr1h 000FE2                           indf0 000FEF                           fsr2h 000FDA  
                         fsr0l 000FE9                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 000026                           fsr2l 000FD9                           btemp 000000  
             __end_of_ADC_Read 0000A8                  ___fpclassifyf 000000                           prodh 000FF4  
                         prodl 000FF3                           start 000000*               ___fldiv@new_exp 00001E  
                 _tolower$1617 000019                  __CFG_MCLRE$ON 000000                   ___param_bank 000000  
      __end_of_UART_Write_Text 000048                          ??_pad 000023               ?_UART_Initialize 000000  
                ___fltol@sign1 000015                          ?_atoi 00001E                __end_of___fladd 000584  
                        ?_main 000000                __end_of___fldiv 000420                __end_of___awdiv 0000EC  
              __end_of___flneg 000040                   Mode3@digital 00005E                          _CCPR1 000FBE  
                        STR_10 000027                          STR_11 000000                          STR_12 00000F  
                        STR_13 000000                          STR_22 000040                          STR_14 000015  
                        STR_15 000000                          STR_23 000048                          STR_16 00001B  
                        STR_17 000000                          STR_26 00004C                          STR_18 00003C  
                        STR_19 000044                          STR_28 000000                __end_of___awmod 0000D8  
              __end_of___flmul 00046E                __end_of___flsub 00004A                __end_of___fltol 000152  
              ___awdiv@divisor 00000F                          _T3CON 000FB1                          _IRCF0 007E9C  
                        _IRCF1 007E9D                          _IRCF2 007E9E                          i1l145 000006  
                        i1l146 000006                          i1l154 000026                          i1l147 000018  
                        i1l155 00000C                          i1l148 00001C                          i1l156 000046  
                        i1l157 000046                          i1l165 000052                          i1l620 00009A  
                        i1l621 0000AA                          i1l613 000022                          i1l622 0000CA  
                        i1l614 00003C                          i1l623 0000D6                          i1l615 0000AE  
                        i1l616 000062                          i1l617 000056                          i1l618 000074  
                        i1l619 000078                ___awdiv@counter 000011                          _RCREG 000FAE  
                 vfpfcnvrt@fmt 00004E                          _SPBRG 000FAF                          _TRISA 000F92  
                        _TXREG 000FAD                  __CFG_PWRT$OFF 000000                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000  
                        _Mode1 000000                          _Mode2 000000                          _Mode3 000000  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000                    ?_UART_Write 000000  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               i1___awmod@sign 000005                 __CFG_EBTRB$OFF 000000                          _flags 000010  
                        _fputc 000000                          _fputs 000000                __end_of_isdigit 00003C  
                        atoi@n 00002B                          pad@fp 00001D                          atoi@s 00001E  
                        _width 00000C                          _putch 000000                    _ClearBuffer 000000  
                 Mode3@voltage 00005A                __end_of_isspace 00005A                __end_of_isupper 00003C  
                        tablat 000FF5                          ttemp5 000001                          ttemp6 000004  
                        ttemp7 000008                          status 000FD8                          wtemp8 000001  
              __end_of_sprintf 00005E                 ?___fpclassifyf 00000D                __end_of_tolower 000080  
              __end_of_strcspn 00006E             __size_ofi1___awmod 000000                __end_of_strncmp 000140  
               __CFG_PBADEN$ON 000000                __initialization 000000                   __end_of_atoi 0002A2  
                 __end_of_main 0000E8                         ??_atoi 000020                         ??_main 00005C  
             ?_CCP1_Initialize 000000                  __activetblptr 000002             __size_of_GetString 000000  
                       ?_Mode1 000000                         ?_Mode2 000000                         ?_Mode3 000000  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _ADCON2 000FC0  
                       ?_fputc 00000D                         ?_fputs 000016                         _ADRESH 000FC4  
                       _ADRESL 000FC3               ___awdiv@dividend 00000D                         ?_putch 000000  
                       i1l4121 000002                         i1l4123 000018                         i1l4301 000030  
                       i1l4311 000078                         i1l4303 00003C                         i1l4241 00001E  
                       i1l4321 0000BE                         i1l4313 00008E                         i1l4305 00004E  
                       i1l4243 000026                         i1l4323 0000CA                         i1l4315 00009A  
                       i1l4307 000056                         i1l4411 000016                         i1l4237 000000  
                       i1l4325 0000D6                         i1l4317 0000A0                         i1l4309 000062  
                       i1l4413 000024                         i1l4239 00000C                         i1l4319 0000AE  
                       i1l4415 000032                         i1l4417 00003C                         i1l4291 000000  
                       i1l4419 000048                         i1l4293 000004                         i1l4295 000012  
                       i1l4391 000052                         i1l4383 000000                         i1l4297 00001A  
                       i1l4385 000010                         i1l4299 000022                         i1l4387 00002E  
                       i1l4389 000032               __end_of___xxtofl 0001DC                         Mode3@i 000058  
                       _Lo_ISR 000000                 __CFG_XINST$OFF 000000                   vfprintf@cfmt 000044  
                       ___flge 000000                         ___fleq 000000            __size_of_UART_Write 000000  
                    ??___fladd 000015                         ___wmul 000000                      ??___fldiv 000015  
                    ??___awdiv 000011                      ??___flneg 000011                 __CFG_STVREN$ON 000000  
                    ??___awmod 000011                      ??___flmul 000023               ?_UART_Write_Text 000001  
                    ??___flsub 00003C                      ??___fltol 000011                         _efgtoa 000000  
              ADC_Read@channel 00000D                         _lenStr 000012                         _floorf 000000  
              ADC_Read@digital 000013                         clear_0 000006                         clear_1 000012  
                       clear_2 00001E               ___awdiv@quotient 000013                ___awmod@divisor 00000F  
              ___awmod@counter 000011                         pad@buf 00001F                         _strcat 000000  
                       _strchr 000000                         _strcpy 000000                         _strlen 000000  
                       _strtok 000000                         _strspn 000000                         _strstr 000000  
            __end_ofi1___awmod 0000D8                  ??_PrintBuffer 000000                         fputc@c 00000D  
                       fputs@c 00001A                         fputs@i 00001B                         fputs@s 000016  
                    ??_isdigit 00000F                ___fpclassifyf@e 000015                ___fpclassifyf@u 000017  
                    ?_ADC_Read 00000D                ___fpclassifyf@x 00000D                   __mediumconst 000000* 
                    ??_isspace 00000F                         tblptrh 000FF7                      ??_isupper 00000F  
                       tblptrl 000FF6                         tblptru 000FF8                         putch@c 000000  
             __end_of_vfprintf 000062                      ??_sprintf 00005C                      ??_tolower 000015  
                    ??_strcspn 000017                      ??_strncmp 000013  __size_of_INTERRUPT_Initialize 000000  
                   ___flge@ff1 000034                     ___flge@ff2 000038                ??___fpclassifyf 000011  
                 ___xxtofl@arg 000017                   ___xxtofl@exp 000016              _SYSTEM_Initialize 000000  
                 ___xxtofl@val 00000D                     ___fleq@ff1 00000D                     ___fleq@ff2 000011  
                   __accesstop 000000*       __end_of__initialization 000024                     ___flneg@f1 00000D  
           ?_SYSTEM_Initialize 000000                  ___rparam_used 000001                     ___fltol@f1 00000D  
            __end_of_GetString 00000E                  __end_of_Mode1 000012                  __end_of_Mode2 0000EE  
                __end_of_Mode3 00011A                 __pcstackCOMRAM 000000            ??_SYSTEM_Initialize 00000D  
                __end_of_fputc 0000DE                  __end_of_fputs 00004C                  __end_of_putch 000002  
                   ??_ADC_Read 00000F                  ??_MyusartRead 000006                        ??_Mode1 00000F  
                      ??_Mode2 00002D                        ??_Mode3 00005C                        ??_fputc 000011  
    __end_of_SYSTEM_Initialize 000012                        ??_fputs 00001A                        ??_putch 00000D  
                   __pbssBANK0 000000                     __pbssBANK1 000000                        ?_Lo_ISR 000000  
                   _efgtoa$970 000008                     _efgtoa$964 000004                     _efgtoa$965 000006  
                   _efgtoa$974 00000A                     _efgtoa$975 00000C                     _efgtoa$976 00000E  
                      ?___flge 000034                        ?___fleq 00000D                        ?___wmul 00000D  
                      ?_efgtoa 000040                        _CCP1CON 000FBD                        ?_floorf 000026  
      __size_of_ADC_Initialize 000000                        ?_strcat 00001D                        ?_strchr 00000D  
                      ?_strcpy 000013                        ?_strlen 00000D                        ?_strtok 00001A  
                      ?_strspn 000013                        ?_strstr 00001A                      ?___xxtofl 00000D  
                 ??_UART_Write 000000             __size_of_vfpfcnvrt 000000                   ?_ClearBuffer 000000  
          __end_of_MyusartRead 000054                __size_of_Lo_ISR 000000                        __Hparam 000000  
                      __Lparam 000000                __size_of___flge 000000                __size_of___fleq 000000  
                      ___fladd 000000                        ___fldiv 000000                        ___awdiv 000000  
                      ___flneg 000000                        ___awmod 000000                        ___flmul 000000  
                      ___flsub 000000                        ___fltol 000000                __size_of___wmul 000000  
           __end_of_UART_Write 00001E                      ?_vfprintf 000056                   __psmallconst 000000  
              __size_of_efgtoa 000000                __size_of_floorf 000000                        __pcinit 000000  
                      __ramtop 000000*                       __ptext0 000000                        __ptext1 000000  
                      __ptext2 000000                        __ptext3 000000                        __ptext4 000000  
                      __ptext5 000000                        __ptext6 000000                        __ptext7 000000  
                      __ptext8 000000                        __ptext9 000000                __size_of_strcat 000000  
              __size_of_strchr 000000                __size_of_strcpy 000000                __size_of_strlen 000000  
              __size_of_strtok 000000                __size_of_strspn 000000                __size_of_strstr 000000  
                 __size_of_pad 000000                        _isdigit 000000                     ??___xxtofl 000011  
                    _T3CONbits 000FB1                    _PrintBuffer 000000*              ___awmod@dividend 00000D  
     __size_of_UART_Initialize 000000                        _isspace 000000                        _isupper 000000  
                      efgtoa@c 000046                        efgtoa@d 000018                        efgtoa@e 000030  
                      efgtoa@f 000042                        efgtoa@g 00002C                        efgtoa@h 000022  
                      efgtoa@i 00002A                        efgtoa@l 000026                        efgtoa@m 000014  
                      efgtoa@n 000032                        efgtoa@p 00001C                        efgtoa@t 000010  
                      efgtoa@u 000034                        efgtoa@w 00001F                        atoi@neg 000024  
   __size_of_SYSTEM_Initialize 000000                        _sprintf 000000                        _tolower 000000  
                      _strcspn 000000                        _strncmp 000000           end_of_initialization 000024  
                      floorf@e 000034                        floorf@m 000030                        floorf@u 000036  
                      floorf@x 000026                        fputc@fp 00000F                  __Lmediumconst 000000* 
                      fputs@fp 000018              __end_of_vfpfcnvrt 00051C                     efgtoa@mode 000021  
                   efgtoa@sign 00001A                      _RCSTAbits 000FAB                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   ??_vfprintf 00005C                        strchr@c 00000F                        strchr@s 00000D  
                      strcpy@d 00001B                        strlen@a 000011                        strcpy@s 000019  
                      strlen@s 00000D                        strspn@c 000015                        strspn@i 000018  
                      strtok@p 000008                        strtok@s 00001A                        strspn@s 000013  
                      strstr@h 00001A                        strstr@n 00001C                 UART_Write@data 000000  
                  ___fladd@grs 000020                  ___xxtofl@sign 000015                      _TRISCbits 000F94  
                  _MyusartRead 000000                      i1___awmod 000000                    ___fldiv@grs 000020  
                  ___fldiv@rem 000019              __size_of_ADC_Read 000000       __size_of_CCP1_Initialize 000000  
                  ___flmul@grs 000029                      _TXSTAbits 000FAC                 __end_of_Lo_ISR 000060  
 __end_of_INTERRUPT_Initialize 000008                 __end_of___flge 000168                 __end_of___fleq 0000BA  
                    _GetString 000000                    vfpfcnvrt@ap 000050                    vfpfcnvrt@ct 000040  
                  vfpfcnvrt@fp 00004C                 __end_of___wmul 00002A                    _BAUDCONbits 000FB8  
               __end_of_efgtoa 000D24                 _ADC_Initialize 000000                 __end_of_floorf 000232  
                   floorf@F520 000000                 __end_of_strcat 00002A       __size_of_UART_Write_Text 000000  
               __end_of_strchr 00008E                 __end_of_strcpy 000068                 __end_of_strlen 00006A  
               __end_of_strtok 0000EA                 __end_of_strspn 00006E                 __end_of_strstr 0000F0  
          start_initialization 000000                    __end_of_pad 0000D2                     ?i1___awmod 000000  
                 ClearBuffer@i 00000D              ??_UART_Initialize 00000D           __size_of_ClearBuffer 000000  
        __end_of___fpclassifyf 00010E               __CFG_OSC$INTIO67 000000                       ??_Lo_ISR 000008  
                  vfprintf@fmt 000058                       ??___flge 00003C                       ??___fleq 000015  
                     ??___wmul 000011                       ??_efgtoa 000047         __end_of_ADC_Initialize 000014  
                   ?_GetString 00000D             i1___awmod@dividend 000000                       ??_floorf 00002A  
             __CFG_LPT1OSC$OFF 000000                       ??_strcat 000021                       ??_strchr 000011  
                     ??_strcpy 000017                       ??_strlen 00000F                       ??_strtok 00001E  
                     ??_strspn 000017                       ??_strstr 00001E                      ___fladd@a 000011  
                    ___fladd@b 00000D                      ___fldiv@a 000011                      ___fldiv@b 00000D  
                    ___flmul@a 00001F                      ___flmul@b 00001B                    __pbssCOMRAM 000000  
                    ___flsub@a 000038                      ___flsub@b 000034                  __pcstackBANK0 000000  
            __size_of___xxtofl 000000                      _atoi$1465 000026                      _atoi$1466 00002A  
                    _atoi$1467 000028              ??_CCP1_Initialize 00000D              __CFG_CCP2MX$PORTC 000000  
                     ?___fladd 00000D                       ?___fldiv 00000D                       ?___awdiv 00000D  
                     ?___flneg 00000D                       ?___awmod 00000D                       ?___flmul 00001B  
                     ?___flsub 000034                       ?___fltol 00000D                ?_ADC_Initialize 000000  
                  __pintcodelo 000000              __size_of_vfprintf 000000                    __smallconst 000000* 
                     ?_isdigit 00000D                   ?_PrintBuffer 000000                       _ADC_Read 000000  
                     ?_isspace 00000D                 __size_of_Mode1 000000                 __size_of_Mode2 000000  
               __size_of_Mode3 000000                       ?_isupper 00000D                    ??i1___awmod 000004  
                     ?_sprintf 000046                       ?_tolower 000013                 __size_of_fputc 000000  
               __size_of_fputs 000000                       ?_strcspn 000013                       ?_strncmp 00000D  
               __size_of_putch 000000              ??_UART_Write_Text 000003           _INTERRUPT_Initialize 000000  
               ___wmul@product 000011                       _IPR1bits 000F9F                       _PIE1bits 000F9D  
                     i1u531_20 000014                       i1u531_21 000010                       i1u570_20 00008E  
                     i1u570_21 00008A                       i1u555_20 000042                       i1u571_20 0000BE  
                     i1u555_21 00003E                       i1u571_21 0000BA                       i1u581_20 000024  
                     i1u581_21 000020                       i1u566_20 000012                       i1u582_20 000032  
                     i1u566_21 00000E                       i1u582_21 00002E                       i1u567_20 000030  
                     i1u567_21 00002C                       i1u568_20 00004E                       i1u568_21 00004A  
                     i1u569_20 000070                       i1u569_21 00006C                       _PIR1bits 000F9E  
                     _RCONbits 000FD0                    ??_GetString 00000F                      _vfpfcnvrt 000000  
                   _ADCON0bits 000FC2              ___wmul@multiplier 00000D                   ?_MyusartRead 000000  
                 _isspace$1496 000013                     vfpfcnvrt@c 000043                     vfpfcnvrt@f 00003C  
        ?_INTERRUPT_Initialize 000000                       __Hrparam 000000*                    vfprintf@ap 00005A  
                     __Lrparam 000000*                    vfprintf@fp 000056             __CFG_BOREN$SBORDIS 000000  
            i1___awmod@divisor 000002              i1___awmod@counter 000004               __size_of___fladd 000000  
             __size_of___fldiv 000000               __size_of___awdiv 000000               __size_of___flneg 000000  
             __size_of___awmod 000000               __size_of___flmul 000000               __size_of___flsub 000000  
             __size_of___fltol 000000                     ?_vfpfcnvrt 00004C             ___fpclassifyf@F459 000004  
              _UART_Initialize 000000                     sprintf@fmt 000048                     sprintf@ret 00004E  
                     ___xxtofl 000000                     strcat@dest 00001D               __size_of_isdigit 000000  
             __size_of_isspace 000000                       __ptext10 000000                       __ptext11 000000  
                     __ptext20 000000                       __ptext12 000000                       __ptext21 000000  
                     __ptext13 000000                       __ptext30 000000                       __ptext22 000000  
                     __ptext14 000000                       __ptext31 000000                       __ptext23 000000  
                     __ptext15 000000                       __ptext40 000000                       __ptext32 000000  
                     __ptext24 000000                       __ptext16 000000                       __ptext41 000000  
                     __ptext33 000000                       __ptext25 000000                       __ptext17 000000  
                     __ptext50 000000                       __ptext42 000000                       __ptext34 000000  
                     __ptext26 000000                       __ptext18 000000                       __ptext51 000000  
                     __ptext43 000000                       __ptext35 000000                       __ptext27 000000  
                     __ptext19 000000                       __ptext52 000000                       __ptext44 000000  
                     __ptext36 000000                       __ptext28 000000                       __ptext45 000000  
                     __ptext37 000000                       __ptext29 000000                       __ptext46 000000  
                     __ptext38 000000                       __ptext47 000000                       __ptext39 000000  
                     __ptext49 000000               __size_of_isupper 000000               __size_of_sprintf 000000  
             __size_of_tolower 000000               __size_of_strcspn 000000                     strcpy@dest 000013  
             __size_of_strncmp 000000            UART_Write_Text@text 000001                  __size_of_atoi 000000  
                __size_of_main 000000                       efgtoa@fp 000040                       efgtoa@ne 000016  
                     efgtoa@pp 000012                       efgtoa@ou 000000                       int$flags 000000  
                     _vfprintf 000000                       _mystring 000000                     _INTCONbits 000FF2  
              _CCP1_Initialize 000000                       isdigit@c 00000D         ??_INTERRUPT_Initialize 00000D  
                ??_ClearBuffer 00000D                       intlevel1 000000*                     sprintf@ap 000050  
                    strcat@src 00001F                       isspace@c 00000D                      strcpy@src 000015  
                     isupper@c 00000D                      strncmp@_l 00000D                      strncmp@_r 00000F  
             ??_ADC_Initialize 00000D                    efgtoa@nmode 00001E                      strtok@sep 00001C  
      __end_of_UART_Initialize 000022                    ??_vfpfcnvrt 000052                  _vfpfcnvrt$990 000038  
                _vfpfcnvrt$994 00003A                _UART_Write_Text 000000                       sprintf@f 000052  
                     tolower@c 000013                       sprintf@s 000046         __size_of___fpclassifyf 000000  
                     strcspn@c 000015                       strcspn@i 000018                       strcspn@s 000013  
                     strncmp@l 000016                       strncmp@n 000011                       strncmp@r 000018  
                   _UART_Write 000000                       strstr@nl 00001E                  ___fladd@signs 00001D  
         __size_of_MyusartRead 000000               UART_Write_Text@i 000003                   ___fladd@aexp 00001E  
                 ___fladd@bexp 00001F            __end_of_ClearBuffer 000062  
