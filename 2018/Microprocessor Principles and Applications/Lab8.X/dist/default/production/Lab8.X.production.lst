

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Nov 29 17:21:13 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNROOT	_main
   384                           	FNCALL	_tc_int,_LED0
   385                           	FNCALL	_tc_int,_LED1
   386                           	FNCALL	_tc_int,_LED2
   387                           	FNCALL	_tc_int,_LED3
   388                           	FNCALL	_tc_int,_turnoff
   389                           	FNCALL	intlevel2,_tc_int
   390                           	global	intlevel2
   391                           	FNROOT	intlevel2
   392                           	global	_count
   393                           	global	_LATDbits
   394                           _LATDbits	set	0xF8C
   395  0000                     	global	_TMR2
   396                           _TMR2	set	0xFCC
   397  0000                     	global	_PR2
   398                           _PR2	set	0xFCB
   399  0000                     	global	_INTCONbits
   400                           _INTCONbits	set	0xFF2
   401  0000                     	global	_IPR1bits
   402                           _IPR1bits	set	0xF9F
   403  0000                     	global	_PIR1bits
   404                           _PIR1bits	set	0xF9E
   405  0000                     	global	_PIE1bits
   406                           _PIE1bits	set	0xF9D
   407  0000                     	global	_RCONbits
   408                           _RCONbits	set	0xFD0
   409  0000                     	global	_T2CON
   410                           _T2CON	set	0xFCA
   411  0000                     	global	_LATD
   412                           _LATD	set	0xF8C
   413  0000                     	global	_TRISD
   414                           _TRISD	set	0xF95
   415  0000                     	global	_TMR2IF
   416                           _TMR2IF	set	0x7CF1
   417  0000                     	global	_TMR2IE
   418                           _TMR2IE	set	0x7CE9
   419  0000                     ; #config settings
   420                           global __CFG_OSC$INTIO67
   421                           __CFG_OSC$INTIO67 equ 0x0
   422  0000                     global __CFG_WDT$OFF
   423                           __CFG_WDT$OFF equ 0x0
   424  0000                     global __CFG_PBADEN$OFF
   425                           __CFG_PBADEN$OFF equ 0x0
   426  0000                     global __CFG_LVP$OFF
   427                           __CFG_LVP$OFF equ 0x0
   428  0000                     	file	"C:\Users\NIGHTK~1\AppData\Local\Temp\s66k."
   429                           	line	#
   430                           psect	cinit,class=CODE,delta=1,reloc=2
   431                           global __pcinit
   432                           __pcinit:
   433  00010C                     global start_initialization
   434                           start_initialization:
   435  00010C                     
   436                           global __initialization
   437                           __initialization:
   438  00010C                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   439                           global __pbssCOMRAM
   440                           __pbssCOMRAM:
   441  000001                     	global	_count
   442                           _count:
   443  000001                            ds      2
   444  000001                     	file	"C:\Users\NIGHTK~1\AppData\Local\Temp\s66k."
   445                           	line	#
   446                           psect	cinit
   447                           ; Clear objects allocated to COMRAM (2 bytes)
   448                           	global __pbssCOMRAM
   449                           clrf	(__pbssCOMRAM+1)&0xffh,c
   450  00010C  6A02               clrf	(__pbssCOMRAM+0)&0xffh,c
   451  00010E  6A01               psect cinit,class=CODE,delta=1
   452                           global end_of_initialization,__end_of__initialization
   453                           
   454                           ;End of C runtime variable initialization code
   455                           
   456                           end_of_initialization:
   457  000110                     __end_of__initialization:
   458  000110                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   459  000110  9003               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   460  000112  9203               movlb 0
   461  000114  0100               goto _main	;jump to C main() function
   462  000116  EF75  F000         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   463                           global __pcstackCOMRAM
   464                           __pcstackCOMRAM:
   465  000000                     ?_LED0:	; 1 bytes @ 0x0
   466  000000                     ??_LED0:	; 1 bytes @ 0x0
   467  000000                     ?_LED1:	; 1 bytes @ 0x0
   468  000000                     ??_LED1:	; 1 bytes @ 0x0
   469  000000                     ?_LED2:	; 1 bytes @ 0x0
   470  000000                     ??_LED2:	; 1 bytes @ 0x0
   471  000000                     ?_LED3:	; 1 bytes @ 0x0
   472  000000                     ??_LED3:	; 1 bytes @ 0x0
   473  000000                     ?_turnoff:	; 1 bytes @ 0x0
   474  000000                     ??_turnoff:	; 1 bytes @ 0x0
   475  000000                     ?_main:	; 1 bytes @ 0x0
   476  000000                     ??_main:	; 1 bytes @ 0x0
   477  000000                     ?_tc_int:	; 1 bytes @ 0x0
   478  000000                     ??_tc_int:	; 1 bytes @ 0x0
   479  000000                     ;!
   480                           ;!Data Sizes:
   481                           ;!    Strings     0
   482                           ;!    Constant    0
   483                           ;!    Data        0
   484                           ;!    BSS         2
   485                           ;!    Persistent  0
   486                           ;!    Stack       0
   487                           ;!
   488                           ;!Auto Spaces:
   489                           ;!    Space          Size  Autos    Used
   490                           ;!    COMRAM          126      0       2
   491                           ;!    BANK0           128      0       0
   492                           ;!    BANK1           256      0       0
   493                           ;!    BANK2           256      0       0
   494                           ;!    BANK3           256      0       0
   495                           ;!    BANK4           256      0       0
   496                           ;!    BANK5           256      0       0
   497                           
   498                           ;!
   499                           ;!Pointer List with Targets:
   500                           ;!
   501                           ;!    None.
   502                           
   503                           
   504                           ;!
   505                           ;!Critical Paths under _main in COMRAM
   506                           ;!
   507                           ;!    None.
   508                           ;!
   509                           ;!Critical Paths under _tc_int in COMRAM
   510                           ;!
   511                           ;!    None.
   512                           ;!
   513                           ;!Critical Paths under _main in BANK0
   514                           ;!
   515                           ;!    None.
   516                           ;!
   517                           ;!Critical Paths under _tc_int in BANK0
   518                           ;!
   519                           ;!    None.
   520                           ;!
   521                           ;!Critical Paths under _main in BANK1
   522                           ;!
   523                           ;!    None.
   524                           ;!
   525                           ;!Critical Paths under _tc_int in BANK1
   526                           ;!
   527                           ;!    None.
   528                           ;!
   529                           ;!Critical Paths under _main in BANK2
   530                           ;!
   531                           ;!    None.
   532                           ;!
   533                           ;!Critical Paths under _tc_int in BANK2
   534                           ;!
   535                           ;!    None.
   536                           ;!
   537                           ;!Critical Paths under _main in BANK3
   538                           ;!
   539                           ;!    None.
   540                           ;!
   541                           ;!Critical Paths under _tc_int in BANK3
   542                           ;!
   543                           ;!    None.
   544                           ;!
   545                           ;!Critical Paths under _main in BANK4
   546                           ;!
   547                           ;!    None.
   548                           ;!
   549                           ;!Critical Paths under _tc_int in BANK4
   550                           ;!
   551                           ;!    None.
   552                           ;!
   553                           ;!Critical Paths under _main in BANK5
   554                           ;!
   555                           ;!    None.
   556                           ;!
   557                           ;!Critical Paths under _tc_int in BANK5
   558                           ;!
   559                           ;!    None.
   560                           
   561 ;;
   562 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   563 ;;
   564                           
   565                           ;!
   566                           ;!Call Graph Tables:
   567                           ;!
   568                           ;! ---------------------------------------------------------------------------------
   569                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   570                           ;! ---------------------------------------------------------------------------------
   571                           ;! (0) _main                                                 0     0      0       0
   572                           ;! ---------------------------------------------------------------------------------
   573                           ;! Estimated maximum stack depth 0
   574                           ;! ---------------------------------------------------------------------------------
   575                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   576                           ;! ---------------------------------------------------------------------------------
   577                           ;! (1) _tc_int                                               0     0      0       0
   578                           ;!                               _LED0
   579                           ;!                               _LED1
   580                           ;!                               _LED2
   581                           ;!                               _LED3
   582                           ;!                            _turnoff
   583                           ;! ---------------------------------------------------------------------------------
   584                           ;! (2) _turnoff                                              0     0      0       0
   585                           ;! ---------------------------------------------------------------------------------
   586                           ;! (2) _LED3                                                 0     0      0       0
   587                           ;! ---------------------------------------------------------------------------------
   588                           ;! (2) _LED2                                                 0     0      0       0
   589                           ;! ---------------------------------------------------------------------------------
   590                           ;! (2) _LED1                                                 0     0      0       0
   591                           ;! ---------------------------------------------------------------------------------
   592                           ;! (2) _LED0                                                 0     0      0       0
   593                           ;! ---------------------------------------------------------------------------------
   594                           ;! Estimated maximum stack depth 2
   595                           ;! ---------------------------------------------------------------------------------
   596                           ;!
   597                           ;! Call Graph Graphs:
   598                           ;!
   599                           ;! _main (ROOT)
   600                           ;!
   601                           ;! _tc_int (ROOT)
   602                           ;!   _LED0
   603                           ;!   _LED1
   604                           ;!   _LED2
   605                           ;!   _LED3
   606                           ;!   _turnoff
   607                           ;!
   608                           
   609                           ;! Address spaces:
   610                           
   611                           ;!Name               Size   Autos  Total    Cost      Usage
   612                           ;!BIGRAM             5FF      0       0      17        0.0%
   613                           ;!EEDATA             100      0       0       0        0.0%
   614                           ;!BITBANK5           100      0       0      16        0.0%
   615                           ;!BANK5              100      0       0      14        0.0%
   616                           ;!BITBANK4           100      0       0      12        0.0%
   617                           ;!BANK4              100      0       0      13        0.0%
   618                           ;!BITBANK3           100      0       0      10        0.0%
   619                           ;!BANK3              100      0       0      11        0.0%
   620                           ;!BITBANK2           100      0       0       8        0.0%
   621                           ;!BANK2              100      0       0       9        0.0%
   622                           ;!BITBANK1           100      0       0       6        0.0%
   623                           ;!BANK1              100      0       0       7        0.0%
   624                           ;!BITBANK0            80      0       0       4        0.0%
   625                           ;!BANK0               80      0       0       5        0.0%
   626                           ;!BITCOMRAM           7E      0       0       0        0.0%
   627                           ;!COMRAM              7E      0       2       1        1.6%
   628                           ;!BITSFR               0      0       0     200        0.0%
   629                           ;!SFR                  0      0       0     200        0.0%
   630                           ;!STACK                0      0       0       2        0.0%
   631                           ;!NULL                 0      0       0       0        0.0%
   632                           ;!ABS                  0      0       2      15        0.0%
   633                           ;!DATA                 0      0       2       3        0.0%
   634                           ;!CODE                 0      0       0       0        0.0%
   635                           
   636                           	global	_main
   637                           
   638 ;; *************** function _main *****************
   639 ;; Defined at:
   640 ;;		line 12 in file "newmain.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, status,2
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   654 ;;      Params:         0       0       0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0
   657 ;;      Totals:         0       0       0       0       0       0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels required when called:    2
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		Startup code after reset
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           psect	text0,class=CODE,space=0,reloc=2,group=0
   667                           	file	"newmain.c"
   668                           	line	12
   669                           global __ptext0
   670                           __ptext0:
   671  0000EA                     psect	text0
   672                           	file	"newmain.c"
   673                           	line	12
   674                           	global	__size_of_main
   675                           	__size_of_main	equ	__end_of_main-_main
   676  0000                     	
   677                           _main:
   678  0000EA                     ;incstack = 0
   679                           	opt	stack 29
   680                           	line	13
   681                           	
   682                           l759:
   683  0000EA                     ;newmain.c: 13:     TRISD =0;
   684                           	movlw	low(0)
   685  0000EA  0E00               	movwf	((c:3989)),c	;volatile
   686  0000EC  6E95               	line	14
   687                           ;newmain.c: 14:     LATD =0;
   688                           	movlw	low(0)
   689  0000EE  0E00               	movwf	((c:3980)),c	;volatile
   690  0000F0  6E8C               	line	15
   691                           ;newmain.c: 15:     T2CON = 0x7f;
   692                           	movlw	low(07Fh)
   693  0000F2  0E7F               	movwf	((c:4042)),c	;volatile
   694  0000F4  6ECA               	line	16
   695                           	
   696                           l761:
   697  0000F6                     ;newmain.c: 16:     RCONbits.IPEN= 1;
   698                           	bsf	((c:4048)),c,7	;volatile
   699  0000F6  8ED0               	line	17
   700                           	
   701                           l763:
   702  0000F8                     ;newmain.c: 17:     PIE1bits.TMR2IE =1;
   703                           	bsf	((c:3997)),c,1	;volatile
   704  0000F8  829D               	line	18
   705                           	
   706                           l765:
   707  0000FA                     ;newmain.c: 18:     PIR1bits.TMR2IF =0;
   708                           	bcf	((c:3998)),c,1	;volatile
   709  0000FA  929E               	line	19
   710                           	
   711                           l767:
   712  0000FC                     ;newmain.c: 19:     IPR1bits.TMR2IP =1;
   713                           	bsf	((c:3999)),c,1	;volatile
   714  0000FC  829F               	line	20
   715                           	
   716                           l769:
   717  0000FE                     ;newmain.c: 20:     INTCONbits.GIE =1;
   718                           	bsf	((c:4082)),c,7	;volatile
   719  0000FE  8EF2               	line	21
   720                           ;newmain.c: 21:     PR2 = 0xf3;
   721                           	movlw	low(0F3h)
   722  000100  0EF3               	movwf	((c:4043)),c	;volatile
   723  000102  6ECB               	line	22
   724                           ;newmain.c: 22:     while(1);
   725                           	
   726                           l43:
   727  000104                     	
   728                           l44:
   729  000104                     	goto	l43
   730  000104  EF82  F000         	
   731                           l45:
   732  000108                     	line	24
   733                           ;newmain.c: 23:     return;
   734                           	
   735                           l46:
   736  000108                     	global	start
   737                           	goto	start
   738  000108  EF07  F000         	opt stack 0
   739                           GLOBAL	__end_of_main
   740                           	__end_of_main:
   741  00010C                     	signat	_main,89
   742                           	global	_tc_int
   743                           
   744 ;; *************** function _tc_int *****************
   745 ;; Defined at:
   746 ;;		line 26 in file "newmain.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, status,2, status,0, cstack
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   760 ;;      Params:         0       0       0       0       0       0       0
   761 ;;      Locals:         0       0       0       0       0       0       0
   762 ;;      Temps:          0       0       0       0       0       0       0
   763 ;;      Totals:         0       0       0       0       0       0       0
   764 ;;Total ram usage:        0 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; Hardware stack levels required when called:    1
   767 ;; This function calls:
   768 ;;		_LED0
   769 ;;		_LED1
   770 ;;		_LED2
   771 ;;		_LED3
   772 ;;		_turnoff
   773 ;; This function is called by:
   774 ;;		Interrupt level 2
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           psect	intcode,class=CODE,space=0,reloc=2
   778                           global __pintcode
   779                           __pintcode:
   780  000008                     psect	intcode
   781                           	file	"newmain.c"
   782                           	line	26
   783                           	global	__size_of_tc_int
   784                           	__size_of_tc_int	equ	__end_of_tc_int-_tc_int
   785  0000                     	
   786                           _tc_int:
   787  000008                     ;incstack = 0
   788                           	opt	stack 29
   789                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
   790  000008  8203               	global	int_func
   791                           	call	int_func,f	;refresh shadow registers
   792  00000A  ED09  F000         psect	intcode_body,class=CODE,space=0,reloc=2
   793                           global __pintcode_body
   794                           __pintcode_body:
   795  000012                     int_func:
   796  000012                     
   797                           	pop	; remove dummy address from shadow register refresh
   798  000012  0006               	line	28
   799                           	
   800                           i2l771:
   801  000014                     ;newmain.c: 28:     if(TMR2IE && TMR2IF){
   802                           	btfss	c:(31977/8),(31977)&7	;volatile
   803  000014  A29D               	goto	i2u1_41
   804  000016  EF0F  F000         	goto	i2u1_40
   805  00001A  EF11  F000         i2u1_41:
   806  00001E                     	goto	i2l777
   807  00001E  EF1C  F000         i2u1_40:
   808  000022                     	
   809                           i2l773:
   810  000022                     	btfss	c:(31985/8),(31985)&7	;volatile
   811  000022  A29E               	goto	i2u2_41
   812  000024  EF16  F000         	goto	i2u2_40
   813  000028  EF18  F000         i2u2_41:
   814  00002C                     	goto	i2l777
   815  00002C  EF1C  F000         i2u2_40:
   816  000030                     	line	29
   817                           	
   818                           i2l775:
   819  000030                     ;newmain.c: 29:         count++;
   820                           	infsnz	((c:_count)),c	;volatile
   821  000030  4A01               	incf	((c:_count+1)),c	;volatile
   822  000032  2A02               	goto	i2l777
   823  000034  EF1C  F000         	line	30
   824                           ;newmain.c: 30:     }
   825                           	
   826                           i2l51:
   827  000038                     	line	31
   828                           	
   829                           i2l777:
   830  000038                     ;newmain.c: 31:     if(count == 8){
   831                           		movlw	8
   832  000038  0E08               	xorwf	((c:_count)),c,w	;volatile
   833  00003A  1801               iorwf	((c:_count+1)),c,w	;volatile
   834  00003C  1002               	btfss	status,2
   835  00003E  A4D8               	goto	i2u3_41
   836  000040  EF24  F000         	goto	i2u3_40
   837  000044  EF26  F000         
   838                           i2u3_41:
   839  000048                     	goto	i2l781
   840  000048  EF2A  F000         i2u3_40:
   841  00004C                     	line	32
   842                           	
   843                           i2l779:
   844  00004C                     ;newmain.c: 32:         LED0();
   845                           	call	_LED0	;wreg free
   846  00004C  EC96  F000         	goto	i2l781
   847  000050  EF2A  F000         	line	33
   848                           ;newmain.c: 33:     }
   849                           	
   850                           i2l52:
   851  000054                     	line	34
   852                           	
   853                           i2l781:
   854  000054                     ;newmain.c: 34:     if(count == 16){
   855                           		movlw	16
   856  000054  0E10               	xorwf	((c:_count)),c,w	;volatile
   857  000056  1801               iorwf	((c:_count+1)),c,w	;volatile
   858  000058  1002               	btfss	status,2
   859  00005A  A4D8               	goto	i2u4_41
   860  00005C  EF32  F000         	goto	i2u4_40
   861  000060  EF34  F000         
   862                           i2u4_41:
   863  000064                     	goto	i2l785
   864  000064  EF38  F000         i2u4_40:
   865  000068                     	line	35
   866                           	
   867                           i2l783:
   868  000068                     ;newmain.c: 35:         LED1();
   869                           	call	_LED1	;wreg free
   870  000068  EC94  F000         	goto	i2l785
   871  00006C  EF38  F000         	line	36
   872                           ;newmain.c: 36:     }
   873                           	
   874                           i2l53:
   875  000070                     	line	37
   876                           	
   877                           i2l785:
   878  000070                     ;newmain.c: 37:     if(count == 24){
   879                           		movlw	24
   880  000070  0E18               	xorwf	((c:_count)),c,w	;volatile
   881  000072  1801               iorwf	((c:_count+1)),c,w	;volatile
   882  000074  1002               	btfss	status,2
   883  000076  A4D8               	goto	i2u5_41
   884  000078  EF40  F000         	goto	i2u5_40
   885  00007C  EF42  F000         
   886                           i2u5_41:
   887  000080                     	goto	i2l789
   888  000080  EF46  F000         i2u5_40:
   889  000084                     	line	38
   890                           	
   891                           i2l787:
   892  000084                     ;newmain.c: 38:         LED2();
   893                           	call	_LED2	;wreg free
   894  000084  EC92  F000         	goto	i2l789
   895  000088  EF46  F000         	line	39
   896                           ;newmain.c: 39:     }
   897                           	
   898                           i2l54:
   899  00008C                     	line	40
   900                           	
   901                           i2l789:
   902  00008C                     ;newmain.c: 40:     if(count == 32){
   903                           		movlw	32
   904  00008C  0E20               	xorwf	((c:_count)),c,w	;volatile
   905  00008E  1801               iorwf	((c:_count+1)),c,w	;volatile
   906  000090  1002               	btfss	status,2
   907  000092  A4D8               	goto	i2u6_41
   908  000094  EF4E  F000         	goto	i2u6_40
   909  000098  EF50  F000         
   910                           i2u6_41:
   911  00009C                     	goto	i2l793
   912  00009C  EF54  F000         i2u6_40:
   913  0000A0                     	line	41
   914                           	
   915                           i2l791:
   916  0000A0                     ;newmain.c: 41:         LED3();
   917                           	call	_LED3	;wreg free
   918  0000A0  EC90  F000         	goto	i2l793
   919  0000A4  EF54  F000         	line	42
   920                           ;newmain.c: 42:     }
   921                           	
   922                           i2l55:
   923  0000A8                     	line	43
   924                           	
   925                           i2l793:
   926  0000A8                     ;newmain.c: 43:     if(count == 40){
   927                           		movlw	40
   928  0000A8  0E28               	xorwf	((c:_count)),c,w	;volatile
   929  0000AA  1801               iorwf	((c:_count+1)),c,w	;volatile
   930  0000AC  1002               	btfss	status,2
   931  0000AE  A4D8               	goto	i2u7_41
   932  0000B0  EF5C  F000         	goto	i2u7_40
   933  0000B4  EF5E  F000         
   934                           i2u7_41:
   935  0000B8                     	goto	i2l797
   936  0000B8  EF62  F000         i2u7_40:
   937  0000BC                     	line	44
   938                           	
   939                           i2l795:
   940  0000BC                     ;newmain.c: 44:         turnoff();
   941                           	call	_turnoff	;wreg free
   942  0000BC  EC8D  F000         	goto	i2l797
   943  0000C0  EF62  F000         	line	45
   944                           ;newmain.c: 45:     }
   945                           	
   946                           i2l56:
   947  0000C4                     	line	46
   948                           	
   949                           i2l797:
   950  0000C4                     ;newmain.c: 46:     if(count == 44){
   951                           		movlw	44
   952  0000C4  0E2C               	xorwf	((c:_count)),c,w	;volatile
   953  0000C6  1801               iorwf	((c:_count+1)),c,w	;volatile
   954  0000C8  1002               	btfss	status,2
   955  0000CA  A4D8               	goto	i2u8_41
   956  0000CC  EF6A  F000         	goto	i2u8_40
   957  0000D0  EF6C  F000         
   958                           i2u8_41:
   959  0000D4                     	goto	i2l57
   960  0000D4  EF70  F000         i2u8_40:
   961  0000D8                     	line	47
   962                           	
   963                           i2l799:
   964  0000D8                     ;newmain.c: 47:         count = 7;
   965                           	movlw	high(07h)
   966  0000D8  0E00               	movwf	((c:_count+1)),c	;volatile
   967  0000DA  6E02               	movlw	low(07h)
   968  0000DC  0E07               	movwf	((c:_count)),c	;volatile
   969  0000DE  6E01               	line	48
   970                           ;newmain.c: 48:     }
   971                           	
   972                           i2l57:
   973  0000E0                     	line	49
   974                           ;newmain.c: 49:     TMR2 = 0x00;
   975                           	movlw	low(0)
   976  0000E0  0E00               	movwf	((c:4044)),c	;volatile
   977  0000E2  6ECC               	line	50
   978                           	
   979                           i2l801:
   980  0000E4                     ;newmain.c: 50:     PIR1bits.TMR2IF =0;
   981                           	bcf	((c:3998)),c,1	;volatile
   982  0000E4  929E               	line	51
   983                           	
   984                           i2l58:
   985  0000E6                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   986  0000E6  9203               	retfie f
   987  0000E8  0011               	opt stack 0
   988                           GLOBAL	__end_of_tc_int
   989                           	__end_of_tc_int:
   990  0000EA                     	signat	_tc_int,89
   991                           	global	_turnoff
   992                           
   993 ;; *************** function _turnoff *****************
   994 ;; Defined at:
   995 ;;		line 64 in file "newmain.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1009 ;;      Params:         0       0       0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_tc_int
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           psect	text2,class=CODE,space=0,reloc=2,group=0
  1022                           	line	64
  1023                           global __ptext2
  1024                           __ptext2:
  1025  00011A                     psect	text2
  1026                           	file	"newmain.c"
  1027                           	line	64
  1028                           	global	__size_of_turnoff
  1029                           	__size_of_turnoff	equ	__end_of_turnoff-_turnoff
  1030  0000                     	
  1031                           _turnoff:
  1032  00011A                     ;incstack = 0
  1033                           	opt	stack 29
  1034                           	line	65
  1035                           	
  1036                           i2l757:
  1037  00011A                     ;newmain.c: 65:     LATD = 0;
  1038                           	movlw	low(0)
  1039  00011A  0E00               	movwf	((c:3980)),c	;volatile
  1040  00011C  6E8C               	line	66
  1041                           	
  1042                           i2l73:
  1043  00011E                     	return	;funcret
  1044  00011E  0012               	opt stack 0
  1045                           GLOBAL	__end_of_turnoff
  1046                           	__end_of_turnoff:
  1047  000120                     	signat	_turnoff,89
  1048                           	global	_LED3
  1049                           
  1050 ;; *************** function _LED3 *****************
  1051 ;; Defined at:
  1052 ;;		line 61 in file "newmain.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		None
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1066 ;;      Params:         0       0       0       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0
  1069 ;;      Totals:         0       0       0       0       0       0       0
  1070 ;;Total ram usage:        0 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_tc_int
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           psect	text3,class=CODE,space=0,reloc=2,group=0
  1079                           	line	61
  1080                           global __ptext3
  1081                           __ptext3:
  1082  000120                     psect	text3
  1083                           	file	"newmain.c"
  1084                           	line	61
  1085                           	global	__size_of_LED3
  1086                           	__size_of_LED3	equ	__end_of_LED3-_LED3
  1087  0000                     	
  1088                           _LED3:
  1089  000120                     ;incstack = 0
  1090                           	opt	stack 29
  1091                           	line	62
  1092                           	
  1093                           i2l755:
  1094  000120                     ;newmain.c: 62:     LATDbits.LATD3 =1;
  1095                           	bsf	((c:3980)),c,3	;volatile
  1096  000120  868C               	line	63
  1097                           	
  1098                           i2l70:
  1099  000122                     	return	;funcret
  1100  000122  0012               	opt stack 0
  1101                           GLOBAL	__end_of_LED3
  1102                           	__end_of_LED3:
  1103  000124                     	signat	_LED3,89
  1104                           	global	_LED2
  1105                           
  1106 ;; *************** function _LED2 *****************
  1107 ;; Defined at:
  1108 ;;		line 58 in file "newmain.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		None
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1122 ;;      Params:         0       0       0       0       0       0       0
  1123 ;;      Locals:         0       0       0       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0
  1125 ;;      Totals:         0       0       0       0       0       0       0
  1126 ;;Total ram usage:        0 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_tc_int
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           psect	text4,class=CODE,space=0,reloc=2,group=0
  1135                           	line	58
  1136                           global __ptext4
  1137                           __ptext4:
  1138  000124                     psect	text4
  1139                           	file	"newmain.c"
  1140                           	line	58
  1141                           	global	__size_of_LED2
  1142                           	__size_of_LED2	equ	__end_of_LED2-_LED2
  1143  0000                     	
  1144                           _LED2:
  1145  000124                     ;incstack = 0
  1146                           	opt	stack 29
  1147                           	line	59
  1148                           	
  1149                           i2l753:
  1150  000124                     ;newmain.c: 59:     LATDbits.LATD2 =1;
  1151                           	bsf	((c:3980)),c,2	;volatile
  1152  000124  848C               	line	60
  1153                           	
  1154                           i2l67:
  1155  000126                     	return	;funcret
  1156  000126  0012               	opt stack 0
  1157                           GLOBAL	__end_of_LED2
  1158                           	__end_of_LED2:
  1159  000128                     	signat	_LED2,89
  1160                           	global	_LED1
  1161                           
  1162 ;; *************** function _LED1 *****************
  1163 ;; Defined at:
  1164 ;;		line 55 in file "newmain.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		None
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1178 ;;      Params:         0       0       0       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0       0       0
  1180 ;;      Temps:          0       0       0       0       0       0       0
  1181 ;;      Totals:         0       0       0       0       0       0       0
  1182 ;;Total ram usage:        0 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_tc_int
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           psect	text5,class=CODE,space=0,reloc=2,group=0
  1191                           	line	55
  1192                           global __ptext5
  1193                           __ptext5:
  1194  000128                     psect	text5
  1195                           	file	"newmain.c"
  1196                           	line	55
  1197                           	global	__size_of_LED1
  1198                           	__size_of_LED1	equ	__end_of_LED1-_LED1
  1199  0000                     	
  1200                           _LED1:
  1201  000128                     ;incstack = 0
  1202                           	opt	stack 29
  1203                           	line	56
  1204                           	
  1205                           i2l751:
  1206  000128                     ;newmain.c: 56:     LATDbits.LATD1 =1;
  1207                           	bsf	((c:3980)),c,1	;volatile
  1208  000128  828C               	line	57
  1209                           	
  1210                           i2l64:
  1211  00012A                     	return	;funcret
  1212  00012A  0012               	opt stack 0
  1213                           GLOBAL	__end_of_LED1
  1214                           	__end_of_LED1:
  1215  00012C                     	signat	_LED1,89
  1216                           	global	_LED0
  1217                           
  1218 ;; *************** function _LED0 *****************
  1219 ;; Defined at:
  1220 ;;		line 52 in file "newmain.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		None
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1234 ;;      Params:         0       0       0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0
  1237 ;;      Totals:         0       0       0       0       0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_tc_int
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           psect	text6,class=CODE,space=0,reloc=2,group=0
  1247                           	line	52
  1248                           global __ptext6
  1249                           __ptext6:
  1250  00012C                     psect	text6
  1251                           	file	"newmain.c"
  1252                           	line	52
  1253                           	global	__size_of_LED0
  1254                           	__size_of_LED0	equ	__end_of_LED0-_LED0
  1255  0000                     	
  1256                           _LED0:
  1257  00012C                     ;incstack = 0
  1258                           	opt	stack 29
  1259                           	line	53
  1260                           	
  1261                           i2l749:
  1262  00012C                     ;newmain.c: 53:     LATDbits.LATD0 =1;
  1263                           	bsf	((c:3980)),c,0	;volatile
  1264  00012C  808C               	line	54
  1265                           	
  1266                           i2l61:
  1267  00012E                     	return	;funcret
  1268  00012E  0012               	opt stack 0
  1269                           GLOBAL	__end_of_LED0
  1270                           	__end_of_LED0:
  1271  000130                     	signat	_LED0,89
  1272                           	GLOBAL	__activetblptr
  1273                           __activetblptr	EQU	0
  1274  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  1275                           	PSECT	rparam,class=COMRAM,space=1,noexec
  1276                           	GLOBAL	__Lrparam
  1277                           	FNCONF	rparam,??,?
  1278                           	GLOBAL	___rparam_used
  1279                           	___rparam_used EQU 1
  1280  0000                     	GLOBAL	___param_bank
  1281                           	___param_bank EQU 0
  1282  0000                     GLOBAL	__Lparam, __Hparam
  1283                           GLOBAL	__Lrparam, __Hrparam
  1284                           __Lparam	EQU	__Lrparam
  1285  0000                     __Hparam	EQU	__Hrparam
  1286  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  1287                           	global	btemp
  1288                           btemp:
  1289  000003                     	ds	1
  1290  000003                     	global	int$flags
  1291                           	int$flags	set btemp
  1292  0000                     	global	wtemp8
  1293                           	wtemp8 set btemp+1
  1294  0000                     	global	ttemp5
  1295                           	ttemp5 set btemp+1
  1296  0000                     	global	ttemp6
  1297                           	ttemp6 set btemp+4
  1298  0000                     	global	ttemp7
  1299                           	ttemp7 set btemp+8
  1300  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      0       2
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _tc_int in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _tc_int                                               0     0      0       0
                               _LED0
                               _LED1
                               _LED2
                               _LED3
                            _turnoff
 ---------------------------------------------------------------------------------
 (2) _turnoff                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED3                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED2                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _tc_int (ROOT)
   _LED0
   _LED1
   _LED2
   _LED3
   _turnoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      0       2       1        1.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       2      15        0.0%
DATA                 0      0       2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Nov 29 17:21:13 2018

                     l43 0104                       l44 0104                       l45 0108  
                     l46 0108                      l761 00F6                      l763 00F8  
                    l765 00FA                      l767 00FC                      l759 00EA  
                    l769 00FE                      _PR2 000FCB             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _LED0 012C                     _LED1 0128  
                   _LED2 0124                     _LED3 0120                     _LATD 000F8C  
                   i2l51 0038                     i2l52 0054                     i2l61 012E  
                   i2l53 0070                     i2l70 0122                     i2l54 008C  
                   i2l55 00A8                     i2l64 012A                     i2l56 00C4  
                   i2l73 011E                     i2l57 00E0                     i2l58 00E6  
                   i2l67 0126                     _TMR2 000FCC                     _main 00EA  
                   btemp 0003                     start 000E             ___param_bank 000000  
                  ?_LED0 0000                    ?_LED1 0000                    ?_LED2 0000  
                  ?_LED3 0000                    ?_main 0000                    _T2CON 000FCA  
                  i2l801 00E4                    i2l751 0128                    i2l753 0124  
                  i2l755 0120                    i2l771 0014                    i2l749 012C  
                  i2l757 011A                    i2l781 0054                    i2l773 0022  
                  i2l791 00A0                    i2l783 0068                    i2l775 0030  
                  i2l793 00A8                    i2l785 0070                    i2l777 0038  
                  i2l795 00BC                    i2l787 0084                    i2l779 004C  
                  i2l797 00C4                    i2l789 008C                    i2l799 00D8  
                  _TRISD 000F95                    _count 0001                    ttemp5 0004  
                  ttemp6 0007                    ttemp7 000B                    status 000FD8  
                  wtemp8 0004          __end_of_turnoff 0120             __end_of_LED0 0130  
           __end_of_LED1 012C             __end_of_LED2 0128             __end_of_LED3 0124  
        __initialization 010C             __end_of_main 010C                   ??_LED0 0000  
                 ??_LED1 0000                   ??_LED2 0000                   ??_LED3 0000  
                 ??_main 0000            __activetblptr 000000                   _TMR2IE 007CE9  
                 _TMR2IF 007CF1                   i2u1_40 0022                   i2u1_41 001E  
                 i2u2_40 0030                   i2u2_41 002C                   i2u3_40 004C  
                 i2u3_41 0048                   i2u4_40 0068                   i2u4_41 0064  
                 i2u5_40 0084                   i2u5_41 0080                   i2u6_40 00A0  
                 i2u6_41 009C                   i2u7_40 00BC                   i2u7_41 00B8  
                 i2u8_40 00D8                   i2u8_41 00D4                   _tc_int 0008  
              ??_turnoff 0000               __accesstop 0080  __end_of__initialization 0110  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0000  
                ?_tc_int 0000                  __Hparam 0000                  __Lparam 0000  
                __pcinit 010C                  __ramtop 0600          __size_of_tc_int 00E2  
                __ptext0 00EA                  __ptext2 011A                  __ptext3 0120  
                __ptext4 0124                  __ptext5 0128                  __ptext6 012C  
         __pintcode_body 0012     end_of_initialization 0110                  _turnoff 011A  
                int_func 0012           __end_of_tc_int 00EA      start_initialization 010C  
       __CFG_OSC$INTIO67 000000                 ??_tc_int 0000              __pbssCOMRAM 0001  
              __pintcode 0008                 ?_turnoff 0000                 _LATDbits 000F8C  
               _IPR1bits 000F9F                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
               _RCONbits 000FD0                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_LED0 0004            __size_of_LED1 0004            __size_of_LED2 0004  
          __size_of_LED3 0004         __size_of_turnoff 0006            __size_of_main 0022  
               int$flags 0003               _INTCONbits 000FF2                 intlevel2 0000  
