

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Dec 22 16:28:53 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   384                           PORTA equ 0F80h ;# 
   385  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   386                           PORTB equ 0F81h ;# 
   387  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   388                           PORTC equ 0F82h ;# 
   389  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   390                           PORTD equ 0F83h ;# 
   391  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   392                           PORTE equ 0F84h ;# 
   393  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   394                           LATA equ 0F89h ;# 
   395  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   396                           LATB equ 0F8Ah ;# 
   397  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   398                           LATC equ 0F8Bh ;# 
   399  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   400                           LATD equ 0F8Ch ;# 
   401  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   402                           LATE equ 0F8Dh ;# 
   403  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   404                           TRISA equ 0F92h ;# 
   405  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   406                           DDRA equ 0F92h ;# 
   407  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   408                           TRISB equ 0F93h ;# 
   409  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   410                           DDRB equ 0F93h ;# 
   411  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   412                           TRISC equ 0F94h ;# 
   413  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   414                           DDRC equ 0F94h ;# 
   415  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   416                           TRISD equ 0F95h ;# 
   417  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   418                           DDRD equ 0F95h ;# 
   419  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   420                           TRISE equ 0F96h ;# 
   421  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   422                           DDRE equ 0F96h ;# 
   423  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   424                           OSCTUNE equ 0F9Bh ;# 
   425  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   426                           PIE1 equ 0F9Dh ;# 
   427  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   428                           PIR1 equ 0F9Eh ;# 
   429  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   430                           IPR1 equ 0F9Fh ;# 
   431  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   432                           PIE2 equ 0FA0h ;# 
   433  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   434                           PIR2 equ 0FA1h ;# 
   435  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   436                           IPR2 equ 0FA2h ;# 
   437  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   438                           EECON1 equ 0FA6h ;# 
   439  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   440                           EECON2 equ 0FA7h ;# 
   441  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   442                           EEDATA equ 0FA8h ;# 
   443  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   444                           EEADR equ 0FA9h ;# 
   445  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   446                           RCSTA equ 0FABh ;# 
   447  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   448                           RCSTA1 equ 0FABh ;# 
   449  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   450                           TXSTA equ 0FACh ;# 
   451  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   452                           TXSTA1 equ 0FACh ;# 
   453  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   454                           TXREG equ 0FADh ;# 
   455  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   456                           TXREG1 equ 0FADh ;# 
   457  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   458                           RCREG equ 0FAEh ;# 
   459  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   460                           RCREG1 equ 0FAEh ;# 
   461  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   462                           SPBRG equ 0FAFh ;# 
   463  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   464                           SPBRG1 equ 0FAFh ;# 
   465  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   466                           SPBRGH equ 0FB0h ;# 
   467  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   468                           T3CON equ 0FB1h ;# 
   469  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   470                           TMR3 equ 0FB2h ;# 
   471  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   472                           TMR3L equ 0FB2h ;# 
   473  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   474                           TMR3H equ 0FB3h ;# 
   475  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   476                           CMCON equ 0FB4h ;# 
   477  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   478                           CVRCON equ 0FB5h ;# 
   479  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   480                           ECCP1AS equ 0FB6h ;# 
   481  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   482                           ECCPAS equ 0FB6h ;# 
   483  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   484                           PWM1CON equ 0FB7h ;# 
   485  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   486                           ECCP1DEL equ 0FB7h ;# 
   487  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   488                           BAUDCON equ 0FB8h ;# 
   489  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   490                           BAUDCTL equ 0FB8h ;# 
   491  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   492                           CCP2CON equ 0FBAh ;# 
   493  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   494                           CCPR2 equ 0FBBh ;# 
   495  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   496                           CCPR2L equ 0FBBh ;# 
   497  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   498                           CCPR2H equ 0FBCh ;# 
   499  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   500                           CCP1CON equ 0FBDh ;# 
   501  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   502                           CCPR1 equ 0FBEh ;# 
   503  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   504                           CCPR1L equ 0FBEh ;# 
   505  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   506                           CCPR1H equ 0FBFh ;# 
   507  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   508                           ADCON2 equ 0FC0h ;# 
   509  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   510                           ADCON1 equ 0FC1h ;# 
   511  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   512                           ADCON0 equ 0FC2h ;# 
   513  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   514                           ADRES equ 0FC3h ;# 
   515  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   516                           ADRESL equ 0FC3h ;# 
   517  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   518                           ADRESH equ 0FC4h ;# 
   519  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   520                           SSPCON2 equ 0FC5h ;# 
   521  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   522                           SSPCON1 equ 0FC6h ;# 
   523  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   524                           SSPSTAT equ 0FC7h ;# 
   525  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   526                           SSPADD equ 0FC8h ;# 
   527  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   528                           SSPBUF equ 0FC9h ;# 
   529  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   530                           T2CON equ 0FCAh ;# 
   531  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   532                           PR2 equ 0FCBh ;# 
   533  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   534                           MEMCON equ 0FCBh ;# 
   535  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   536                           TMR2 equ 0FCCh ;# 
   537  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   538                           T1CON equ 0FCDh ;# 
   539  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   540                           TMR1 equ 0FCEh ;# 
   541  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   542                           TMR1L equ 0FCEh ;# 
   543  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   544                           TMR1H equ 0FCFh ;# 
   545  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   546                           RCON equ 0FD0h ;# 
   547  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   548                           WDTCON equ 0FD1h ;# 
   549  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   550                           HLVDCON equ 0FD2h ;# 
   551  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   552                           LVDCON equ 0FD2h ;# 
   553  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   554                           OSCCON equ 0FD3h ;# 
   555  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   556                           T0CON equ 0FD5h ;# 
   557  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   558                           TMR0 equ 0FD6h ;# 
   559  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   560                           TMR0L equ 0FD6h ;# 
   561  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   562                           TMR0H equ 0FD7h ;# 
   563  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   564                           STATUS equ 0FD8h ;# 
   565  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   566                           FSR2 equ 0FD9h ;# 
   567  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   568                           FSR2L equ 0FD9h ;# 
   569  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   570                           FSR2H equ 0FDAh ;# 
   571  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   572                           PLUSW2 equ 0FDBh ;# 
   573  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   574                           PREINC2 equ 0FDCh ;# 
   575  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   576                           POSTDEC2 equ 0FDDh ;# 
   577  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   578                           POSTINC2 equ 0FDEh ;# 
   579  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   580                           INDF2 equ 0FDFh ;# 
   581  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   582                           BSR equ 0FE0h ;# 
   583  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   584                           FSR1 equ 0FE1h ;# 
   585  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   586                           FSR1L equ 0FE1h ;# 
   587  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   588                           FSR1H equ 0FE2h ;# 
   589  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   590                           PLUSW1 equ 0FE3h ;# 
   591  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   592                           PREINC1 equ 0FE4h ;# 
   593  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   594                           POSTDEC1 equ 0FE5h ;# 
   595  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   596                           POSTINC1 equ 0FE6h ;# 
   597  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   598                           INDF1 equ 0FE7h ;# 
   599  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   600                           WREG equ 0FE8h ;# 
   601  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   602                           FSR0 equ 0FE9h ;# 
   603  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   604                           FSR0L equ 0FE9h ;# 
   605  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   606                           FSR0H equ 0FEAh ;# 
   607  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   608                           PLUSW0 equ 0FEBh ;# 
   609  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   610                           PREINC0 equ 0FECh ;# 
   611  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   612                           POSTDEC0 equ 0FEDh ;# 
   613  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   614                           POSTINC0 equ 0FEEh ;# 
   615  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   616                           INDF0 equ 0FEFh ;# 
   617  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   618                           INTCON3 equ 0FF0h ;# 
   619  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   620                           INTCON2 equ 0FF1h ;# 
   621  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   622                           INTCON equ 0FF2h ;# 
   623  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   624                           PROD equ 0FF3h ;# 
   625  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   626                           PRODL equ 0FF3h ;# 
   627  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   628                           PRODH equ 0FF4h ;# 
   629  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   630                           TABLAT equ 0FF5h ;# 
   631  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   632                           TBLPTR equ 0FF6h ;# 
   633  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   634                           TBLPTRL equ 0FF6h ;# 
   635  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   636                           TBLPTRH equ 0FF7h ;# 
   637  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   638                           TBLPTRU equ 0FF8h ;# 
   639  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   640                           PCLAT equ 0FF9h ;# 
   641  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   642                           PC equ 0FF9h ;# 
   643  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   644                           PCL equ 0FF9h ;# 
   645  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   646                           PCLATH equ 0FFAh ;# 
   647  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   648                           PCLATU equ 0FFBh ;# 
   649  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   650                           STKPTR equ 0FFCh ;# 
   651  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   652                           TOS equ 0FFDh ;# 
   653  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   654                           TOSL equ 0FFDh ;# 
   655  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   656                           TOSH equ 0FFEh ;# 
   657  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   658                           TOSU equ 0FFFh ;# 
   659  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   660                           PORTA equ 0F80h ;# 
   661  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   662                           PORTB equ 0F81h ;# 
   663  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   664                           PORTC equ 0F82h ;# 
   665  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   666                           PORTD equ 0F83h ;# 
   667  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   668                           PORTE equ 0F84h ;# 
   669  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   670                           LATA equ 0F89h ;# 
   671  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   672                           LATB equ 0F8Ah ;# 
   673  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   674                           LATC equ 0F8Bh ;# 
   675  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   676                           LATD equ 0F8Ch ;# 
   677  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   678                           LATE equ 0F8Dh ;# 
   679  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   680                           TRISA equ 0F92h ;# 
   681  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   682                           DDRA equ 0F92h ;# 
   683  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   684                           TRISB equ 0F93h ;# 
   685  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   686                           DDRB equ 0F93h ;# 
   687  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   688                           TRISC equ 0F94h ;# 
   689  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   690                           DDRC equ 0F94h ;# 
   691  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   692                           TRISD equ 0F95h ;# 
   693  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   694                           DDRD equ 0F95h ;# 
   695  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   696                           TRISE equ 0F96h ;# 
   697  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   698                           DDRE equ 0F96h ;# 
   699  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   700                           OSCTUNE equ 0F9Bh ;# 
   701  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   702                           PIE1 equ 0F9Dh ;# 
   703  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   704                           PIR1 equ 0F9Eh ;# 
   705  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   706                           IPR1 equ 0F9Fh ;# 
   707  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   708                           PIE2 equ 0FA0h ;# 
   709  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   710                           PIR2 equ 0FA1h ;# 
   711  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   712                           IPR2 equ 0FA2h ;# 
   713  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   714                           EECON1 equ 0FA6h ;# 
   715  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   716                           EECON2 equ 0FA7h ;# 
   717  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   718                           EEDATA equ 0FA8h ;# 
   719  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   720                           EEADR equ 0FA9h ;# 
   721  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   722                           RCSTA equ 0FABh ;# 
   723  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   724                           RCSTA1 equ 0FABh ;# 
   725  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   726                           TXSTA equ 0FACh ;# 
   727  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   728                           TXSTA1 equ 0FACh ;# 
   729  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   730                           TXREG equ 0FADh ;# 
   731  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   732                           TXREG1 equ 0FADh ;# 
   733  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   734                           RCREG equ 0FAEh ;# 
   735  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   736                           RCREG1 equ 0FAEh ;# 
   737  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   738                           SPBRG equ 0FAFh ;# 
   739  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   740                           SPBRG1 equ 0FAFh ;# 
   741  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   742                           SPBRGH equ 0FB0h ;# 
   743  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   744                           T3CON equ 0FB1h ;# 
   745  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   746                           TMR3 equ 0FB2h ;# 
   747  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   748                           TMR3L equ 0FB2h ;# 
   749  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   750                           TMR3H equ 0FB3h ;# 
   751  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   752                           CMCON equ 0FB4h ;# 
   753  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   754                           CVRCON equ 0FB5h ;# 
   755  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   756                           ECCP1AS equ 0FB6h ;# 
   757  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   758                           ECCPAS equ 0FB6h ;# 
   759  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   760                           PWM1CON equ 0FB7h ;# 
   761  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   762                           ECCP1DEL equ 0FB7h ;# 
   763  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   764                           BAUDCON equ 0FB8h ;# 
   765  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   766                           BAUDCTL equ 0FB8h ;# 
   767  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   768                           CCP2CON equ 0FBAh ;# 
   769  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   770                           CCPR2 equ 0FBBh ;# 
   771  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   772                           CCPR2L equ 0FBBh ;# 
   773  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   774                           CCPR2H equ 0FBCh ;# 
   775  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   776                           CCP1CON equ 0FBDh ;# 
   777  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   778                           CCPR1 equ 0FBEh ;# 
   779  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   780                           CCPR1L equ 0FBEh ;# 
   781  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   782                           CCPR1H equ 0FBFh ;# 
   783  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   784                           ADCON2 equ 0FC0h ;# 
   785  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   786                           ADCON1 equ 0FC1h ;# 
   787  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   788                           ADCON0 equ 0FC2h ;# 
   789  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   790                           ADRES equ 0FC3h ;# 
   791  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   792                           ADRESL equ 0FC3h ;# 
   793  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   794                           ADRESH equ 0FC4h ;# 
   795  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   796                           SSPCON2 equ 0FC5h ;# 
   797  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   798                           SSPCON1 equ 0FC6h ;# 
   799  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   800                           SSPSTAT equ 0FC7h ;# 
   801  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   802                           SSPADD equ 0FC8h ;# 
   803  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   804                           SSPBUF equ 0FC9h ;# 
   805  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   806                           T2CON equ 0FCAh ;# 
   807  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   808                           PR2 equ 0FCBh ;# 
   809  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   810                           MEMCON equ 0FCBh ;# 
   811  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   812                           TMR2 equ 0FCCh ;# 
   813  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   814                           T1CON equ 0FCDh ;# 
   815  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   816                           TMR1 equ 0FCEh ;# 
   817  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   818                           TMR1L equ 0FCEh ;# 
   819  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   820                           TMR1H equ 0FCFh ;# 
   821  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   822                           RCON equ 0FD0h ;# 
   823  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   824                           WDTCON equ 0FD1h ;# 
   825  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   826                           HLVDCON equ 0FD2h ;# 
   827  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   828                           LVDCON equ 0FD2h ;# 
   829  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   830                           OSCCON equ 0FD3h ;# 
   831  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   832                           T0CON equ 0FD5h ;# 
   833  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   834                           TMR0 equ 0FD6h ;# 
   835  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   836                           TMR0L equ 0FD6h ;# 
   837  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   838                           TMR0H equ 0FD7h ;# 
   839  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   840                           STATUS equ 0FD8h ;# 
   841  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   842                           FSR2 equ 0FD9h ;# 
   843  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   844                           FSR2L equ 0FD9h ;# 
   845  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   846                           FSR2H equ 0FDAh ;# 
   847  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   848                           PLUSW2 equ 0FDBh ;# 
   849  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   850                           PREINC2 equ 0FDCh ;# 
   851  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   852                           POSTDEC2 equ 0FDDh ;# 
   853  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   854                           POSTINC2 equ 0FDEh ;# 
   855  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   856                           INDF2 equ 0FDFh ;# 
   857  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   858                           BSR equ 0FE0h ;# 
   859  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   860                           FSR1 equ 0FE1h ;# 
   861  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   862                           FSR1L equ 0FE1h ;# 
   863  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   864                           FSR1H equ 0FE2h ;# 
   865  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   866                           PLUSW1 equ 0FE3h ;# 
   867  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   868                           PREINC1 equ 0FE4h ;# 
   869  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   870                           POSTDEC1 equ 0FE5h ;# 
   871  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   872                           POSTINC1 equ 0FE6h ;# 
   873  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   874                           INDF1 equ 0FE7h ;# 
   875  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   876                           WREG equ 0FE8h ;# 
   877  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   878                           FSR0 equ 0FE9h ;# 
   879  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   880                           FSR0L equ 0FE9h ;# 
   881  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   882                           FSR0H equ 0FEAh ;# 
   883  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   884                           PLUSW0 equ 0FEBh ;# 
   885  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   886                           PREINC0 equ 0FECh ;# 
   887  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   888                           POSTDEC0 equ 0FEDh ;# 
   889  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   890                           POSTINC0 equ 0FEEh ;# 
   891  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   892                           INDF0 equ 0FEFh ;# 
   893  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   894                           INTCON3 equ 0FF0h ;# 
   895  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   896                           INTCON2 equ 0FF1h ;# 
   897  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   898                           INTCON equ 0FF2h ;# 
   899  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   900                           PROD equ 0FF3h ;# 
   901  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   902                           PRODL equ 0FF3h ;# 
   903  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   904                           PRODH equ 0FF4h ;# 
   905  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   906                           TABLAT equ 0FF5h ;# 
   907  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   908                           TBLPTR equ 0FF6h ;# 
   909  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   910                           TBLPTRL equ 0FF6h ;# 
   911  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   912                           TBLPTRH equ 0FF7h ;# 
   913  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   914                           TBLPTRU equ 0FF8h ;# 
   915  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   916                           PCLAT equ 0FF9h ;# 
   917  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   918                           PC equ 0FF9h ;# 
   919  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   920                           PCL equ 0FF9h ;# 
   921  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   922                           PCLATH equ 0FFAh ;# 
   923  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   924                           PCLATU equ 0FFBh ;# 
   925  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   926                           STKPTR equ 0FFCh ;# 
   927  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   928                           TOS equ 0FFDh ;# 
   929  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   930                           TOSL equ 0FFDh ;# 
   931  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   932                           TOSH equ 0FFEh ;# 
   933  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   934                           TOSU equ 0FFFh ;# 
   935  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   936                           PORTA equ 0F80h ;# 
   937  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   938                           PORTB equ 0F81h ;# 
   939  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   940                           PORTC equ 0F82h ;# 
   941  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   942                           PORTD equ 0F83h ;# 
   943  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   944                           PORTE equ 0F84h ;# 
   945  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   946                           LATA equ 0F89h ;# 
   947  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   948                           LATB equ 0F8Ah ;# 
   949  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   950                           LATC equ 0F8Bh ;# 
   951  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   952                           LATD equ 0F8Ch ;# 
   953  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   954                           LATE equ 0F8Dh ;# 
   955  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   956                           TRISA equ 0F92h ;# 
   957  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   958                           DDRA equ 0F92h ;# 
   959  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   960                           TRISB equ 0F93h ;# 
   961  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   962                           DDRB equ 0F93h ;# 
   963  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   964                           TRISC equ 0F94h ;# 
   965  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   966                           DDRC equ 0F94h ;# 
   967  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   968                           TRISD equ 0F95h ;# 
   969  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   970                           DDRD equ 0F95h ;# 
   971  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   972                           TRISE equ 0F96h ;# 
   973  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   974                           DDRE equ 0F96h ;# 
   975  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   976                           OSCTUNE equ 0F9Bh ;# 
   977  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   978                           PIE1 equ 0F9Dh ;# 
   979  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   980                           PIR1 equ 0F9Eh ;# 
   981  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   982                           IPR1 equ 0F9Fh ;# 
   983  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   984                           PIE2 equ 0FA0h ;# 
   985  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   986                           PIR2 equ 0FA1h ;# 
   987  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   988                           IPR2 equ 0FA2h ;# 
   989  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   990                           EECON1 equ 0FA6h ;# 
   991  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   992                           EECON2 equ 0FA7h ;# 
   993  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   994                           EEDATA equ 0FA8h ;# 
   995  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   996                           EEADR equ 0FA9h ;# 
   997  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   998                           RCSTA equ 0FABh ;# 
   999  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1000                           RCSTA1 equ 0FABh ;# 
  1001  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1002                           TXSTA equ 0FACh ;# 
  1003  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1004                           TXSTA1 equ 0FACh ;# 
  1005  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1006                           TXREG equ 0FADh ;# 
  1007  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1008                           TXREG1 equ 0FADh ;# 
  1009  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1010                           RCREG equ 0FAEh ;# 
  1011  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1012                           RCREG1 equ 0FAEh ;# 
  1013  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1014                           SPBRG equ 0FAFh ;# 
  1015  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1016                           SPBRG1 equ 0FAFh ;# 
  1017  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1018                           SPBRGH equ 0FB0h ;# 
  1019  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1020                           T3CON equ 0FB1h ;# 
  1021  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1022                           TMR3 equ 0FB2h ;# 
  1023  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1024                           TMR3L equ 0FB2h ;# 
  1025  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1026                           TMR3H equ 0FB3h ;# 
  1027  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1028                           CMCON equ 0FB4h ;# 
  1029  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1030                           CVRCON equ 0FB5h ;# 
  1031  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1032                           ECCP1AS equ 0FB6h ;# 
  1033  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1034                           ECCPAS equ 0FB6h ;# 
  1035  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1036                           PWM1CON equ 0FB7h ;# 
  1037  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1038                           ECCP1DEL equ 0FB7h ;# 
  1039  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1040                           BAUDCON equ 0FB8h ;# 
  1041  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1042                           BAUDCTL equ 0FB8h ;# 
  1043  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1044                           CCP2CON equ 0FBAh ;# 
  1045  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1046                           CCPR2 equ 0FBBh ;# 
  1047  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1048                           CCPR2L equ 0FBBh ;# 
  1049  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1050                           CCPR2H equ 0FBCh ;# 
  1051  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1052                           CCP1CON equ 0FBDh ;# 
  1053  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1054                           CCPR1 equ 0FBEh ;# 
  1055  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1056                           CCPR1L equ 0FBEh ;# 
  1057  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1058                           CCPR1H equ 0FBFh ;# 
  1059  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1060                           ADCON2 equ 0FC0h ;# 
  1061  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1062                           ADCON1 equ 0FC1h ;# 
  1063  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1064                           ADCON0 equ 0FC2h ;# 
  1065  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1066                           ADRES equ 0FC3h ;# 
  1067  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1068                           ADRESL equ 0FC3h ;# 
  1069  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1070                           ADRESH equ 0FC4h ;# 
  1071  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1072                           SSPCON2 equ 0FC5h ;# 
  1073  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1074                           SSPCON1 equ 0FC6h ;# 
  1075  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1076                           SSPSTAT equ 0FC7h ;# 
  1077  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1078                           SSPADD equ 0FC8h ;# 
  1079  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1080                           SSPBUF equ 0FC9h ;# 
  1081  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1082                           T2CON equ 0FCAh ;# 
  1083  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1084                           PR2 equ 0FCBh ;# 
  1085  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1086                           MEMCON equ 0FCBh ;# 
  1087  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1088                           TMR2 equ 0FCCh ;# 
  1089  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1090                           T1CON equ 0FCDh ;# 
  1091  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1092                           TMR1 equ 0FCEh ;# 
  1093  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1094                           TMR1L equ 0FCEh ;# 
  1095  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1096                           TMR1H equ 0FCFh ;# 
  1097  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1098                           RCON equ 0FD0h ;# 
  1099  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1100                           WDTCON equ 0FD1h ;# 
  1101  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1102                           HLVDCON equ 0FD2h ;# 
  1103  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1104                           LVDCON equ 0FD2h ;# 
  1105  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1106                           OSCCON equ 0FD3h ;# 
  1107  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1108                           T0CON equ 0FD5h ;# 
  1109  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1110                           TMR0 equ 0FD6h ;# 
  1111  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1112                           TMR0L equ 0FD6h ;# 
  1113  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1114                           TMR0H equ 0FD7h ;# 
  1115  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1116                           STATUS equ 0FD8h ;# 
  1117  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1118                           FSR2 equ 0FD9h ;# 
  1119  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1120                           FSR2L equ 0FD9h ;# 
  1121  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1122                           FSR2H equ 0FDAh ;# 
  1123  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1124                           PLUSW2 equ 0FDBh ;# 
  1125  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1126                           PREINC2 equ 0FDCh ;# 
  1127  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1128                           POSTDEC2 equ 0FDDh ;# 
  1129  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1130                           POSTINC2 equ 0FDEh ;# 
  1131  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1132                           INDF2 equ 0FDFh ;# 
  1133  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1134                           BSR equ 0FE0h ;# 
  1135  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1136                           FSR1 equ 0FE1h ;# 
  1137  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1138                           FSR1L equ 0FE1h ;# 
  1139  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1140                           FSR1H equ 0FE2h ;# 
  1141  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1142                           PLUSW1 equ 0FE3h ;# 
  1143  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1144                           PREINC1 equ 0FE4h ;# 
  1145  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1146                           POSTDEC1 equ 0FE5h ;# 
  1147  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1148                           POSTINC1 equ 0FE6h ;# 
  1149  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1150                           INDF1 equ 0FE7h ;# 
  1151  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1152                           WREG equ 0FE8h ;# 
  1153  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1154                           FSR0 equ 0FE9h ;# 
  1155  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1156                           FSR0L equ 0FE9h ;# 
  1157  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1158                           FSR0H equ 0FEAh ;# 
  1159  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1160                           PLUSW0 equ 0FEBh ;# 
  1161  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1162                           PREINC0 equ 0FECh ;# 
  1163  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1164                           POSTDEC0 equ 0FEDh ;# 
  1165  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1166                           POSTINC0 equ 0FEEh ;# 
  1167  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1168                           INDF0 equ 0FEFh ;# 
  1169  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1170                           INTCON3 equ 0FF0h ;# 
  1171  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1172                           INTCON2 equ 0FF1h ;# 
  1173  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1174                           INTCON equ 0FF2h ;# 
  1175  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1176                           PROD equ 0FF3h ;# 
  1177  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1178                           PRODL equ 0FF3h ;# 
  1179  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1180                           PRODH equ 0FF4h ;# 
  1181  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1182                           TABLAT equ 0FF5h ;# 
  1183  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1184                           TBLPTR equ 0FF6h ;# 
  1185  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1186                           TBLPTRL equ 0FF6h ;# 
  1187  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1188                           TBLPTRH equ 0FF7h ;# 
  1189  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1190                           TBLPTRU equ 0FF8h ;# 
  1191  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1192                           PCLAT equ 0FF9h ;# 
  1193  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1194                           PC equ 0FF9h ;# 
  1195  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1196                           PCL equ 0FF9h ;# 
  1197  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1198                           PCLATH equ 0FFAh ;# 
  1199  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1200                           PCLATU equ 0FFBh ;# 
  1201  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1202                           STKPTR equ 0FFCh ;# 
  1203  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1204                           TOS equ 0FFDh ;# 
  1205  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1206                           TOSL equ 0FFDh ;# 
  1207  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1208                           TOSH equ 0FFEh ;# 
  1209  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1210                           TOSU equ 0FFFh ;# 
  1211  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1212                           PORTA equ 0F80h ;# 
  1213  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1214                           PORTB equ 0F81h ;# 
  1215  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1216                           PORTC equ 0F82h ;# 
  1217  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1218                           PORTD equ 0F83h ;# 
  1219  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1220                           PORTE equ 0F84h ;# 
  1221  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1222                           LATA equ 0F89h ;# 
  1223  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1224                           LATB equ 0F8Ah ;# 
  1225  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1226                           LATC equ 0F8Bh ;# 
  1227  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1228                           LATD equ 0F8Ch ;# 
  1229  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1230                           LATE equ 0F8Dh ;# 
  1231  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1232                           TRISA equ 0F92h ;# 
  1233  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1234                           DDRA equ 0F92h ;# 
  1235  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1236                           TRISB equ 0F93h ;# 
  1237  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1238                           DDRB equ 0F93h ;# 
  1239  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1240                           TRISC equ 0F94h ;# 
  1241  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1242                           DDRC equ 0F94h ;# 
  1243  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1244                           TRISD equ 0F95h ;# 
  1245  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1246                           DDRD equ 0F95h ;# 
  1247  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1248                           TRISE equ 0F96h ;# 
  1249  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1250                           DDRE equ 0F96h ;# 
  1251  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1252                           OSCTUNE equ 0F9Bh ;# 
  1253  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1254                           PIE1 equ 0F9Dh ;# 
  1255  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1256                           PIR1 equ 0F9Eh ;# 
  1257  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1258                           IPR1 equ 0F9Fh ;# 
  1259  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1260                           PIE2 equ 0FA0h ;# 
  1261  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1262                           PIR2 equ 0FA1h ;# 
  1263  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1264                           IPR2 equ 0FA2h ;# 
  1265  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1266                           EECON1 equ 0FA6h ;# 
  1267  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1268                           EECON2 equ 0FA7h ;# 
  1269  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1270                           EEDATA equ 0FA8h ;# 
  1271  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1272                           EEADR equ 0FA9h ;# 
  1273  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1274                           RCSTA equ 0FABh ;# 
  1275  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1276                           RCSTA1 equ 0FABh ;# 
  1277  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1278                           TXSTA equ 0FACh ;# 
  1279  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1280                           TXSTA1 equ 0FACh ;# 
  1281  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1282                           TXREG equ 0FADh ;# 
  1283  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1284                           TXREG1 equ 0FADh ;# 
  1285  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1286                           RCREG equ 0FAEh ;# 
  1287  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1288                           RCREG1 equ 0FAEh ;# 
  1289  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1290                           SPBRG equ 0FAFh ;# 
  1291  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1292                           SPBRG1 equ 0FAFh ;# 
  1293  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1294                           SPBRGH equ 0FB0h ;# 
  1295  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1296                           T3CON equ 0FB1h ;# 
  1297  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1298                           TMR3 equ 0FB2h ;# 
  1299  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1300                           TMR3L equ 0FB2h ;# 
  1301  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1302                           TMR3H equ 0FB3h ;# 
  1303  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1304                           CMCON equ 0FB4h ;# 
  1305  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1306                           CVRCON equ 0FB5h ;# 
  1307  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1308                           ECCP1AS equ 0FB6h ;# 
  1309  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1310                           ECCPAS equ 0FB6h ;# 
  1311  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1312                           PWM1CON equ 0FB7h ;# 
  1313  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1314                           ECCP1DEL equ 0FB7h ;# 
  1315  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1316                           BAUDCON equ 0FB8h ;# 
  1317  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1318                           BAUDCTL equ 0FB8h ;# 
  1319  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1320                           CCP2CON equ 0FBAh ;# 
  1321  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1322                           CCPR2 equ 0FBBh ;# 
  1323  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1324                           CCPR2L equ 0FBBh ;# 
  1325  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1326                           CCPR2H equ 0FBCh ;# 
  1327  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1328                           CCP1CON equ 0FBDh ;# 
  1329  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1330                           CCPR1 equ 0FBEh ;# 
  1331  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1332                           CCPR1L equ 0FBEh ;# 
  1333  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1334                           CCPR1H equ 0FBFh ;# 
  1335  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1336                           ADCON2 equ 0FC0h ;# 
  1337  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1338                           ADCON1 equ 0FC1h ;# 
  1339  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1340                           ADCON0 equ 0FC2h ;# 
  1341  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1342                           ADRES equ 0FC3h ;# 
  1343  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1344                           ADRESL equ 0FC3h ;# 
  1345  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1346                           ADRESH equ 0FC4h ;# 
  1347  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1348                           SSPCON2 equ 0FC5h ;# 
  1349  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1350                           SSPCON1 equ 0FC6h ;# 
  1351  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1352                           SSPSTAT equ 0FC7h ;# 
  1353  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1354                           SSPADD equ 0FC8h ;# 
  1355  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1356                           SSPBUF equ 0FC9h ;# 
  1357  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1358                           T2CON equ 0FCAh ;# 
  1359  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1360                           PR2 equ 0FCBh ;# 
  1361  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1362                           MEMCON equ 0FCBh ;# 
  1363  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1364                           TMR2 equ 0FCCh ;# 
  1365  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1366                           T1CON equ 0FCDh ;# 
  1367  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1368                           TMR1 equ 0FCEh ;# 
  1369  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1370                           TMR1L equ 0FCEh ;# 
  1371  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1372                           TMR1H equ 0FCFh ;# 
  1373  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1374                           RCON equ 0FD0h ;# 
  1375  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1376                           WDTCON equ 0FD1h ;# 
  1377  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1378                           HLVDCON equ 0FD2h ;# 
  1379  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1380                           LVDCON equ 0FD2h ;# 
  1381  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1382                           OSCCON equ 0FD3h ;# 
  1383  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1384                           T0CON equ 0FD5h ;# 
  1385  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1386                           TMR0 equ 0FD6h ;# 
  1387  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1388                           TMR0L equ 0FD6h ;# 
  1389  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1390                           TMR0H equ 0FD7h ;# 
  1391  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1392                           STATUS equ 0FD8h ;# 
  1393  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1394                           FSR2 equ 0FD9h ;# 
  1395  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1396                           FSR2L equ 0FD9h ;# 
  1397  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1398                           FSR2H equ 0FDAh ;# 
  1399  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1400                           PLUSW2 equ 0FDBh ;# 
  1401  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1402                           PREINC2 equ 0FDCh ;# 
  1403  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1404                           POSTDEC2 equ 0FDDh ;# 
  1405  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1406                           POSTINC2 equ 0FDEh ;# 
  1407  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1408                           INDF2 equ 0FDFh ;# 
  1409  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1410                           BSR equ 0FE0h ;# 
  1411  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1412                           FSR1 equ 0FE1h ;# 
  1413  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1414                           FSR1L equ 0FE1h ;# 
  1415  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1416                           FSR1H equ 0FE2h ;# 
  1417  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1418                           PLUSW1 equ 0FE3h ;# 
  1419  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1420                           PREINC1 equ 0FE4h ;# 
  1421  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1422                           POSTDEC1 equ 0FE5h ;# 
  1423  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1424                           POSTINC1 equ 0FE6h ;# 
  1425  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1426                           INDF1 equ 0FE7h ;# 
  1427  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1428                           WREG equ 0FE8h ;# 
  1429  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1430                           FSR0 equ 0FE9h ;# 
  1431  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1432                           FSR0L equ 0FE9h ;# 
  1433  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1434                           FSR0H equ 0FEAh ;# 
  1435  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1436                           PLUSW0 equ 0FEBh ;# 
  1437  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1438                           PREINC0 equ 0FECh ;# 
  1439  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1440                           POSTDEC0 equ 0FEDh ;# 
  1441  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1442                           POSTINC0 equ 0FEEh ;# 
  1443  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1444                           INDF0 equ 0FEFh ;# 
  1445  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1446                           INTCON3 equ 0FF0h ;# 
  1447  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1448                           INTCON2 equ 0FF1h ;# 
  1449  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1450                           INTCON equ 0FF2h ;# 
  1451  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1452                           PROD equ 0FF3h ;# 
  1453  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1454                           PRODL equ 0FF3h ;# 
  1455  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1456                           PRODH equ 0FF4h ;# 
  1457  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1458                           TABLAT equ 0FF5h ;# 
  1459  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1460                           TBLPTR equ 0FF6h ;# 
  1461  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1462                           TBLPTRL equ 0FF6h ;# 
  1463  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1464                           TBLPTRH equ 0FF7h ;# 
  1465  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1466                           TBLPTRU equ 0FF8h ;# 
  1467  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1468                           PCLAT equ 0FF9h ;# 
  1469  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1470                           PC equ 0FF9h ;# 
  1471  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1472                           PCL equ 0FF9h ;# 
  1473  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1474                           PCLATH equ 0FFAh ;# 
  1475  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1476                           PCLATU equ 0FFBh ;# 
  1477  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1478                           STKPTR equ 0FFCh ;# 
  1479  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1480                           TOS equ 0FFDh ;# 
  1481  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1482                           TOSL equ 0FFDh ;# 
  1483  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1484                           TOSH equ 0FFEh ;# 
  1485  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1486                           TOSU equ 0FFFh ;# 
  1487  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1488                           PORTA equ 0F80h ;# 
  1489  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1490                           PORTB equ 0F81h ;# 
  1491  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1492                           PORTC equ 0F82h ;# 
  1493  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1494                           PORTD equ 0F83h ;# 
  1495  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1496                           PORTE equ 0F84h ;# 
  1497  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1498                           LATA equ 0F89h ;# 
  1499  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1500                           LATB equ 0F8Ah ;# 
  1501  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1502                           LATC equ 0F8Bh ;# 
  1503  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1504                           LATD equ 0F8Ch ;# 
  1505  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1506                           LATE equ 0F8Dh ;# 
  1507  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1508                           TRISA equ 0F92h ;# 
  1509  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1510                           DDRA equ 0F92h ;# 
  1511  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1512                           TRISB equ 0F93h ;# 
  1513  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1514                           DDRB equ 0F93h ;# 
  1515  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1516                           TRISC equ 0F94h ;# 
  1517  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1518                           DDRC equ 0F94h ;# 
  1519  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1520                           TRISD equ 0F95h ;# 
  1521  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1522                           DDRD equ 0F95h ;# 
  1523  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1524                           TRISE equ 0F96h ;# 
  1525  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1526                           DDRE equ 0F96h ;# 
  1527  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1528                           OSCTUNE equ 0F9Bh ;# 
  1529  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1530                           PIE1 equ 0F9Dh ;# 
  1531  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1532                           PIR1 equ 0F9Eh ;# 
  1533  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1534                           IPR1 equ 0F9Fh ;# 
  1535  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1536                           PIE2 equ 0FA0h ;# 
  1537  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1538                           PIR2 equ 0FA1h ;# 
  1539  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1540                           IPR2 equ 0FA2h ;# 
  1541  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1542                           EECON1 equ 0FA6h ;# 
  1543  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1544                           EECON2 equ 0FA7h ;# 
  1545  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1546                           EEDATA equ 0FA8h ;# 
  1547  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1548                           EEADR equ 0FA9h ;# 
  1549  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1550                           RCSTA equ 0FABh ;# 
  1551  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1552                           RCSTA1 equ 0FABh ;# 
  1553  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1554                           TXSTA equ 0FACh ;# 
  1555  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1556                           TXSTA1 equ 0FACh ;# 
  1557  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1558                           TXREG equ 0FADh ;# 
  1559  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1560                           TXREG1 equ 0FADh ;# 
  1561  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1562                           RCREG equ 0FAEh ;# 
  1563  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1564                           RCREG1 equ 0FAEh ;# 
  1565  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1566                           SPBRG equ 0FAFh ;# 
  1567  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1568                           SPBRG1 equ 0FAFh ;# 
  1569  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1570                           SPBRGH equ 0FB0h ;# 
  1571  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1572                           T3CON equ 0FB1h ;# 
  1573  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1574                           TMR3 equ 0FB2h ;# 
  1575  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1576                           TMR3L equ 0FB2h ;# 
  1577  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1578                           TMR3H equ 0FB3h ;# 
  1579  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1580                           CMCON equ 0FB4h ;# 
  1581  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1582                           CVRCON equ 0FB5h ;# 
  1583  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1584                           ECCP1AS equ 0FB6h ;# 
  1585  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1586                           ECCPAS equ 0FB6h ;# 
  1587  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1588                           PWM1CON equ 0FB7h ;# 
  1589  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1590                           ECCP1DEL equ 0FB7h ;# 
  1591  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1592                           BAUDCON equ 0FB8h ;# 
  1593  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1594                           BAUDCTL equ 0FB8h ;# 
  1595  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1596                           CCP2CON equ 0FBAh ;# 
  1597  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1598                           CCPR2 equ 0FBBh ;# 
  1599  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1600                           CCPR2L equ 0FBBh ;# 
  1601  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1602                           CCPR2H equ 0FBCh ;# 
  1603  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1604                           CCP1CON equ 0FBDh ;# 
  1605  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1606                           CCPR1 equ 0FBEh ;# 
  1607  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1608                           CCPR1L equ 0FBEh ;# 
  1609  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1610                           CCPR1H equ 0FBFh ;# 
  1611  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1612                           ADCON2 equ 0FC0h ;# 
  1613  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1614                           ADCON1 equ 0FC1h ;# 
  1615  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1616                           ADCON0 equ 0FC2h ;# 
  1617  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1618                           ADRES equ 0FC3h ;# 
  1619  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1620                           ADRESL equ 0FC3h ;# 
  1621  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1622                           ADRESH equ 0FC4h ;# 
  1623  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1624                           SSPCON2 equ 0FC5h ;# 
  1625  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1626                           SSPCON1 equ 0FC6h ;# 
  1627  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1628                           SSPSTAT equ 0FC7h ;# 
  1629  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1630                           SSPADD equ 0FC8h ;# 
  1631  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1632                           SSPBUF equ 0FC9h ;# 
  1633  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1634                           T2CON equ 0FCAh ;# 
  1635  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1636                           PR2 equ 0FCBh ;# 
  1637  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1638                           MEMCON equ 0FCBh ;# 
  1639  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1640                           TMR2 equ 0FCCh ;# 
  1641  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1642                           T1CON equ 0FCDh ;# 
  1643  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1644                           TMR1 equ 0FCEh ;# 
  1645  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1646                           TMR1L equ 0FCEh ;# 
  1647  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1648                           TMR1H equ 0FCFh ;# 
  1649  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1650                           RCON equ 0FD0h ;# 
  1651  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1652                           WDTCON equ 0FD1h ;# 
  1653  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1654                           HLVDCON equ 0FD2h ;# 
  1655  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1656                           LVDCON equ 0FD2h ;# 
  1657  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1658                           OSCCON equ 0FD3h ;# 
  1659  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1660                           T0CON equ 0FD5h ;# 
  1661  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1662                           TMR0 equ 0FD6h ;# 
  1663  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1664                           TMR0L equ 0FD6h ;# 
  1665  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1666                           TMR0H equ 0FD7h ;# 
  1667  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1668                           STATUS equ 0FD8h ;# 
  1669  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1670                           FSR2 equ 0FD9h ;# 
  1671  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1672                           FSR2L equ 0FD9h ;# 
  1673  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1674                           FSR2H equ 0FDAh ;# 
  1675  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1676                           PLUSW2 equ 0FDBh ;# 
  1677  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1678                           PREINC2 equ 0FDCh ;# 
  1679  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1680                           POSTDEC2 equ 0FDDh ;# 
  1681  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1682                           POSTINC2 equ 0FDEh ;# 
  1683  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1684                           INDF2 equ 0FDFh ;# 
  1685  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1686                           BSR equ 0FE0h ;# 
  1687  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1688                           FSR1 equ 0FE1h ;# 
  1689  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1690                           FSR1L equ 0FE1h ;# 
  1691  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1692                           FSR1H equ 0FE2h ;# 
  1693  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1694                           PLUSW1 equ 0FE3h ;# 
  1695  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1696                           PREINC1 equ 0FE4h ;# 
  1697  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1698                           POSTDEC1 equ 0FE5h ;# 
  1699  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1700                           POSTINC1 equ 0FE6h ;# 
  1701  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1702                           INDF1 equ 0FE7h ;# 
  1703  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1704                           WREG equ 0FE8h ;# 
  1705  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1706                           FSR0 equ 0FE9h ;# 
  1707  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1708                           FSR0L equ 0FE9h ;# 
  1709  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1710                           FSR0H equ 0FEAh ;# 
  1711  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1712                           PLUSW0 equ 0FEBh ;# 
  1713  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1714                           PREINC0 equ 0FECh ;# 
  1715  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1716                           POSTDEC0 equ 0FEDh ;# 
  1717  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1718                           POSTINC0 equ 0FEEh ;# 
  1719  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1720                           INDF0 equ 0FEFh ;# 
  1721  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1722                           INTCON3 equ 0FF0h ;# 
  1723  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1724                           INTCON2 equ 0FF1h ;# 
  1725  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1726                           INTCON equ 0FF2h ;# 
  1727  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1728                           PROD equ 0FF3h ;# 
  1729  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1730                           PRODL equ 0FF3h ;# 
  1731  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1732                           PRODH equ 0FF4h ;# 
  1733  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1734                           TABLAT equ 0FF5h ;# 
  1735  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1736                           TBLPTR equ 0FF6h ;# 
  1737  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1738                           TBLPTRL equ 0FF6h ;# 
  1739  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1740                           TBLPTRH equ 0FF7h ;# 
  1741  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1742                           TBLPTRU equ 0FF8h ;# 
  1743  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1744                           PCLAT equ 0FF9h ;# 
  1745  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1746                           PC equ 0FF9h ;# 
  1747  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1748                           PCL equ 0FF9h ;# 
  1749  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1750                           PCLATH equ 0FFAh ;# 
  1751  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1752                           PCLATU equ 0FFBh ;# 
  1753  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1754                           STKPTR equ 0FFCh ;# 
  1755  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1756                           TOS equ 0FFDh ;# 
  1757  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1758                           TOSL equ 0FFDh ;# 
  1759  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1760                           TOSH equ 0FFEh ;# 
  1761  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1762                           TOSU equ 0FFFh ;# 
  1763  0000                     	FNCALL	_main,_ClearBuffer
  1764                           	FNCALL	_main,_GetString
  1765                           	FNCALL	_main,_Mode1
  1766                           	FNCALL	_main,_Mode2
  1767                           	FNCALL	_main,_Mode3
  1768                           	FNCALL	_main,_Playmusic
  1769                           	FNCALL	_main,_SYSTEM_Initialize
  1770                           	FNCALL	_main,_Stopmusic
  1771                           	FNCALL	_main,_strcmp
  1772                           	FNCALL	_main,_strstr
  1773                           	FNCALL	_Stopmusic,_ClearBuffer
  1774                           	FNCALL	_SYSTEM_Initialize,_ADC_Initialize
  1775                           	FNCALL	_SYSTEM_Initialize,_CCP1_Initialize
  1776                           	FNCALL	_SYSTEM_Initialize,_INTERRUPT_Initialize
  1777                           	FNCALL	_SYSTEM_Initialize,_OSCILLATOR_Initialize
  1778                           	FNCALL	_SYSTEM_Initialize,_UART_Initialize
  1779                           	FNCALL	_Playmusic,_ClearBuffer
  1780                           	FNCALL	_Mode3,_ClearBuffer
  1781                           	FNCALL	_Mode3,_GetString
  1782                           	FNCALL	_Mode3,_strstr
  1783                           	FNCALL	_Mode2,_ClearBuffer
  1784                           	FNCALL	_Mode2,_GetString
  1785                           	FNCALL	_Mode2,_UART_Write_Text
  1786                           	FNCALL	_Mode2,_strstr
  1787                           	FNCALL	_Mode1,_ClearBuffer
  1788                           	FNCALL	_Mode1,_GetString
  1789                           	FNCALL	_Mode1,_UART_Write_Text
  1790                           	FNCALL	_Mode1,_strstr
  1791                           	FNCALL	_strstr,_strchr
  1792                           	FNCALL	_strstr,_strlen
  1793                           	FNCALL	_strstr,_strncmp
  1794                           	FNCALL	_UART_Write_Text,_UART_Write
  1795                           	FNROOT	_main
  1796                           	FNCALL	_Lo_ISR,_MyusartRead
  1797                           	FNCALL	_MyusartRead,___awmod
  1798                           	FNCALL	_MyusartRead,i1_UART_Write
  1799                           	FNCALL	intlevel1,_Lo_ISR
  1800                           	global	intlevel1
  1801                           	FNROOT	intlevel1
  1802                           	FNCALL	_tc_int,___aldiv
  1803                           	FNCALL	_tc_int,___awdiv
  1804                           	FNCALL	_tc_int,___wmul
  1805                           	FNCALL	_tc_int,i2_UART_Write_Text
  1806                           	FNCALL	i2_UART_Write_Text,i2_UART_Write
  1807                           	FNCALL	intlevel2,_tc_int
  1808                           	global	intlevel2
  1809                           	FNROOT	intlevel2
  1810                           	global	_length
  1811                           	global	_tone
  1812                           	global	_tempo
  1813                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
  1814                           global __pidataCOMRAM
  1815                           __pidataCOMRAM:
  1816  001D66                     	file	"main.c"
  1817                           	line	23
  1818                           
  1819                           ;initializer for _length
  1820                           	dw	(01Eh)&0ffffh
  1821  001D66  001E               	dw	(013h)&0ffffh
  1822  001D68  0013               psect	idataBANK0,class=CODE,space=0,delta=1,noexec
  1823                           global __pidataBANK0
  1824                           __pidataBANK0:
  1825  001992                     	line	19
  1826                           
  1827                           ;initializer for _tone
  1828                           	dw	(030Fh)&0ffffh
  1829  001992  030F               	dw	(0293h)&0ffffh
  1830  001994  0293               	dw	(0293h)&0ffffh
  1831  001996  0293               	dw	(0)&0ffffh
  1832  001998  0000               	dw	(02BAh)&0ffffh
  1833  00199A  02BA               	dw	(024Bh)&0ffffh
  1834  00199C  024B               	dw	(024Bh)&0ffffh
  1835  00199E  024B               	dw	(0)&0ffffh
  1836  0019A0  0000               	dw	(020Bh)&0ffffh
  1837  0019A2  020B               	dw	(024Bh)&0ffffh
  1838  0019A4  024B               	dw	(0293h)&0ffffh
  1839  0019A6  0293               	dw	(02BAh)&0ffffh
  1840  0019A8  02BA               	dw	(030Fh)&0ffffh
  1841  0019AA  030F               	dw	(030Fh)&0ffffh
  1842  0019AC  030F               	dw	(030Fh)&0ffffh
  1843  0019AE  030F               	dw	(0)&0ffffh
  1844  0019B0  0000               	dw	(030Fh)&0ffffh
  1845  0019B2  030F               	dw	(0293h)&0ffffh
  1846  0019B4  0293               	dw	(0293h)&0ffffh
  1847  0019B6  0293               	dw	(0)&0ffffh
  1848  0019B8  0000               	dw	(02BAh)&0ffffh
  1849  0019BA  02BA               	dw	(024Bh)&0ffffh
  1850  0019BC  024B               	dw	(024Bh)&0ffffh
  1851  0019BE  024B               	dw	(0)&0ffffh
  1852  0019C0  0000               	dw	(020Bh)&0ffffh
  1853  0019C2  020B               	dw	(0293h)&0ffffh
  1854  0019C4  0293               	dw	(030Fh)&0ffffh
  1855  0019C6  030F               	dw	(030Fh)&0ffffh
  1856  0019C8  030F               	dw	(0293h)&0ffffh
  1857  0019CA  0293               	dw	(0)&0ffffh
  1858  0019CC  0000               	dw	(0149h)&0ffffh
  1859  0019CE  0149               	dw	(0188h)&0ffffh
  1860  0019D0  0188               	dw	(01B8h)&0ffffh
  1861  0019D2  01B8               	dw	(01B8h)&0ffffh
  1862  0019D4  01B8               	dw	(0)&0ffffh
  1863  0019D6  0000               	dw	(01B8h)&0ffffh
  1864  0019D8  01B8               	dw	(0118Dh)&0ffffh
  1865  0019DA  118D               	dw	(020Bh)&0ffffh
  1866  0019DC  020B               	dw	(020Bh)&0ffffh
  1867  0019DE  020B               	dw	(0)&0ffffh
  1868  0019E0  0000               	dw	(020Bh)&0ffffh
  1869  0019E2  020B               	dw	(024Bh)&0ffffh
  1870  0019E4  024B               	dw	(0118Dh)&0ffffh
  1871  0019E6  118D               	dw	(0118Dh)&0ffffh
  1872  0019E8  118D               	dw	(0)&0ffffh
  1873  0019EA  0000               	dw	(01B8h)&0ffffh
  1874  0019EC  01B8               	dw	(0188h)&0ffffh
  1875  0019EE  0188               	dw	(01B8h)&0ffffh
  1876  0019F0  01B8               	dw	(0)&0ffffh
  1877  0019F2  0000               	db   0
  1878  0019F4  00                 	db   0
  1879  0019F5  00                 	db   0
  1880  0019F6  00                 	db   0
  1881  0019F7  00                 	db   0
  1882  0019F8  00                 	db   0
  1883  0019F9  00                 	db   0
  1884  0019FA  00                 	db   0
  1885  0019FB  00                 	db   0
  1886  0019FC  00                 	db   0
  1887  0019FD  00                 	db   0
  1888  0019FE  00                 	db   0
  1889  0019FF  00                 	db   0
  1890  001A00  00                 	db   0
  1891  001A01  00                 	db   0
  1892  001A02  00                 	db   0
  1893  001A03  00                 	db   0
  1894  001A04  00                 	db   0
  1895  001A05  00                 	db   0
  1896  001A06  00                 	db   0
  1897  001A07  00                 	db   0
  1898  001A08  00                 	db   0
  1899  001A09  00                 psect	idataBANK1,class=CODE,space=0,delta=1,noexec
  1900                           global __pidataBANK1
  1901                           __pidataBANK1:
  1902  001A0A                     	line	21
  1903                           
  1904                           ;initializer for _tempo
  1905                           	dw	(01h)&0ffffh
  1906  001A0A  0001               	dw	(01h)&0ffffh
  1907  001A0C  0001               	dw	(01h)&0ffffh
  1908  001A0E  0001               	dw	(01h)&0ffffh
  1909  001A10  0001               	dw	(01h)&0ffffh
  1910  001A12  0001               	dw	(01h)&0ffffh
  1911  001A14  0001               	dw	(01h)&0ffffh
  1912  001A16  0001               	dw	(01h)&0ffffh
  1913  001A18  0001               	dw	(01h)&0ffffh
  1914  001A1A  0001               	dw	(01h)&0ffffh
  1915  001A1C  0001               	dw	(01h)&0ffffh
  1916  001A1E  0001               	dw	(01h)&0ffffh
  1917  001A20  0001               	dw	(01h)&0ffffh
  1918  001A22  0001               	dw	(01h)&0ffffh
  1919  001A24  0001               	dw	(01h)&0ffffh
  1920  001A26  0001               	dw	(01h)&0ffffh
  1921  001A28  0001               	dw	(01h)&0ffffh
  1922  001A2A  0001               	dw	(01h)&0ffffh
  1923  001A2C  0001               	dw	(01h)&0ffffh
  1924  001A2E  0001               	dw	(01h)&0ffffh
  1925  001A30  0001               	dw	(01h)&0ffffh
  1926  001A32  0001               	dw	(01h)&0ffffh
  1927  001A34  0001               	dw	(01h)&0ffffh
  1928  001A36  0001               	dw	(01h)&0ffffh
  1929  001A38  0001               	dw	(01h)&0ffffh
  1930  001A3A  0001               	dw	(01h)&0ffffh
  1931  001A3C  0001               	dw	(01h)&0ffffh
  1932  001A3E  0001               	dw	(01h)&0ffffh
  1933  001A40  0001               	dw	(01h)&0ffffh
  1934  001A42  0001               	dw	(01h)&0ffffh
  1935  001A44  0001               	dw	(01h)&0ffffh
  1936  001A46  0001               	dw	(01h)&0ffffh
  1937  001A48  0001               	dw	(02h)&0ffffh
  1938  001A4A  0002               	dw	(01h)&0ffffh
  1939  001A4C  0001               	dw	(01h)&0ffffh
  1940  001A4E  0001               	dw	(01h)&0ffffh
  1941  001A50  0001               	dw	(01h)&0ffffh
  1942  001A52  0001               	dw	(02h)&0ffffh
  1943  001A54  0002               	dw	(01h)&0ffffh
  1944  001A56  0001               	dw	(01h)&0ffffh
  1945  001A58  0001               	dw	(01h)&0ffffh
  1946  001A5A  0001               	dw	(01h)&0ffffh
  1947  001A5C  0001               	dw	(02h)&0ffffh
  1948  001A5E  0002               	dw	(01h)&0ffffh
  1949  001A60  0001               	dw	(01h)&0ffffh
  1950  001A62  0001               	dw	(01h)&0ffffh
  1951  001A64  0001               	dw	(01h)&0ffffh
  1952  001A66  0001               	dw	(03h)&0ffffh
  1953  001A68  0003               	dw	(01h)&0ffffh
  1954  001A6A  0001               	db   0
  1955  001A6C  00                 	db   0
  1956  001A6D  00                 	db   0
  1957  001A6E  00                 	db   0
  1958  001A6F  00                 	db   0
  1959  001A70  00                 	db   0
  1960  001A71  00                 	db   0
  1961  001A72  00                 	db   0
  1962  001A73  00                 	db   0
  1963  001A74  00                 	db   0
  1964  001A75  00                 	db   0
  1965  001A76  00                 	db   0
  1966  001A77  00                 	db   0
  1967  001A78  00                 	db   0
  1968  001A79  00                 	db   0
  1969  001A7A  00                 	db   0
  1970  001A7B  00                 	db   0
  1971  001A7C  00                 	db   0
  1972  001A7D  00                 	db   0
  1973  001A7E  00                 	db   0
  1974  001A7F  00                 	db   0
  1975  001A80  00                 	db   0
  1976  001A81  00                 	global	_led_mode
  1977                           	global	_updown
  1978                           	global	_led_breath
  1979                           	global	_music_playing
  1980                           	global	_led_loop
  1981                           	global	_led_interval
  1982                           	global	_led_num
  1983                           	global	_music_choose
  1984                           	global	_music_index
  1985                           	global	_music_count
  1986                           	global	_lenStr
  1987                           	global	_mystring
  1988                           	global	_TMR3
  1989                           _TMR3	set	0xFB2
  1990  0000                     	global	_TMR1
  1991                           _TMR1	set	0xFCE
  1992  0000                     	global	_T1CONbits
  1993                           _T1CONbits	set	0xFCD
  1994  0000                     	global	_CCP1CON
  1995                           _CCP1CON	set	0xFBD
  1996  0000                     	global	_TRISDbits
  1997                           _TRISDbits	set	0xF95
  1998  0000                     	global	_IPR2bits
  1999                           _IPR2bits	set	0xFA2
  2000  0000                     	global	_PIE2bits
  2001                           _PIE2bits	set	0xFA0
  2002  0000                     	global	_T3CONbits
  2003                           _T3CONbits	set	0xFB1
  2004  0000                     	global	_CCP1CONbits
  2005                           _CCP1CONbits	set	0xFBD
  2006  0000                     	global	_CCPR1L
  2007                           _CCPR1L	set	0xFBE
  2008  0000                     	global	_PIR2bits
  2009                           _PIR2bits	set	0xFA1
  2010  0000                     	global	_CCP2CONbits
  2011                           _CCP2CONbits	set	0xFBA
  2012  0000                     	global	_CCPR2L
  2013                           _CCPR2L	set	0xFBB
  2014  0000                     	global	_PR2
  2015                           _PR2	set	0xFCB
  2016  0000                     	global	_T2CONbits
  2017                           _T2CONbits	set	0xFCA
  2018  0000                     	global	_ADCON0bits
  2019                           _ADCON0bits	set	0xFC2
  2020  0000                     	global	_ADRESL
  2021                           _ADRESL	set	0xFC3
  2022  0000                     	global	_ADRESH
  2023                           _ADRESH	set	0xFC4
  2024  0000                     	global	_ADCON2bits
  2025                           _ADCON2bits	set	0xFC0
  2026  0000                     	global	_ADCON1
  2027                           _ADCON1	set	0xFC1
  2028  0000                     	global	_TRISA
  2029                           _TRISA	set	0xF92
  2030  0000                     	global	_INTCONbits
  2031                           _INTCONbits	set	0xFF2
  2032  0000                     	global	_RCONbits
  2033                           _RCONbits	set	0xFD0
  2034  0000                     	global	_RCREG
  2035                           _RCREG	set	0xFAE
  2036  0000                     	global	_TXREG
  2037                           _TXREG	set	0xFAD
  2038  0000                     	global	_IPR1bits
  2039                           _IPR1bits	set	0xF9F
  2040  0000                     	global	_PIE1bits
  2041                           _PIE1bits	set	0xF9D
  2042  0000                     	global	_PIR1bits
  2043                           _PIR1bits	set	0xF9E
  2044  0000                     	global	_RCSTAbits
  2045                           _RCSTAbits	set	0xFAB
  2046  0000                     	global	_SPBRG
  2047                           _SPBRG	set	0xFAF
  2048  0000                     	global	_BAUDCONbits
  2049                           _BAUDCONbits	set	0xFB8
  2050  0000                     	global	_TXSTAbits
  2051                           _TXSTAbits	set	0xFAC
  2052  0000                     	global	_TRISCbits
  2053                           _TRISCbits	set	0xF94
  2054  0000                     	global	_OSCCONbits
  2055                           _OSCCONbits	set	0xFD3
  2056  0000                     	global	_RD7
  2057                           _RD7	set	0x7C1F
  2058  0000                     	global	_RD6
  2059                           _RD6	set	0x7C1E
  2060  0000                     	global	_RD5
  2061                           _RD5	set	0x7C1D
  2062  0000                     	global	_RC2
  2063                           _RC2	set	0x7C12
  2064  0000                     	global	_ADFM
  2065                           _ADFM	set	0x7E07
  2066  0000                     	global	_CREN
  2067                           _CREN	set	0x7D5C
  2068  0000                     	global	_RCIF
  2069                           _RCIF	set	0x7CF5
  2070  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
  2071                           global __psmallconst
  2072                           __psmallconst:
  2073  000600                     	db	0
  2074  000600  00                 	
  2075                           STR_1:
  2076  000601                     	db	77	;'M'
  2077  000601  4D                 	db	111	;'o'
  2078  000602  6F                 	db	100	;'d'
  2079  000603  64                 	db	101	;'e'
  2080  000604  65                 	db	49	;'1'
  2081  000605  31                 	db	32
  2082  000606  20                 	db	0
  2083  000607  00                 	
  2084                           STR_23:
  2085  000608                     	db	98	;'b'
  2086  000608  62                 	db	114	;'r'
  2087  000609  72                 	db	101	;'e'
  2088  00060A  65                 	db	97	;'a'
  2089  00060B  61                 	db	116	;'t'
  2090  00060C  74                 	db	104	;'h'
  2091  00060D  68                 	db	0
  2092  00060E  00                 	
  2093                           STR_15:
  2094  00060F                     	db	77	;'M'
  2095  00060F  4D                 	db	111	;'o'
  2096  000610  6F                 	db	100	;'d'
  2097  000611  64                 	db	101	;'e'
  2098  000612  65                 	db	50	;'2'
  2099  000613  32                 	db	0
  2100  000614  00                 	
  2101                           STR_25:
  2102  000615                     	db	109	;'m'
  2103  000615  6D                 	db	117	;'u'
  2104  000616  75                 	db	115	;'s'
  2105  000617  73                 	db	105	;'i'
  2106  000618  69                 	db	99	;'c'
  2107  000619  63                 	db	0
  2108  00061A  00                 	
  2109                           STR_21:
  2110  00061B                     	db	98	;'b'
  2111  00061B  62                 	db	108	;'l'
  2112  00061C  6C                 	db	105	;'i'
  2113  00061D  69                 	db	110	;'n'
  2114  00061E  6E                 	db	107	;'k'
  2115  00061F  6B                 	db	0
  2116  000620  00                 	
  2117                           STR_20:
  2118  000621                     	db	99	;'c'
  2119  000621  63                 	db	108	;'l'
  2120  000622  6C                 	db	101	;'e'
  2121  000623  65                 	db	97	;'a'
  2122  000624  61                 	db	114	;'r'
  2123  000625  72                 	db	0
  2124  000626  00                 	
  2125                           STR_2:
  2126  000627                     	db	49	;'1'
  2127  000627  31                 	db	0
  2128  000628  00                 	
  2129                           STR_4:
  2130  000629                     	db	51	;'3'
  2131  000629  33                 	db	0
  2132  00062A  00                 	
  2133                           STR_5:
  2134  00062B                     	db	52	;'4'
  2135  00062B  34                 	db	0
  2136  00062C  00                 	
  2137                           STR_10:
  2138  00062D                     	db	53	;'5'
  2139  00062D  35                 	db	0
  2140  00062E  00                 	
  2141                           STR_11:
  2142  00062F                     	db	54	;'6'
  2143  00062F  36                 	db	0
  2144  000630  00                 	
  2145                           STR_12:
  2146  000631                     	db	55	;'7'
  2147  000631  37                 	db	0
  2148  000632  00                 	
  2149                           STR_13:
  2150  000633                     	db	56	;'8'
  2151  000633  38                 	db	0
  2152  000634  00                 	
  2153                           STR_27:
  2154  000635                     	db	112	;'p'
  2155  000635  70                 	db	0
  2156  000636  00                 	
  2157                           STR_14:
  2158  000637                     	db	113	;'q'
  2159  000637  71                 	db	0
  2160  000638  00                 	
  2161                           STR_29:
  2162  000639                     	db	115	;'s'
  2163  000639  73                 	db	0
  2164  00063A  00                 STR_30	equ	STR_29+0
  2165  0000                     STR_16	equ	STR_14+0
  2166  0000                     STR_19	equ	STR_14+0
  2167  0000                     STR_28	equ	STR_27+0
  2168  0000                     STR_22	equ	STR_21+0
  2169  0000                     STR_24	equ	STR_23+0
  2170  0000                     STR_26	equ	STR_25+0
  2171  0000                     STR_9	equ	STR_5+0
  2172  0000                     STR_8	equ	STR_4+0
  2173  0000                     STR_3	equ	STR_15+4
  2174  0000                     STR_7	equ	STR_15+4
  2175  0000                     STR_18	equ	STR_15+4
  2176  0000                     STR_6	equ	STR_2+0
  2177  0000                     STR_17	equ	STR_2+0
  2178  0000                     ; #config settings
  2179                           global __CFG_OSC$INTIO67
  2180                           __CFG_OSC$INTIO67 equ 0x0
  2181  0000                     global __CFG_FCMEN$OFF
  2182                           __CFG_FCMEN$OFF equ 0x0
  2183  0000                     global __CFG_IESO$ON
  2184                           __CFG_IESO$ON equ 0x0
  2185  0000                     global __CFG_PWRT$OFF
  2186                           __CFG_PWRT$OFF equ 0x0
  2187  0000                     global __CFG_BOREN$SBORDIS
  2188                           __CFG_BOREN$SBORDIS equ 0x0
  2189  0000                     global __CFG_BORV$3
  2190                           __CFG_BORV$3 equ 0x0
  2191  0000                     global __CFG_WDT$OFF
  2192                           __CFG_WDT$OFF equ 0x0
  2193  0000                     global __CFG_WDTPS$1
  2194                           __CFG_WDTPS$1 equ 0x0
  2195  0000                     global __CFG_CCP2MX$PORTC
  2196                           __CFG_CCP2MX$PORTC equ 0x0
  2197  0000                     global __CFG_PBADEN$ON
  2198                           __CFG_PBADEN$ON equ 0x0
  2199  0000                     global __CFG_LPT1OSC$OFF
  2200                           __CFG_LPT1OSC$OFF equ 0x0
  2201  0000                     global __CFG_MCLRE$ON
  2202                           __CFG_MCLRE$ON equ 0x0
  2203  0000                     global __CFG_STVREN$ON
  2204                           __CFG_STVREN$ON equ 0x0
  2205  0000                     global __CFG_LVP$OFF
  2206                           __CFG_LVP$OFF equ 0x0
  2207  0000                     global __CFG_XINST$OFF
  2208                           __CFG_XINST$OFF equ 0x0
  2209  0000                     global __CFG_CP0$OFF
  2210                           __CFG_CP0$OFF equ 0x0
  2211  0000                     global __CFG_CP1$OFF
  2212                           __CFG_CP1$OFF equ 0x0
  2213  0000                     global __CFG_CP2$OFF
  2214                           __CFG_CP2$OFF equ 0x0
  2215  0000                     global __CFG_CP3$OFF
  2216                           __CFG_CP3$OFF equ 0x0
  2217  0000                     global __CFG_CPB$OFF
  2218                           __CFG_CPB$OFF equ 0x0
  2219  0000                     global __CFG_CPD$OFF
  2220                           __CFG_CPD$OFF equ 0x0
  2221  0000                     global __CFG_WRT0$OFF
  2222                           __CFG_WRT0$OFF equ 0x0
  2223  0000                     global __CFG_WRT1$OFF
  2224                           __CFG_WRT1$OFF equ 0x0
  2225  0000                     global __CFG_WRT2$OFF
  2226                           __CFG_WRT2$OFF equ 0x0
  2227  0000                     global __CFG_WRT3$OFF
  2228                           __CFG_WRT3$OFF equ 0x0
  2229  0000                     global __CFG_WRTC$OFF
  2230                           __CFG_WRTC$OFF equ 0x0
  2231  0000                     global __CFG_WRTB$OFF
  2232                           __CFG_WRTB$OFF equ 0x0
  2233  0000                     global __CFG_WRTD$OFF
  2234                           __CFG_WRTD$OFF equ 0x0
  2235  0000                     global __CFG_EBTR0$OFF
  2236                           __CFG_EBTR0$OFF equ 0x0
  2237  0000                     global __CFG_EBTR1$OFF
  2238                           __CFG_EBTR1$OFF equ 0x0
  2239  0000                     global __CFG_EBTR2$OFF
  2240                           __CFG_EBTR2$OFF equ 0x0
  2241  0000                     global __CFG_EBTR3$OFF
  2242                           __CFG_EBTR3$OFF equ 0x0
  2243  0000                     global __CFG_EBTRB$OFF
  2244                           __CFG_EBTRB$OFF equ 0x0
  2245  0000                     	file	"C:\Users\NIGHTK~1\AppData\Local\Temp\savc."
  2246                           	line	#
  2247                           psect	cinit,class=CODE,delta=1,reloc=2
  2248                           global __pcinit
  2249                           __pcinit:
  2250  001918                     global start_initialization
  2251                           start_initialization:
  2252  001918                     
  2253                           global __initialization
  2254                           __initialization:
  2255  001918                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
  2256                           global __pbssCOMRAM
  2257                           __pbssCOMRAM:
  2258  00002C                     	global	_str
  2259                           	global	_str
  2260                           _str:
  2261  00002C                            ds      10
  2262  00002C                     	global	_led_mode
  2263                           _led_mode:
  2264  000036                            ds      2
  2265  000036                     	global	_updown
  2266                           _updown:
  2267  000038                            ds      2
  2268  000038                     	global	_led_breath
  2269                           _led_breath:
  2270  00003A                            ds      2
  2271  00003A                     	global	_music_playing
  2272                           _music_playing:
  2273  00003C                            ds      2
  2274  00003C                     	global	_led_loop
  2275                           _led_loop:
  2276  00003E                            ds      2
  2277  00003E                     	global	_led_interval
  2278                           _led_interval:
  2279  000040                            ds      2
  2280  000040                     	global	_led_num
  2281                           _led_num:
  2282  000042                            ds      2
  2283  000042                     	global	_music_choose
  2284                           _music_choose:
  2285  000044                            ds      2
  2286  000044                     	global	_music_index
  2287                           _music_index:
  2288  000046                            ds      2
  2289  000046                     	global	_music_count
  2290                           _music_count:
  2291  000048                            ds      2
  2292  000048                     	global	_lenStr
  2293                           _lenStr:
  2294  00004A                            ds      2
  2295  00004A                     	global	_mystring
  2296                           _mystring:
  2297  00004C                            ds      10
  2298  00004C                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
  2299                           global __pdataCOMRAM
  2300                           __pdataCOMRAM:
  2301  000056                     	file	"main.c"
  2302                           	line	23
  2303                           	global	_length
  2304                           _length:
  2305  000056                            ds      4
  2306  000056                     psect	dataBANK0,class=BANK0,space=1,noexec,lowdata
  2307                           global __pdataBANK0
  2308                           __pdataBANK0:
  2309  000080                     	file	"main.c"
  2310                           	line	19
  2311                           	global	_tone
  2312                           _tone:
  2313  000080                            ds      120
  2314  000080                     psect	dataBANK1,class=BANK1,space=1,noexec,lowdata
  2315                           global __pdataBANK1
  2316                           __pdataBANK1:
  2317  000100                     	file	"main.c"
  2318                           	line	21
  2319                           	global	_tempo
  2320                           _tempo:
  2321  000100                            ds      120
  2322  000100                     	file	"C:\Users\NIGHTK~1\AppData\Local\Temp\savc."
  2323                           	line	#
  2324                           psect	cinit
  2325                           ; Initialize objects allocated to BANK1 (120 bytes)
  2326                           	global __pidataBANK1
  2327                           	; load TBLPTR registers with __pidataBANK1
  2328                           	movlw	low (__pidataBANK1)
  2329  001918  0E0A               	movwf	tblptrl
  2330  00191A  6EF6               	movlw	high(__pidataBANK1)
  2331  00191C  0E1A               	movwf	tblptrh
  2332  00191E  6EF7               	movlw	low highword(__pidataBANK1)
  2333  001920  0E00               	movwf	tblptru
  2334  001922  6EF8               	lfsr	0,__pdataBANK1
  2335  001924  EE01  F000         	lfsr	1,120
  2336  001928  EE10 F078          	copy_data0:
  2337  00192C                     	tblrd	*+
  2338  00192C  0009               	movff	tablat, postinc0
  2339  00192E  CFF5 FFEE          	movf	postdec1,w
  2340  001932  50E5               	movf	fsr1l,w
  2341  001934  50E1               	bnz	copy_data0
  2342  001936  E1FA               ; Initialize objects allocated to BANK0 (120 bytes)
  2343                           	global __pidataBANK0
  2344                           	; load TBLPTR registers with __pidataBANK0
  2345                           	movlw	low (__pidataBANK0)
  2346  001938  0E92               	movwf	tblptrl
  2347  00193A  6EF6               	movlw	high(__pidataBANK0)
  2348  00193C  0E19               	movwf	tblptrh
  2349  00193E  6EF7               	movlw	low highword(__pidataBANK0)
  2350  001940  0E00               	movwf	tblptru
  2351  001942  6EF8               	lfsr	0,__pdataBANK0
  2352  001944  EE00  F080         	lfsr	1,120
  2353  001948  EE10 F078          	copy_data1:
  2354  00194C                     	tblrd	*+
  2355  00194C  0009               	movff	tablat, postinc0
  2356  00194E  CFF5 FFEE          	movf	postdec1,w
  2357  001952  50E5               	movf	fsr1l,w
  2358  001954  50E1               	bnz	copy_data1
  2359  001956  E1FA               ; Initialize objects allocated to COMRAM (4 bytes)
  2360                           	global __pidataCOMRAM
  2361                           	; load TBLPTR registers with __pidataCOMRAM
  2362                           	movlw	low (__pidataCOMRAM)
  2363  001958  0E66               	movwf	tblptrl
  2364  00195A  6EF6               	movlw	high(__pidataCOMRAM)
  2365  00195C  0E1D               	movwf	tblptrh
  2366  00195E  6EF7               	movlw	low highword(__pidataCOMRAM)
  2367  001960  0E00               	movwf	tblptru
  2368  001962  6EF8               	lfsr	0,__pdataCOMRAM
  2369  001964  EE00  F056         	lfsr	1,4
  2370  001968  EE10 F004          	copy_data2:
  2371  00196C                     	tblrd	*+
  2372  00196C  0009               	movff	tablat, postinc0
  2373  00196E  CFF5 FFEE          	movf	postdec1,w
  2374  001972  50E5               	movf	fsr1l,w
  2375  001974  50E1               	bnz	copy_data2
  2376  001976  E1FA               	line	#
  2377                           ; Clear objects allocated to COMRAM (42 bytes)
  2378                           	global __pbssCOMRAM
  2379                           lfsr	0,__pbssCOMRAM
  2380  001978  EE00  F02C         movlw	42
  2381  00197C  0E2A               clear_0:
  2382  00197E                     clrf	postinc0,c
  2383  00197E  6AEE               decf	wreg
  2384  001980  06E8               bnz	clear_0
  2385  001982  E1FD               psect cinit,class=CODE,delta=1
  2386                           global end_of_initialization,__end_of__initialization
  2387                           
  2388                           ;End of C runtime variable initialization code
  2389                           
  2390                           end_of_initialization:
  2391  001984                     __end_of__initialization:
  2392  001984                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  2393  001984  905A               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  2394  001986  925A               	GLOBAL	__Lmediumconst
  2395                           	movlw	low highword(__Lmediumconst)
  2396  001988  0E00               	movwf	tblptru
  2397  00198A  6EF8               movlb 0
  2398  00198C  0100               goto _main	;jump to C main() function
  2399  00198E  EF85  F007         psect	cstackBANK1,class=BANK1,space=1,noexec
  2400                           global __pcstackBANK1
  2401                           __pcstackBANK1:
  2402  000178                     ??_strcmp:	; 1 bytes @ 0x0
  2403  000178                     ??_strncmp:	; 1 bytes @ 0x0
  2404  000178                     	ds   3
  2405  000178                     	global	strncmp@l
  2406                           strncmp@l:	; 2 bytes @ 0x3
  2407  00017B                     	ds   2
  2408  00017B                     	global	strncmp@r
  2409                           strncmp@r:	; 2 bytes @ 0x5
  2410  00017D                     	ds   2
  2411  00017D                     	global	?_strstr
  2412                           ?_strstr:	; 2 bytes @ 0x7
  2413  00017F                     	global	strstr@h
  2414                           strstr@h:	; 2 bytes @ 0x7
  2415  00017F                     	ds   2
  2416  00017F                     	global	strstr@n
  2417                           strstr@n:	; 2 bytes @ 0x9
  2418  000181                     	ds   2
  2419  000181                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2420                           global __pcstackBANK0
  2421                           __pcstackBANK0:
  2422  0000F8                     ??_OSCILLATOR_Initialize:	; 1 bytes @ 0x0
  2423  0000F8                     ??_INTERRUPT_Initialize:	; 1 bytes @ 0x0
  2424  0000F8                     ??_UART_Initialize:	; 1 bytes @ 0x0
  2425  0000F8                     ??_CCP1_Initialize:	; 1 bytes @ 0x0
  2426  0000F8                     ??_ADC_Initialize:	; 1 bytes @ 0x0
  2427  0000F8                     ??_SYSTEM_Initialize:	; 1 bytes @ 0x0
  2428  0000F8                     ??_UART_Write:	; 1 bytes @ 0x0
  2429  0000F8                     ??_ClearBuffer:	; 1 bytes @ 0x0
  2430  0000F8                     	global	?_GetString
  2431                           ?_GetString:	; 2 bytes @ 0x0
  2432  0000F8                     	global	?_strlen
  2433                           ?_strlen:	; 2 bytes @ 0x0
  2434  0000F8                     	global	?_strncmp
  2435                           ?_strncmp:	; 2 bytes @ 0x0
  2436  0000F8                     	global	?_strchr
  2437                           ?_strchr:	; 2 bytes @ 0x0
  2438  0000F8                     	global	UART_Write@data
  2439                           UART_Write@data:	; 1 bytes @ 0x0
  2440  0000F8                     	global	ClearBuffer@i
  2441                           ClearBuffer@i:	; 2 bytes @ 0x0
  2442  0000F8                     	global	strchr@s
  2443                           strchr@s:	; 2 bytes @ 0x0
  2444  0000F8                     	global	strlen@s
  2445                           strlen@s:	; 2 bytes @ 0x0
  2446  0000F8                     	global	strncmp@_l
  2447                           strncmp@_l:	; 2 bytes @ 0x0
  2448  0000F8                     	ds   1
  2449  0000F8                     ?_UART_Write_Text:	; 1 bytes @ 0x1
  2450  0000F9                     	global	UART_Write_Text@text
  2451                           UART_Write_Text@text:	; 2 bytes @ 0x1
  2452  0000F9                     	ds   1
  2453  0000F9                     ??_GetString:	; 1 bytes @ 0x2
  2454  0000FA                     ??_strlen:	; 1 bytes @ 0x2
  2455  0000FA                     ??_Playmusic:	; 1 bytes @ 0x2
  2456  0000FA                     ??_Stopmusic:	; 1 bytes @ 0x2
  2457  0000FA                     	global	?_strcmp
  2458                           ?_strcmp:	; 2 bytes @ 0x2
  2459  0000FA                     	global	strcmp@l
  2460                           strcmp@l:	; 2 bytes @ 0x2
  2461  0000FA                     	global	strchr@c
  2462                           strchr@c:	; 2 bytes @ 0x2
  2463  0000FA                     	global	strncmp@_r
  2464                           strncmp@_r:	; 2 bytes @ 0x2
  2465  0000FA                     	ds   1
  2466  0000FA                     ??_UART_Write_Text:	; 1 bytes @ 0x3
  2467  0000FB                     	ds   1
  2468  0000FB                     ??_strchr:	; 1 bytes @ 0x4
  2469  0000FC                     	global	strcmp@r
  2470                           strcmp@r:	; 2 bytes @ 0x4
  2471  0000FC                     	global	strlen@a
  2472                           strlen@a:	; 2 bytes @ 0x4
  2473  0000FC                     	global	strncmp@n
  2474                           strncmp@n:	; 2 bytes @ 0x4
  2475  0000FC                     	ds   1
  2476  0000FC                     	global	UART_Write_Text@i
  2477                           UART_Write_Text@i:	; 2 bytes @ 0x5
  2478  0000FD                     	ds   1
  2479  0000FD                     ??_strstr:	; 1 bytes @ 0x6
  2480  0000FE                     	global	strstr@nl
  2481                           strstr@nl:	; 2 bytes @ 0x6
  2482  0000FE                     	ds   2
  2483  0000FE                     ??_Mode1:	; 1 bytes @ 0x8
  2484  000100                     ??_Mode2:	; 1 bytes @ 0x8
  2485  000100                     ??_Mode3:	; 1 bytes @ 0x8
  2486  000100                     ??_main:	; 1 bytes @ 0x8
  2487  000100                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  2488                           global __pcstackCOMRAM
  2489                           __pcstackCOMRAM:
  2490  000001                     ?_OSCILLATOR_Initialize:	; 1 bytes @ 0x0
  2491  000001                     ?_INTERRUPT_Initialize:	; 1 bytes @ 0x0
  2492  000001                     ?_UART_Initialize:	; 1 bytes @ 0x0
  2493  000001                     ?_CCP1_Initialize:	; 1 bytes @ 0x0
  2494  000001                     ?_ADC_Initialize:	; 1 bytes @ 0x0
  2495  000001                     ?_SYSTEM_Initialize:	; 1 bytes @ 0x0
  2496  000001                     ?_UART_Write:	; 1 bytes @ 0x0
  2497  000001                     ?_ClearBuffer:	; 1 bytes @ 0x0
  2498  000001                     ?_MyusartRead:	; 1 bytes @ 0x0
  2499  000001                     ?_Lo_ISR:	; 1 bytes @ 0x0
  2500  000001                     ?_tc_int:	; 1 bytes @ 0x0
  2501  000001                     ?_Mode1:	; 1 bytes @ 0x0
  2502  000001                     ?_Mode2:	; 1 bytes @ 0x0
  2503  000001                     ?_Mode3:	; 1 bytes @ 0x0
  2504  000001                     ?_Playmusic:	; 1 bytes @ 0x0
  2505  000001                     ?_Stopmusic:	; 1 bytes @ 0x0
  2506  000001                     ?_main:	; 1 bytes @ 0x0
  2507  000001                     ?i1_UART_Write:	; 1 bytes @ 0x0
  2508  000001                     ?i2_UART_Write:	; 1 bytes @ 0x0
  2509  000001                     ??i2_UART_Write:	; 1 bytes @ 0x0
  2510  000001                     	global	?___wmul
  2511                           ?___wmul:	; 2 bytes @ 0x0
  2512  000001                     	global	?___awdiv
  2513                           ?___awdiv:	; 2 bytes @ 0x0
  2514  000001                     	global	i2UART_Write@data
  2515                           i2UART_Write@data:	; 1 bytes @ 0x0
  2516  000001                     	global	___wmul@multiplier
  2517                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2518  000001                     	global	___awdiv@dividend
  2519                           ___awdiv@dividend:	; 2 bytes @ 0x0
  2520  000001                     	ds   1
  2521  000001                     ?i2_UART_Write_Text:	; 1 bytes @ 0x1
  2522  000002                     	global	i2UART_Write_Text@text
  2523                           i2UART_Write_Text@text:	; 2 bytes @ 0x1
  2524  000002                     	ds   1
  2525  000002                     	global	___wmul@multiplicand
  2526                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2527  000003                     	global	___awdiv@divisor
  2528                           ___awdiv@divisor:	; 2 bytes @ 0x2
  2529  000003                     	ds   1
  2530  000003                     ??i2_UART_Write_Text:	; 1 bytes @ 0x3
  2531  000004                     	ds   1
  2532  000004                     ??___wmul:	; 1 bytes @ 0x4
  2533  000005                     ??___awdiv:	; 1 bytes @ 0x4
  2534  000005                     	global	___awdiv@counter
  2535                           ___awdiv@counter:	; 1 bytes @ 0x4
  2536  000005                     	global	___wmul@product
  2537                           ___wmul@product:	; 2 bytes @ 0x4
  2538  000005                     	ds   1
  2539  000005                     	global	___awdiv@sign
  2540                           ___awdiv@sign:	; 1 bytes @ 0x5
  2541  000006                     	global	i2UART_Write_Text@i
  2542                           i2UART_Write_Text@i:	; 2 bytes @ 0x5
  2543  000006                     	ds   1
  2544  000006                     	global	?___aldiv
  2545                           ?___aldiv:	; 4 bytes @ 0x6
  2546  000007                     	global	___awdiv@quotient
  2547                           ___awdiv@quotient:	; 2 bytes @ 0x6
  2548  000007                     	global	___aldiv@dividend
  2549                           ___aldiv@dividend:	; 4 bytes @ 0x6
  2550  000007                     	ds   4
  2551  000007                     	global	___aldiv@divisor
  2552                           ___aldiv@divisor:	; 4 bytes @ 0xA
  2553  00000B                     	ds   4
  2554  00000B                     ??___aldiv:	; 1 bytes @ 0xE
  2555  00000F                     	global	___aldiv@counter
  2556                           ___aldiv@counter:	; 1 bytes @ 0xE
  2557  00000F                     	ds   1
  2558  00000F                     	global	___aldiv@sign
  2559                           ___aldiv@sign:	; 1 bytes @ 0xF
  2560  000010                     	ds   1
  2561  000010                     	global	___aldiv@quotient
  2562                           ___aldiv@quotient:	; 4 bytes @ 0x10
  2563  000011                     	ds   4
  2564  000011                     ??_tc_int:	; 1 bytes @ 0x14
  2565  000015                     	ds   12
  2566  000015                     ??i1_UART_Write:	; 1 bytes @ 0x20
  2567  000021                     	global	?___awmod
  2568                           ?___awmod:	; 2 bytes @ 0x20
  2569  000021                     	global	i1UART_Write@data
  2570                           i1UART_Write@data:	; 1 bytes @ 0x20
  2571  000021                     	global	___awmod@dividend
  2572                           ___awmod@dividend:	; 2 bytes @ 0x20
  2573  000021                     	ds   2
  2574  000021                     	global	___awmod@divisor
  2575                           ___awmod@divisor:	; 2 bytes @ 0x22
  2576  000023                     	ds   2
  2577  000023                     ??___awmod:	; 1 bytes @ 0x24
  2578  000025                     	global	___awmod@counter
  2579                           ___awmod@counter:	; 1 bytes @ 0x24
  2580  000025                     	ds   1
  2581  000025                     	global	___awmod@sign
  2582                           ___awmod@sign:	; 1 bytes @ 0x25
  2583  000026                     	ds   1
  2584  000026                     ??_MyusartRead:	; 1 bytes @ 0x26
  2585  000027                     ??_Lo_ISR:	; 1 bytes @ 0x26
  2586  000027                     	ds   5
  2587  000027                     ;!
  2588                           ;!Data Sizes:
  2589                           ;!    Strings     58
  2590                           ;!    Constant    0
  2591                           ;!    Data        244
  2592                           ;!    BSS         42
  2593                           ;!    Persistent  0
  2594                           ;!    Stack       0
  2595                           ;!
  2596                           ;!Auto Spaces:
  2597                           ;!    Space          Size  Autos    Used
  2598                           ;!    COMRAM          126     43      89
  2599                           ;!    BANK0           128      8     128
  2600                           ;!    BANK1           256     11     131
  2601                           ;!    BANK2           256      0       0
  2602                           ;!    BANK3           256      0       0
  2603                           ;!    BANK4           256      0       0
  2604                           ;!    BANK5           256      0       0
  2605                           
  2606                           ;!
  2607                           ;!Pointer List with Targets:
  2608                           ;!
  2609                           ;!    strncmp@_r	PTR const unsigned char  size(2) Largest target is 6
  2610                           ;!		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
  2611                           ;!		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
  2612                           ;!		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
  2613                           ;!		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
  2614                           ;!		 -> STR_3(CODE[2]), STR_2(CODE[2]), 
  2615                           ;!
  2616                           ;!    strncmp@r	PTR const unsigned char  size(2) Largest target is 6
  2617                           ;!		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
  2618                           ;!		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
  2619                           ;!		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
  2620                           ;!		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
  2621                           ;!		 -> STR_3(CODE[2]), STR_2(CODE[2]), 
  2622                           ;!
  2623                           ;!    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
  2624                           ;!		 -> NULL(NULL[0]), mystring(COMRAM[10]), 
  2625                           ;!
  2626                           ;!    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
  2627                           ;!		 -> NULL(NULL[0]), mystring(COMRAM[10]), 
  2628                           ;!
  2629                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 6
  2630                           ;!		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
  2631                           ;!		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
  2632                           ;!		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
  2633                           ;!		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
  2634                           ;!		 -> STR_3(CODE[2]), STR_2(CODE[2]), 
  2635                           ;!
  2636                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 6
  2637                           ;!		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
  2638                           ;!		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
  2639                           ;!		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
  2640                           ;!		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
  2641                           ;!		 -> STR_3(CODE[2]), STR_2(CODE[2]), 
  2642                           ;!
  2643                           ;!    strchr@s	PTR const unsigned char  size(2) Largest target is 10
  2644                           ;!		 -> NULL(NULL[0]), mystring(COMRAM[10]), 
  2645                           ;!
  2646                           ;!    sp__strchr	PTR unsigned char  size(2) Largest target is 10
  2647                           ;!		 -> NULL(NULL[0]), mystring(COMRAM[10]), 
  2648                           ;!
  2649                           ;!    strstr@h	PTR const unsigned char  size(2) Largest target is 10
  2650                           ;!		 -> NULL(NULL[0]), mystring(COMRAM[10]), 
  2651                           ;!
  2652                           ;!    strstr@n	PTR const unsigned char  size(2) Largest target is 6
  2653                           ;!		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
  2654                           ;!		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
  2655                           ;!		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
  2656                           ;!		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
  2657                           ;!		 -> STR_3(CODE[2]), STR_2(CODE[2]), 
  2658                           ;!
  2659                           ;!    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
  2660                           ;!		 -> STR_30(CODE[2]), STR_28(CODE[2]), STR_26(CODE[6]), STR_24(CODE[7]), 
  2661                           ;!		 -> STR_22(CODE[6]), 
  2662                           ;!
  2663                           ;!    strcmp@l	PTR const unsigned char  size(2) Largest target is 10
  2664                           ;!		 -> mystring(COMRAM[10]), 
  2665                           ;!
  2666                           ;!    sp__strstr	PTR unsigned char  size(2) Largest target is 10
  2667                           ;!		 -> NULL(NULL[0]), mystring(COMRAM[10]), 
  2668                           ;!
  2669                           ;!    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 1535
  2670                           ;!		 -> STR_15(CODE[6]), STR_1(CODE[7]), RAM(DATA[1535]), 
  2671                           ;!
  2672                           ;!    sp__GetString	PTR unsigned char  size(2) Largest target is 10
  2673                           ;!		 -> mystring(COMRAM[10]), 
  2674                           ;!
  2675                           
  2676                           
  2677                           ;!
  2678                           ;!Critical Paths under _main in COMRAM
  2679                           ;!
  2680                           ;!    None.
  2681                           ;!
  2682                           ;!Critical Paths under _Lo_ISR in COMRAM
  2683                           ;!
  2684                           ;!    _MyusartRead->___awmod
  2685                           ;!
  2686                           ;!Critical Paths under _tc_int in COMRAM
  2687                           ;!
  2688                           ;!    _tc_int->___aldiv
  2689                           ;!    i2_UART_Write_Text->i2_UART_Write
  2690                           ;!    ___aldiv->___wmul
  2691                           ;!
  2692                           ;!Critical Paths under _main in BANK0
  2693                           ;!
  2694                           ;!    _main->_strstr
  2695                           ;!    _strcmp->_GetString
  2696                           ;!    _Stopmusic->_ClearBuffer
  2697                           ;!    _Playmusic->_ClearBuffer
  2698                           ;!    _Mode3->_strstr
  2699                           ;!    _Mode2->_strstr
  2700                           ;!    _Mode1->_strstr
  2701                           ;!    _strstr->_strlen
  2702                           ;!    _strstr->_strncmp
  2703                           ;!    _UART_Write_Text->_UART_Write
  2704                           ;!
  2705                           ;!Critical Paths under _Lo_ISR in BANK0
  2706                           ;!
  2707                           ;!    None.
  2708                           ;!
  2709                           ;!Critical Paths under _tc_int in BANK0
  2710                           ;!
  2711                           ;!    None.
  2712                           ;!
  2713                           ;!Critical Paths under _main in BANK1
  2714                           ;!
  2715                           ;!    _main->_strstr
  2716                           ;!    _Mode3->_strstr
  2717                           ;!    _Mode2->_strstr
  2718                           ;!    _Mode1->_strstr
  2719                           ;!    _strstr->_strncmp
  2720                           ;!
  2721                           ;!Critical Paths under _Lo_ISR in BANK1
  2722                           ;!
  2723                           ;!    None.
  2724                           ;!
  2725                           ;!Critical Paths under _tc_int in BANK1
  2726                           ;!
  2727                           ;!    None.
  2728                           ;!
  2729                           ;!Critical Paths under _main in BANK2
  2730                           ;!
  2731                           ;!    None.
  2732                           ;!
  2733                           ;!Critical Paths under _Lo_ISR in BANK2
  2734                           ;!
  2735                           ;!    None.
  2736                           ;!
  2737                           ;!Critical Paths under _tc_int in BANK2
  2738                           ;!
  2739                           ;!    None.
  2740                           ;!
  2741                           ;!Critical Paths under _main in BANK3
  2742                           ;!
  2743                           ;!    None.
  2744                           ;!
  2745                           ;!Critical Paths under _Lo_ISR in BANK3
  2746                           ;!
  2747                           ;!    None.
  2748                           ;!
  2749                           ;!Critical Paths under _tc_int in BANK3
  2750                           ;!
  2751                           ;!    None.
  2752                           ;!
  2753                           ;!Critical Paths under _main in BANK4
  2754                           ;!
  2755                           ;!    None.
  2756                           ;!
  2757                           ;!Critical Paths under _Lo_ISR in BANK4
  2758                           ;!
  2759                           ;!    None.
  2760                           ;!
  2761                           ;!Critical Paths under _tc_int in BANK4
  2762                           ;!
  2763                           ;!    None.
  2764                           ;!
  2765                           ;!Critical Paths under _main in BANK5
  2766                           ;!
  2767                           ;!    None.
  2768                           ;!
  2769                           ;!Critical Paths under _Lo_ISR in BANK5
  2770                           ;!
  2771                           ;!    None.
  2772                           ;!
  2773                           ;!Critical Paths under _tc_int in BANK5
  2774                           ;!
  2775                           ;!    None.
  2776                           
  2777 ;;
  2778 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2779 ;;
  2780                           
  2781                           ;!
  2782                           ;!Call Graph Tables:
  2783                           ;!
  2784                           ;! ---------------------------------------------------------------------------------
  2785                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2786                           ;! ---------------------------------------------------------------------------------
  2787                           ;! (0) _main                                                 0     0      0   20943
  2788                           ;!                        _ClearBuffer
  2789                           ;!                          _GetString
  2790                           ;!                              _Mode1
  2791                           ;!                              _Mode2
  2792                           ;!                              _Mode3
  2793                           ;!                          _Playmusic
  2794                           ;!                  _SYSTEM_Initialize
  2795                           ;!                          _Stopmusic
  2796                           ;!                             _strcmp
  2797                           ;!                             _strstr
  2798                           ;! ---------------------------------------------------------------------------------
  2799                           ;! (1) _strcmp                                               7     3      4    1061
  2800                           ;!                                              2 BANK0      4     0      4
  2801                           ;!                                              0 BANK1      3     3      0
  2802                           ;!                          _GetString (ARG)
  2803                           ;! ---------------------------------------------------------------------------------
  2804                           ;! (1) _Stopmusic                                            0     0      0      68
  2805                           ;!                        _ClearBuffer
  2806                           ;! ---------------------------------------------------------------------------------
  2807                           ;! (1) _SYSTEM_Initialize                                    0     0      0       0
  2808                           ;!                     _ADC_Initialize
  2809                           ;!                    _CCP1_Initialize
  2810                           ;!               _INTERRUPT_Initialize
  2811                           ;!              _OSCILLATOR_Initialize
  2812                           ;!                    _UART_Initialize
  2813                           ;! ---------------------------------------------------------------------------------
  2814                           ;! (2) _UART_Initialize                                      0     0      0       0
  2815                           ;! ---------------------------------------------------------------------------------
  2816                           ;! (2) _OSCILLATOR_Initialize                                0     0      0       0
  2817                           ;! ---------------------------------------------------------------------------------
  2818                           ;! (2) _INTERRUPT_Initialize                                 0     0      0       0
  2819                           ;! ---------------------------------------------------------------------------------
  2820                           ;! (2) _CCP1_Initialize                                      0     0      0       0
  2821                           ;! ---------------------------------------------------------------------------------
  2822                           ;! (2) _ADC_Initialize                                       0     0      0       0
  2823                           ;! ---------------------------------------------------------------------------------
  2824                           ;! (1) _Playmusic                                            0     0      0      68
  2825                           ;!                        _ClearBuffer
  2826                           ;! ---------------------------------------------------------------------------------
  2827                           ;! (1) _Mode3                                                0     0      0    4743
  2828                           ;!                        _ClearBuffer
  2829                           ;!                          _GetString
  2830                           ;!                             _strstr
  2831                           ;! ---------------------------------------------------------------------------------
  2832                           ;! (1) _Mode2                                                0     0      0    5130
  2833                           ;!                        _ClearBuffer
  2834                           ;!                          _GetString
  2835                           ;!                    _UART_Write_Text
  2836                           ;!                             _strstr
  2837                           ;! ---------------------------------------------------------------------------------
  2838                           ;! (1) _Mode1                                                0     0      0    5130
  2839                           ;!                        _ClearBuffer
  2840                           ;!                          _GetString
  2841                           ;!                    _UART_Write_Text
  2842                           ;!                             _strstr
  2843                           ;! ---------------------------------------------------------------------------------
  2844                           ;! (1) _strstr                                               6     2      4    4675
  2845                           ;!                                              6 BANK0      2     2      0
  2846                           ;!                                              7 BANK1      4     0      4
  2847                           ;!                          _GetString (ARG)
  2848                           ;!                             _strchr
  2849                           ;!                             _strlen
  2850                           ;!                            _strncmp
  2851                           ;! ---------------------------------------------------------------------------------
  2852                           ;! (2) _strncmp                                             13     7      6     595
  2853                           ;!                                              0 BANK0      6     0      6
  2854                           ;!                                              0 BANK1      7     7      0
  2855                           ;! ---------------------------------------------------------------------------------
  2856                           ;! (2) _strlen                                               6     4      2     220
  2857                           ;!                                              0 BANK0      6     4      2
  2858                           ;! ---------------------------------------------------------------------------------
  2859                           ;! (2) _strchr                                               5     1      4     304
  2860                           ;!                                              0 BANK0      5     1      4
  2861                           ;! ---------------------------------------------------------------------------------
  2862                           ;! (2) _UART_Write_Text                                      6     4      2     387
  2863                           ;!                                              1 BANK0      6     4      2
  2864                           ;!                         _UART_Write
  2865                           ;! ---------------------------------------------------------------------------------
  2866                           ;! (3) _UART_Write                                           1     1      0      22
  2867                           ;!                                              0 BANK0      1     1      0
  2868                           ;! ---------------------------------------------------------------------------------
  2869                           ;! (2) _GetString                                            2     0      2       0
  2870                           ;!                                              0 BANK0      2     0      2
  2871                           ;! ---------------------------------------------------------------------------------
  2872                           ;! (2) _ClearBuffer                                          2     2      0      68
  2873                           ;!                                              0 BANK0      2     2      0
  2874                           ;! ---------------------------------------------------------------------------------
  2875                           ;! Estimated maximum stack depth 3
  2876                           ;! ---------------------------------------------------------------------------------
  2877                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2878                           ;! ---------------------------------------------------------------------------------
  2879                           ;! (4) _Lo_ISR                                               5     5      0     470
  2880                           ;!                                             38 COMRAM     5     5      0
  2881                           ;!                        _MyusartRead
  2882                           ;! ---------------------------------------------------------------------------------
  2883                           ;! (5) _MyusartRead                                          0     0      0     470
  2884                           ;!                            ___awmod
  2885                           ;!                       i1_UART_Write
  2886                           ;! ---------------------------------------------------------------------------------
  2887                           ;! (6) i1_UART_Write                                         1     1      0      22
  2888                           ;!                                             32 COMRAM     1     1      0
  2889                           ;! ---------------------------------------------------------------------------------
  2890                           ;! (6) ___awmod                                              6     2      4     448
  2891                           ;!                                             32 COMRAM     6     2      4
  2892                           ;! ---------------------------------------------------------------------------------
  2893                           ;! Estimated maximum stack depth 6
  2894                           ;! ---------------------------------------------------------------------------------
  2895                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2896                           ;! ---------------------------------------------------------------------------------
  2897                           ;! (7) _tc_int                                              12    12      0    1809
  2898                           ;!                                             20 COMRAM    12    12      0
  2899                           ;!                            ___aldiv
  2900                           ;!                            ___awdiv
  2901                           ;!                             ___wmul
  2902                           ;!                  i2_UART_Write_Text
  2903                           ;! ---------------------------------------------------------------------------------
  2904                           ;! (8) i2_UART_Write_Text                                    6     4      2     138
  2905                           ;!                                              1 COMRAM     6     4      2
  2906                           ;!                       i2_UART_Write
  2907                           ;! ---------------------------------------------------------------------------------
  2908                           ;! (9) i2_UART_Write                                         1     1      0      22
  2909                           ;!                                              0 COMRAM     1     1      0
  2910                           ;! ---------------------------------------------------------------------------------
  2911                           ;! (8) ___wmul                                               6     2      4     615
  2912                           ;!                                              0 COMRAM     6     2      4
  2913                           ;! ---------------------------------------------------------------------------------
  2914                           ;! (8) ___awdiv                                              8     4      4     604
  2915                           ;!                                              0 COMRAM     8     4      4
  2916                           ;! ---------------------------------------------------------------------------------
  2917                           ;! (8) ___aldiv                                             14     6      8     452
  2918                           ;!                                              6 COMRAM    14     6      8
  2919                           ;!                             ___wmul (ARG)
  2920                           ;! ---------------------------------------------------------------------------------
  2921                           ;! Estimated maximum stack depth 9
  2922                           ;! ---------------------------------------------------------------------------------
  2923                           ;!
  2924                           ;! Call Graph Graphs:
  2925                           ;!
  2926                           ;! _main (ROOT)
  2927                           ;!   _ClearBuffer
  2928                           ;!   _GetString
  2929                           ;!   _Mode1
  2930                           ;!     _ClearBuffer
  2931                           ;!     _GetString
  2932                           ;!     _UART_Write_Text
  2933                           ;!       _UART_Write
  2934                           ;!     _strstr
  2935                           ;!       _GetString (ARG)
  2936                           ;!       _strchr (ARG)
  2937                           ;!       _strlen (ARG)
  2938                           ;!       _strncmp (ARG)
  2939                           ;!   _Mode2
  2940                           ;!     _ClearBuffer
  2941                           ;!     _GetString
  2942                           ;!     _UART_Write_Text
  2943                           ;!       _UART_Write
  2944                           ;!     _strstr
  2945                           ;!       _GetString (ARG)
  2946                           ;!       _strchr (ARG)
  2947                           ;!       _strlen (ARG)
  2948                           ;!       _strncmp (ARG)
  2949                           ;!   _Mode3
  2950                           ;!     _ClearBuffer
  2951                           ;!     _GetString
  2952                           ;!     _strstr
  2953                           ;!       _GetString (ARG)
  2954                           ;!       _strchr (ARG)
  2955                           ;!       _strlen (ARG)
  2956                           ;!       _strncmp (ARG)
  2957                           ;!   _Playmusic
  2958                           ;!     _ClearBuffer
  2959                           ;!   _SYSTEM_Initialize
  2960                           ;!     _ADC_Initialize
  2961                           ;!     _CCP1_Initialize
  2962                           ;!     _INTERRUPT_Initialize
  2963                           ;!     _OSCILLATOR_Initialize
  2964                           ;!     _UART_Initialize
  2965                           ;!   _Stopmusic
  2966                           ;!     _ClearBuffer
  2967                           ;!   _strcmp
  2968                           ;!     _GetString (ARG)
  2969                           ;!   _strstr
  2970                           ;!     _GetString (ARG)
  2971                           ;!     _strchr (ARG)
  2972                           ;!     _strlen (ARG)
  2973                           ;!     _strncmp (ARG)
  2974                           ;!
  2975                           ;! _Lo_ISR (ROOT)
  2976                           ;!   _MyusartRead
  2977                           ;!     ___awmod
  2978                           ;!     i1_UART_Write
  2979                           ;!
  2980                           ;! _tc_int (ROOT)
  2981                           ;!   ___aldiv
  2982                           ;!     ___wmul (ARG)
  2983                           ;!   ___awdiv
  2984                           ;!   ___wmul
  2985                           ;!   i2_UART_Write_Text
  2986                           ;!     i2_UART_Write
  2987                           ;!
  2988                           
  2989                           ;! Address spaces:
  2990                           
  2991                           ;!Name               Size   Autos  Total    Cost      Usage
  2992                           ;!BIGRAM             5FF      0       0      17        0.0%
  2993                           ;!EEDATA             100      0       0       0        0.0%
  2994                           ;!BITBANK5           100      0       0      16        0.0%
  2995                           ;!BANK5              100      0       0      14        0.0%
  2996                           ;!BITBANK4           100      0       0      12        0.0%
  2997                           ;!BANK4              100      0       0      13        0.0%
  2998                           ;!BITBANK3           100      0       0      10        0.0%
  2999                           ;!BANK3              100      0       0      11        0.0%
  3000                           ;!BITBANK2           100      0       0       8        0.0%
  3001                           ;!BANK2              100      0       0       9        0.0%
  3002                           ;!BITBANK1           100      0       0       6        0.0%
  3003                           ;!BANK1              100      B      83       7       51.2%
  3004                           ;!BITBANK0            80      0       0       4        0.0%
  3005                           ;!BANK0               80      8      80       5      100.0%
  3006                           ;!BITCOMRAM           7E      0       0       0        0.0%
  3007                           ;!COMRAM              7E     2B      59       1       70.6%
  3008                           ;!BITSFR               0      0       0     200        0.0%
  3009                           ;!SFR                  0      0       0     200        0.0%
  3010                           ;!STACK                0      0       0       2        0.0%
  3011                           ;!NULL                 0      0       0       0        0.0%
  3012                           ;!ABS                  0      0     15C      15        0.0%
  3013                           ;!DATA                 0      0     15C       3        0.0%
  3014                           ;!CODE                 0      0       0       0        0.0%
  3015                           
  3016                           	global	_main
  3017                           
  3018 ;; *************** function _main *****************
  3019 ;; Defined at:
  3020 ;;		line 367 in file "main.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      void 
  3027 ;; Registers used:
  3028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3034 ;;      Params:         0       0       0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0       0       0
  3037 ;;      Totals:         0       0       0       0       0       0       0
  3038 ;;Total ram usage:        0 bytes
  3039 ;; Hardware stack levels required when called:    9
  3040 ;; This function calls:
  3041 ;;		_ClearBuffer
  3042 ;;		_GetString
  3043 ;;		_Mode1
  3044 ;;		_Mode2
  3045 ;;		_Mode3
  3046 ;;		_Playmusic
  3047 ;;		_SYSTEM_Initialize
  3048 ;;		_Stopmusic
  3049 ;;		_strcmp
  3050 ;;		_strstr
  3051 ;; This function is called by:
  3052 ;;		Startup code after reset
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           psect	text0,class=CODE,space=0,reloc=2,group=0
  3056                           	file	"main.c"
  3057                           	line	367
  3058                           global __ptext0
  3059                           __ptext0:
  3060  000F0A                     psect	text0
  3061                           	file	"main.c"
  3062                           	line	367
  3063                           	global	__size_of_main
  3064                           	__size_of_main	equ	__end_of_main-_main
  3065  0000                     	
  3066                           _main:
  3067  000F0A                     ;incstack = 0
  3068                           	opt	stack 22
  3069                           	line	369
  3070                           	
  3071                           l2965:
  3072  000F0A                     ;main.c: 369:     SYSTEM_Initialize() ;
  3073                           	call	_SYSTEM_Initialize	;wreg free
  3074  000F0A  EC97  F00E         	goto	l2967
  3075  000F0E  EF89  F007         	line	370
  3076                           ;main.c: 370:     while(1) {
  3077                           	
  3078                           l310:
  3079  000F12                     	line	371
  3080                           	
  3081                           l2967:
  3082  000F12                     ;main.c: 371:         if(strstr(GetString(), "clear") != ((void*)0))
  3083                           	call	_GetString	;wreg free
  3084  000F12  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  3085  000F16  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  3086  000F1A  C0F9  F180         		movlw	low(STR_20)
  3087  000F1E  0E21               	movlb	1	; () banked
  3088  000F20  0101               	movwf	((strstr@n))&0ffh
  3089  000F22  6F81               	movlw	high(STR_20)
  3090  000F24  0E06               	movwf	((strstr@n+1))&0ffh
  3091  000F26  6F82               
  3092                           	call	_strstr	;wreg free
  3093  000F28  EC71  F00A         	movlb	1	; () banked
  3094  000F2C  0101               	movf	(0+?_strstr)&0ffh,w
  3095  000F2E  517F               iorwf	(1+?_strstr)&0ffh,w
  3096  000F30  1180               	btfsc	status,2
  3097  000F32  B4D8               	goto	u2621
  3098  000F34  EF9E  F007         	goto	u2620
  3099  000F38  EFA0  F007         
  3100                           u2621:
  3101  000F3C                     	goto	l2971
  3102  000F3C  EFA4  F007         u2620:
  3103  000F40                     	line	372
  3104                           	
  3105                           l2969:; BSR set to: 1
  3106  000F40                     
  3107                           ;main.c: 372:             ClearBuffer();
  3108                           	call	_ClearBuffer	;wreg free
  3109  000F40  EC41  F00D         	goto	l2967
  3110  000F44  EF89  F007         	line	373
  3111                           ;main.c: 373:         else if(!strcmp(GetString(), "blink"))
  3112                           	
  3113                           l311:
  3114  000F48                     	
  3115                           l2971:
  3116  000F48                     	call	_GetString	;wreg free
  3117  000F48  ECA2  F00E         	movff	0+?_GetString,(strcmp@l)
  3118  000F4C  C0F8  F0FA         	movff	1+?_GetString,(strcmp@l+1)
  3119  000F50  C0F9  F0FB         		movlw	low(STR_22)
  3120  000F54  0E1B               	movlb	0	; () banked
  3121  000F56  0100               	movwf	((strcmp@r))&0ffh
  3122  000F58  6FFC               	movlw	high(STR_22)
  3123  000F5A  0E06               	movwf	((strcmp@r+1))&0ffh
  3124  000F5C  6FFD               
  3125                           	call	_strcmp	;wreg free
  3126  000F5E  ECB7  F00B         	movlb	0	; () banked
  3127  000F62  0100               	movf	(0+?_strcmp)&0ffh,w
  3128  000F64  51FA               iorwf	(1+?_strcmp)&0ffh,w
  3129  000F66  11FB               	btfss	status,2
  3130  000F68  A4D8               	goto	u2631
  3131  000F6A  EFB9  F007         	goto	u2630
  3132  000F6E  EFBB  F007         
  3133                           u2631:
  3134  000F72                     	goto	l2975
  3135  000F72  EFBF  F007         u2630:
  3136  000F76                     	line	374
  3137                           	
  3138                           l2973:; BSR set to: 0
  3139  000F76                     
  3140                           ;main.c: 374:             Mode1();
  3141                           	call	_Mode1	;wreg free
  3142  000F76  EC1E  F003         	goto	l2967
  3143  000F7A  EF89  F007         	line	375
  3144                           ;main.c: 375:         else if(!strcmp(GetString(), "breath"))
  3145                           	
  3146                           l313:
  3147  000F7E                     	
  3148                           l2975:
  3149  000F7E                     	call	_GetString	;wreg free
  3150  000F7E  ECA2  F00E         	movff	0+?_GetString,(strcmp@l)
  3151  000F82  C0F8  F0FA         	movff	1+?_GetString,(strcmp@l+1)
  3152  000F86  C0F9  F0FB         		movlw	low(STR_24)
  3153  000F8A  0E08               	movlb	0	; () banked
  3154  000F8C  0100               	movwf	((strcmp@r))&0ffh
  3155  000F8E  6FFC               	movlw	high(STR_24)
  3156  000F90  0E06               	movwf	((strcmp@r+1))&0ffh
  3157  000F92  6FFD               
  3158                           	call	_strcmp	;wreg free
  3159  000F94  ECB7  F00B         	movlb	0	; () banked
  3160  000F98  0100               	movf	(0+?_strcmp)&0ffh,w
  3161  000F9A  51FA               iorwf	(1+?_strcmp)&0ffh,w
  3162  000F9C  11FB               	btfss	status,2
  3163  000F9E  A4D8               	goto	u2641
  3164  000FA0  EFD4  F007         	goto	u2640
  3165  000FA4  EFD6  F007         
  3166                           u2641:
  3167  000FA8                     	goto	l2979
  3168  000FA8  EFDA  F007         u2640:
  3169  000FAC                     	line	376
  3170                           	
  3171                           l2977:; BSR set to: 0
  3172  000FAC                     
  3173                           ;main.c: 376:             Mode2();
  3174                           	call	_Mode2	;wreg free
  3175  000FAC  EC50  F00B         	goto	l2967
  3176  000FB0  EF89  F007         	line	377
  3177                           ;main.c: 377:         else if(!strcmp(GetString(), "music"))
  3178                           	
  3179                           l315:
  3180  000FB4                     	
  3181                           l2979:
  3182  000FB4                     	call	_GetString	;wreg free
  3183  000FB4  ECA2  F00E         	movff	0+?_GetString,(strcmp@l)
  3184  000FB8  C0F8  F0FA         	movff	1+?_GetString,(strcmp@l+1)
  3185  000FBC  C0F9  F0FB         		movlw	low(STR_26)
  3186  000FC0  0E15               	movlb	0	; () banked
  3187  000FC2  0100               	movwf	((strcmp@r))&0ffh
  3188  000FC4  6FFC               	movlw	high(STR_26)
  3189  000FC6  0E06               	movwf	((strcmp@r+1))&0ffh
  3190  000FC8  6FFD               
  3191                           	call	_strcmp	;wreg free
  3192  000FCA  ECB7  F00B         	movlb	0	; () banked
  3193  000FCE  0100               	movf	(0+?_strcmp)&0ffh,w
  3194  000FD0  51FA               iorwf	(1+?_strcmp)&0ffh,w
  3195  000FD2  11FB               	btfss	status,2
  3196  000FD4  A4D8               	goto	u2651
  3197  000FD6  EFEF  F007         	goto	u2650
  3198  000FDA  EFF1  F007         
  3199                           u2651:
  3200  000FDE                     	goto	l2983
  3201  000FDE  EFF5  F007         u2650:
  3202  000FE2                     	line	378
  3203                           	
  3204                           l2981:; BSR set to: 0
  3205  000FE2                     
  3206                           ;main.c: 378:             Mode3();
  3207                           	call	_Mode3	;wreg free
  3208  000FE2  EC3B  F008         	goto	l2967
  3209  000FE6  EF89  F007         	line	379
  3210                           ;main.c: 379:         else if(!strcmp(GetString(), "p"))
  3211                           	
  3212                           l317:
  3213  000FEA                     	
  3214                           l2983:
  3215  000FEA                     	call	_GetString	;wreg free
  3216  000FEA  ECA2  F00E         	movff	0+?_GetString,(strcmp@l)
  3217  000FEE  C0F8  F0FA         	movff	1+?_GetString,(strcmp@l+1)
  3218  000FF2  C0F9  F0FB         		movlw	low(STR_28)
  3219  000FF6  0E35               	movlb	0	; () banked
  3220  000FF8  0100               	movwf	((strcmp@r))&0ffh
  3221  000FFA  6FFC               	movlw	high(STR_28)
  3222  000FFC  0E06               	movwf	((strcmp@r+1))&0ffh
  3223  000FFE  6FFD               
  3224                           	call	_strcmp	;wreg free
  3225  001000  ECB7  F00B         	movlb	0	; () banked
  3226  001004  0100               	movf	(0+?_strcmp)&0ffh,w
  3227  001006  51FA               iorwf	(1+?_strcmp)&0ffh,w
  3228  001008  11FB               	btfss	status,2
  3229  00100A  A4D8               	goto	u2661
  3230  00100C  EF0A  F008         	goto	u2660
  3231  001010  EF0C  F008         
  3232                           u2661:
  3233  001014                     	goto	l2987
  3234  001014  EF10  F008         u2660:
  3235  001018                     	line	380
  3236                           	
  3237                           l2985:; BSR set to: 0
  3238  001018                     
  3239                           ;main.c: 380:             Playmusic();
  3240                           	call	_Playmusic	;wreg free
  3241  001018  EC77  F00D         	goto	l2967
  3242  00101C  EF89  F007         	line	381
  3243                           ;main.c: 381:         else if(!strcmp(GetString(), "s"))
  3244                           	
  3245                           l319:
  3246  001020                     	
  3247                           l2987:
  3248  001020                     	call	_GetString	;wreg free
  3249  001020  ECA2  F00E         	movff	0+?_GetString,(strcmp@l)
  3250  001024  C0F8  F0FA         	movff	1+?_GetString,(strcmp@l+1)
  3251  001028  C0F9  F0FB         		movlw	low(STR_30)
  3252  00102C  0E39               	movlb	0	; () banked
  3253  00102E  0100               	movwf	((strcmp@r))&0ffh
  3254  001030  6FFC               	movlw	high(STR_30)
  3255  001032  0E06               	movwf	((strcmp@r+1))&0ffh
  3256  001034  6FFD               
  3257                           	call	_strcmp	;wreg free
  3258  001036  ECB7  F00B         	movlb	0	; () banked
  3259  00103A  0100               	movf	(0+?_strcmp)&0ffh,w
  3260  00103C  51FA               iorwf	(1+?_strcmp)&0ffh,w
  3261  00103E  11FB               	btfss	status,2
  3262  001040  A4D8               	goto	u2671
  3263  001042  EF25  F008         	goto	u2670
  3264  001046  EF27  F008         
  3265                           u2671:
  3266  00104A                     	goto	l2967
  3267  00104A  EF89  F007         u2670:
  3268  00104E                     	line	382
  3269                           	
  3270                           l2989:; BSR set to: 0
  3271  00104E                     
  3272                           ;main.c: 382:             Stopmusic();
  3273                           	call	_Stopmusic	;wreg free
  3274  00104E  EC39  F00E         	goto	l2967
  3275  001052  EF89  F007         	
  3276                           l321:
  3277  001056                     	goto	l2967
  3278  001056  EF89  F007         	
  3279                           l320:
  3280  00105A                     	goto	l2967
  3281  00105A  EF89  F007         	
  3282                           l318:
  3283  00105E                     	goto	l2967
  3284  00105E  EF89  F007         	
  3285                           l316:
  3286  001062                     	goto	l2967
  3287  001062  EF89  F007         	
  3288                           l314:
  3289  001066                     	goto	l2967
  3290  001066  EF89  F007         	
  3291                           l312:
  3292  00106A                     	goto	l2967
  3293  00106A  EF89  F007         	line	383
  3294                           ;main.c: 383:     }
  3295                           	
  3296                           l322:
  3297  00106E                     	goto	l2967
  3298  00106E  EF89  F007         	
  3299                           l323:
  3300  001072                     	line	386
  3301                           ;main.c: 384:     return;
  3302                           	
  3303                           l324:
  3304  001072                     	global	start
  3305                           	goto	start
  3306  001072  EF3C  F000         	opt stack 0
  3307                           GLOBAL	__end_of_main
  3308                           	__end_of_main:
  3309  001076                     	signat	_main,89
  3310                           	global	_strcmp
  3311                           
  3312 ;; *************** function _strcmp *****************
  3313 ;; Defined at:
  3314 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcmp.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  l               2    2[BANK0 ] PTR const unsigned char 
  3317 ;;		 -> mystring(10), 
  3318 ;;  r               2    4[BANK0 ] PTR const unsigned char 
  3319 ;;		 -> STR_30(2), STR_28(2), STR_26(6), STR_24(7), 
  3320 ;;		 -> STR_22(6), 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  2    2[BANK0 ] int 
  3325 ;; Registers used:
  3326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3332 ;;      Params:         0       4       0       0       0       0       0
  3333 ;;      Locals:         0       0       0       0       0       0       0
  3334 ;;      Temps:          0       0       3       0       0       0       0
  3335 ;;      Totals:         0       4       3       0       0       0       0
  3336 ;;Total ram usage:        7 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    6
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_main
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           psect	text1,class=CODE,space=0,reloc=2,group=2
  3346                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcmp.c"
  3347                           	line	3
  3348                           global __ptext1
  3349                           __ptext1:
  3350  00176E                     psect	text1
  3351                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcmp.c"
  3352                           	line	3
  3353                           	global	__size_of_strcmp
  3354                           	__size_of_strcmp	equ	__end_of_strcmp-_strcmp
  3355  0000                     	
  3356                           _strcmp:
  3357  00176E                     ;incstack = 0
  3358                           	opt	stack 24
  3359                           	line	5
  3360                           	
  3361                           l2953:
  3362  00176E                     	goto	l2957
  3363  00176E  EFC0  F00B         	
  3364                           l1002:
  3365  001772                     	
  3366                           l2955:
  3367  001772                     	movlb	0	; () banked
  3368  001772  0100               	infsnz	((strcmp@l))&0ffh
  3369  001774  4BFA               	incf	((strcmp@l+1))&0ffh
  3370  001776  2BFB               	infsnz	((strcmp@r))&0ffh
  3371  001778  4BFC               	incf	((strcmp@r+1))&0ffh
  3372  00177A  2BFD               	goto	l2957
  3373  00177C  EFC0  F00B         	
  3374                           l1001:; BSR set to: 0
  3375  001780                     
  3376                           	
  3377                           l2957:
  3378  001780                     	movff	(strcmp@l),fsr2l
  3379  001780  C0FA  FFD9         	movff	(strcmp@l+1),fsr2h
  3380  001784  C0FB  FFDA         	movf	indf2,w
  3381  001788  50DF               	movlb	1	; () banked
  3382  00178A  0101               	movwf	(??_strcmp+0+0)&0ffh
  3383  00178C  6F78               	movff	(strcmp@r),tblptrl
  3384  00178E  C0FC  FFF6         	movff	(strcmp@r+1),tblptrh
  3385  001792  C0FD  FFF7         	if	0	;tblptru may be non-zero
  3386  001796                     	clrf	tblptru
  3388  001796                     	if	0	;tblptru may be non-zero
  3389  001796                     	global __mediumconst
  3390                           movlw	low highword(__mediumconst)
  3393  001796                     	tblrd	*
  3394  001796  0008               	
  3395                           	movf	tablat,w
  3396  001798  50F5               	xorwf	((??_strcmp+0+0))&0ffh,w
  3397  00179A  1978               
  3398                           	btfss	status,2
  3399  00179C  A4D8               	goto	u2601
  3400  00179E  EFD3  F00B         	goto	u2600
  3401  0017A2  EFD5  F00B         u2601:
  3402  0017A6                     	goto	l2961
  3403  0017A6  EFE5  F00B         u2600:
  3404  0017AA                     	
  3405                           l2959:; BSR set to: 1
  3406  0017AA                     
  3407                           	movff	(strcmp@l),fsr2l
  3408  0017AA  C0FA  FFD9         	movff	(strcmp@l+1),fsr2h
  3409  0017AE  C0FB  FFDA         	movf	indf2,w
  3410  0017B2  50DF               	btfss	status,2
  3411  0017B4  A4D8               	goto	u2611
  3412  0017B6  EFDF  F00B         	goto	u2610
  3413  0017BA  EFE1  F00B         u2611:
  3414  0017BE                     	goto	l2955
  3415  0017BE  EFB9  F00B         u2610:
  3416  0017C2                     	goto	l2961
  3417  0017C2  EFE5  F00B         	
  3418                           l1004:; BSR set to: 1
  3419  0017C6                     
  3420                           	goto	l2961
  3421  0017C6  EFE5  F00B         	
  3422                           l1005:; BSR set to: 1
  3423  0017CA                     
  3424                           	line	6
  3425                           	
  3426                           l2961:; BSR set to: 1
  3427  0017CA                     
  3428                           	movff	(strcmp@r),tblptrl
  3429  0017CA  C0FC  FFF6         	movff	(strcmp@r+1),tblptrh
  3430  0017CE  C0FD  FFF7         	if	0	;tblptru may be non-zero
  3431  0017D2                     	clrf	tblptru
  3433  0017D2                     	if	0	;tblptru may be non-zero
  3434  0017D2                     	global __mediumconst
  3435                           movlw	low highword(__mediumconst)
  3438  0017D2                     	tblrd	*
  3439  0017D2  0008               	
  3440                           	movf	tablat,w
  3441  0017D4  50F5               	movwf	(??_strcmp+0+0)&0ffh
  3442  0017D6  6F78               	clrf	(??_strcmp+0+0+1)&0ffh
  3443  0017D8  6B79               
  3444                           	comf	(??_strcmp+0+0)&0ffh
  3445  0017DA  1F78               	comf	(??_strcmp+0+1)&0ffh
  3446  0017DC  1F79               	infsnz	(??_strcmp+0+0)&0ffh
  3447  0017DE  4B78               	incf	(??_strcmp+0+1)&0ffh
  3448  0017E0  2B79               	movff	(strcmp@l),fsr2l
  3449  0017E2  C0FA  FFD9         	movff	(strcmp@l+1),fsr2h
  3450  0017E6  C0FB  FFDA         	movf	indf2,w
  3451  0017EA  50DF               	movwf	(??_strcmp+2+0)&0ffh
  3452  0017EC  6F7A               	movf	((??_strcmp+2+0))&0ffh,w
  3453  0017EE  517A               	addwf	(??_strcmp+0+0)&0ffh,w
  3454  0017F0  2578               	movlb	0	; () banked
  3455  0017F2  0100               	movwf	((?_strcmp))&0ffh
  3456  0017F4  6FFA               	movlw	0
  3457  0017F6  0E00               	movlb	1	; () banked
  3458  0017F8  0101               	addwfc	(??_strcmp+0+1)&0ffh,w
  3459  0017FA  2179               	movlb	0	; () banked
  3460  0017FC  0100               	movwf	1+((?_strcmp))&0ffh
  3461  0017FE  6FFB               	goto	l1006
  3462  001800  EF02  F00C         	
  3463                           l2963:; BSR set to: 0
  3464  001804                     
  3465                           	line	7
  3466                           	
  3467                           l1006:; BSR set to: 0
  3468  001804                     
  3469                           	return	;funcret
  3470  001804  0012               	opt stack 0
  3471                           GLOBAL	__end_of_strcmp
  3472                           	__end_of_strcmp:
  3473  001806                     	signat	_strcmp,8314
  3474                           	global	_Stopmusic
  3475                           
  3476 ;; *************** function _Stopmusic *****************
  3477 ;; Defined at:
  3478 ;;		line 357 in file "main.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;		None
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;		None
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      void 
  3485 ;; Registers used:
  3486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3492 ;;      Params:         0       0       0       0       0       0       0
  3493 ;;      Locals:         0       0       0       0       0       0       0
  3494 ;;      Temps:          0       0       0       0       0       0       0
  3495 ;;      Totals:         0       0       0       0       0       0       0
  3496 ;;Total ram usage:        0 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; Hardware stack levels required when called:    7
  3499 ;; This function calls:
  3500 ;;		_ClearBuffer
  3501 ;; This function is called by:
  3502 ;;		_main
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           psect	text2,class=CODE,space=0,reloc=2,group=0
  3506                           	file	"main.c"
  3507                           	line	357
  3508                           global __ptext2
  3509                           __ptext2:
  3510  001C72                     psect	text2
  3511                           	file	"main.c"
  3512                           	line	357
  3513                           	global	__size_of_Stopmusic
  3514                           	__size_of_Stopmusic	equ	__end_of_Stopmusic-_Stopmusic
  3515  0000                     	
  3516                           _Stopmusic:; BSR set to: 0
  3517  001C72                     
  3518                           ;incstack = 0
  3519                           	opt	stack 23
  3520                           	line	358
  3521                           	
  3522                           l2939:
  3523  001C72                     ;main.c: 358:     ClearBuffer();
  3524                           	call	_ClearBuffer	;wreg free
  3525  001C72  EC41  F00D         	line	359
  3526                           	
  3527                           l2941:
  3528  001C76                     ;main.c: 359:     T2CONbits.TMR2ON = 0;
  3529                           	bcf	((c:4042)),c,2	;volatile
  3530  001C76  94CA               	line	360
  3531                           	
  3532                           l2943:
  3533  001C78                     ;main.c: 360:     T1CONbits.TMR1ON = 0;
  3534                           	bcf	((c:4045)),c,0	;volatile
  3535  001C78  90CD               	line	361
  3536                           	
  3537                           l2945:
  3538  001C7A                     ;main.c: 361:     music_count = 0;
  3539                           	movlw	high(0)
  3540  001C7A  0E00               	movwf	((c:_music_count+1)),c
  3541  001C7C  6E49               	movlw	low(0)
  3542  001C7E  0E00               	movwf	((c:_music_count)),c
  3543  001C80  6E48               	line	362
  3544                           	
  3545                           l2947:
  3546  001C82                     ;main.c: 362:     music_index = 0;
  3547                           	movlw	high(0)
  3548  001C82  0E00               	movwf	((c:_music_index+1)),c
  3549  001C84  6E47               	movlw	low(0)
  3550  001C86  0E00               	movwf	((c:_music_index)),c
  3551  001C88  6E46               	line	363
  3552                           	
  3553                           l2949:
  3554  001C8A                     ;main.c: 363:     music_playing = 0;
  3555                           	movlw	high(0)
  3556  001C8A  0E00               	movwf	((c:_music_playing+1)),c
  3557  001C8C  6E3D               	movlw	low(0)
  3558  001C8E  0E00               	movwf	((c:_music_playing)),c
  3559  001C90  6E3C               	line	364
  3560                           	
  3561                           l2951:
  3562  001C92                     ;main.c: 364:     ClearBuffer();
  3563                           	call	_ClearBuffer	;wreg free
  3564  001C92  EC41  F00D         	line	365
  3565                           	
  3566                           l305:
  3567  001C96                     	return	;funcret
  3568  001C96  0012               	opt stack 0
  3569                           GLOBAL	__end_of_Stopmusic
  3570                           	__end_of_Stopmusic:
  3571  001C98                     	signat	_Stopmusic,89
  3572                           	global	_SYSTEM_Initialize
  3573                           
  3574 ;; *************** function _SYSTEM_Initialize *****************
  3575 ;; Defined at:
  3576 ;;		line 60 in file "setting_hardaware/setting.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;		None
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3590 ;;      Params:         0       0       0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0
  3593 ;;      Totals:         0       0       0       0       0       0       0
  3594 ;;Total ram usage:        0 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; Hardware stack levels required when called:    7
  3597 ;; This function calls:
  3598 ;;		_ADC_Initialize
  3599 ;;		_CCP1_Initialize
  3600 ;;		_INTERRUPT_Initialize
  3601 ;;		_OSCILLATOR_Initialize
  3602 ;;		_UART_Initialize
  3603 ;; This function is called by:
  3604 ;;		_main
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           psect	text3,class=CODE,space=0,reloc=2,group=0
  3608                           	file	"setting_hardaware/setting.c"
  3609                           	line	60
  3610                           global __ptext3
  3611                           __ptext3:
  3612  001D2E                     psect	text3
  3613                           	file	"setting_hardaware/setting.c"
  3614                           	line	60
  3615                           	global	__size_of_SYSTEM_Initialize
  3616                           	__size_of_SYSTEM_Initialize	equ	__end_of_SYSTEM_Initialize-_SYSTEM_Initialize
  3617  0000                     	
  3618                           _SYSTEM_Initialize:
  3619  001D2E                     ;incstack = 0
  3620                           	opt	stack 23
  3621                           	line	63
  3622                           	
  3623                           l2597:
  3624  001D2E                     ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  3625                           	call	_OSCILLATOR_Initialize	;wreg free
  3626  001D2E  ECAA  F00E         	line	67
  3627                           	
  3628                           l2599:
  3629  001D32                     ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  3630                           	call	_INTERRUPT_Initialize	;wreg free
  3631  001D32  ECAF  F00E         	line	68
  3632                           	
  3633                           l2601:
  3634  001D36                     ;setting_hardaware/setting.c: 68:     UART_Initialize();
  3635                           	call	_UART_Initialize	;wreg free
  3636  001D36  EC4C  F00E         	line	69
  3637                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
  3638                           	call	_CCP1_Initialize	;wreg free
  3639  001D3A  ECB5  F00E         	line	70
  3640                           	
  3641                           l2603:
  3642  001D3E                     ;setting_hardaware/setting.c: 70:     ADC_Initialize();
  3643                           	call	_ADC_Initialize	;wreg free
  3644  001D3E  EC8B  F00E         	line	71
  3645                           	
  3646                           l15:
  3647  001D42                     	return	;funcret
  3648  001D42  0012               	opt stack 0
  3649                           GLOBAL	__end_of_SYSTEM_Initialize
  3650                           	__end_of_SYSTEM_Initialize:
  3651  001D44                     	signat	_SYSTEM_Initialize,89
  3652                           	global	_UART_Initialize
  3653                           
  3654 ;; *************** function _UART_Initialize *****************
  3655 ;; Defined at:
  3656 ;;		line 7 in file "setting_hardaware/uart.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3670 ;;      Params:         0       0       0       0       0       0       0
  3671 ;;      Locals:         0       0       0       0       0       0       0
  3672 ;;      Temps:          0       0       0       0       0       0       0
  3673 ;;      Totals:         0       0       0       0       0       0       0
  3674 ;;Total ram usage:        0 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    6
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_SYSTEM_Initialize
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           psect	text4,class=CODE,space=0,reloc=2,group=0
  3684                           	file	"setting_hardaware/uart.c"
  3685                           	line	7
  3686                           global __ptext4
  3687                           __ptext4:
  3688  001C98                     psect	text4
  3689                           	file	"setting_hardaware/uart.c"
  3690                           	line	7
  3691                           	global	__size_of_UART_Initialize
  3692                           	__size_of_UART_Initialize	equ	__end_of_UART_Initialize-_UART_Initialize
  3693  0000                     	
  3694                           _UART_Initialize:
  3695  001C98                     ;incstack = 0
  3696                           	opt	stack 23
  3697                           	line	10
  3698                           	
  3699                           l2521:
  3700  001C98                     ;setting_hardaware/uart.c: 10:     TRISCbits.TRISC6 = 1;
  3701                           	bsf	((c:3988)),c,6	;volatile
  3702  001C98  8C94               	line	11
  3703                           ;setting_hardaware/uart.c: 11:     TRISCbits.TRISC7 = 1;
  3704                           	bsf	((c:3988)),c,7	;volatile
  3705  001C9A  8E94               	line	22
  3706                           ;setting_hardaware/uart.c: 22:     TXSTAbits.SYNC = 0;
  3707                           	bcf	((c:4012)),c,4	;volatile
  3708  001C9C  98AC               	line	23
  3709                           ;setting_hardaware/uart.c: 23:     BAUDCONbits.BRG16 = 0 ;
  3710                           	bcf	((c:4024)),c,3	;volatile
  3711  001C9E  96B8               	line	24
  3712                           ;setting_hardaware/uart.c: 24:     TXSTAbits.BRGH = 1;
  3713                           	bsf	((c:4012)),c,2	;volatile
  3714  001CA0  84AC               	line	25
  3715                           	
  3716                           l2523:
  3717  001CA2                     ;setting_hardaware/uart.c: 25:     SPBRG = 51;
  3718                           	movlw	low(033h)
  3719  001CA2  0E33               	movwf	((c:4015)),c	;volatile
  3720  001CA4  6EAF               	line	28
  3721                           	
  3722                           l2525:
  3723  001CA6                     ;setting_hardaware/uart.c: 28:     RCSTAbits.SPEN = 1;
  3724                           	bsf	((c:4011)),c,7	;volatile
  3725  001CA6  8EAB               	line	29
  3726                           	
  3727                           l2527:
  3728  001CA8                     ;setting_hardaware/uart.c: 29:     PIR1bits.TXIF = 1;
  3729                           	bsf	((c:3998)),c,4	;volatile
  3730  001CA8  889E               	line	30
  3731                           	
  3732                           l2529:
  3733  001CAA                     ;setting_hardaware/uart.c: 30:     PIR1bits.RCIF = 0;
  3734                           	bcf	((c:3998)),c,5	;volatile
  3735  001CAA  9A9E               	line	31
  3736                           	
  3737                           l2531:
  3738  001CAC                     ;setting_hardaware/uart.c: 31:     TXSTAbits.TXEN = 1;
  3739                           	bsf	((c:4012)),c,5	;volatile
  3740  001CAC  8AAC               	line	32
  3741                           	
  3742                           l2533:
  3743  001CAE                     ;setting_hardaware/uart.c: 32:     RCSTAbits.CREN = 1;
  3744                           	bsf	((c:4011)),c,4	;volatile
  3745  001CAE  88AB               	line	34
  3746                           	
  3747                           l2535:
  3748  001CB0                     ;setting_hardaware/uart.c: 34:     PIE1bits.TXIE = 0;
  3749                           	bcf	((c:3997)),c,4	;volatile
  3750  001CB0  989D               	line	35
  3751                           	
  3752                           l2537:
  3753  001CB2                     ;setting_hardaware/uart.c: 35:     IPR1bits.TXIP = 0;
  3754                           	bcf	((c:3999)),c,4	;volatile
  3755  001CB2  989F               	line	36
  3756                           	
  3757                           l2539:
  3758  001CB4                     ;setting_hardaware/uart.c: 36:     PIE1bits.RCIE = 1;
  3759                           	bsf	((c:3997)),c,5	;volatile
  3760  001CB4  8A9D               	line	37
  3761                           	
  3762                           l2541:
  3763  001CB6                     ;setting_hardaware/uart.c: 37:     IPR1bits.RCIP = 0;
  3764                           	bcf	((c:3999)),c,5	;volatile
  3765  001CB6  9A9F               	line	38
  3766                           	
  3767                           l51:
  3768  001CB8                     	return	;funcret
  3769  001CB8  0012               	opt stack 0
  3770                           GLOBAL	__end_of_UART_Initialize
  3771                           	__end_of_UART_Initialize:
  3772  001CBA                     	signat	_UART_Initialize,89
  3773                           	global	_OSCILLATOR_Initialize
  3774                           
  3775 ;; *************** function _OSCILLATOR_Initialize *****************
  3776 ;; Defined at:
  3777 ;;		line 73 in file "setting_hardaware/setting.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3791 ;;      Params:         0       0       0       0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0
  3794 ;;      Totals:         0       0       0       0       0       0       0
  3795 ;;Total ram usage:        0 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    6
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_SYSTEM_Initialize
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           psect	text5,class=CODE,space=0,reloc=2,group=0
  3805                           	file	"setting_hardaware/setting.c"
  3806                           	line	73
  3807                           global __ptext5
  3808                           __ptext5:
  3809  001D54                     psect	text5
  3810                           	file	"setting_hardaware/setting.c"
  3811                           	line	73
  3812                           	global	__size_of_OSCILLATOR_Initialize
  3813                           	__size_of_OSCILLATOR_Initialize	equ	__end_of_OSCILLATOR_Initialize-_OSCILLATOR_Initiali
                                 ze
  3814  0000                     	
  3815                           _OSCILLATOR_Initialize:
  3816  001D54                     ;incstack = 0
  3817                           	opt	stack 23
  3818                           	line	75
  3819                           	
  3820                           l2517:
  3821  001D54                     ;setting_hardaware/setting.c: 75:     OSCCONbits.IRCF = 6;
  3822                           	movf	((c:4051)),c,w	;volatile
  3823  001D54  50D3               	andlw	not (((1<<3)-1)<<4)
  3824  001D56  0B8F               	iorlw	(06h & ((1<<3)-1))<<4
  3825  001D58  0960               	movwf	((c:4051)),c	;volatile
  3826  001D5A  6ED3               	line	77
  3827                           	
  3828                           l18:
  3829  001D5C                     	return	;funcret
  3830  001D5C  0012               	opt stack 0
  3831                           GLOBAL	__end_of_OSCILLATOR_Initialize
  3832                           	__end_of_OSCILLATOR_Initialize:
  3833  001D5E                     	signat	_OSCILLATOR_Initialize,89
  3834                           	global	_INTERRUPT_Initialize
  3835                           
  3836 ;; *************** function _INTERRUPT_Initialize *****************
  3837 ;; Defined at:
  3838 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;		None
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;		None
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      void 
  3845 ;; Registers used:
  3846 ;;		None
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3852 ;;      Params:         0       0       0       0       0       0       0
  3853 ;;      Locals:         0       0       0       0       0       0       0
  3854 ;;      Temps:          0       0       0       0       0       0       0
  3855 ;;      Totals:         0       0       0       0       0       0       0
  3856 ;;Total ram usage:        0 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    6
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_SYSTEM_Initialize
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           psect	text6,class=CODE,space=0,reloc=2,group=0
  3866                           	file	"setting_hardaware/interrupt_manager.c"
  3867                           	line	3
  3868                           global __ptext6
  3869                           __ptext6:
  3870  001D5E                     psect	text6
  3871                           	file	"setting_hardaware/interrupt_manager.c"
  3872                           	line	3
  3873                           	global	__size_of_INTERRUPT_Initialize
  3874                           	__size_of_INTERRUPT_Initialize	equ	__end_of_INTERRUPT_Initialize-_INTERRUPT_Initialize

  3875  0000                     	
  3876                           _INTERRUPT_Initialize:
  3877  001D5E                     ;incstack = 0
  3878                           	opt	stack 23
  3879                           	line	5
  3880                           	
  3881                           l2519:
  3882  001D5E                     ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  3883                           	bsf	((c:4048)),c,7	;volatile
  3884  001D5E  8ED0               	line	6
  3885                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  3886                           	bsf	((c:4082)),c,7	;volatile
  3887  001D60  8EF2               	line	7
  3888                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  3889                           	bsf	((c:4082)),c,6	;volatile
  3890  001D62  8CF2               	line	8
  3891                           	
  3892                           l88:
  3893  001D64                     	return	;funcret
  3894  001D64  0012               	opt stack 0
  3895                           GLOBAL	__end_of_INTERRUPT_Initialize
  3896                           	__end_of_INTERRUPT_Initialize:
  3897  001D66                     	signat	_INTERRUPT_Initialize,89
  3898                           	global	_CCP1_Initialize
  3899                           
  3900 ;; *************** function _CCP1_Initialize *****************
  3901 ;; Defined at:
  3902 ;;		line 3 in file "setting_hardaware/ccp1.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		None
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3916 ;;      Params:         0       0       0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0
  3919 ;;      Totals:         0       0       0       0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    6
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_SYSTEM_Initialize
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           psect	text7,class=CODE,space=0,reloc=2,group=0
  3930                           	file	"setting_hardaware/ccp1.c"
  3931                           	line	3
  3932                           global __ptext7
  3933                           __ptext7:
  3934  001D6A                     psect	text7
  3935                           	file	"setting_hardaware/ccp1.c"
  3936                           	line	3
  3937                           	global	__size_of_CCP1_Initialize
  3938                           	__size_of_CCP1_Initialize	equ	__end_of_CCP1_Initialize-_CCP1_Initialize
  3939  0000                     	
  3940                           _CCP1_Initialize:
  3941  001D6A                     ;incstack = 0
  3942                           	opt	stack 23
  3943                           	line	8
  3944                           	
  3945                           l91:
  3946  001D6A                     	return	;funcret
  3947  001D6A  0012               	opt stack 0
  3948                           GLOBAL	__end_of_CCP1_Initialize
  3949                           	__end_of_CCP1_Initialize:
  3950  001D6C                     	signat	_CCP1_Initialize,89
  3951                           	global	_ADC_Initialize
  3952                           
  3953 ;; *************** function _ADC_Initialize *****************
  3954 ;; Defined at:
  3955 ;;		line 3 in file "setting_hardaware/adc.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;		None
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3969 ;;      Params:         0       0       0       0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0
  3972 ;;      Totals:         0       0       0       0       0       0       0
  3973 ;;Total ram usage:        0 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    6
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_SYSTEM_Initialize
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           psect	text8,class=CODE,space=0,reloc=2,group=0
  3983                           	file	"setting_hardaware/adc.c"
  3984                           	line	3
  3985                           global __ptext8
  3986                           __ptext8:
  3987  001D16                     psect	text8
  3988                           	file	"setting_hardaware/adc.c"
  3989                           	line	3
  3990                           	global	__size_of_ADC_Initialize
  3991                           	__size_of_ADC_Initialize	equ	__end_of_ADC_Initialize-_ADC_Initialize
  3992  0000                     	
  3993                           _ADC_Initialize:
  3994  001D16                     ;incstack = 0
  3995                           	opt	stack 23
  3996                           	line	4
  3997                           	
  3998                           l2543:
  3999  001D16                     ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
  4000                           	setf	((c:3986)),c	;volatile
  4001  001D16  6892               	line	5
  4002                           	
  4003                           l2545:
  4004  001D18                     ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
  4005                           	movlw	low(0Eh)
  4006  001D18  0E0E               	movwf	((c:4033)),c	;volatile
  4007  001D1A  6EC1               	line	7
  4008                           	
  4009                           l2547:
  4010  001D1C                     ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
  4011                           	bsf	c:(32263/8),(32263)&7	;volatile
  4012  001D1C  8EC0               	line	8
  4013                           	
  4014                           l2549:
  4015  001D1E                     ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
  4016                           		
  4017                           	bsf	((c:4032)),c, 0+0	;volatile
  4018  001D1E  80C0               	bsf	((c:4032)),c, 0+1	;volatile
  4019  001D20  82C0               	bsf	((c:4032)),c, 0+2	;volatile
  4020  001D22  84C0               
  4021                           	line	9
  4022                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
  4023                           	movlw	low(0)
  4024  001D24  0E00               	movwf	((c:4036)),c	;volatile
  4025  001D26  6EC4               	line	10
  4026                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
  4027                           	movlw	low(0)
  4028  001D28  0E00               	movwf	((c:4035)),c	;volatile
  4029  001D2A  6EC3               	line	11
  4030                           	
  4031                           l108:
  4032  001D2C                     	return	;funcret
  4033  001D2C  0012               	opt stack 0
  4034                           GLOBAL	__end_of_ADC_Initialize
  4035                           	__end_of_ADC_Initialize:
  4036  001D2E                     	signat	_ADC_Initialize,89
  4037                           	global	_Playmusic
  4038                           
  4039 ;; *************** function _Playmusic *****************
  4040 ;; Defined at:
  4041 ;;		line 333 in file "main.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4055 ;;      Params:         0       0       0       0       0       0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0
  4058 ;;      Totals:         0       0       0       0       0       0       0
  4059 ;;Total ram usage:        0 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    7
  4062 ;; This function calls:
  4063 ;;		_ClearBuffer
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           psect	text9,class=CODE,space=0,reloc=2,group=0
  4069                           	file	"main.c"
  4070                           	line	333
  4071                           global __ptext9
  4072                           __ptext9:
  4073  001AEE                     psect	text9
  4074                           	file	"main.c"
  4075                           	line	333
  4076                           	global	__size_of_Playmusic
  4077                           	__size_of_Playmusic	equ	__end_of_Playmusic-_Playmusic
  4078  0000                     	
  4079                           _Playmusic:
  4080  001AEE                     ;incstack = 0
  4081                           	opt	stack 23
  4082                           	line	334
  4083                           	
  4084                           l2897:
  4085  001AEE                     ;main.c: 334:     ClearBuffer();
  4086                           	call	_ClearBuffer	;wreg free
  4087  001AEE  EC41  F00D         	line	335
  4088                           	
  4089                           l2899:
  4090  001AF2                     ;main.c: 335:     TRISCbits.RC1 = 0;
  4091                           	bcf	((c:3988)),c,1	;volatile
  4092  001AF2  9294               	line	336
  4093                           	
  4094                           l2901:
  4095  001AF4                     ;main.c: 336:     T2CONbits.T2CKPS = 3;
  4096                           	movlw	(03h & ((1<<2)-1))<<0
  4097  001AF4  0E03               	iorwf	((c:4042)),c	;volatile
  4098  001AF6  12CA               	line	337
  4099                           	
  4100                           l2903:
  4101  001AF8                     ;main.c: 337:     OSCCONbits.IRCF = 6;
  4102                           	movf	((c:4051)),c,w	;volatile
  4103  001AF8  50D3               	andlw	not (((1<<3)-1)<<4)
  4104  001AFA  0B8F               	iorlw	(06h & ((1<<3)-1))<<4
  4105  001AFC  0960               	movwf	((c:4051)),c	;volatile
  4106  001AFE  6ED3               	line	338
  4107                           	
  4108                           l2905:
  4109  001B00                     ;main.c: 338:     CCP2CONbits.CCP2M = 12;
  4110                           	movf	((c:4026)),c,w	;volatile
  4111  001B00  50BA               	andlw	not (((1<<4)-1)<<0)
  4112  001B02  0BF0               	iorlw	(0Ch & ((1<<4)-1))<<0
  4113  001B04  090C               	movwf	((c:4026)),c	;volatile
  4114  001B06  6EBA               	line	339
  4115                           	
  4116                           l2907:
  4117  001B08                     ;main.c: 339:     RCONbits.IPEN = 1;
  4118                           	bsf	((c:4048)),c,7	;volatile
  4119  001B08  8ED0               	line	340
  4120                           	
  4121                           l2909:
  4122  001B0A                     ;main.c: 340:     PIE1bits.TMR1IE =1;
  4123                           	bsf	((c:3997)),c,0	;volatile
  4124  001B0A  809D               	line	341
  4125                           	
  4126                           l2911:
  4127  001B0C                     ;main.c: 341:     PIR1bits.TMR1IF =0;
  4128                           	bcf	((c:3998)),c,0	;volatile
  4129  001B0C  909E               	line	342
  4130                           	
  4131                           l2913:
  4132  001B0E                     ;main.c: 342:     IPR1bits.TMR1IP =1;
  4133                           	bsf	((c:3999)),c,0	;volatile
  4134  001B0E  809F               	line	343
  4135                           	
  4136                           l2915:
  4137  001B10                     ;main.c: 343:     INTCONbits.GIE =1;
  4138                           	bsf	((c:4082)),c,7	;volatile
  4139  001B10  8EF2               	line	344
  4140                           	
  4141                           l2917:
  4142  001B12                     ;main.c: 344:     T1CONbits.RD16 = 1;
  4143                           	bsf	((c:4045)),c,7	;volatile
  4144  001B12  8ECD               	line	345
  4145                           	
  4146                           l2919:
  4147  001B14                     ;main.c: 345:     T1CONbits.T1CKPS = 3;
  4148                           	movlw	(03h & ((1<<2)-1))<<4
  4149  001B14  0E30               	iorwf	((c:4045)),c	;volatile
  4150  001B16  12CD               	line	346
  4151                           	
  4152                           l2921:
  4153  001B18                     ;main.c: 346:     T1CONbits.TMR1CS = 0;
  4154                           	bcf	((c:4045)),c,1	;volatile
  4155  001B18  92CD               	line	347
  4156                           	
  4157                           l2923:
  4158  001B1A                     ;main.c: 347:     T2CONbits.TMR2ON = 1;
  4159                           	bsf	((c:4042)),c,2	;volatile
  4160  001B1A  84CA               	line	348
  4161                           	
  4162                           l2925:
  4163  001B1C                     ;main.c: 348:     T1CONbits.TMR1ON = 1;
  4164                           	bsf	((c:4045)),c,0	;volatile
  4165  001B1C  80CD               	line	349
  4166                           	
  4167                           l2927:
  4168  001B1E                     ;main.c: 349:     music_choose = 0;
  4169                           	movlw	high(0)
  4170  001B1E  0E00               	movwf	((c:_music_choose+1)),c
  4171  001B20  6E45               	movlw	low(0)
  4172  001B22  0E00               	movwf	((c:_music_choose)),c
  4173  001B24  6E44               	line	350
  4174                           	
  4175                           l2929:
  4176  001B26                     ;main.c: 350:     music_count = 0;
  4177                           	movlw	high(0)
  4178  001B26  0E00               	movwf	((c:_music_count+1)),c
  4179  001B28  6E49               	movlw	low(0)
  4180  001B2A  0E00               	movwf	((c:_music_count)),c
  4181  001B2C  6E48               	line	351
  4182                           	
  4183                           l2931:
  4184  001B2E                     ;main.c: 351:     music_index = 0;
  4185                           	movlw	high(0)
  4186  001B2E  0E00               	movwf	((c:_music_index+1)),c
  4187  001B30  6E47               	movlw	low(0)
  4188  001B32  0E00               	movwf	((c:_music_index)),c
  4189  001B34  6E46               	line	352
  4190                           	
  4191                           l2933:
  4192  001B36                     ;main.c: 352:     music_playing = 1;
  4193                           	movlw	high(01h)
  4194  001B36  0E00               	movwf	((c:_music_playing+1)),c
  4195  001B38  6E3D               	movlw	low(01h)
  4196  001B3A  0E01               	movwf	((c:_music_playing)),c
  4197  001B3C  6E3C               	line	353
  4198                           	
  4199                           l2935:
  4200  001B3E                     ;main.c: 353:     TMR1 = 34285;
  4201                           	movlw	high(085EDh)
  4202  001B3E  0E85               	movwf	((c:4046+1)),c	;volatile
  4203  001B40  6ECF               	movlw	low(085EDh)
  4204  001B42  0EED               	movwf	((c:4046)),c	;volatile
  4205  001B44  6ECE               	line	354
  4206                           	
  4207                           l2937:
  4208  001B46                     ;main.c: 354:     ClearBuffer();
  4209                           	call	_ClearBuffer	;wreg free
  4210  001B46  EC41  F00D         	line	355
  4211                           	
  4212                           l302:
  4213  001B4A                     	return	;funcret
  4214  001B4A  0012               	opt stack 0
  4215                           GLOBAL	__end_of_Playmusic
  4216                           	__end_of_Playmusic:
  4217  001B4C                     	signat	_Playmusic,89
  4218                           	global	_Mode3
  4219                           
  4220 ;; *************** function _Mode3 *****************
  4221 ;; Defined at:
  4222 ;;		line 287 in file "main.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;		None
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;		None
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  1    wreg      void 
  4229 ;; Registers used:
  4230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4236 ;;      Params:         0       0       0       0       0       0       0
  4237 ;;      Locals:         0       0       0       0       0       0       0
  4238 ;;      Temps:          0       0       0       0       0       0       0
  4239 ;;      Totals:         0       0       0       0       0       0       0
  4240 ;;Total ram usage:        0 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    8
  4243 ;; This function calls:
  4244 ;;		_ClearBuffer
  4245 ;;		_GetString
  4246 ;;		_strstr
  4247 ;; This function is called by:
  4248 ;;		_main
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           psect	text10,class=CODE,space=0,reloc=2,group=0
  4252                           	line	287
  4253                           global __ptext10
  4254                           __ptext10:
  4255  001076                     psect	text10
  4256                           	file	"main.c"
  4257                           	line	287
  4258                           	global	__size_of_Mode3
  4259                           	__size_of_Mode3	equ	__end_of_Mode3-_Mode3
  4260  0000                     	
  4261                           _Mode3:
  4262  001076                     ;incstack = 0
  4263                           	opt	stack 22
  4264                           	line	288
  4265                           	
  4266                           l2847:
  4267  001076                     ;main.c: 288:     ClearBuffer();
  4268                           	call	_ClearBuffer	;wreg free
  4269  001076  EC41  F00D         	line	289
  4270                           	
  4271                           l2849:
  4272  00107A                     ;main.c: 289:     TRISCbits.RC1 = 0;
  4273                           	bcf	((c:3988)),c,1	;volatile
  4274  00107A  9294               	line	290
  4275                           	
  4276                           l2851:
  4277  00107C                     ;main.c: 290:     T2CONbits.T2CKPS = 3;
  4278                           	movlw	(03h & ((1<<2)-1))<<0
  4279  00107C  0E03               	iorwf	((c:4042)),c	;volatile
  4280  00107E  12CA               	line	291
  4281                           	
  4282                           l2853:
  4283  001080                     ;main.c: 291:     CCP2CONbits.CCP2M = 12;
  4284                           	movf	((c:4026)),c,w	;volatile
  4285  001080  50BA               	andlw	not (((1<<4)-1)<<0)
  4286  001082  0BF0               	iorlw	(0Ch & ((1<<4)-1))<<0
  4287  001084  090C               	movwf	((c:4026)),c	;volatile
  4288  001086  6EBA               	line	292
  4289                           	
  4290                           l2855:
  4291  001088                     ;main.c: 292:     PIE1bits.TMR1IE =1;
  4292                           	bsf	((c:3997)),c,0	;volatile
  4293  001088  809D               	line	293
  4294                           	
  4295                           l2857:
  4296  00108A                     ;main.c: 293:     PIR1bits.TMR1IF =0;
  4297                           	bcf	((c:3998)),c,0	;volatile
  4298  00108A  909E               	line	294
  4299                           	
  4300                           l2859:
  4301  00108C                     ;main.c: 294:     IPR1bits.TMR1IP =1;
  4302                           	bsf	((c:3999)),c,0	;volatile
  4303  00108C  809F               	line	295
  4304                           	
  4305                           l2861:
  4306  00108E                     ;main.c: 295:     T1CONbits.RD16 = 1;
  4307                           	bsf	((c:4045)),c,7	;volatile
  4308  00108E  8ECD               	line	296
  4309                           	
  4310                           l2863:
  4311  001090                     ;main.c: 296:     T1CONbits.T1CKPS = 3;
  4312                           	movlw	(03h & ((1<<2)-1))<<4
  4313  001090  0E30               	iorwf	((c:4045)),c	;volatile
  4314  001092  12CD               	line	297
  4315                           	
  4316                           l2865:
  4317  001094                     ;main.c: 297:     T1CONbits.TMR1CS = 0;
  4318                           	bcf	((c:4045)),c,1	;volatile
  4319  001094  92CD               	line	298
  4320                           	
  4321                           l2867:
  4322  001096                     ;main.c: 298:     TMR1 = 34285;
  4323                           	movlw	high(085EDh)
  4324  001096  0E85               	movwf	((c:4046+1)),c	;volatile
  4325  001098  6ECF               	movlw	low(085EDh)
  4326  00109A  0EED               	movwf	((c:4046)),c	;volatile
  4327  00109C  6ECE               	line	299
  4328                           ;main.c: 299:     ClearBuffer();
  4329                           	call	_ClearBuffer	;wreg free
  4330  00109E  EC41  F00D         	goto	l2869
  4331  0010A2  EF53  F008         	line	300
  4332                           ;main.c: 300:     while(1){
  4333                           	
  4334                           l289:
  4335  0010A6                     	line	301
  4336                           	
  4337                           l2869:
  4338  0010A6                     ;main.c: 301:         if(strstr(GetString(), "1") != ((void*)0)){
  4339                           	call	_GetString	;wreg free
  4340  0010A6  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  4341  0010AA  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  4342  0010AE  C0F9  F180         		movlw	low(STR_17)
  4343  0010B2  0E27               	movlb	1	; () banked
  4344  0010B4  0101               	movwf	((strstr@n))&0ffh
  4345  0010B6  6F81               	movlw	high(STR_17)
  4346  0010B8  0E06               	movwf	((strstr@n+1))&0ffh
  4347  0010BA  6F82               
  4348                           	call	_strstr	;wreg free
  4349  0010BC  EC71  F00A         	movlb	1	; () banked
  4350  0010C0  0101               	movf	(0+?_strstr)&0ffh,w
  4351  0010C2  517F               iorwf	(1+?_strstr)&0ffh,w
  4352  0010C4  1180               	btfsc	status,2
  4353  0010C6  B4D8               	goto	u2571
  4354  0010C8  EF68  F008         	goto	u2570
  4355  0010CC  EF6A  F008         
  4356                           u2571:
  4357  0010D0                     	goto	l2879
  4358  0010D0  EF7E  F008         u2570:
  4359  0010D4                     	line	302
  4360                           	
  4361                           l2871:; BSR set to: 1
  4362  0010D4                     
  4363                           ;main.c: 302:             T2CONbits.TMR2ON = 1;
  4364                           	bsf	((c:4042)),c,2	;volatile
  4365  0010D4  84CA               	line	303
  4366                           ;main.c: 303:             T1CONbits.TMR1ON = 1;
  4367                           	bsf	((c:4045)),c,0	;volatile
  4368  0010D6  80CD               	line	304
  4369                           	
  4370                           l2873:; BSR set to: 1
  4371  0010D8                     
  4372                           ;main.c: 304:             music_choose = 0;
  4373                           	movlw	high(0)
  4374  0010D8  0E00               	movwf	((c:_music_choose+1)),c
  4375  0010DA  6E45               	movlw	low(0)
  4376  0010DC  0E00               	movwf	((c:_music_choose)),c
  4377  0010DE  6E44               	line	305
  4378                           ;main.c: 305:             music_count = 0;
  4379                           	movlw	high(0)
  4380  0010E0  0E00               	movwf	((c:_music_count+1)),c
  4381  0010E2  6E49               	movlw	low(0)
  4382  0010E4  0E00               	movwf	((c:_music_count)),c
  4383  0010E6  6E48               	line	306
  4384                           ;main.c: 306:             music_index = 0;
  4385                           	movlw	high(0)
  4386  0010E8  0E00               	movwf	((c:_music_index+1)),c
  4387  0010EA  6E47               	movlw	low(0)
  4388  0010EC  0E00               	movwf	((c:_music_index)),c
  4389  0010EE  6E46               	line	307
  4390                           	
  4391                           l2875:; BSR set to: 1
  4392  0010F0                     
  4393                           ;main.c: 307:             ClearBuffer();
  4394                           	call	_ClearBuffer	;wreg free
  4395  0010F0  EC41  F00D         	line	308
  4396                           ;main.c: 308:             break;
  4397                           	goto	l2887
  4398  0010F4  EFAD  F008         	line	309
  4399                           	
  4400                           l2877:
  4401  0010F8                     ;main.c: 309:         }
  4402                           	goto	l2869
  4403  0010F8  EF53  F008         	line	310
  4404                           ;main.c: 310:         else if(strstr(GetString(), "2") != ((void*)0)){
  4405                           	
  4406                           l290:
  4407  0010FC                     	
  4408                           l2879:
  4409  0010FC                     	call	_GetString	;wreg free
  4410  0010FC  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  4411  001100  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  4412  001104  C0F9  F180         		movlw	low(STR_18)
  4413  001108  0E13               	movlb	1	; () banked
  4414  00110A  0101               	movwf	((strstr@n))&0ffh
  4415  00110C  6F81               	movlw	high(STR_18)
  4416  00110E  0E06               	movwf	((strstr@n+1))&0ffh
  4417  001110  6F82               
  4418                           	call	_strstr	;wreg free
  4419  001112  EC71  F00A         	movlb	1	; () banked
  4420  001116  0101               	movf	(0+?_strstr)&0ffh,w
  4421  001118  517F               iorwf	(1+?_strstr)&0ffh,w
  4422  00111A  1180               	btfsc	status,2
  4423  00111C  B4D8               	goto	u2581
  4424  00111E  EF93  F008         	goto	u2580
  4425  001122  EF95  F008         
  4426                           u2581:
  4427  001126                     	goto	l2869
  4428  001126  EF53  F008         u2580:
  4429  00112A                     	line	311
  4430                           	
  4431                           l2881:; BSR set to: 1
  4432  00112A                     
  4433                           ;main.c: 311:             T2CONbits.TMR2ON = 1;
  4434                           	bsf	((c:4042)),c,2	;volatile
  4435  00112A  84CA               	line	312
  4436                           ;main.c: 312:             T1CONbits.TMR1ON = 1;
  4437                           	bsf	((c:4045)),c,0	;volatile
  4438  00112C  80CD               	line	313
  4439                           	
  4440                           l2883:; BSR set to: 1
  4441  00112E                     
  4442                           ;main.c: 313:             music_choose = 1;
  4443                           	movlw	high(01h)
  4444  00112E  0E00               	movwf	((c:_music_choose+1)),c
  4445  001130  6E45               	movlw	low(01h)
  4446  001132  0E01               	movwf	((c:_music_choose)),c
  4447  001134  6E44               	line	314
  4448                           ;main.c: 314:             music_count = 0;
  4449                           	movlw	high(0)
  4450  001136  0E00               	movwf	((c:_music_count+1)),c
  4451  001138  6E49               	movlw	low(0)
  4452  00113A  0E00               	movwf	((c:_music_count)),c
  4453  00113C  6E48               	line	315
  4454                           ;main.c: 315:             music_index = 0;
  4455                           	movlw	high(0)
  4456  00113E  0E00               	movwf	((c:_music_index+1)),c
  4457  001140  6E47               	movlw	low(0)
  4458  001142  0E00               	movwf	((c:_music_index)),c
  4459  001144  6E46               	line	316
  4460                           	
  4461                           l2885:; BSR set to: 1
  4462  001146                     
  4463                           ;main.c: 316:             ClearBuffer();
  4464                           	call	_ClearBuffer	;wreg free
  4465  001146  EC41  F00D         	line	317
  4466                           ;main.c: 317:             break;
  4467                           	goto	l2887
  4468  00114A  EFAD  F008         	line	318
  4469                           ;main.c: 318:         }
  4470                           	
  4471                           l293:
  4472  00114E                     	goto	l2869
  4473  00114E  EF53  F008         	
  4474                           l292:
  4475  001152                     	goto	l2869
  4476  001152  EF53  F008         	line	319
  4477                           ;main.c: 319:     }
  4478                           	
  4479                           l294:
  4480  001156                     	goto	l2869
  4481  001156  EF53  F008         	
  4482                           l291:
  4483  00115A                     	line	320
  4484                           	
  4485                           l2887:
  4486  00115A                     ;main.c: 320:     ClearBuffer();
  4487                           	call	_ClearBuffer	;wreg free
  4488  00115A  EC41  F00D         	goto	l2889
  4489  00115E  EFB1  F008         	line	321
  4490                           ;main.c: 321:     while(1){
  4491                           	
  4492                           l295:
  4493  001162                     	line	322
  4494                           	
  4495                           l2889:
  4496  001162                     ;main.c: 322:         if(strstr(GetString(), "q") != ((void*)0)) {
  4497                           	call	_GetString	;wreg free
  4498  001162  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  4499  001166  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  4500  00116A  C0F9  F180         		movlw	low(STR_19)
  4501  00116E  0E37               	movlb	1	; () banked
  4502  001170  0101               	movwf	((strstr@n))&0ffh
  4503  001172  6F81               	movlw	high(STR_19)
  4504  001174  0E06               	movwf	((strstr@n+1))&0ffh
  4505  001176  6F82               
  4506                           	call	_strstr	;wreg free
  4507  001178  EC71  F00A         	movlb	1	; () banked
  4508  00117C  0101               	movf	(0+?_strstr)&0ffh,w
  4509  00117E  517F               iorwf	(1+?_strstr)&0ffh,w
  4510  001180  1180               	btfsc	status,2
  4511  001182  B4D8               	goto	u2591
  4512  001184  EFC6  F008         	goto	u2590
  4513  001188  EFC8  F008         
  4514                           u2591:
  4515  00118C                     	goto	l2889
  4516  00118C  EFB1  F008         u2590:
  4517  001190                     	line	323
  4518                           	
  4519                           l2891:; BSR set to: 1
  4520  001190                     
  4521                           ;main.c: 323:             T2CONbits.TMR2ON = 0;
  4522                           	bcf	((c:4042)),c,2	;volatile
  4523  001190  94CA               	line	324
  4524                           ;main.c: 324:             T1CONbits.TMR1ON = 0;
  4525                           	bcf	((c:4045)),c,0	;volatile
  4526  001192  90CD               	line	325
  4527                           	
  4528                           l2893:; BSR set to: 1
  4529  001194                     
  4530                           ;main.c: 325:             music_count = 0;
  4531                           	movlw	high(0)
  4532  001194  0E00               	movwf	((c:_music_count+1)),c
  4533  001196  6E49               	movlw	low(0)
  4534  001198  0E00               	movwf	((c:_music_count)),c
  4535  00119A  6E48               	line	326
  4536                           ;main.c: 326:             music_index = 0;
  4537                           	movlw	high(0)
  4538  00119C  0E00               	movwf	((c:_music_index+1)),c
  4539  00119E  6E47               	movlw	low(0)
  4540  0011A0  0E00               	movwf	((c:_music_index)),c
  4541  0011A2  6E46               	line	327
  4542                           	
  4543                           l2895:; BSR set to: 1
  4544  0011A4                     
  4545                           ;main.c: 327:             ClearBuffer();
  4546                           	call	_ClearBuffer	;wreg free
  4547  0011A4  EC41  F00D         	line	328
  4548                           ;main.c: 328:             break;
  4549                           	goto	l299
  4550  0011A8  EFDA  F008         	line	329
  4551                           ;main.c: 329:         }
  4552                           	
  4553                           l296:
  4554  0011AC                     	goto	l2889
  4555  0011AC  EFB1  F008         	line	330
  4556                           ;main.c: 330:     }
  4557                           	
  4558                           l298:
  4559  0011B0                     	goto	l2889
  4560  0011B0  EFB1  F008         	
  4561                           l297:
  4562  0011B4                     	line	331
  4563                           	
  4564                           l299:
  4565  0011B4                     	return	;funcret
  4566  0011B4  0012               	opt stack 0
  4567                           GLOBAL	__end_of_Mode3
  4568                           	__end_of_Mode3:
  4569  0011B6                     	signat	_Mode3,89
  4570                           	global	_Mode2
  4571                           
  4572 ;; *************** function _Mode2 *****************
  4573 ;; Defined at:
  4574 ;;		line 241 in file "main.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;		None
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;		None
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      void 
  4581 ;; Registers used:
  4582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4588 ;;      Params:         0       0       0       0       0       0       0
  4589 ;;      Locals:         0       0       0       0       0       0       0
  4590 ;;      Temps:          0       0       0       0       0       0       0
  4591 ;;      Totals:         0       0       0       0       0       0       0
  4592 ;;Total ram usage:        0 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    8
  4595 ;; This function calls:
  4596 ;;		_ClearBuffer
  4597 ;;		_GetString
  4598 ;;		_UART_Write_Text
  4599 ;;		_strstr
  4600 ;; This function is called by:
  4601 ;;		_main
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           psect	text11,class=CODE,space=0,reloc=2,group=0
  4605                           	line	241
  4606                           global __ptext11
  4607                           __ptext11:
  4608  0016A0                     psect	text11
  4609                           	file	"main.c"
  4610                           	line	241
  4611                           	global	__size_of_Mode2
  4612                           	__size_of_Mode2	equ	__end_of_Mode2-_Mode2
  4613  0000                     	
  4614                           _Mode2:
  4615  0016A0                     ;incstack = 0
  4616                           	opt	stack 22
  4617                           	line	242
  4618                           	
  4619                           l2797:
  4620  0016A0                     ;main.c: 242:     ClearBuffer();
  4621                           	call	_ClearBuffer	;wreg free
  4622  0016A0  EC41  F00D         	line	243
  4623                           	
  4624                           l2799:
  4625  0016A4                     ;main.c: 243:     led_mode = 1;
  4626                           	movlw	high(01h)
  4627  0016A4  0E00               	movwf	((c:_led_mode+1)),c
  4628  0016A6  6E37               	movlw	low(01h)
  4629  0016A8  0E01               	movwf	((c:_led_mode)),c
  4630  0016AA  6E36               	line	245
  4631                           	
  4632                           l2801:
  4633  0016AC                     ;main.c: 245:     UART_Write_Text("Mode2");
  4634                           		movlw	low(STR_15)
  4635  0016AC  0E0F               	movlb	0	; () banked
  4636  0016AE  0100               	movwf	((UART_Write_Text@text))&0ffh
  4637  0016B0  6FF9               	movlw	high(STR_15)
  4638  0016B2  0E06               	movwf	((UART_Write_Text@text+1))&0ffh
  4639  0016B4  6FFA               
  4640                           	call	_UART_Write_Text	;wreg free
  4641  0016B6  EC03  F00C         	line	246
  4642                           	
  4643                           l2803:
  4644  0016BA                     ;main.c: 246:     CCP1CON = 255;
  4645                           	setf	((c:4029)),c	;volatile
  4646  0016BA  68BD               	line	247
  4647                           	
  4648                           l2805:
  4649  0016BC                     ;main.c: 247:     TRISCbits.RC2 = 0;
  4650                           	bcf	((c:3988)),c,2	;volatile
  4651  0016BC  9494               	line	248
  4652                           	
  4653                           l2807:
  4654  0016BE                     ;main.c: 248:     TRISDbits.RD5 = 0;
  4655                           	bcf	((c:3989)),c,5	;volatile
  4656  0016BE  9A95               	line	249
  4657                           	
  4658                           l2809:
  4659  0016C0                     ;main.c: 249:     TRISDbits.RD6 = 0;
  4660                           	bcf	((c:3989)),c,6	;volatile
  4661  0016C0  9C95               	line	250
  4662                           	
  4663                           l2811:
  4664  0016C2                     ;main.c: 250:     TRISDbits.RD7 = 0;
  4665                           	bcf	((c:3989)),c,7	;volatile
  4666  0016C2  9E95               	line	251
  4667                           	
  4668                           l2813:
  4669  0016C4                     ;main.c: 251:     T3CONbits.RD16 = 1;
  4670                           	bsf	((c:4017)),c,7	;volatile
  4671  0016C4  8EB1               	line	252
  4672                           	
  4673                           l2815:
  4674  0016C6                     ;main.c: 252:     T3CONbits.T3CKPS = 3;
  4675                           	movlw	(03h & ((1<<2)-1))<<4
  4676  0016C6  0E30               	iorwf	((c:4017)),c	;volatile
  4677  0016C8  12B1               	line	253
  4678                           	
  4679                           l2817:
  4680  0016CA                     ;main.c: 253:     T3CONbits.TMR3CS = 0;
  4681                           	bcf	((c:4017)),c,1	;volatile
  4682  0016CA  92B1               	line	254
  4683                           	
  4684                           l2819:
  4685  0016CC                     ;main.c: 254:     PIR2bits.TMR3IF = 0;
  4686                           	bcf	((c:4001)),c,1	;volatile
  4687  0016CC  92A1               	line	255
  4688                           	
  4689                           l2821:
  4690  0016CE                     ;main.c: 255:     PIE2bits.TMR3IE = 1;
  4691                           	bsf	((c:4000)),c,1	;volatile
  4692  0016CE  82A0               	line	256
  4693                           	
  4694                           l2823:
  4695  0016D0                     ;main.c: 256:     IPR2bits.TMR3IP = 1;
  4696                           	bsf	((c:4002)),c,1	;volatile
  4697  0016D0  82A2               	line	257
  4698                           	
  4699                           l2825:
  4700  0016D2                     ;main.c: 257:     TMR3 = 34285;
  4701                           	movlw	high(085EDh)
  4702  0016D2  0E85               	movwf	((c:4018+1)),c	;volatile
  4703  0016D4  6EB3               	movlw	low(085EDh)
  4704  0016D6  0EED               	movwf	((c:4018)),c	;volatile
  4705  0016D8  6EB2               	line	259
  4706                           	
  4707                           l2827:
  4708  0016DA                     ;main.c: 259:     if(music_playing == 0){
  4709                           	movf	((c:_music_playing)),c,w
  4710  0016DA  503C               iorwf	((c:_music_playing+1)),c,w
  4711  0016DC  103D               	btfss	status,2
  4712  0016DE  A4D8               	goto	u2541
  4713  0016E0  EF74  F00B         	goto	u2540
  4714  0016E4  EF76  F00B         
  4715                           u2541:
  4716  0016E8                     	goto	l2833
  4717  0016E8  EF7D  F00B         u2540:
  4718  0016EC                     	line	260
  4719                           	
  4720                           l2829:
  4721  0016EC                     ;main.c: 260:         T2CONbits.TMR2ON = 1;
  4722                           	bsf	((c:4042)),c,2	;volatile
  4723  0016EC  84CA               	line	261
  4724                           	
  4725                           l2831:
  4726  0016EE                     ;main.c: 261:         T2CONbits.T2CKPS = 3;
  4727                           	movlw	(03h & ((1<<2)-1))<<0
  4728  0016EE  0E03               	iorwf	((c:4042)),c	;volatile
  4729  0016F0  12CA               	line	262
  4730                           ;main.c: 262:         PR2 = 100;
  4731                           	movlw	low(064h)
  4732  0016F2  0E64               	movwf	((c:4043)),c	;volatile
  4733  0016F4  6ECB               	goto	l2833
  4734  0016F6  EF7D  F00B         	line	263
  4735                           ;main.c: 263:     }
  4736                           	
  4737                           l280:
  4738  0016FA                     	line	264
  4739                           	
  4740                           l2833:
  4741  0016FA                     ;main.c: 264:     led_breath = PR2;
  4742                           	movff	(c:4043),(c:_led_breath)	;volatile
  4743  0016FA  CFCB F03A          	clrf	((c:_led_breath+1)),c
  4744  0016FE  6A3B               	line	265
  4745                           	
  4746                           l2835:
  4747  001700                     ;main.c: 265:     T3CONbits.TMR3ON = 1;
  4748                           	bsf	((c:4017)),c,0	;volatile
  4749  001700  80B1               	goto	l2837
  4750  001702  EF83  F00B         	line	268
  4751                           ;main.c: 268:     while(1){
  4752                           	
  4753                           l281:
  4754  001706                     	line	269
  4755                           	
  4756                           l2837:
  4757  001706                     ;main.c: 269:         if(strstr(GetString(), "q") != ((void*)0)) {
  4758                           	call	_GetString	;wreg free
  4759  001706  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  4760  00170A  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  4761  00170E  C0F9  F180         		movlw	low(STR_16)
  4762  001712  0E37               	movlb	1	; () banked
  4763  001714  0101               	movwf	((strstr@n))&0ffh
  4764  001716  6F81               	movlw	high(STR_16)
  4765  001718  0E06               	movwf	((strstr@n+1))&0ffh
  4766  00171A  6F82               
  4767                           	call	_strstr	;wreg free
  4768  00171C  EC71  F00A         	movlb	1	; () banked
  4769  001720  0101               	movf	(0+?_strstr)&0ffh,w
  4770  001722  517F               iorwf	(1+?_strstr)&0ffh,w
  4771  001724  1180               	btfsc	status,2
  4772  001726  B4D8               	goto	u2551
  4773  001728  EF98  F00B         	goto	u2550
  4774  00172C  EF9A  F00B         
  4775                           u2551:
  4776  001730                     	goto	l2837
  4777  001730  EF83  F00B         u2550:
  4778  001734                     	line	270
  4779                           	
  4780                           l2839:; BSR set to: 1
  4781  001734                     
  4782                           ;main.c: 270:             if(music_playing == 0)
  4783                           	movf	((c:_music_playing)),c,w
  4784  001734  503C               iorwf	((c:_music_playing+1)),c,w
  4785  001736  103D               	btfss	status,2
  4786  001738  A4D8               	goto	u2561
  4787  00173A  EFA1  F00B         	goto	u2560
  4788  00173E  EFA3  F00B         
  4789                           u2561:
  4790  001742                     	goto	l283
  4791  001742  EFA4  F00B         u2560:
  4792  001746                     	line	271
  4793                           	
  4794                           l2841:; BSR set to: 1
  4795  001746                     
  4796                           ;main.c: 271:                 T2CONbits.TMR2ON = 0;
  4797                           	bcf	((c:4042)),c,2	;volatile
  4798  001746  94CA               	
  4799                           l283:; BSR set to: 1
  4800  001748                     
  4801                           	line	272
  4802                           ;main.c: 272:             RC2 = 0;
  4803                           	bcf	c:(31762/8),(31762)&7	;volatile
  4804  001748  9482               	line	273
  4805                           ;main.c: 273:             RD5 = 0;
  4806                           	bcf	c:(31773/8),(31773)&7	;volatile
  4807  00174A  9A83               	line	274
  4808                           ;main.c: 274:             RD6 = 0;
  4809                           	bcf	c:(31774/8),(31774)&7	;volatile
  4810  00174C  9C83               	line	275
  4811                           ;main.c: 275:             RD7 = 0;
  4812                           	bcf	c:(31775/8),(31775)&7	;volatile
  4813  00174E  9E83               	line	276
  4814                           ;main.c: 276:             T3CONbits.TMR3ON = 0;
  4815                           	bcf	((c:4017)),c,0	;volatile
  4816  001750  90B1               	line	277
  4817                           ;main.c: 277:             PIR2bits.TMR3IF = 0;
  4818                           	bcf	((c:4001)),c,1	;volatile
  4819  001752  92A1               	line	278
  4820                           ;main.c: 278:             PIE2bits.TMR3IE = 0;
  4821                           	bcf	((c:4000)),c,1	;volatile
  4822  001754  92A0               	line	279
  4823                           ;main.c: 279:             IPR2bits.TMR3IP = 0;
  4824                           	bcf	((c:4002)),c,1	;volatile
  4825  001756  92A2               	line	280
  4826                           	
  4827                           l2843:; BSR set to: 1
  4828  001758                     
  4829                           ;main.c: 280:             ClearBuffer();
  4830                           	call	_ClearBuffer	;wreg free
  4831  001758  EC41  F00D         	line	281
  4832                           ;main.c: 281:             break;
  4833                           	goto	l2845
  4834  00175C  EFB4  F00B         	line	282
  4835                           ;main.c: 282:         }
  4836                           	
  4837                           l282:
  4838  001760                     	goto	l2837
  4839  001760  EF83  F00B         	line	283
  4840                           ;main.c: 283:     }
  4841                           	
  4842                           l285:
  4843  001764                     	goto	l2837
  4844  001764  EF83  F00B         	
  4845                           l284:
  4846  001768                     	line	284
  4847                           	
  4848                           l2845:
  4849  001768                     ;main.c: 284:     ClearBuffer();
  4850                           	call	_ClearBuffer	;wreg free
  4851  001768  EC41  F00D         	line	285
  4852                           	
  4853                           l286:
  4854  00176C                     	return	;funcret
  4855  00176C  0012               	opt stack 0
  4856                           GLOBAL	__end_of_Mode2
  4857                           	__end_of_Mode2:
  4858  00176E                     	signat	_Mode2,89
  4859                           	global	_Mode1
  4860                           
  4861 ;; *************** function _Mode1 *****************
  4862 ;; Defined at:
  4863 ;;		line 104 in file "main.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4877 ;;      Params:         0       0       0       0       0       0       0
  4878 ;;      Locals:         0       0       0       0       0       0       0
  4879 ;;      Temps:          0       0       0       0       0       0       0
  4880 ;;      Totals:         0       0       0       0       0       0       0
  4881 ;;Total ram usage:        0 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; Hardware stack levels required when called:    8
  4884 ;; This function calls:
  4885 ;;		_ClearBuffer
  4886 ;;		_GetString
  4887 ;;		_UART_Write_Text
  4888 ;;		_strstr
  4889 ;; This function is called by:
  4890 ;;		_main
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           psect	text12,class=CODE,space=0,reloc=2,group=0
  4894                           	line	104
  4895                           global __ptext12
  4896                           __ptext12:
  4897  00063C                     psect	text12
  4898                           	file	"main.c"
  4899                           	line	104
  4900                           	global	__size_of_Mode1
  4901                           	__size_of_Mode1	equ	__end_of_Mode1-_Mode1
  4902  0000                     	
  4903                           _Mode1:
  4904  00063C                     ;incstack = 0
  4905                           	opt	stack 22
  4906                           	line	106
  4907                           	
  4908                           l2605:
  4909  00063C                     ;main.c: 106:     ClearBuffer();
  4910                           	call	_ClearBuffer	;wreg free
  4911  00063C  EC41  F00D         	line	107
  4912                           	
  4913                           l2607:
  4914  000640                     ;main.c: 107:     led_mode = 0;
  4915                           	movlw	high(0)
  4916  000640  0E00               	movwf	((c:_led_mode+1)),c
  4917  000642  6E37               	movlw	low(0)
  4918  000644  0E00               	movwf	((c:_led_mode)),c
  4919  000646  6E36               	line	108
  4920                           	
  4921                           l2609:
  4922  000648                     ;main.c: 108:     UART_Write_Text("Mode1 ");
  4923                           		movlw	low(STR_1)
  4924  000648  0E01               	movlb	0	; () banked
  4925  00064A  0100               	movwf	((UART_Write_Text@text))&0ffh
  4926  00064C  6FF9               	movlw	high(STR_1)
  4927  00064E  0E06               	movwf	((UART_Write_Text@text+1))&0ffh
  4928  000650  6FFA               
  4929                           	call	_UART_Write_Text	;wreg free
  4930  000652  EC03  F00C         	line	109
  4931                           	
  4932                           l2611:
  4933  000656                     ;main.c: 109:     T3CONbits.RD16 = 1;
  4934                           	bsf	((c:4017)),c,7	;volatile
  4935  000656  8EB1               	line	110
  4936                           	
  4937                           l2613:
  4938  000658                     ;main.c: 110:     T3CONbits.T3CKPS = 3;
  4939                           	movlw	(03h & ((1<<2)-1))<<4
  4940  000658  0E30               	iorwf	((c:4017)),c	;volatile
  4941  00065A  12B1               	line	111
  4942                           	
  4943                           l2615:
  4944  00065C                     ;main.c: 111:     T3CONbits.TMR3CS = 0;
  4945                           	bcf	((c:4017)),c,1	;volatile
  4946  00065C  92B1               	line	112
  4947                           	
  4948                           l2617:
  4949  00065E                     ;main.c: 112:     PIR2bits.TMR3IF = 0;
  4950                           	bcf	((c:4001)),c,1	;volatile
  4951  00065E  92A1               	line	113
  4952                           	
  4953                           l2619:
  4954  000660                     ;main.c: 113:     PIE2bits.TMR3IE = 1;
  4955                           	bsf	((c:4000)),c,1	;volatile
  4956  000660  82A0               	line	114
  4957                           	
  4958                           l2621:
  4959  000662                     ;main.c: 114:     IPR2bits.TMR3IP = 1;
  4960                           	bsf	((c:4002)),c,1	;volatile
  4961  000662  82A2               	line	115
  4962                           	
  4963                           l2623:
  4964  000664                     ;main.c: 115:     TMR3 = 34285;
  4965                           	movlw	high(085EDh)
  4966  000664  0E85               	movwf	((c:4018+1)),c	;volatile
  4967  000666  6EB3               	movlw	low(085EDh)
  4968  000668  0EED               	movwf	((c:4018)),c	;volatile
  4969  00066A  6EB2               	goto	l2625
  4970  00066C  EF38  F003         	line	116
  4971                           ;main.c: 116:     while(1){
  4972                           	
  4973                           l238:
  4974  000670                     	line	117
  4975                           	
  4976                           l2625:
  4977  000670                     ;main.c: 117:         if(strstr(GetString(), "1") != ((void*)0)) {
  4978                           	call	_GetString	;wreg free
  4979  000670  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  4980  000674  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  4981  000678  C0F9  F180         		movlw	low(STR_2)
  4982  00067C  0E27               	movlb	1	; () banked
  4983  00067E  0101               	movwf	((strstr@n))&0ffh
  4984  000680  6F81               	movlw	high(STR_2)
  4985  000682  0E06               	movwf	((strstr@n+1))&0ffh
  4986  000684  6F82               
  4987                           	call	_strstr	;wreg free
  4988  000686  EC71  F00A         	movlb	1	; () banked
  4989  00068A  0101               	movf	(0+?_strstr)&0ffh,w
  4990  00068C  517F               iorwf	(1+?_strstr)&0ffh,w
  4991  00068E  1180               	btfsc	status,2
  4992  000690  B4D8               	goto	u2371
  4993  000692  EF4D  F003         	goto	u2370
  4994  000696  EF4F  F003         
  4995                           u2371:
  4996  00069A                     	goto	l2637
  4997  00069A  EF5B  F003         u2370:
  4998  00069E                     	line	118
  4999                           	
  5000                           l2627:; BSR set to: 1
  5001  00069E                     
  5002                           ;main.c: 118:             led_num = 1;
  5003                           	movlw	high(01h)
  5004  00069E  0E00               	movwf	((c:_led_num+1)),c
  5005  0006A0  6E43               	movlw	low(01h)
  5006  0006A2  0E01               	movwf	((c:_led_num)),c
  5007  0006A4  6E42               	line	119
  5008                           	
  5009                           l2629:; BSR set to: 1
  5010  0006A6                     
  5011                           ;main.c: 119:             TRISCbits.RC2 = 0;
  5012                           	bcf	((c:3988)),c,2	;volatile
  5013  0006A6  9494               	line	120
  5014                           	
  5015                           l2631:; BSR set to: 1
  5016  0006A8                     
  5017                           ;main.c: 120:             RC2 = 0;
  5018                           	bcf	c:(31762/8),(31762)&7	;volatile
  5019  0006A8  9482               	line	121
  5020                           	
  5021                           l2633:; BSR set to: 1
  5022  0006AA                     
  5023                           ;main.c: 121:             ClearBuffer();
  5024                           	call	_ClearBuffer	;wreg free
  5025  0006AA  EC41  F00D         	line	122
  5026                           ;main.c: 122:             break;
  5027                           	goto	l2695
  5028  0006AE  EFDA  F003         	line	123
  5029                           	
  5030                           l2635:
  5031  0006B2                     ;main.c: 123:         }
  5032                           	goto	l2625
  5033  0006B2  EF38  F003         	line	124
  5034                           ;main.c: 124:         else if(strstr(GetString(), "2") != ((void*)0)) {
  5035                           	
  5036                           l239:
  5037  0006B6                     	
  5038                           l2637:
  5039  0006B6                     	call	_GetString	;wreg free
  5040  0006B6  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  5041  0006BA  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  5042  0006BE  C0F9  F180         		movlw	low(STR_3)
  5043  0006C2  0E13               	movlb	1	; () banked
  5044  0006C4  0101               	movwf	((strstr@n))&0ffh
  5045  0006C6  6F81               	movlw	high(STR_3)
  5046  0006C8  0E06               	movwf	((strstr@n+1))&0ffh
  5047  0006CA  6F82               
  5048                           	call	_strstr	;wreg free
  5049  0006CC  EC71  F00A         	movlb	1	; () banked
  5050  0006D0  0101               	movf	(0+?_strstr)&0ffh,w
  5051  0006D2  517F               iorwf	(1+?_strstr)&0ffh,w
  5052  0006D4  1180               	btfsc	status,2
  5053  0006D6  B4D8               	goto	u2381
  5054  0006D8  EF70  F003         	goto	u2380
  5055  0006DC  EF72  F003         
  5056                           u2381:
  5057  0006E0                     	goto	l2653
  5058  0006E0  EF80  F003         u2380:
  5059  0006E4                     	line	125
  5060                           	
  5061                           l2639:; BSR set to: 1
  5062  0006E4                     
  5063                           ;main.c: 125:             led_num = 2;
  5064                           	movlw	high(02h)
  5065  0006E4  0E00               	movwf	((c:_led_num+1)),c
  5066  0006E6  6E43               	movlw	low(02h)
  5067  0006E8  0E02               	movwf	((c:_led_num)),c
  5068  0006EA  6E42               	line	126
  5069                           	
  5070                           l2641:; BSR set to: 1
  5071  0006EC                     
  5072                           ;main.c: 126:             TRISCbits.RC2 = 0;
  5073                           	bcf	((c:3988)),c,2	;volatile
  5074  0006EC  9494               	line	127
  5075                           	
  5076                           l2643:; BSR set to: 1
  5077  0006EE                     
  5078                           ;main.c: 127:             RC2 = 0;
  5079                           	bcf	c:(31762/8),(31762)&7	;volatile
  5080  0006EE  9482               	line	128
  5081                           	
  5082                           l2645:; BSR set to: 1
  5083  0006F0                     
  5084                           ;main.c: 128:             TRISDbits.RD5 = 0;
  5085                           	bcf	((c:3989)),c,5	;volatile
  5086  0006F0  9A95               	line	129
  5087                           	
  5088                           l2647:; BSR set to: 1
  5089  0006F2                     
  5090                           ;main.c: 129:             RD5 = 0;
  5091                           	bcf	c:(31773/8),(31773)&7	;volatile
  5092  0006F2  9A83               	line	130
  5093                           	
  5094                           l2649:; BSR set to: 1
  5095  0006F4                     
  5096                           ;main.c: 130:             ClearBuffer();
  5097                           	call	_ClearBuffer	;wreg free
  5098  0006F4  EC41  F00D         	line	131
  5099                           ;main.c: 131:             break;
  5100                           	goto	l2695
  5101  0006F8  EFDA  F003         	line	132
  5102                           	
  5103                           l2651:
  5104  0006FC                     ;main.c: 132:         }
  5105                           	goto	l2625
  5106  0006FC  EF38  F003         	line	133
  5107                           ;main.c: 133:         else if(strstr(GetString(), "3") != ((void*)0)) {
  5108                           	
  5109                           l242:
  5110  000700                     	
  5111                           l2653:
  5112  000700                     	call	_GetString	;wreg free
  5113  000700  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  5114  000704  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  5115  000708  C0F9  F180         		movlw	low(STR_4)
  5116  00070C  0E29               	movlb	1	; () banked
  5117  00070E  0101               	movwf	((strstr@n))&0ffh
  5118  000710  6F81               	movlw	high(STR_4)
  5119  000712  0E06               	movwf	((strstr@n+1))&0ffh
  5120  000714  6F82               
  5121                           	call	_strstr	;wreg free
  5122  000716  EC71  F00A         	movlb	1	; () banked
  5123  00071A  0101               	movf	(0+?_strstr)&0ffh,w
  5124  00071C  517F               iorwf	(1+?_strstr)&0ffh,w
  5125  00071E  1180               	btfsc	status,2
  5126  000720  B4D8               	goto	u2391
  5127  000722  EF95  F003         	goto	u2390
  5128  000726  EF97  F003         
  5129                           u2391:
  5130  00072A                     	goto	l2673
  5131  00072A  EFA7  F003         u2390:
  5132  00072E                     	line	134
  5133                           	
  5134                           l2655:; BSR set to: 1
  5135  00072E                     
  5136                           ;main.c: 134:             led_num = 3;
  5137                           	movlw	high(03h)
  5138  00072E  0E00               	movwf	((c:_led_num+1)),c
  5139  000730  6E43               	movlw	low(03h)
  5140  000732  0E03               	movwf	((c:_led_num)),c
  5141  000734  6E42               	line	135
  5142                           	
  5143                           l2657:; BSR set to: 1
  5144  000736                     
  5145                           ;main.c: 135:             TRISCbits.RC2 = 0;
  5146                           	bcf	((c:3988)),c,2	;volatile
  5147  000736  9494               	line	136
  5148                           	
  5149                           l2659:; BSR set to: 1
  5150  000738                     
  5151                           ;main.c: 136:             RC2 = 0;
  5152                           	bcf	c:(31762/8),(31762)&7	;volatile
  5153  000738  9482               	line	137
  5154                           	
  5155                           l2661:; BSR set to: 1
  5156  00073A                     
  5157                           ;main.c: 137:             TRISDbits.RD5 = 0;
  5158                           	bcf	((c:3989)),c,5	;volatile
  5159  00073A  9A95               	line	138
  5160                           	
  5161                           l2663:; BSR set to: 1
  5162  00073C                     
  5163                           ;main.c: 138:             RD5 = 0;
  5164                           	bcf	c:(31773/8),(31773)&7	;volatile
  5165  00073C  9A83               	line	139
  5166                           	
  5167                           l2665:; BSR set to: 1
  5168  00073E                     
  5169                           ;main.c: 139:             TRISDbits.RD6 = 0;
  5170                           	bcf	((c:3989)),c,6	;volatile
  5171  00073E  9C95               	line	140
  5172                           	
  5173                           l2667:; BSR set to: 1
  5174  000740                     
  5175                           ;main.c: 140:             RD6 = 0;
  5176                           	bcf	c:(31774/8),(31774)&7	;volatile
  5177  000740  9C83               	line	141
  5178                           	
  5179                           l2669:; BSR set to: 1
  5180  000742                     
  5181                           ;main.c: 141:             ClearBuffer();
  5182                           	call	_ClearBuffer	;wreg free
  5183  000742  EC41  F00D         	line	142
  5184                           ;main.c: 142:             break;
  5185                           	goto	l2695
  5186  000746  EFDA  F003         	line	143
  5187                           	
  5188                           l2671:
  5189  00074A                     ;main.c: 143:         }
  5190                           	goto	l2625
  5191  00074A  EF38  F003         	line	144
  5192                           ;main.c: 144:         else if(strstr(GetString(), "4") != ((void*)0)) {
  5193                           	
  5194                           l244:
  5195  00074E                     	
  5196                           l2673:
  5197  00074E                     	call	_GetString	;wreg free
  5198  00074E  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  5199  000752  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  5200  000756  C0F9  F180         		movlw	low(STR_5)
  5201  00075A  0E2B               	movlb	1	; () banked
  5202  00075C  0101               	movwf	((strstr@n))&0ffh
  5203  00075E  6F81               	movlw	high(STR_5)
  5204  000760  0E06               	movwf	((strstr@n+1))&0ffh
  5205  000762  6F82               
  5206                           	call	_strstr	;wreg free
  5207  000764  EC71  F00A         	movlb	1	; () banked
  5208  000768  0101               	movf	(0+?_strstr)&0ffh,w
  5209  00076A  517F               iorwf	(1+?_strstr)&0ffh,w
  5210  00076C  1180               	btfsc	status,2
  5211  00076E  B4D8               	goto	u2401
  5212  000770  EFBC  F003         	goto	u2400
  5213  000774  EFBE  F003         
  5214                           u2401:
  5215  000778                     	goto	l2625
  5216  000778  EF38  F003         u2400:
  5217  00077C                     	line	145
  5218                           	
  5219                           l2675:; BSR set to: 1
  5220  00077C                     
  5221                           ;main.c: 145:             led_num = 4;
  5222                           	movlw	high(04h)
  5223  00077C  0E00               	movwf	((c:_led_num+1)),c
  5224  00077E  6E43               	movlw	low(04h)
  5225  000780  0E04               	movwf	((c:_led_num)),c
  5226  000782  6E42               	line	146
  5227                           	
  5228                           l2677:; BSR set to: 1
  5229  000784                     
  5230                           ;main.c: 146:             TRISCbits.RC2 = 0;
  5231                           	bcf	((c:3988)),c,2	;volatile
  5232  000784  9494               	line	147
  5233                           	
  5234                           l2679:; BSR set to: 1
  5235  000786                     
  5236                           ;main.c: 147:             RC2 = 0;
  5237                           	bcf	c:(31762/8),(31762)&7	;volatile
  5238  000786  9482               	line	148
  5239                           	
  5240                           l2681:; BSR set to: 1
  5241  000788                     
  5242                           ;main.c: 148:             TRISDbits.RD5 = 0;
  5243                           	bcf	((c:3989)),c,5	;volatile
  5244  000788  9A95               	line	149
  5245                           	
  5246                           l2683:; BSR set to: 1
  5247  00078A                     
  5248                           ;main.c: 149:             RD5 = 0;
  5249                           	bcf	c:(31773/8),(31773)&7	;volatile
  5250  00078A  9A83               	line	150
  5251                           	
  5252                           l2685:; BSR set to: 1
  5253  00078C                     
  5254                           ;main.c: 150:             TRISDbits.RD6 = 0;
  5255                           	bcf	((c:3989)),c,6	;volatile
  5256  00078C  9C95               	line	151
  5257                           	
  5258                           l2687:; BSR set to: 1
  5259  00078E                     
  5260                           ;main.c: 151:             RD6 = 0;
  5261                           	bcf	c:(31774/8),(31774)&7	;volatile
  5262  00078E  9C83               	line	152
  5263                           	
  5264                           l2689:; BSR set to: 1
  5265  000790                     
  5266                           ;main.c: 152:             TRISDbits.RD7 = 0;
  5267                           	bcf	((c:3989)),c,7	;volatile
  5268  000790  9E95               	line	153
  5269                           	
  5270                           l2691:; BSR set to: 1
  5271  000792                     
  5272                           ;main.c: 153:             RD7 = 0;
  5273                           	bcf	c:(31775/8),(31775)&7	;volatile
  5274  000792  9E83               	line	154
  5275                           	
  5276                           l2693:; BSR set to: 1
  5277  000794                     
  5278                           ;main.c: 154:             ClearBuffer();
  5279                           	call	_ClearBuffer	;wreg free
  5280  000794  EC41  F00D         	line	155
  5281                           ;main.c: 155:             break;
  5282                           	goto	l2695
  5283  000798  EFDA  F003         	line	156
  5284                           ;main.c: 156:         }
  5285                           	
  5286                           l246:
  5287  00079C                     	goto	l2625
  5288  00079C  EF38  F003         	
  5289                           l245:
  5290  0007A0                     	goto	l2625
  5291  0007A0  EF38  F003         	
  5292                           l243:
  5293  0007A4                     	goto	l2625
  5294  0007A4  EF38  F003         	
  5295                           l241:
  5296  0007A8                     	goto	l2625
  5297  0007A8  EF38  F003         	line	157
  5298                           ;main.c: 157:     }
  5299                           	
  5300                           l247:
  5301  0007AC                     	goto	l2625
  5302  0007AC  EF38  F003         	
  5303                           l240:
  5304  0007B0                     	goto	l2695
  5305  0007B0  EFDA  F003         	line	158
  5306                           ;main.c: 158:     while(1){
  5307                           	
  5308                           l248:
  5309  0007B4                     	line	159
  5310                           	
  5311                           l2695:
  5312  0007B4                     ;main.c: 159:         if(strstr(GetString(), "1") != ((void*)0)){
  5313                           	call	_GetString	;wreg free
  5314  0007B4  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  5315  0007B8  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  5316  0007BC  C0F9  F180         		movlw	low(STR_6)
  5317  0007C0  0E27               	movlb	1	; () banked
  5318  0007C2  0101               	movwf	((strstr@n))&0ffh
  5319  0007C4  6F81               	movlw	high(STR_6)
  5320  0007C6  0E06               	movwf	((strstr@n+1))&0ffh
  5321  0007C8  6F82               
  5322                           	call	_strstr	;wreg free
  5323  0007CA  EC71  F00A         	movlb	1	; () banked
  5324  0007CE  0101               	movf	(0+?_strstr)&0ffh,w
  5325  0007D0  517F               iorwf	(1+?_strstr)&0ffh,w
  5326  0007D2  1180               	btfsc	status,2
  5327  0007D4  B4D8               	goto	u2411
  5328  0007D6  EFEF  F003         	goto	u2410
  5329  0007DA  EFF1  F003         
  5330                           u2411:
  5331  0007DE                     	goto	l2705
  5332  0007DE  EFFC  F003         u2410:
  5333  0007E2                     	line	160
  5334                           	
  5335                           l2697:; BSR set to: 1
  5336  0007E2                     
  5337                           ;main.c: 160:             led_interval = 1;
  5338                           	movlw	high(01h)
  5339  0007E2  0E00               	movwf	((c:_led_interval+1)),c
  5340  0007E4  6E41               	movlw	low(01h)
  5341  0007E6  0E01               	movwf	((c:_led_interval)),c
  5342  0007E8  6E40               	line	161
  5343                           	
  5344                           l2699:; BSR set to: 1
  5345  0007EA                     
  5346                           ;main.c: 161:             T3CONbits.TMR3ON = 1;
  5347                           	bsf	((c:4017)),c,0	;volatile
  5348  0007EA  80B1               	line	162
  5349                           	
  5350                           l2701:; BSR set to: 1
  5351  0007EC                     
  5352                           ;main.c: 162:             ClearBuffer();
  5353                           	call	_ClearBuffer	;wreg free
  5354  0007EC  EC41  F00D         	line	163
  5355                           ;main.c: 163:             break;
  5356                           	goto	l2773
  5357  0007F0  EFFC  F004         	line	164
  5358                           	
  5359                           l2703:
  5360  0007F4                     ;main.c: 164:         }
  5361                           	goto	l2695
  5362  0007F4  EFDA  F003         	line	165
  5363                           ;main.c: 165:         else if(strstr(GetString(), "2") != ((void*)0)){
  5364                           	
  5365                           l249:
  5366  0007F8                     	
  5367                           l2705:
  5368  0007F8                     	call	_GetString	;wreg free
  5369  0007F8  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  5370  0007FC  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  5371  000800  C0F9  F180         		movlw	low(STR_7)
  5372  000804  0E13               	movlb	1	; () banked
  5373  000806  0101               	movwf	((strstr@n))&0ffh
  5374  000808  6F81               	movlw	high(STR_7)
  5375  00080A  0E06               	movwf	((strstr@n+1))&0ffh
  5376  00080C  6F82               
  5377                           	call	_strstr	;wreg free
  5378  00080E  EC71  F00A         	movlb	1	; () banked
  5379  000812  0101               	movf	(0+?_strstr)&0ffh,w
  5380  000814  517F               iorwf	(1+?_strstr)&0ffh,w
  5381  000816  1180               	btfsc	status,2
  5382  000818  B4D8               	goto	u2421
  5383  00081A  EF11  F004         	goto	u2420
  5384  00081E  EF13  F004         
  5385                           u2421:
  5386  000822                     	goto	l2715
  5387  000822  EF1E  F004         u2420:
  5388  000826                     	line	166
  5389                           	
  5390                           l2707:; BSR set to: 1
  5391  000826                     
  5392                           ;main.c: 166:             led_interval = 2;
  5393                           	movlw	high(02h)
  5394  000826  0E00               	movwf	((c:_led_interval+1)),c
  5395  000828  6E41               	movlw	low(02h)
  5396  00082A  0E02               	movwf	((c:_led_interval)),c
  5397  00082C  6E40               	line	167
  5398                           	
  5399                           l2709:; BSR set to: 1
  5400  00082E                     
  5401                           ;main.c: 167:             T3CONbits.TMR3ON = 1;
  5402                           	bsf	((c:4017)),c,0	;volatile
  5403  00082E  80B1               	line	168
  5404                           	
  5405                           l2711:; BSR set to: 1
  5406  000830                     
  5407                           ;main.c: 168:             ClearBuffer();
  5408                           	call	_ClearBuffer	;wreg free
  5409  000830  EC41  F00D         	line	169
  5410                           ;main.c: 169:             break;
  5411                           	goto	l2773
  5412  000834  EFFC  F004         	line	170
  5413                           	
  5414                           l2713:
  5415  000838                     ;main.c: 170:         }
  5416                           	goto	l2695
  5417  000838  EFDA  F003         	line	171
  5418                           ;main.c: 171:         else if(strstr(GetString(), "3") != ((void*)0)){
  5419                           	
  5420                           l252:
  5421  00083C                     	
  5422                           l2715:
  5423  00083C                     	call	_GetString	;wreg free
  5424  00083C  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  5425  000840  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  5426  000844  C0F9  F180         		movlw	low(STR_8)
  5427  000848  0E29               	movlb	1	; () banked
  5428  00084A  0101               	movwf	((strstr@n))&0ffh
  5429  00084C  6F81               	movlw	high(STR_8)
  5430  00084E  0E06               	movwf	((strstr@n+1))&0ffh
  5431  000850  6F82               
  5432                           	call	_strstr	;wreg free
  5433  000852  EC71  F00A         	movlb	1	; () banked
  5434  000856  0101               	movf	(0+?_strstr)&0ffh,w
  5435  000858  517F               iorwf	(1+?_strstr)&0ffh,w
  5436  00085A  1180               	btfsc	status,2
  5437  00085C  B4D8               	goto	u2431
  5438  00085E  EF33  F004         	goto	u2430
  5439  000862  EF35  F004         
  5440                           u2431:
  5441  000866                     	goto	l2725
  5442  000866  EF40  F004         u2430:
  5443  00086A                     	line	172
  5444                           	
  5445                           l2717:; BSR set to: 1
  5446  00086A                     
  5447                           ;main.c: 172:             led_interval = 3;
  5448                           	movlw	high(03h)
  5449  00086A  0E00               	movwf	((c:_led_interval+1)),c
  5450  00086C  6E41               	movlw	low(03h)
  5451  00086E  0E03               	movwf	((c:_led_interval)),c
  5452  000870  6E40               	line	173
  5453                           	
  5454                           l2719:; BSR set to: 1
  5455  000872                     
  5456                           ;main.c: 173:             T3CONbits.TMR3ON = 1;
  5457                           	bsf	((c:4017)),c,0	;volatile
  5458  000872  80B1               	line	174
  5459                           	
  5460                           l2721:; BSR set to: 1
  5461  000874                     
  5462                           ;main.c: 174:             ClearBuffer();
  5463                           	call	_ClearBuffer	;wreg free
  5464  000874  EC41  F00D         	line	175
  5465                           ;main.c: 175:             break;
  5466                           	goto	l2773
  5467  000878  EFFC  F004         	line	176
  5468                           	
  5469                           l2723:
  5470  00087C                     ;main.c: 176:         }
  5471                           	goto	l2695
  5472  00087C  EFDA  F003         	line	177
  5473                           ;main.c: 177:         else if(strstr(GetString(), "4") != ((void*)0)){
  5474                           	
  5475                           l254:
  5476  000880                     	
  5477                           l2725:
  5478  000880                     	call	_GetString	;wreg free
  5479  000880  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  5480  000884  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  5481  000888  C0F9  F180         		movlw	low(STR_9)
  5482  00088C  0E2B               	movlb	1	; () banked
  5483  00088E  0101               	movwf	((strstr@n))&0ffh
  5484  000890  6F81               	movlw	high(STR_9)
  5485  000892  0E06               	movwf	((strstr@n+1))&0ffh
  5486  000894  6F82               
  5487                           	call	_strstr	;wreg free
  5488  000896  EC71  F00A         	movlb	1	; () banked
  5489  00089A  0101               	movf	(0+?_strstr)&0ffh,w
  5490  00089C  517F               iorwf	(1+?_strstr)&0ffh,w
  5491  00089E  1180               	btfsc	status,2
  5492  0008A0  B4D8               	goto	u2441
  5493  0008A2  EF55  F004         	goto	u2440
  5494  0008A6  EF57  F004         
  5495                           u2441:
  5496  0008AA                     	goto	l2735
  5497  0008AA  EF62  F004         u2440:
  5498  0008AE                     	line	178
  5499                           	
  5500                           l2727:; BSR set to: 1
  5501  0008AE                     
  5502                           ;main.c: 178:             led_interval = 4;
  5503                           	movlw	high(04h)
  5504  0008AE  0E00               	movwf	((c:_led_interval+1)),c
  5505  0008B0  6E41               	movlw	low(04h)
  5506  0008B2  0E04               	movwf	((c:_led_interval)),c
  5507  0008B4  6E40               	line	179
  5508                           	
  5509                           l2729:; BSR set to: 1
  5510  0008B6                     
  5511                           ;main.c: 179:             T3CONbits.TMR3ON = 1;
  5512                           	bsf	((c:4017)),c,0	;volatile
  5513  0008B6  80B1               	line	180
  5514                           	
  5515                           l2731:; BSR set to: 1
  5516  0008B8                     
  5517                           ;main.c: 180:             ClearBuffer();
  5518                           	call	_ClearBuffer	;wreg free
  5519  0008B8  EC41  F00D         	line	181
  5520                           ;main.c: 181:             break;
  5521                           	goto	l2773
  5522  0008BC  EFFC  F004         	line	182
  5523                           	
  5524                           l2733:
  5525  0008C0                     ;main.c: 182:         }
  5526                           	goto	l2695
  5527  0008C0  EFDA  F003         	line	183
  5528                           ;main.c: 183:         else if(strstr(GetString(), "5") != ((void*)0)){
  5529                           	
  5530                           l256:
  5531  0008C4                     	
  5532                           l2735:
  5533  0008C4                     	call	_GetString	;wreg free
  5534  0008C4  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  5535  0008C8  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  5536  0008CC  C0F9  F180         		movlw	low(STR_10)
  5537  0008D0  0E2D               	movlb	1	; () banked
  5538  0008D2  0101               	movwf	((strstr@n))&0ffh
  5539  0008D4  6F81               	movlw	high(STR_10)
  5540  0008D6  0E06               	movwf	((strstr@n+1))&0ffh
  5541  0008D8  6F82               
  5542                           	call	_strstr	;wreg free
  5543  0008DA  EC71  F00A         	movlb	1	; () banked
  5544  0008DE  0101               	movf	(0+?_strstr)&0ffh,w
  5545  0008E0  517F               iorwf	(1+?_strstr)&0ffh,w
  5546  0008E2  1180               	btfsc	status,2
  5547  0008E4  B4D8               	goto	u2451
  5548  0008E6  EF77  F004         	goto	u2450
  5549  0008EA  EF79  F004         
  5550                           u2451:
  5551  0008EE                     	goto	l2745
  5552  0008EE  EF84  F004         u2450:
  5553  0008F2                     	line	184
  5554                           	
  5555                           l2737:; BSR set to: 1
  5556  0008F2                     
  5557                           ;main.c: 184:             led_interval = 5;
  5558                           	movlw	high(05h)
  5559  0008F2  0E00               	movwf	((c:_led_interval+1)),c
  5560  0008F4  6E41               	movlw	low(05h)
  5561  0008F6  0E05               	movwf	((c:_led_interval)),c
  5562  0008F8  6E40               	line	185
  5563                           	
  5564                           l2739:; BSR set to: 1
  5565  0008FA                     
  5566                           ;main.c: 185:             T3CONbits.TMR3ON = 1;
  5567                           	bsf	((c:4017)),c,0	;volatile
  5568  0008FA  80B1               	line	186
  5569                           	
  5570                           l2741:; BSR set to: 1
  5571  0008FC                     
  5572                           ;main.c: 186:             ClearBuffer();
  5573                           	call	_ClearBuffer	;wreg free
  5574  0008FC  EC41  F00D         	line	187
  5575                           ;main.c: 187:             break;
  5576                           	goto	l2773
  5577  000900  EFFC  F004         	line	188
  5578                           	
  5579                           l2743:
  5580  000904                     ;main.c: 188:         }
  5581                           	goto	l2695
  5582  000904  EFDA  F003         	line	189
  5583                           ;main.c: 189:         else if(strstr(GetString(), "6") != ((void*)0)){
  5584                           	
  5585                           l258:
  5586  000908                     	
  5587                           l2745:
  5588  000908                     	call	_GetString	;wreg free
  5589  000908  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  5590  00090C  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  5591  000910  C0F9  F180         		movlw	low(STR_11)
  5592  000914  0E2F               	movlb	1	; () banked
  5593  000916  0101               	movwf	((strstr@n))&0ffh
  5594  000918  6F81               	movlw	high(STR_11)
  5595  00091A  0E06               	movwf	((strstr@n+1))&0ffh
  5596  00091C  6F82               
  5597                           	call	_strstr	;wreg free
  5598  00091E  EC71  F00A         	movlb	1	; () banked
  5599  000922  0101               	movf	(0+?_strstr)&0ffh,w
  5600  000924  517F               iorwf	(1+?_strstr)&0ffh,w
  5601  000926  1180               	btfsc	status,2
  5602  000928  B4D8               	goto	u2461
  5603  00092A  EF99  F004         	goto	u2460
  5604  00092E  EF9B  F004         
  5605                           u2461:
  5606  000932                     	goto	l2755
  5607  000932  EFA6  F004         u2460:
  5608  000936                     	line	190
  5609                           	
  5610                           l2747:; BSR set to: 1
  5611  000936                     
  5612                           ;main.c: 190:             led_interval = 6;
  5613                           	movlw	high(06h)
  5614  000936  0E00               	movwf	((c:_led_interval+1)),c
  5615  000938  6E41               	movlw	low(06h)
  5616  00093A  0E06               	movwf	((c:_led_interval)),c
  5617  00093C  6E40               	line	191
  5618                           	
  5619                           l2749:; BSR set to: 1
  5620  00093E                     
  5621                           ;main.c: 191:             T3CONbits.TMR3ON = 1;
  5622                           	bsf	((c:4017)),c,0	;volatile
  5623  00093E  80B1               	line	192
  5624                           	
  5625                           l2751:; BSR set to: 1
  5626  000940                     
  5627                           ;main.c: 192:             ClearBuffer();
  5628                           	call	_ClearBuffer	;wreg free
  5629  000940  EC41  F00D         	line	193
  5630                           ;main.c: 193:             break;
  5631                           	goto	l2773
  5632  000944  EFFC  F004         	line	194
  5633                           	
  5634                           l2753:
  5635  000948                     ;main.c: 194:         }
  5636                           	goto	l2695
  5637  000948  EFDA  F003         	line	195
  5638                           ;main.c: 195:         else if(strstr(GetString(), "7") != ((void*)0)){
  5639                           	
  5640                           l260:
  5641  00094C                     	
  5642                           l2755:
  5643  00094C                     	call	_GetString	;wreg free
  5644  00094C  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  5645  000950  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  5646  000954  C0F9  F180         		movlw	low(STR_12)
  5647  000958  0E31               	movlb	1	; () banked
  5648  00095A  0101               	movwf	((strstr@n))&0ffh
  5649  00095C  6F81               	movlw	high(STR_12)
  5650  00095E  0E06               	movwf	((strstr@n+1))&0ffh
  5651  000960  6F82               
  5652                           	call	_strstr	;wreg free
  5653  000962  EC71  F00A         	movlb	1	; () banked
  5654  000966  0101               	movf	(0+?_strstr)&0ffh,w
  5655  000968  517F               iorwf	(1+?_strstr)&0ffh,w
  5656  00096A  1180               	btfsc	status,2
  5657  00096C  B4D8               	goto	u2471
  5658  00096E  EFBB  F004         	goto	u2470
  5659  000972  EFBD  F004         
  5660                           u2471:
  5661  000976                     	goto	l2765
  5662  000976  EFC8  F004         u2470:
  5663  00097A                     	line	196
  5664                           	
  5665                           l2757:; BSR set to: 1
  5666  00097A                     
  5667                           ;main.c: 196:             led_interval = 7;
  5668                           	movlw	high(07h)
  5669  00097A  0E00               	movwf	((c:_led_interval+1)),c
  5670  00097C  6E41               	movlw	low(07h)
  5671  00097E  0E07               	movwf	((c:_led_interval)),c
  5672  000980  6E40               	line	197
  5673                           	
  5674                           l2759:; BSR set to: 1
  5675  000982                     
  5676                           ;main.c: 197:             T3CONbits.TMR3ON = 1;
  5677                           	bsf	((c:4017)),c,0	;volatile
  5678  000982  80B1               	line	198
  5679                           	
  5680                           l2761:; BSR set to: 1
  5681  000984                     
  5682                           ;main.c: 198:             ClearBuffer();
  5683                           	call	_ClearBuffer	;wreg free
  5684  000984  EC41  F00D         	line	199
  5685                           ;main.c: 199:             break;
  5686                           	goto	l2773
  5687  000988  EFFC  F004         	line	200
  5688                           	
  5689                           l2763:
  5690  00098C                     ;main.c: 200:         }
  5691                           	goto	l2695
  5692  00098C  EFDA  F003         	line	201
  5693                           ;main.c: 201:         else if(strstr(GetString(), "8") != ((void*)0)){
  5694                           	
  5695                           l262:
  5696  000990                     	
  5697                           l2765:
  5698  000990                     	call	_GetString	;wreg free
  5699  000990  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  5700  000994  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  5701  000998  C0F9  F180         		movlw	low(STR_13)
  5702  00099C  0E33               	movlb	1	; () banked
  5703  00099E  0101               	movwf	((strstr@n))&0ffh
  5704  0009A0  6F81               	movlw	high(STR_13)
  5705  0009A2  0E06               	movwf	((strstr@n+1))&0ffh
  5706  0009A4  6F82               
  5707                           	call	_strstr	;wreg free
  5708  0009A6  EC71  F00A         	movlb	1	; () banked
  5709  0009AA  0101               	movf	(0+?_strstr)&0ffh,w
  5710  0009AC  517F               iorwf	(1+?_strstr)&0ffh,w
  5711  0009AE  1180               	btfsc	status,2
  5712  0009B0  B4D8               	goto	u2481
  5713  0009B2  EFDD  F004         	goto	u2480
  5714  0009B6  EFDF  F004         
  5715                           u2481:
  5716  0009BA                     	goto	l2695
  5717  0009BA  EFDA  F003         u2480:
  5718  0009BE                     	line	202
  5719                           	
  5720                           l2767:; BSR set to: 1
  5721  0009BE                     
  5722                           ;main.c: 202:             led_interval = 8;
  5723                           	movlw	high(08h)
  5724  0009BE  0E00               	movwf	((c:_led_interval+1)),c
  5725  0009C0  6E41               	movlw	low(08h)
  5726  0009C2  0E08               	movwf	((c:_led_interval)),c
  5727  0009C4  6E40               	line	203
  5728                           	
  5729                           l2769:; BSR set to: 1
  5730  0009C6                     
  5731                           ;main.c: 203:             T3CONbits.TMR3ON = 1;
  5732                           	bsf	((c:4017)),c,0	;volatile
  5733  0009C6  80B1               	line	204
  5734                           	
  5735                           l2771:; BSR set to: 1
  5736  0009C8                     
  5737                           ;main.c: 204:             ClearBuffer();
  5738                           	call	_ClearBuffer	;wreg free
  5739  0009C8  EC41  F00D         	line	205
  5740                           ;main.c: 205:             break;
  5741                           	goto	l2773
  5742  0009CC  EFFC  F004         	line	206
  5743                           ;main.c: 206:         }
  5744                           	
  5745                           l264:
  5746  0009D0                     	goto	l2695
  5747  0009D0  EFDA  F003         	
  5748                           l263:
  5749  0009D4                     	goto	l2695
  5750  0009D4  EFDA  F003         	
  5751                           l261:
  5752  0009D8                     	goto	l2695
  5753  0009D8  EFDA  F003         	
  5754                           l259:
  5755  0009DC                     	goto	l2695
  5756  0009DC  EFDA  F003         	
  5757                           l257:
  5758  0009E0                     	goto	l2695
  5759  0009E0  EFDA  F003         	
  5760                           l255:
  5761  0009E4                     	goto	l2695
  5762  0009E4  EFDA  F003         	
  5763                           l253:
  5764  0009E8                     	goto	l2695
  5765  0009E8  EFDA  F003         	
  5766                           l251:
  5767  0009EC                     	goto	l2695
  5768  0009EC  EFDA  F003         	line	207
  5769                           ;main.c: 207:     }
  5770                           	
  5771                           l265:
  5772  0009F0                     	goto	l2695
  5773  0009F0  EFDA  F003         	
  5774                           l250:
  5775  0009F4                     	goto	l2773
  5776  0009F4  EFFC  F004         	line	208
  5777                           ;main.c: 208:     while(1){
  5778                           	
  5779                           l266:
  5780  0009F8                     	line	209
  5781                           	
  5782                           l2773:
  5783  0009F8                     ;main.c: 209:         if(strstr(GetString(), "q") != ((void*)0)) {
  5784                           	call	_GetString	;wreg free
  5785  0009F8  ECA2  F00E         	movff	0+?_GetString,(strstr@h)
  5786  0009FC  C0F8  F17F         	movff	1+?_GetString,(strstr@h+1)
  5787  000A00  C0F9  F180         		movlw	low(STR_14)
  5788  000A04  0E37               	movlb	1	; () banked
  5789  000A06  0101               	movwf	((strstr@n))&0ffh
  5790  000A08  6F81               	movlw	high(STR_14)
  5791  000A0A  0E06               	movwf	((strstr@n+1))&0ffh
  5792  000A0C  6F82               
  5793                           	call	_strstr	;wreg free
  5794  000A0E  EC71  F00A         	movlb	1	; () banked
  5795  000A12  0101               	movf	(0+?_strstr)&0ffh,w
  5796  000A14  517F               iorwf	(1+?_strstr)&0ffh,w
  5797  000A16  1180               	btfsc	status,2
  5798  000A18  B4D8               	goto	u2491
  5799  000A1A  EF11  F005         	goto	u2490
  5800  000A1E  EF13  F005         
  5801                           u2491:
  5802  000A22                     	goto	l2773
  5803  000A22  EFFC  F004         u2490:
  5804  000A26                     	line	210
  5805                           	
  5806                           l2775:; BSR set to: 1
  5807  000A26                     
  5808                           ;main.c: 210:             if(led_num == 1){
  5809                           		decf	((c:_led_num)),c,w
  5810  000A26  0442               iorwf	((c:_led_num+1)),c,w
  5811  000A28  1043               	btfss	status,2
  5812  000A2A  A4D8               	goto	u2501
  5813  000A2C  EF1A  F005         	goto	u2500
  5814  000A30  EF1C  F005         
  5815                           u2501:
  5816  000A34                     	goto	l2779
  5817  000A34  EF1F  F005         u2500:
  5818  000A38                     	line	211
  5819                           	
  5820                           l2777:; BSR set to: 1
  5821  000A38                     
  5822                           ;main.c: 211:                 RC2 = 0;
  5823                           	bcf	c:(31762/8),(31762)&7	;volatile
  5824  000A38  9482               	line	212
  5825                           ;main.c: 212:             }
  5826                           	goto	l269
  5827  000A3A  EF50  F005         	line	213
  5828                           ;main.c: 213:             else if(led_num == 2){
  5829                           	
  5830                           l268:; BSR set to: 1
  5831  000A3E                     
  5832                           	
  5833                           l2779:; BSR set to: 1
  5834  000A3E                     
  5835                           		movlw	2
  5836  000A3E  0E02               	xorwf	((c:_led_num)),c,w
  5837  000A40  1842               iorwf	((c:_led_num+1)),c,w
  5838  000A42  1043               	btfss	status,2
  5839  000A44  A4D8               	goto	u2511
  5840  000A46  EF27  F005         	goto	u2510
  5841  000A4A  EF29  F005         
  5842                           u2511:
  5843  000A4E                     	goto	l2783
  5844  000A4E  EF2D  F005         u2510:
  5845  000A52                     	line	214
  5846                           	
  5847                           l2781:; BSR set to: 1
  5848  000A52                     
  5849                           ;main.c: 214:                 RC2 = 0;
  5850                           	bcf	c:(31762/8),(31762)&7	;volatile
  5851  000A52  9482               	line	215
  5852                           ;main.c: 215:                 RD5 = 0;
  5853                           	bcf	c:(31773/8),(31773)&7	;volatile
  5854  000A54  9A83               	line	216
  5855                           ;main.c: 216:             }
  5856                           	goto	l269
  5857  000A56  EF50  F005         	line	217
  5858                           ;main.c: 217:             else if(led_num == 3){
  5859                           	
  5860                           l270:; BSR set to: 1
  5861  000A5A                     
  5862                           	
  5863                           l2783:; BSR set to: 1
  5864  000A5A                     
  5865                           		movlw	3
  5866  000A5A  0E03               	xorwf	((c:_led_num)),c,w
  5867  000A5C  1842               iorwf	((c:_led_num+1)),c,w
  5868  000A5E  1043               	btfss	status,2
  5869  000A60  A4D8               	goto	u2521
  5870  000A62  EF35  F005         	goto	u2520
  5871  000A66  EF37  F005         
  5872                           u2521:
  5873  000A6A                     	goto	l2787
  5874  000A6A  EF3C  F005         u2520:
  5875  000A6E                     	line	218
  5876                           	
  5877                           l2785:; BSR set to: 1
  5878  000A6E                     
  5879                           ;main.c: 218:                 RC2 = 0;
  5880                           	bcf	c:(31762/8),(31762)&7	;volatile
  5881  000A6E  9482               	line	219
  5882                           ;main.c: 219:                 RD5 = 0;
  5883                           	bcf	c:(31773/8),(31773)&7	;volatile
  5884  000A70  9A83               	line	220
  5885                           ;main.c: 220:                 RD6 = 0;
  5886                           	bcf	c:(31774/8),(31774)&7	;volatile
  5887  000A72  9C83               	line	221
  5888                           ;main.c: 221:             }
  5889                           	goto	l269
  5890  000A74  EF50  F005         	line	222
  5891                           ;main.c: 222:             else if(led_num == 4){
  5892                           	
  5893                           l272:; BSR set to: 1
  5894  000A78                     
  5895                           	
  5896                           l2787:; BSR set to: 1
  5897  000A78                     
  5898                           		movlw	4
  5899  000A78  0E04               	xorwf	((c:_led_num)),c,w
  5900  000A7A  1842               iorwf	((c:_led_num+1)),c,w
  5901  000A7C  1043               	btfss	status,2
  5902  000A7E  A4D8               	goto	u2531
  5903  000A80  EF44  F005         	goto	u2530
  5904  000A84  EF46  F005         
  5905                           u2531:
  5906  000A88                     	goto	l269
  5907  000A88  EF50  F005         u2530:
  5908  000A8C                     	line	223
  5909                           	
  5910                           l2789:; BSR set to: 1
  5911  000A8C                     
  5912                           ;main.c: 223:                 RC2 = 0;
  5913                           	bcf	c:(31762/8),(31762)&7	;volatile
  5914  000A8C  9482               	line	224
  5915                           ;main.c: 224:                 RD5 = 0;
  5916                           	bcf	c:(31773/8),(31773)&7	;volatile
  5917  000A8E  9A83               	line	225
  5918                           ;main.c: 225:                 RD6 = 0;
  5919                           	bcf	c:(31774/8),(31774)&7	;volatile
  5920  000A90  9C83               	line	226
  5921                           ;main.c: 226:                 RD7 = 0;
  5922                           	bcf	c:(31775/8),(31775)&7	;volatile
  5923  000A92  9E83               	goto	l269
  5924  000A94  EF50  F005         	line	227
  5925                           ;main.c: 227:             }
  5926                           	
  5927                           l274:; BSR set to: 1
  5928  000A98                     
  5929                           	goto	l269
  5930  000A98  EF50  F005         	
  5931                           l273:; BSR set to: 1
  5932  000A9C                     
  5933                           	goto	l269
  5934  000A9C  EF50  F005         	
  5935                           l271:; BSR set to: 1
  5936  000AA0                     
  5937                           	
  5938                           l269:; BSR set to: 1
  5939  000AA0                     
  5940                           	line	228
  5941                           ;main.c: 228:             T3CONbits.TMR3ON = 0;
  5942                           	bcf	((c:4017)),c,0	;volatile
  5943  000AA0  90B1               	line	229
  5944                           ;main.c: 229:             PIR2bits.TMR3IF = 0;
  5945                           	bcf	((c:4001)),c,1	;volatile
  5946  000AA2  92A1               	line	230
  5947                           ;main.c: 230:             PIE2bits.TMR3IE = 0;
  5948                           	bcf	((c:4000)),c,1	;volatile
  5949  000AA4  92A0               	line	231
  5950                           ;main.c: 231:             IPR2bits.TMR3IP = 0;
  5951                           	bcf	((c:4002)),c,1	;volatile
  5952  000AA6  92A2               	line	232
  5953                           	
  5954                           l2791:; BSR set to: 1
  5955  000AA8                     
  5956                           ;main.c: 232:             led_num = 0;
  5957                           	movlw	high(0)
  5958  000AA8  0E00               	movwf	((c:_led_num+1)),c
  5959  000AAA  6E43               	movlw	low(0)
  5960  000AAC  0E00               	movwf	((c:_led_num)),c
  5961  000AAE  6E42               	line	233
  5962                           ;main.c: 233:             led_interval = 0;
  5963                           	movlw	high(0)
  5964  000AB0  0E00               	movwf	((c:_led_interval+1)),c
  5965  000AB2  6E41               	movlw	low(0)
  5966  000AB4  0E00               	movwf	((c:_led_interval)),c
  5967  000AB6  6E40               	line	234
  5968                           	
  5969                           l2793:; BSR set to: 1
  5970  000AB8                     
  5971                           ;main.c: 234:             ClearBuffer();
  5972                           	call	_ClearBuffer	;wreg free
  5973  000AB8  EC41  F00D         	line	235
  5974                           ;main.c: 235:             break;
  5975                           	goto	l2795
  5976  000ABC  EF64  F005         	line	236
  5977                           ;main.c: 236:         }
  5978                           	
  5979                           l267:
  5980  000AC0                     	goto	l2773
  5981  000AC0  EFFC  F004         	line	237
  5982                           ;main.c: 237:     }
  5983                           	
  5984                           l276:
  5985  000AC4                     	goto	l2773
  5986  000AC4  EFFC  F004         	
  5987                           l275:
  5988  000AC8                     	line	238
  5989                           	
  5990                           l2795:
  5991  000AC8                     ;main.c: 238:     ClearBuffer();
  5992                           	call	_ClearBuffer	;wreg free
  5993  000AC8  EC41  F00D         	line	239
  5994                           	
  5995                           l277:
  5996  000ACC                     	return	;funcret
  5997  000ACC  0012               	opt stack 0
  5998                           GLOBAL	__end_of_Mode1
  5999                           	__end_of_Mode1:
  6000  000ACE                     	signat	_Mode1,89
  6001                           	global	_strstr
  6002                           
  6003 ;; *************** function _strstr *****************
  6004 ;; Defined at:
  6005 ;;		line 143 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;  h               2    7[BANK1 ] PTR const unsigned char 
  6008 ;;		 -> NULL(0), mystring(10), 
  6009 ;;  n               2    9[BANK1 ] PTR const unsigned char 
  6010 ;;		 -> STR_20(6), STR_19(2), STR_18(2), STR_17(2), 
  6011 ;;		 -> STR_16(2), STR_14(2), STR_13(2), STR_12(2), 
  6012 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  6013 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  6014 ;;		 -> STR_3(2), STR_2(2), 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  nl              2    6[BANK0 ] unsigned int 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  2    7[BANK1 ] PTR unsigned char 
  6019 ;; Registers used:
  6020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6026 ;;      Params:         0       0       4       0       0       0       0
  6027 ;;      Locals:         0       2       0       0       0       0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0
  6029 ;;      Totals:         0       2       4       0       0       0       0
  6030 ;;Total ram usage:        6 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:    7
  6033 ;; This function calls:
  6034 ;;		_strchr
  6035 ;;		_strlen
  6036 ;;		_strncmp
  6037 ;; This function is called by:
  6038 ;;		_Mode1
  6039 ;;		_Mode2
  6040 ;;		_Mode3
  6041 ;;		_main
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           psect	text13,class=CODE,space=0,reloc=2,group=2
  6045                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  6046                           	line	143
  6047                           global __ptext13
  6048                           __ptext13:
  6049  0014E2                     psect	text13
  6050                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  6051                           	line	143
  6052                           	global	__size_of_strstr
  6053                           	__size_of_strstr	equ	__end_of_strstr-_strstr
  6054  0000                     	
  6055                           _strstr:
  6056  0014E2                     ;incstack = 0
  6057                           	opt	stack 23
  6058                           	line	146
  6059                           	
  6060                           l2577:
  6061  0014E2                     	movlb	1	; () banked
  6062  0014E2  0101               	movf	((strstr@n))&0ffh,w
  6063  0014E4  5181               iorwf	((strstr@n+1))&0ffh,w
  6064  0014E6  1182               	btfsc	status,2
  6065  0014E8  B4D8               	goto	u2331
  6066  0014EA  EF79  F00A         	goto	u2330
  6067  0014EE  EF7B  F00A         
  6068                           u2331:
  6069  0014F2                     	goto	l2593
  6070  0014F2  EFDD  F00A         u2330:
  6071  0014F6                     	line	147
  6072                           	
  6073                           l2579:; BSR set to: 1
  6074  0014F6                     
  6075                           		movff	(strstr@n),(strlen@s)
  6076  0014F6  C181  F0F8         	movff	(strstr@n+1),(strlen@s+1)
  6077  0014FA  C182  F0F9         
  6078                           	call	_strlen	;wreg free
  6079  0014FE  ECA6  F00D         	movff	0+?_strlen,(strstr@nl)
  6080  001502  C0F8  F0FE         	movff	1+?_strlen,(strstr@nl+1)
  6081  001506  C0F9  F0FF         	line	148
  6082                           	goto	l2589
  6083  00150A  EFC1  F00A         	
  6084                           l1017:
  6085  00150E                     	line	149
  6086                           	
  6087                           l2581:
  6088  00150E                     		movff	(strstr@h),(strncmp@_l)
  6089  00150E  C17F  F0F8         	movff	(strstr@h+1),(strncmp@_l+1)
  6090  001512  C180  F0F9         
  6091                           		movff	(strstr@n),(strncmp@_r)
  6092  001516  C181  F0FA         	movff	(strstr@n+1),(strncmp@_r+1)
  6093  00151A  C182  F0FB         
  6094                           	movff	(strstr@nl),(strncmp@n)
  6095  00151E  C0FE  F0FC         	movff	(strstr@nl+1),(strncmp@n+1)
  6096  001522  C0FF  F0FD         	call	_strncmp	;wreg free
  6097  001526  EC75  F009         	movlb	0	; () banked
  6098  00152A  0100               	movf	(0+?_strncmp)&0ffh,w
  6099  00152C  51F8               iorwf	(1+?_strncmp)&0ffh,w
  6100  00152E  11F9               	btfss	status,2
  6101  001530  A4D8               	goto	u2341
  6102  001532  EF9D  F00A         	goto	u2340
  6103  001536  EF9F  F00A         
  6104                           u2341:
  6105  00153A                     	goto	l2587
  6106  00153A  EFA7  F00A         u2340:
  6107  00153E                     	line	150
  6108                           	
  6109                           l2583:; BSR set to: 0
  6110  00153E                     
  6111                           		movff	(strstr@h),(?_strstr)
  6112  00153E  C17F  F17F         	movff	(strstr@h+1),(?_strstr+1)
  6113  001542  C180  F180         
  6114                           	goto	l1019
  6115  001546  EFE3  F00A         	
  6116                           l2585:; BSR set to: 0
  6117  00154A                     
  6118                           	goto	l1019
  6119  00154A  EFE3  F00A         	
  6120                           l1018:; BSR set to: 0
  6121  00154E                     
  6122                           	line	151
  6123                           	
  6124                           l2587:; BSR set to: 0
  6125  00154E                     
  6126                           	movlw	low(01h)
  6127  00154E  0E01               	movlb	1	; () banked
  6128  001550  0101               	addwf	((strstr@h))&0ffh,w
  6129  001552  257F               	movlb	0	; () banked
  6130  001554  0100               	movwf	((strchr@s))&0ffh
  6131  001556  6FF8               	movlw	high(01h)
  6132  001558  0E00               	movlb	1	; () banked
  6133  00155A  0101               	addwfc	((strstr@h+1))&0ffh,w
  6134  00155C  2180               	movlb	0	; () banked
  6135  00155E  0100               	movwf	1+((strchr@s))&0ffh
  6136  001560  6FF9               	movff	(strstr@n),tblptrl
  6137  001562  C181  FFF6         	movff	(strstr@n+1),tblptrh
  6138  001566  C182  FFF7         	if	0	;tblptru may be non-zero
  6139  00156A                     	clrf	tblptru
  6141  00156A                     	if	0	;tblptru may be non-zero
  6142  00156A                     	global __mediumconst
  6143                           movlw	low highword(__mediumconst)
  6146  00156A                     	tblrd	*
  6147  00156A  0008               	
  6148                           	movf	tablat,w
  6149  00156C  50F5               
  6150                           	movwf	((strchr@c))&0ffh
  6151  00156E  6FFA               	clrf	((strchr@c+1))&0ffh
  6152  001570  6BFB               	call	_strchr	;wreg free
  6153  001572  ECD3  F00D         	movff	0+?_strchr,(strstr@h)
  6154  001576  C0F8  F17F         	movff	1+?_strchr,(strstr@h+1)
  6155  00157A  C0F9  F180         	goto	l2589
  6156  00157E  EFC1  F00A         	line	152
  6157                           	
  6158                           l1016:
  6159  001582                     	line	148
  6160                           	
  6161                           l2589:
  6162  001582                     	movlb	1	; () banked
  6163  001582  0101               	movf	((strstr@h))&0ffh,w
  6164  001584  517F               iorwf	((strstr@h+1))&0ffh,w
  6165  001586  1180               	btfsc	status,2
  6166  001588  B4D8               	goto	u2351
  6167  00158A  EFC9  F00A         	goto	u2350
  6168  00158E  EFCB  F00A         
  6169                           u2351:
  6170  001592                     	goto	l2593
  6171  001592  EFDD  F00A         u2350:
  6172  001596                     	
  6173                           l2591:; BSR set to: 1
  6174  001596                     
  6175                           	movff	(strstr@h),fsr2l
  6176  001596  C17F  FFD9         	movff	(strstr@h+1),fsr2h
  6177  00159A  C180  FFDA         	movf	indf2,w
  6178  00159E  50DF               	btfss	status,2
  6179  0015A0  A4D8               	goto	u2361
  6180  0015A2  EFD5  F00A         	goto	u2360
  6181  0015A6  EFD7  F00A         u2361:
  6182  0015AA                     	goto	l2581
  6183  0015AA  EF87  F00A         u2360:
  6184  0015AE                     	goto	l2593
  6185  0015AE  EFDD  F00A         	
  6186                           l1021:; BSR set to: 1
  6187  0015B2                     
  6188                           	goto	l2593
  6189  0015B2  EFDD  F00A         	
  6190                           l1022:; BSR set to: 1
  6191  0015B6                     
  6192                           	goto	l2593
  6193  0015B6  EFDD  F00A         	line	153
  6194                           	
  6195                           l1015:; BSR set to: 1
  6196  0015BA                     
  6197                           	line	154
  6198                           	
  6199                           l2593:; BSR set to: 1
  6200  0015BA                     
  6201                           		movlw	low(0)
  6202  0015BA  0E00               	movwf	((?_strstr))&0ffh
  6203  0015BC  6F7F               	movlw	high(0)
  6204  0015BE  0E00               	movwf	((?_strstr+1))&0ffh
  6205  0015C0  6F80               
  6206                           	goto	l1019
  6207  0015C2  EFE3  F00A         	
  6208                           l2595:; BSR set to: 1
  6209  0015C6                     
  6210                           	line	171
  6211                           	
  6212                           l1019:
  6213  0015C6                     	return	;funcret
  6214  0015C6  0012               	opt stack 0
  6215                           GLOBAL	__end_of_strstr
  6216                           	__end_of_strstr:
  6217  0015C8                     	signat	_strstr,8314
  6218                           	global	_strncmp
  6219                           
  6220 ;; *************** function _strncmp *****************
  6221 ;; Defined at:
  6222 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  6225 ;;		 -> NULL(0), mystring(10), 
  6226 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  6227 ;;		 -> STR_20(6), STR_19(2), STR_18(2), STR_17(2), 
  6228 ;;		 -> STR_16(2), STR_14(2), STR_13(2), STR_12(2), 
  6229 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  6230 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  6231 ;;		 -> STR_3(2), STR_2(2), 
  6232 ;;  n               2    4[BANK0 ] unsigned int 
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;  r               2    5[BANK1 ] PTR const unsigned char 
  6235 ;;		 -> STR_20(6), STR_19(2), STR_18(2), STR_17(2), 
  6236 ;;		 -> STR_16(2), STR_14(2), STR_13(2), STR_12(2), 
  6237 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  6238 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  6239 ;;		 -> STR_3(2), STR_2(2), 
  6240 ;;  l               2    3[BANK1 ] PTR const unsigned char 
  6241 ;;		 -> NULL(0), mystring(10), 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  2    0[BANK0 ] int 
  6244 ;; Registers used:
  6245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6251 ;;      Params:         0       6       0       0       0       0       0
  6252 ;;      Locals:         0       0       4       0       0       0       0
  6253 ;;      Temps:          0       0       3       0       0       0       0
  6254 ;;      Totals:         0       6       7       0       0       0       0
  6255 ;;Total ram usage:       13 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:    6
  6258 ;; This function calls:
  6259 ;;		Nothing
  6260 ;; This function is called by:
  6261 ;;		_strstr
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           psect	text14,class=CODE,space=0,reloc=2,group=2
  6265                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  6266                           	line	3
  6267                           global __ptext14
  6268                           __ptext14:
  6269  0012EA                     psect	text14
  6270                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  6271                           	line	3
  6272                           	global	__size_of_strncmp
  6273                           	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
  6274  0000                     	
  6275                           _strncmp:
  6276  0012EA                     ;incstack = 0
  6277                           	opt	stack 23
  6278                           	line	5
  6279                           	
  6280                           l2485:
  6281  0012EA                     		movff	(strncmp@_l),(strncmp@l)
  6282  0012EA  C0F8  F17B         	movff	(strncmp@_l+1),(strncmp@l+1)
  6283  0012EE  C0F9  F17C         
  6284                           		movff	(strncmp@_r),(strncmp@r)
  6285  0012F2  C0FA  F17D         	movff	(strncmp@_r+1),(strncmp@r+1)
  6286  0012F6  C0FB  F17E         
  6287                           	line	6
  6288                           	movlb	0	; () banked
  6289  0012FA  0100               	decf	((strncmp@n))&0ffh
  6290  0012FC  07FC               	btfss	status,0
  6291  0012FE  A0D8               	decf	((strncmp@n+1))&0ffh
  6292  001300  07FD               		incf	((strncmp@n))&0ffh,w
  6293  001302  29FC               	bnz	u2211
  6294  001304  E106               	incf	((strncmp@n+1))&0ffh,w
  6295  001306  29FD               	btfss	status,2
  6296  001308  A4D8               	goto	u2211
  6297  00130A  EF89  F009         	goto	u2210
  6298  00130E  EF8B  F009         
  6299                           u2211:
  6300  001312                     	goto	l2493
  6301  001312  EFA0  F009         u2210:
  6302  001316                     	
  6303                           l2487:; BSR set to: 0
  6304  001316                     
  6305                           	movlw	high(0)
  6306  001316  0E00               	movwf	((?_strncmp+1))&0ffh
  6307  001318  6FF9               	movlw	low(0)
  6308  00131A  0E00               	movwf	((?_strncmp))&0ffh
  6309  00131C  6FF8               	goto	l1038
  6310  00131E  EFFA  F009         	
  6311                           l2489:; BSR set to: 0
  6312  001322                     
  6313                           	goto	l1038
  6314  001322  EFFA  F009         	
  6315                           l1037:; BSR set to: 0
  6316  001326                     
  6317                           	line	7
  6318                           	goto	l2493
  6319  001326  EFA0  F009         	
  6320                           l1040:; BSR set to: 0
  6321  00132A                     
  6322                           	
  6323                           l2491:
  6324  00132A                     	movlb	1	; () banked
  6325  00132A  0101               	infsnz	((strncmp@l))&0ffh
  6326  00132C  4B7B               	incf	((strncmp@l+1))&0ffh
  6327  00132E  2B7C               	infsnz	((strncmp@r))&0ffh
  6328  001330  4B7D               	incf	((strncmp@r+1))&0ffh
  6329  001332  2B7E               	movlb	0	; () banked
  6330  001334  0100               	decf	((strncmp@n))&0ffh
  6331  001336  07FC               	btfss	status,0
  6332  001338  A0D8               	decf	((strncmp@n+1))&0ffh
  6333  00133A  07FD               	goto	l2493
  6334  00133C  EFA0  F009         	
  6335                           l1039:; BSR set to: 0
  6336  001340                     
  6337                           	
  6338                           l2493:; BSR set to: 0
  6339  001340                     
  6340                           	movff	(strncmp@l),fsr2l
  6341  001340  C17B  FFD9         	movff	(strncmp@l+1),fsr2h
  6342  001344  C17C  FFDA         	movf	indf2,w
  6343  001348  50DF               	btfsc	status,2
  6344  00134A  B4D8               	goto	u2221
  6345  00134C  EFAA  F009         	goto	u2220
  6346  001350  EFAC  F009         u2221:
  6347  001354                     	goto	l2501
  6348  001354  EFDC  F009         u2220:
  6349  001358                     	
  6350                           l2495:; BSR set to: 0
  6351  001358                     
  6352                           	movff	(strncmp@r),tblptrl
  6353  001358  C17D  FFF6         	movff	(strncmp@r+1),tblptrh
  6354  00135C  C17E  FFF7         	if	0	;tblptru may be non-zero
  6355  001360                     	clrf	tblptru
  6357  001360                     	if	0	;tblptru may be non-zero
  6358  001360                     	global __mediumconst
  6359                           movlw	low highword(__mediumconst)
  6362  001360                     	tblrd	*
  6363  001360  0008               	
  6364                           	movf	tablat,w
  6365  001362  50F5               	iorlw	0
  6366  001364  0900               	btfsc	status,2
  6367  001366  B4D8               	goto	u2231
  6368  001368  EFB8  F009         	goto	u2230
  6369  00136C  EFBA  F009         u2231:
  6370  001370                     	goto	l2501
  6371  001370  EFDC  F009         u2230:
  6372  001374                     	
  6373                           l2497:; BSR set to: 0
  6374  001374                     
  6375                           	movf	((strncmp@n))&0ffh,w
  6376  001374  51FC               iorwf	((strncmp@n+1))&0ffh,w
  6377  001376  11FD               	btfsc	status,2
  6378  001378  B4D8               	goto	u2241
  6379  00137A  EFC1  F009         	goto	u2240
  6380  00137E  EFC3  F009         
  6381                           u2241:
  6382  001382                     	goto	l2501
  6383  001382  EFDC  F009         u2240:
  6384  001386                     	
  6385                           l2499:; BSR set to: 0
  6386  001386                     
  6387                           	movff	(strncmp@l),fsr2l
  6388  001386  C17B  FFD9         	movff	(strncmp@l+1),fsr2h
  6389  00138A  C17C  FFDA         	movf	indf2,w
  6390  00138E  50DF               	movlb	1	; () banked
  6391  001390  0101               	movwf	(??_strncmp+0+0)&0ffh
  6392  001392  6F78               	movff	(strncmp@r),tblptrl
  6393  001394  C17D  FFF6         	movff	(strncmp@r+1),tblptrh
  6394  001398  C17E  FFF7         	if	0	;tblptru may be non-zero
  6395  00139C                     	clrf	tblptru
  6397  00139C                     	if	0	;tblptru may be non-zero
  6398  00139C                     	global __mediumconst
  6399                           movlw	low highword(__mediumconst)
  6402  00139C                     	tblrd	*
  6403  00139C  0008               	
  6404                           	movf	tablat,w
  6405  00139E  50F5               	xorwf	((??_strncmp+0+0))&0ffh,w
  6406  0013A0  1978               
  6407                           	btfsc	status,2
  6408  0013A2  B4D8               	goto	u2251
  6409  0013A4  EFD6  F009         	goto	u2250
  6410  0013A8  EFD8  F009         u2251:
  6411  0013AC                     	goto	l2491
  6412  0013AC  EF95  F009         u2250:
  6413  0013B0                     	goto	l2501
  6414  0013B0  EFDC  F009         	
  6415                           l1042:; BSR set to: 1
  6416  0013B4                     
  6417                           	goto	l2501
  6418  0013B4  EFDC  F009         	
  6419                           l1043:; BSR set to: 1
  6420  0013B8                     
  6421                           	line	8
  6422                           	
  6423                           l2501:
  6424  0013B8                     	movff	(strncmp@r),tblptrl
  6425  0013B8  C17D  FFF6         	movff	(strncmp@r+1),tblptrh
  6426  0013BC  C17E  FFF7         	if	0	;tblptru may be non-zero
  6427  0013C0                     	clrf	tblptru
  6429  0013C0                     	if	0	;tblptru may be non-zero
  6430  0013C0                     	global __mediumconst
  6431                           movlw	low highword(__mediumconst)
  6434  0013C0                     	tblrd	*
  6435  0013C0  0008               	
  6436                           	movf	tablat,w
  6437  0013C2  50F5               	movlb	1	; () banked
  6438  0013C4  0101               	movwf	(??_strncmp+0+0)&0ffh
  6439  0013C6  6F78               	clrf	(??_strncmp+0+0+1)&0ffh
  6440  0013C8  6B79               
  6441                           	comf	(??_strncmp+0+0)&0ffh
  6442  0013CA  1F78               	comf	(??_strncmp+0+1)&0ffh
  6443  0013CC  1F79               	infsnz	(??_strncmp+0+0)&0ffh
  6444  0013CE  4B78               	incf	(??_strncmp+0+1)&0ffh
  6445  0013D0  2B79               	movff	(strncmp@l),fsr2l
  6446  0013D2  C17B  FFD9         	movff	(strncmp@l+1),fsr2h
  6447  0013D6  C17C  FFDA         	movf	indf2,w
  6448  0013DA  50DF               	movwf	(??_strncmp+2+0)&0ffh
  6449  0013DC  6F7A               	movf	((??_strncmp+2+0))&0ffh,w
  6450  0013DE  517A               	addwf	(??_strncmp+0+0)&0ffh,w
  6451  0013E0  2578               	movlb	0	; () banked
  6452  0013E2  0100               	movwf	((?_strncmp))&0ffh
  6453  0013E4  6FF8               	movlw	0
  6454  0013E6  0E00               	movlb	1	; () banked
  6455  0013E8  0101               	addwfc	(??_strncmp+0+1)&0ffh,w
  6456  0013EA  2179               	movlb	0	; () banked
  6457  0013EC  0100               	movwf	1+((?_strncmp))&0ffh
  6458  0013EE  6FF9               	goto	l1038
  6459  0013F0  EFFA  F009         	
  6460                           l2503:; BSR set to: 0
  6461  0013F4                     
  6462                           	line	9
  6463                           	
  6464                           l1038:; BSR set to: 0
  6465  0013F4                     
  6466                           	return	;funcret
  6467  0013F4  0012               	opt stack 0
  6468                           GLOBAL	__end_of_strncmp
  6469                           	__end_of_strncmp:
  6470  0013F6                     	signat	_strncmp,12410
  6471                           	global	_strlen
  6472                           
  6473 ;; *************** function _strlen *****************
  6474 ;; Defined at:
  6475 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  6478 ;;		 -> STR_20(6), STR_19(2), STR_18(2), STR_17(2), 
  6479 ;;		 -> STR_16(2), STR_14(2), STR_13(2), STR_12(2), 
  6480 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  6481 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  6482 ;;		 -> STR_3(2), STR_2(2), 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  a               2    4[BANK0 ] PTR const unsigned char 
  6485 ;;		 -> STR_20(6), STR_19(2), STR_18(2), STR_17(2), 
  6486 ;;		 -> STR_16(2), STR_14(2), STR_13(2), STR_12(2), 
  6487 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  6488 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  6489 ;;		 -> STR_3(2), STR_2(2), 
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  2    0[BANK0 ] unsigned int 
  6492 ;; Registers used:
  6493 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6499 ;;      Params:         0       2       0       0       0       0       0
  6500 ;;      Locals:         0       2       0       0       0       0       0
  6501 ;;      Temps:          0       2       0       0       0       0       0
  6502 ;;      Totals:         0       6       0       0       0       0       0
  6503 ;;Total ram usage:        6 bytes
  6504 ;; Hardware stack levels used:    1
  6505 ;; Hardware stack levels required when called:    6
  6506 ;; This function calls:
  6507 ;;		Nothing
  6508 ;; This function is called by:
  6509 ;;		_strstr
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           psect	text15,class=CODE,space=0,reloc=2,group=2
  6513                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  6514                           	line	12
  6515                           global __ptext15
  6516                           __ptext15:
  6517  001B4C                     psect	text15
  6518                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  6519                           	line	12
  6520                           	global	__size_of_strlen
  6521                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  6522  0000                     	
  6523                           _strlen:; BSR set to: 0
  6524  001B4C                     
  6525                           ;incstack = 0
  6526                           	opt	stack 23
  6527                           	line	14
  6528                           	
  6529                           l2475:
  6530  001B4C                     		movff	(strlen@s),(strlen@a)
  6531  001B4C  C0F8  F0FC         	movff	(strlen@s+1),(strlen@a+1)
  6532  001B50  C0F9  F0FD         
  6533                           	line	16
  6534                           	goto	l2479
  6535  001B54  EFB1  F00D         	
  6536                           l1032:
  6537  001B58                     	line	17
  6538                           	
  6539                           l2477:
  6540  001B58                     	movlb	0	; () banked
  6541  001B58  0100               	infsnz	((strlen@s))&0ffh
  6542  001B5A  4BF8               	incf	((strlen@s+1))&0ffh
  6543  001B5C  2BF9               	goto	l2479
  6544  001B5E  EFB1  F00D         	line	18
  6545                           	
  6546                           l1031:; BSR set to: 0
  6547  001B62                     
  6548                           	line	16
  6549                           	
  6550                           l2479:
  6551  001B62                     	movff	(strlen@s),tblptrl
  6552  001B62  C0F8  FFF6         	movff	(strlen@s+1),tblptrh
  6553  001B66  C0F9  FFF7         	if	0	;tblptru may be non-zero
  6554  001B6A                     	clrf	tblptru
  6556  001B6A                     	if	0	;tblptru may be non-zero
  6557  001B6A                     	global __mediumconst
  6558                           movlw	low highword(__mediumconst)
  6561  001B6A                     	tblrd	*
  6562  001B6A  0008               	
  6563                           	movf	tablat,w
  6564  001B6C  50F5               	iorlw	0
  6565  001B6E  0900               	btfss	status,2
  6566  001B70  A4D8               	goto	u2201
  6567  001B72  EFBD  F00D         	goto	u2200
  6568  001B76  EFBF  F00D         u2201:
  6569  001B7A                     	goto	l2477
  6570  001B7A  EFAC  F00D         u2200:
  6571  001B7E                     	goto	l2481
  6572  001B7E  EFC1  F00D         	
  6573                           l1033:
  6574  001B82                     	line	25
  6575                           	
  6576                           l2481:
  6577  001B82                     	movff	(strlen@a),??_strlen+0+0
  6578  001B82  C0FC  F0FA         	movff	(strlen@a+1),??_strlen+0+0+1
  6579  001B86  C0FD  F0FB         	movlb	0	; () banked
  6580  001B8A  0100               	comf	(??_strlen+0+0)&0ffh
  6581  001B8C  1FFA               	comf	(??_strlen+0+1)&0ffh
  6582  001B8E  1FFB               	infsnz	(??_strlen+0+0)&0ffh
  6583  001B90  4BFA               	incf	(??_strlen+0+1)&0ffh
  6584  001B92  2BFB               	movf	((strlen@s))&0ffh,w
  6585  001B94  51F8               	addwf	(??_strlen+0+0)&0ffh,w
  6586  001B96  25FA               	movwf	((?_strlen))&0ffh
  6587  001B98  6FF8               	movf	((strlen@s+1))&0ffh,w
  6588  001B9A  51F9               	addwfc	(??_strlen+0+1)&0ffh,w
  6589  001B9C  21FB               	movwf	1+((?_strlen))&0ffh
  6590  001B9E  6FF9               	goto	l1034
  6591  001BA0  EFD2  F00D         	
  6592                           l2483:; BSR set to: 0
  6593  001BA4                     
  6594                           	line	26
  6595                           	
  6596                           l1034:; BSR set to: 0
  6597  001BA4                     
  6598                           	return	;funcret
  6599  001BA4  0012               	opt stack 0
  6600                           GLOBAL	__end_of_strlen
  6601                           	__end_of_strlen:
  6602  001BA6                     	signat	_strlen,4218
  6603                           	global	_strchr
  6604                           
  6605 ;; *************** function _strchr *****************
  6606 ;; Defined at:
  6607 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  6610 ;;		 -> NULL(0), mystring(10), 
  6611 ;;  c               2    2[BANK0 ] int 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;		None
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  2    0[BANK0 ] PTR unsigned char 
  6616 ;; Registers used:
  6617 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6623 ;;      Params:         0       4       0       0       0       0       0
  6624 ;;      Locals:         0       0       0       0       0       0       0
  6625 ;;      Temps:          0       1       0       0       0       0       0
  6626 ;;      Totals:         0       5       0       0       0       0       0
  6627 ;;Total ram usage:        5 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; Hardware stack levels required when called:    6
  6630 ;; This function calls:
  6631 ;;		Nothing
  6632 ;; This function is called by:
  6633 ;;		_strstr
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           psect	text16,class=CODE,space=0,reloc=2,group=2
  6637                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
  6638                           	line	7
  6639                           global __ptext16
  6640                           __ptext16:
  6641  001BA6                     psect	text16
  6642                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
  6643                           	line	7
  6644                           	global	__size_of_strchr
  6645                           	__size_of_strchr	equ	__end_of_strchr-_strchr
  6646  0000                     	
  6647                           _strchr:; BSR set to: 0
  6648  001BA6                     
  6649                           ;incstack = 0
  6650                           	opt	stack 23
  6651                           	line	13
  6652                           	
  6653                           l1025:
  6654  001BA6                     	line	14
  6655                           	
  6656                           l2505:
  6657  001BA6                     	movff	(strchr@s),fsr2l
  6658  001BA6  C0F8  FFD9         	movff	(strchr@s+1),fsr2h
  6659  001BAA  C0F9  FFDA         	movlb	0	; () banked
  6660  001BAE  0100               	movf	((strchr@c))&0ffh,w
  6661  001BB0  51FA               xorwf	postinc2,w
  6662  001BB2  18DE               	btfss	status,2
  6663  001BB4  A4D8               	goto	u2261
  6664  001BB6  EFDF  F00D         	goto	u2260
  6665  001BBA  EFE1  F00D         
  6666                           u2261:
  6667  001BBE                     	goto	l2511
  6668  001BBE  EFE9  F00D         u2260:
  6669  001BC2                     	line	15
  6670                           	
  6671                           l2507:; BSR set to: 0
  6672  001BC2                     
  6673                           		movff	(strchr@s),(?_strchr)
  6674  001BC2  C0F8  F0F8         	movff	(strchr@s+1),(?_strchr+1)
  6675  001BC6  C0F9  F0F9         
  6676                           	goto	l1027
  6677  001BCA  EFFF  F00D         	
  6678                           l2509:; BSR set to: 0
  6679  001BCE                     
  6680                           	goto	l1027
  6681  001BCE  EFFF  F00D         	line	16
  6682                           	
  6683                           l1026:; BSR set to: 0
  6684  001BD2                     
  6685                           	line	17
  6686                           	
  6687                           l2511:; BSR set to: 0
  6688  001BD2                     
  6689                           	movff	(strchr@s),fsr2l
  6690  001BD2  C0F8  FFD9         	movff	(strchr@s+1),fsr2h
  6691  001BD6  C0F9  FFDA         	infsnz	((strchr@s))&0ffh
  6692  001BDA  4BF8               	incf	((strchr@s+1))&0ffh
  6693  001BDC  2BF9               	movf	indf2,w
  6694  001BDE  50DF               	btfss	status,2
  6695  001BE0  A4D8               	goto	u2271
  6696  001BE2  EFF5  F00D         	goto	u2270
  6697  001BE6  EFF7  F00D         u2271:
  6698  001BEA                     	goto	l1025
  6699  001BEA  EFD3  F00D         u2270:
  6700  001BEE                     	goto	l2513
  6701  001BEE  EFF9  F00D         	
  6702                           l1028:; BSR set to: 0
  6703  001BF2                     
  6704                           	line	18
  6705                           	
  6706                           l2513:; BSR set to: 0
  6707  001BF2                     
  6708                           		movlw	low(0)
  6709  001BF2  0E00               	movwf	((?_strchr))&0ffh
  6710  001BF4  6FF8               	movlw	high(0)
  6711  001BF6  0E00               	movwf	((?_strchr+1))&0ffh
  6712  001BF8  6FF9               
  6713                           	goto	l1027
  6714  001BFA  EFFF  F00D         	
  6715                           l2515:; BSR set to: 0
  6716  001BFE                     
  6717                           	line	20
  6718                           	
  6719                           l1027:; BSR set to: 0
  6720  001BFE                     
  6721                           	return	;funcret
  6722  001BFE  0012               	opt stack 0
  6723                           GLOBAL	__end_of_strchr
  6724                           	__end_of_strchr:
  6725  001C00                     	signat	_strchr,8314
  6726                           	global	_UART_Write_Text
  6727                           
  6728 ;; *************** function _UART_Write_Text *****************
  6729 ;; Defined at:
  6730 ;;		line 50 in file "setting_hardaware/uart.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  text            2    1[BANK0 ] PTR unsigned char 
  6733 ;;		 -> STR_15(6), STR_1(7), RAM(1535), 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  i               2    5[BANK0 ] int 
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  1    wreg      void 
  6738 ;; Registers used:
  6739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6745 ;;      Params:         0       2       0       0       0       0       0
  6746 ;;      Locals:         0       2       0       0       0       0       0
  6747 ;;      Temps:          0       2       0       0       0       0       0
  6748 ;;      Totals:         0       6       0       0       0       0       0
  6749 ;;Total ram usage:        6 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:    7
  6752 ;; This function calls:
  6753 ;;		_UART_Write
  6754 ;; This function is called by:
  6755 ;;		_Mode1
  6756 ;;		_Mode2
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           psect	text17,class=CODE,space=0,reloc=2,group=0
  6760                           	file	"setting_hardaware/uart.c"
  6761                           	line	50
  6762                           global __ptext17
  6763                           __ptext17:
  6764  001806                     psect	text17
  6765                           	file	"setting_hardaware/uart.c"
  6766                           	line	50
  6767                           	global	__size_of_UART_Write_Text
  6768                           	__size_of_UART_Write_Text	equ	__end_of_UART_Write_Text-_UART_Write_Text
  6769  0000                     	
  6770                           _UART_Write_Text:; BSR set to: 0
  6771  001806                     
  6772                           ;incstack = 0
  6773                           	opt	stack 22
  6774                           	line	51
  6775                           	
  6776                           l2555:
  6777  001806                     ;setting_hardaware/uart.c: 51:     for(int i=0;text[i]!='\0';i++)
  6778                           	movlw	high(0)
  6779  001806  0E00               	movlb	0	; () banked
  6780  001808  0100               	movwf	((UART_Write_Text@i+1))&0ffh
  6781  00180A  6FFE               	movlw	low(0)
  6782  00180C  0E00               	movwf	((UART_Write_Text@i))&0ffh
  6783  00180E  6FFD               	goto	l2561
  6784  001810  EF28  F00C         	
  6785                           l64:; BSR set to: 0
  6786  001814                     
  6787                           	line	52
  6788                           	
  6789                           l2557:
  6790  001814                     ;setting_hardaware/uart.c: 52:         UART_Write(text[i]);
  6791                           	movlb	0	; () banked
  6792  001814  0100               	movf	((UART_Write_Text@i))&0ffh,w
  6793  001816  51FD               	addwf	((UART_Write_Text@text))&0ffh,w
  6794  001818  25F9               	movwf	(??_UART_Write_Text+0+0)&0ffh
  6795  00181A  6FFB               	movf	((UART_Write_Text@i+1))&0ffh,w
  6796  00181C  51FE               	addwfc	((UART_Write_Text@text+1))&0ffh,w
  6797  00181E  21FA               	movwf	(??_UART_Write_Text+0+0+1)&0ffh
  6798  001820  6FFC               	movff	??_UART_Write_Text+0+0,tblptrl
  6799  001822  C0FB  FFF6         	movff	??_UART_Write_Text+0+1,tblptrh
  6800  001826  C0FC  FFF7         	clrf	tblptru
  6801  00182A  6AF8               	
  6802                           	movlw	high __ramtop-1
  6803  00182C  0E05               	cpfsgt	tblptrh
  6804  00182E  64F7               	bra	u2287
  6805  001830  D003               	tblrd	*
  6806  001832  0008               	
  6807                           	movf	tablat,w
  6808  001834  50F5               	bra	u2280
  6809  001836  D005               u2287:
  6810  001838                     	movff	tblptrl,fsr2l
  6811  001838  CFF6 FFD9          	movff	tblptrh,fsr2h
  6812  00183C  CFF7 FFDA          	movf	indf2,w
  6813  001840  50DF               u2280:
  6814  001842                     	
  6815                           	call	_UART_Write
  6816  001842  EC5D  F00E         	
  6817                           l2559:
  6818  001846                     	movlb	0	; () banked
  6819  001846  0100               	infsnz	((UART_Write_Text@i))&0ffh
  6820  001848  4BFD               	incf	((UART_Write_Text@i+1))&0ffh
  6821  00184A  2BFE               	goto	l2561
  6822  00184C  EF28  F00C         	
  6823                           l63:; BSR set to: 0
  6824  001850                     
  6825                           	
  6826                           l2561:; BSR set to: 0
  6827  001850                     
  6828                           	movf	((UART_Write_Text@i))&0ffh,w
  6829  001850  51FD               	addwf	((UART_Write_Text@text))&0ffh,w
  6830  001852  25F9               	movwf	(??_UART_Write_Text+0+0)&0ffh
  6831  001854  6FFB               	movf	((UART_Write_Text@i+1))&0ffh,w
  6832  001856  51FE               	addwfc	((UART_Write_Text@text+1))&0ffh,w
  6833  001858  21FA               	movwf	(??_UART_Write_Text+0+0+1)&0ffh
  6834  00185A  6FFC               	movff	??_UART_Write_Text+0+0,tblptrl
  6835  00185C  C0FB  FFF6         	movff	??_UART_Write_Text+0+1,tblptrh
  6836  001860  C0FC  FFF7         	clrf	tblptru
  6837  001864  6AF8               	
  6838                           	movlw	high __ramtop-1
  6839  001866  0E05               	cpfsgt	tblptrh
  6840  001868  64F7               	bra	u2297
  6841  00186A  D003               	tblrd	*
  6842  00186C  0008               	
  6843                           	movf	tablat,w
  6844  00186E  50F5               	bra	u2290
  6845  001870  D005               u2297:
  6846  001872                     	movff	tblptrl,fsr2l
  6847  001872  CFF6 FFD9          	movff	tblptrh,fsr2h
  6848  001876  CFF7 FFDA          	movf	indf2,w
  6849  00187A  50DF               u2290:
  6850  00187C                     	iorlw	0
  6851  00187C  0900               	btfss	status,2
  6852  00187E  A4D8               	goto	u2301
  6853  001880  EF44  F00C         	goto	u2300
  6854  001884  EF46  F00C         u2301:
  6855  001888                     	goto	l2557
  6856  001888  EF0A  F00C         u2300:
  6857  00188C                     	goto	l66
  6858  00188C  EF48  F00C         	
  6859                           l65:
  6860  001890                     	line	53
  6861                           	
  6862                           l66:
  6863  001890                     	return	;funcret
  6864  001890  0012               	opt stack 0
  6865                           GLOBAL	__end_of_UART_Write_Text
  6866                           	__end_of_UART_Write_Text:
  6867  001892                     	signat	_UART_Write_Text,4217
  6868                           	global	_UART_Write
  6869                           
  6870 ;; *************** function _UART_Write *****************
  6871 ;; Defined at:
  6872 ;;		line 40 in file "setting_hardaware/uart.c"
  6873 ;; Parameters:    Size  Location     Type
  6874 ;;  data            1    wreg     unsigned char 
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;  data            1    0[BANK0 ] unsigned char 
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  1    wreg      void 
  6879 ;; Registers used:
  6880 ;;		wreg
  6881 ;; Tracked objects:
  6882 ;;		On entry : 0/0
  6883 ;;		On exit  : 0/0
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6886 ;;      Params:         0       0       0       0       0       0       0
  6887 ;;      Locals:         0       1       0       0       0       0       0
  6888 ;;      Temps:          0       0       0       0       0       0       0
  6889 ;;      Totals:         0       1       0       0       0       0       0
  6890 ;;Total ram usage:        1 bytes
  6891 ;; Hardware stack levels used:    1
  6892 ;; Hardware stack levels required when called:    6
  6893 ;; This function calls:
  6894 ;;		Nothing
  6895 ;; This function is called by:
  6896 ;;		_UART_Write_Text
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           psect	text18,class=CODE,space=0,reloc=2,group=0
  6900                           	line	40
  6901                           global __ptext18
  6902                           __ptext18:
  6903  001CBA                     psect	text18
  6904                           	file	"setting_hardaware/uart.c"
  6905                           	line	40
  6906                           	global	__size_of_UART_Write
  6907                           	__size_of_UART_Write	equ	__end_of_UART_Write-_UART_Write
  6908  0000                     	
  6909                           _UART_Write:
  6910  001CBA                     ;incstack = 0
  6911                           	opt	stack 22
  6912                           ;UART_Write@data stored from wreg
  6913                           	movlb	0	; () banked
  6914  001CBA  0100               	movwf	((UART_Write@data))&0ffh
  6915  001CBC  6FF8               	line	42
  6916                           	
  6917                           l2471:
  6918  001CBE                     ;setting_hardaware/uart.c: 40: void UART_Write(unsigned char data);setting_hardaware/uar
                                 t.c: 41: {;setting_hardaware/uart.c: 42:     while(!TXSTAbits.TRMT);
  6919                           	goto	l54
  6920  001CBE  EF61  F00E         	
  6921                           l55:
  6922  001CC2                     	
  6923                           l54:
  6924  001CC2                     	btfss	((c:4012)),c,1	;volatile
  6925  001CC2  A2AC               	goto	u2191
  6926  001CC4  EF66  F00E         	goto	u2190
  6927  001CC8  EF68  F00E         u2191:
  6928  001CCC                     	goto	l54
  6929  001CCC  EF61  F00E         u2190:
  6930  001CD0                     	goto	l2473
  6931  001CD0  EF6A  F00E         	
  6932                           l56:
  6933  001CD4                     	line	43
  6934                           	
  6935                           l2473:
  6936  001CD4                     ;setting_hardaware/uart.c: 43:     TXREG = data;
  6937                           	movff	(UART_Write@data),(c:4013)	;volatile
  6938  001CD4  C0F8  FFAD         	line	44
  6939                           	
  6940                           l57:
  6941  001CD8                     	return	;funcret
  6942  001CD8  0012               	opt stack 0
  6943                           GLOBAL	__end_of_UART_Write
  6944                           	__end_of_UART_Write:
  6945  001CDA                     	signat	_UART_Write,4217
  6946                           	global	_GetString
  6947                           
  6948 ;; *************** function _GetString *****************
  6949 ;; Defined at:
  6950 ;;		line 46 in file "setting_hardaware/uart.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;		None
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;		None
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  2    0[BANK0 ] PTR unsigned char 
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6964 ;;      Params:         0       2       0       0       0       0       0
  6965 ;;      Locals:         0       0       0       0       0       0       0
  6966 ;;      Temps:          0       0       0       0       0       0       0
  6967 ;;      Totals:         0       2       0       0       0       0       0
  6968 ;;Total ram usage:        2 bytes
  6969 ;; Hardware stack levels used:    1
  6970 ;; Hardware stack levels required when called:    6
  6971 ;; This function calls:
  6972 ;;		Nothing
  6973 ;; This function is called by:
  6974 ;;		_Mode1
  6975 ;;		_Mode2
  6976 ;;		_Mode3
  6977 ;;		_main
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           psect	text19,class=CODE,space=0,reloc=2,group=0
  6981                           	line	46
  6982                           global __ptext19
  6983                           __ptext19:
  6984  001D44                     psect	text19
  6985                           	file	"setting_hardaware/uart.c"
  6986                           	line	46
  6987                           	global	__size_of_GetString
  6988                           	__size_of_GetString	equ	__end_of_GetString-_GetString
  6989  0000                     	
  6990                           _GetString:
  6991  001D44                     ;incstack = 0
  6992                           	opt	stack 23
  6993                           	line	47
  6994                           	
  6995                           l2551:
  6996  001D44                     ;setting_hardaware/uart.c: 47:     return mystring;
  6997                           		movlw	low(_mystring)
  6998  001D44  0E4C               	movlb	0	; () banked
  6999  001D46  0100               	movwf	((?_GetString))&0ffh
  7000  001D48  6FF8               	movlw	high(_mystring)
  7001  001D4A  0E00               	movwf	((?_GetString+1))&0ffh
  7002  001D4C  6FF9               
  7003                           	goto	l60
  7004  001D4E  EFA9  F00E         	
  7005                           l2553:; BSR set to: 0
  7006  001D52                     
  7007                           	line	48
  7008                           	
  7009                           l60:; BSR set to: 0
  7010  001D52                     
  7011                           	return	;funcret
  7012  001D52  0012               	opt stack 0
  7013                           GLOBAL	__end_of_GetString
  7014                           	__end_of_GetString:
  7015  001D54                     	signat	_GetString,90
  7016                           	global	_ClearBuffer
  7017                           
  7018 ;; *************** function _ClearBuffer *****************
  7019 ;; Defined at:
  7020 ;;		line 55 in file "setting_hardaware/uart.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;		None
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  i               2    0[BANK0 ] int 
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  1    wreg      void 
  7027 ;; Registers used:
  7028 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7034 ;;      Params:         0       0       0       0       0       0       0
  7035 ;;      Locals:         0       2       0       0       0       0       0
  7036 ;;      Temps:          0       0       0       0       0       0       0
  7037 ;;      Totals:         0       2       0       0       0       0       0
  7038 ;;Total ram usage:        2 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; Hardware stack levels required when called:    6
  7041 ;; This function calls:
  7042 ;;		Nothing
  7043 ;; This function is called by:
  7044 ;;		_Mode1
  7045 ;;		_Mode2
  7046 ;;		_Mode3
  7047 ;;		_Playmusic
  7048 ;;		_Stopmusic
  7049 ;;		_main
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           psect	text20,class=CODE,space=0,reloc=2,group=0
  7053                           	line	55
  7054                           global __ptext20
  7055                           __ptext20:
  7056  001A82                     psect	text20
  7057                           	file	"setting_hardaware/uart.c"
  7058                           	line	55
  7059                           	global	__size_of_ClearBuffer
  7060                           	__size_of_ClearBuffer	equ	__end_of_ClearBuffer-_ClearBuffer
  7061  0000                     	
  7062                           _ClearBuffer:; BSR set to: 0
  7063  001A82                     
  7064                           ;incstack = 0
  7065                           	opt	stack 23
  7066                           	line	56
  7067                           	
  7068                           l2563:
  7069  001A82                     ;setting_hardaware/uart.c: 56:     for(int i = 0; i < 10 ; i++)
  7070                           	movlw	high(0)
  7071  001A82  0E00               	movlb	0	; () banked
  7072  001A84  0100               	movwf	((ClearBuffer@i+1))&0ffh
  7073  001A86  6FF9               	movlw	low(0)
  7074  001A88  0E00               	movwf	((ClearBuffer@i))&0ffh
  7075  001A8A  6FF8               	
  7076                           l2565:; BSR set to: 0
  7077  001A8C                     
  7078                           	btfsc	((ClearBuffer@i+1))&0ffh,7
  7079  001A8C  BFF9               	goto	u2311
  7080  001A8E  EF52  F00D         	movf	((ClearBuffer@i+1))&0ffh,w
  7081  001A92  51F9               	bnz	u2310
  7082  001A94  E109               	movlw	10
  7083  001A96  0E0A               	subwf	 ((ClearBuffer@i))&0ffh,w
  7084  001A98  5DF8               	btfss	status,0
  7085  001A9A  A0D8               	goto	u2311
  7086  001A9C  EF52  F00D         	goto	u2310
  7087  001AA0  EF54  F00D         
  7088                           u2311:
  7089  001AA4                     	goto	l2569
  7090  001AA4  EF58  F00D         u2310:
  7091  001AA8                     	goto	l2575
  7092  001AA8  EF72  F00D         	
  7093                           l2567:; BSR set to: 0
  7094  001AAC                     
  7095                           	goto	l2575
  7096  001AAC  EF72  F00D         	
  7097                           l69:; BSR set to: 0
  7098  001AB0                     
  7099                           	line	57
  7100                           	
  7101                           l2569:; BSR set to: 0
  7102  001AB0                     
  7103                           ;setting_hardaware/uart.c: 57:         mystring[i] = '\0';
  7104                           	movlw	low(_mystring)
  7105  001AB0  0E4C               	addwf	((ClearBuffer@i))&0ffh,w
  7106  001AB2  25F8               	movwf	c:fsr2l
  7107  001AB4  6ED9               	movlw	high(_mystring)
  7108  001AB6  0E00               	addwfc	((ClearBuffer@i+1))&0ffh,w
  7109  001AB8  21F9               	movwf	1+c:fsr2l
  7110  001ABA  6EDA               	movlw	low(0)
  7111  001ABC  0E00               	movwf	indf2
  7112  001ABE  6EDF               	
  7113                           l2571:; BSR set to: 0
  7114  001AC0                     
  7115                           	infsnz	((ClearBuffer@i))&0ffh
  7116  001AC0  4BF8               	incf	((ClearBuffer@i+1))&0ffh
  7117  001AC2  2BF9               	
  7118                           l2573:; BSR set to: 0
  7119  001AC4                     
  7120                           	btfsc	((ClearBuffer@i+1))&0ffh,7
  7121  001AC4  BFF9               	goto	u2321
  7122  001AC6  EF6E  F00D         	movf	((ClearBuffer@i+1))&0ffh,w
  7123  001ACA  51F9               	bnz	u2320
  7124  001ACC  E109               	movlw	10
  7125  001ACE  0E0A               	subwf	 ((ClearBuffer@i))&0ffh,w
  7126  001AD0  5DF8               	btfss	status,0
  7127  001AD2  A0D8               	goto	u2321
  7128  001AD4  EF6E  F00D         	goto	u2320
  7129  001AD8  EF70  F00D         
  7130                           u2321:
  7131  001ADC                     	goto	l2569
  7132  001ADC  EF58  F00D         u2320:
  7133  001AE0                     	goto	l2575
  7134  001AE0  EF72  F00D         	
  7135                           l70:; BSR set to: 0
  7136  001AE4                     
  7137                           	line	58
  7138                           	
  7139                           l2575:; BSR set to: 0
  7140  001AE4                     
  7141                           ;setting_hardaware/uart.c: 58:     lenStr = 0;
  7142                           	movlw	high(0)
  7143  001AE4  0E00               	movwf	((c:_lenStr+1)),c
  7144  001AE6  6E4B               	movlw	low(0)
  7145  001AE8  0E00               	movwf	((c:_lenStr)),c
  7146  001AEA  6E4A               	line	59
  7147                           	
  7148                           l71:; BSR set to: 0
  7149  001AEC                     
  7150                           	return	;funcret
  7151  001AEC  0012               	opt stack 0
  7152                           GLOBAL	__end_of_ClearBuffer
  7153                           	__end_of_ClearBuffer:
  7154  001AEE                     	signat	_ClearBuffer,89
  7155                           	global	_Lo_ISR
  7156                           
  7157 ;; *************** function _Lo_ISR *****************
  7158 ;; Defined at:
  7159 ;;		line 75 in file "setting_hardaware/uart.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;		None
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;		None
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  1    wreg      void 
  7166 ;; Registers used:
  7167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7173 ;;      Params:         0       0       0       0       0       0       0
  7174 ;;      Locals:         0       0       0       0       0       0       0
  7175 ;;      Temps:          5       0       0       0       0       0       0
  7176 ;;      Totals:         5       0       0       0       0       0       0
  7177 ;;Total ram usage:        5 bytes
  7178 ;; Hardware stack levels used:    1
  7179 ;; Hardware stack levels required when called:    5
  7180 ;; This function calls:
  7181 ;;		_MyusartRead
  7182 ;; This function is called by:
  7183 ;;		Interrupt level 1
  7184 ;; This function uses a non-reentrant model
  7185 ;;
  7186                           psect	intcodelo,class=CODE,space=0,reloc=2
  7187                           global __pintcodelo
  7188                           __pintcodelo:
  7189  000018                     psect	intcodelo
  7190                           	file	"setting_hardaware/uart.c"
  7191                           	line	75
  7192                           	global	__size_of_Lo_ISR
  7193                           	__size_of_Lo_ISR	equ	__end_of_Lo_ISR-_Lo_ISR
  7194  0000                     	
  7195                           _Lo_ISR:; BSR set to: 0
  7196  000018                     
  7197                           ;incstack = 0
  7198                           	opt	stack 22
  7199                           	bsf int$flags,0,c ;set compiler interrupt flag (level 1)
  7200  000018  805A               	movff	status+0,??_Lo_ISR+0
  7201  00001A  CFD8 F027          	movff	wreg+0,??_Lo_ISR+1
  7202  00001E  CFE8 F028          	movff	bsr+0,??_Lo_ISR+2
  7203  000022  CFE0 F029          	movff	fsr2l+0,??_Lo_ISR+3
  7204  000026  CFD9 F02A          	movff	fsr2h+0,??_Lo_ISR+4
  7205  00002A  CFDA F02B          	line	77
  7206                           	
  7207                           i1l2353:
  7208  00002E                     ;setting_hardaware/uart.c: 77:     if(RCIF)
  7209                           	btfss	c:(31989/8),(31989)&7	;volatile
  7210  00002E  AA9E               	goto	i1u175_21
  7211  000030  EF1C  F000         	goto	i1u175_20
  7212  000034  EF1E  F000         i1u175_21:
  7213  000038                     	goto	i1l81
  7214  000038  EF30  F000         i1u175_20:
  7215  00003C                     	line	79
  7216                           	
  7217                           i1l2355:
  7218  00003C                     ;setting_hardaware/uart.c: 78:     {;setting_hardaware/uart.c: 79:         if(RCSTAbits.
                                 OERR)
  7219                           	btfss	((c:4011)),c,1	;volatile
  7220  00003C  A2AB               	goto	i1u176_21
  7221  00003E  EF23  F000         	goto	i1u176_20
  7222  000042  EF25  F000         i1u176_21:
  7223  000046                     	goto	i1l2359
  7224  000046  EF2A  F000         i1u176_20:
  7225  00004A                     	line	81
  7226                           	
  7227                           i1l2357:
  7228  00004A                     ;setting_hardaware/uart.c: 80:         {;setting_hardaware/uart.c: 81:             CREN 
                                 = 0;
  7229                           	bcf	c:(32092/8),(32092)&7	;volatile
  7230  00004A  98AB               	line	82
  7231                           ;setting_hardaware/uart.c: 82:             __nop();
  7232                           	opt	asmopt_push
  7233                           	opt	asmopt_off
  7234                           	nop
  7235  00004C  F000               	opt	asmopt_pop
  7236                           	line	83
  7237                           ;setting_hardaware/uart.c: 83:             CREN = 1;
  7238                           	bsf	c:(32092/8),(32092)&7	;volatile
  7239  00004E  88AB               	goto	i1l2359
  7240  000050  EF2A  F000         	line	84
  7241                           ;setting_hardaware/uart.c: 84:         }
  7242                           	
  7243                           i1l80:
  7244  000054                     	line	86
  7245                           	
  7246                           i1l2359:
  7247  000054                     ;setting_hardaware/uart.c: 86:         MyusartRead();
  7248                           	call	_MyusartRead	;wreg free
  7249  000054  EC00  F00E         	goto	i1l81
  7250  000058  EF30  F000         	line	87
  7251                           ;setting_hardaware/uart.c: 87:     }
  7252                           	
  7253                           i1l79:
  7254  00005C                     	goto	i1l81
  7255  00005C  EF30  F000         	line	90
  7256                           	
  7257                           i1l2361:
  7258  000060                     	line	91
  7259                           ;setting_hardaware/uart.c: 90:     return;
  7260                           	
  7261                           i1l81:
  7262  000060                     	movff	??_Lo_ISR+4,fsr2h+0
  7263  000060  C02B  FFDA         	movff	??_Lo_ISR+3,fsr2l+0
  7264  000064  C02A  FFD9         	movff	??_Lo_ISR+2,bsr+0
  7265  000068  C029  FFE0         	movff	??_Lo_ISR+1,wreg+0
  7266  00006C  C028  FFE8         	movff	??_Lo_ISR+0,status+0
  7267  000070  C027  FFD8         	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  7268  000074  905A               	retfie
  7269  000076  0010               	opt stack 0
  7270                           GLOBAL	__end_of_Lo_ISR
  7271                           	__end_of_Lo_ISR:
  7272  000078                     	signat	_Lo_ISR,89
  7273                           	global	_MyusartRead
  7274                           
  7275 ;; *************** function _MyusartRead *****************
  7276 ;; Defined at:
  7277 ;;		line 61 in file "setting_hardaware/uart.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;		None
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;		None
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  1    wreg      void 
  7284 ;; Registers used:
  7285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7291 ;;      Params:         0       0       0       0       0       0       0
  7292 ;;      Locals:         0       0       0       0       0       0       0
  7293 ;;      Temps:          0       0       0       0       0       0       0
  7294 ;;      Totals:         0       0       0       0       0       0       0
  7295 ;;Total ram usage:        0 bytes
  7296 ;; Hardware stack levels used:    1
  7297 ;; Hardware stack levels required when called:    4
  7298 ;; This function calls:
  7299 ;;		___awmod
  7300 ;;		i1_UART_Write
  7301 ;; This function is called by:
  7302 ;;		_Lo_ISR
  7303 ;; This function uses a non-reentrant model
  7304 ;;
  7305                           psect	text22,class=CODE,space=0,reloc=2,group=0
  7306                           	line	61
  7307                           global __ptext22
  7308                           __ptext22:
  7309  001C00                     psect	text22
  7310                           	file	"setting_hardaware/uart.c"
  7311                           	line	61
  7312                           	global	__size_of_MyusartRead
  7313                           	__size_of_MyusartRead	equ	__end_of_MyusartRead-_MyusartRead
  7314  0000                     	
  7315                           _MyusartRead:
  7316  001C00                     ;incstack = 0
  7317                           	opt	stack 22
  7318                           	line	63
  7319                           	
  7320                           i1l1937:
  7321  001C00                     ;setting_hardaware/uart.c: 63:     mystring[lenStr] = RCREG;
  7322                           	movlw	low(_mystring)
  7323  001C00  0E4C               	addwf	((c:_lenStr)),c,w
  7324  001C02  244A               	movwf	c:fsr2l
  7325  001C04  6ED9               	movlw	high(_mystring)
  7326  001C06  0E00               	addwfc	((c:_lenStr+1)),c,w
  7327  001C08  204B               	movwf	1+c:fsr2l
  7328  001C0A  6EDA               	movff	(c:4014),indf2	;volatile
  7329  001C0C  CFAE FFDF          
  7330                           	line	64
  7331                           	
  7332                           i1l1939:
  7333  001C10                     ;setting_hardaware/uart.c: 64:     UART_Write(mystring[lenStr]);
  7334                           	movlw	low(_mystring)
  7335  001C10  0E4C               	addwf	((c:_lenStr)),c,w
  7336  001C12  244A               	movwf	c:fsr2l
  7337  001C14  6ED9               	movlw	high(_mystring)
  7338  001C16  0E00               	addwfc	((c:_lenStr+1)),c,w
  7339  001C18  204B               	movwf	1+c:fsr2l
  7340  001C1A  6EDA               	movf	indf2,w
  7341  001C1C  50DF               	
  7342                           	call	i1_UART_Write
  7343  001C1E  EC6D  F00E         	line	65
  7344                           	
  7345                           i1l1941:
  7346  001C22                     ;setting_hardaware/uart.c: 65:     lenStr++;
  7347                           	infsnz	((c:_lenStr)),c
  7348  001C22  4A4A               	incf	((c:_lenStr+1)),c
  7349  001C24  2A4B               	line	66
  7350                           	
  7351                           i1l1943:
  7352  001C26                     ;setting_hardaware/uart.c: 66:     lenStr %= 10;
  7353                           	movff	(c:_lenStr),(c:___awmod@dividend)
  7354  001C26  C04A  F021         	movff	(c:_lenStr+1),(c:___awmod@dividend+1)
  7355  001C2A  C04B  F022         	movlw	high(0Ah)
  7356  001C2E  0E00               	movwf	((c:___awmod@divisor+1)),c
  7357  001C30  6E24               	movlw	low(0Ah)
  7358  001C32  0E0A               	movwf	((c:___awmod@divisor)),c
  7359  001C34  6E23               	call	___awmod	;wreg free
  7360  001C36  ECE4  F00A         	movff	0+?___awmod,(c:_lenStr)
  7361  001C3A  C021  F04A         	movff	1+?___awmod,(c:_lenStr+1)
  7362  001C3E  C022  F04B         	goto	i1l74
  7363  001C42  EF23  F00E         	line	69
  7364                           	
  7365                           i1l1945:
  7366  001C46                     	line	70
  7367                           ;setting_hardaware/uart.c: 69:     return ;
  7368                           	
  7369                           i1l74:
  7370  001C46                     	return	;funcret
  7371  001C46  0012               	opt stack 0
  7372                           GLOBAL	__end_of_MyusartRead
  7373                           	__end_of_MyusartRead:
  7374  001C48                     	signat	_MyusartRead,89
  7375                           	global	i1_UART_Write
  7376                           
  7377 ;; *************** function i1_UART_Write *****************
  7378 ;; Defined at:
  7379 ;;		line 40 in file "setting_hardaware/uart.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  data            1    wreg     unsigned char 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  data            1   32[COMRAM] unsigned char 
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  1    wreg      void 
  7386 ;; Registers used:
  7387 ;;		wreg
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7393 ;;      Params:         0       0       0       0       0       0       0
  7394 ;;      Locals:         1       0       0       0       0       0       0
  7395 ;;      Temps:          0       0       0       0       0       0       0
  7396 ;;      Totals:         1       0       0       0       0       0       0
  7397 ;;Total ram usage:        1 bytes
  7398 ;; Hardware stack levels used:    1
  7399 ;; Hardware stack levels required when called:    3
  7400 ;; This function calls:
  7401 ;;		Nothing
  7402 ;; This function is called by:
  7403 ;;		_MyusartRead
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           psect	text23,class=CODE,space=0,reloc=2,group=0
  7407                           	line	40
  7408                           global __ptext23
  7409                           __ptext23:
  7410  001CDA                     psect	text23
  7411                           	file	"setting_hardaware/uart.c"
  7412                           	line	40
  7413                           	global	__size_ofi1_UART_Write
  7414                           	__size_ofi1_UART_Write	equ	__end_ofi1_UART_Write-i1_UART_Write
  7415  0000                     	
  7416                           i1_UART_Write:
  7417  001CDA                     ;incstack = 0
  7418                           	opt	stack 22
  7419                           ;i1UART_Write@data stored from wreg
  7420                           	movwf	((c:i1UART_Write@data)),c
  7421  001CDA  6E21               	line	42
  7422                           	
  7423                           i1l1929:
  7424  001CDC                     ;setting_hardaware/uart.c: 40: void UART_Write(unsigned char data);setting_hardaware/uar
                                 t.c: 41: {;setting_hardaware/uart.c: 42:     while(!TXSTAbits.TRMT);
  7425                           	goto	i1l54
  7426  001CDC  EF70  F00E         	
  7427                           i1l55:
  7428  001CE0                     	
  7429                           i1l54:
  7430  001CE0                     	btfss	((c:4012)),c,1	;volatile
  7431  001CE0  A2AC               	goto	i1u133_21
  7432  001CE2  EF75  F00E         	goto	i1u133_20
  7433  001CE6  EF77  F00E         i1u133_21:
  7434  001CEA                     	goto	i1l54
  7435  001CEA  EF70  F00E         i1u133_20:
  7436  001CEE                     	goto	i1l1931
  7437  001CEE  EF79  F00E         	
  7438                           i1l56:
  7439  001CF2                     	line	43
  7440                           	
  7441                           i1l1931:
  7442  001CF2                     ;setting_hardaware/uart.c: 43:     TXREG = data;
  7443                           	movff	(c:i1UART_Write@data),(c:4013)	;volatile
  7444  001CF2  C021  FFAD         	line	44
  7445                           	
  7446                           i1l57:
  7447  001CF6                     	return	;funcret
  7448  001CF6  0012               	opt stack 0
  7449                           GLOBAL	__end_ofi1_UART_Write
  7450                           	__end_ofi1_UART_Write:
  7451  001CF8                     	signat	i1_UART_Write,89
  7452                           	global	___awmod
  7453                           
  7454 ;; *************** function ___awmod *****************
  7455 ;; Defined at:
  7456 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  dividend        2   32[COMRAM] int 
  7459 ;;  divisor         2   34[COMRAM] int 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;  sign            1   37[COMRAM] unsigned char 
  7462 ;;  counter         1   36[COMRAM] unsigned char 
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  2   32[COMRAM] int 
  7465 ;; Registers used:
  7466 ;;		wreg, status,2, status,0
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7472 ;;      Params:         4       0       0       0       0       0       0
  7473 ;;      Locals:         2       0       0       0       0       0       0
  7474 ;;      Temps:          0       0       0       0       0       0       0
  7475 ;;      Totals:         6       0       0       0       0       0       0
  7476 ;;Total ram usage:        6 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; Hardware stack levels required when called:    3
  7479 ;; This function calls:
  7480 ;;		Nothing
  7481 ;; This function is called by:
  7482 ;;		_MyusartRead
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           psect	text24,class=CODE,space=0,reloc=2,group=1
  7486                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  7487                           	line	7
  7488                           global __ptext24
  7489                           __ptext24:
  7490  0015C8                     psect	text24
  7491                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  7492                           	line	7
  7493                           	global	__size_of___awmod
  7494                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  7495  0000                     	
  7496                           ___awmod:
  7497  0015C8                     ;incstack = 0
  7498                           	opt	stack 22
  7499                           	line	12
  7500                           	
  7501                           i1l1893:
  7502  0015C8                     	movlw	low(0)
  7503  0015C8  0E00               	movwf	((c:___awmod@sign)),c
  7504  0015CA  6E26               	line	13
  7505                           	
  7506                           i1l1895:
  7507  0015CC                     	btfsc	((c:___awmod@dividend+1)),c,7
  7508  0015CC  BE22               	goto	i1u127_20
  7509  0015CE  EFED  F00A         	goto	i1u127_21
  7510  0015D2  EFEB  F00A         
  7511                           i1u127_21:
  7512  0015D6                     	goto	i1l1901
  7513  0015D6  EFF5  F00A         i1u127_20:
  7514  0015DA                     	line	14
  7515                           	
  7516                           i1l1897:
  7517  0015DA                     	negf	((c:___awmod@dividend)),c
  7518  0015DA  6C21               	comf	((c:___awmod@dividend+1)),c
  7519  0015DC  1E22               	btfsc	status,0
  7520  0015DE  B0D8               	incf	((c:___awmod@dividend+1)),c
  7521  0015E0  2A22               	line	15
  7522                           	
  7523                           i1l1899:
  7524  0015E2                     	movlw	low(01h)
  7525  0015E2  0E01               	movwf	((c:___awmod@sign)),c
  7526  0015E4  6E26               	goto	i1l1901
  7527  0015E6  EFF5  F00A         	line	16
  7528                           	
  7529                           i1l561:
  7530  0015EA                     	line	17
  7531                           	
  7532                           i1l1901:
  7533  0015EA                     	btfsc	((c:___awmod@divisor+1)),c,7
  7534  0015EA  BE24               	goto	i1u128_20
  7535  0015EC  EFFC  F00A         	goto	i1u128_21
  7536  0015F0  EFFA  F00A         
  7537                           i1u128_21:
  7538  0015F4                     	goto	i1l1905
  7539  0015F4  EF02  F00B         i1u128_20:
  7540  0015F8                     	line	18
  7541                           	
  7542                           i1l1903:
  7543  0015F8                     	negf	((c:___awmod@divisor)),c
  7544  0015F8  6C23               	comf	((c:___awmod@divisor+1)),c
  7545  0015FA  1E24               	btfsc	status,0
  7546  0015FC  B0D8               	incf	((c:___awmod@divisor+1)),c
  7547  0015FE  2A24               	goto	i1l1905
  7548  001600  EF02  F00B         	
  7549                           i1l562:
  7550  001604                     	line	19
  7551                           	
  7552                           i1l1905:
  7553  001604                     	movf	((c:___awmod@divisor)),c,w
  7554  001604  5023               iorwf	((c:___awmod@divisor+1)),c,w
  7555  001606  1024               	btfsc	status,2
  7556  001608  B4D8               	goto	i1u129_21
  7557  00160A  EF09  F00B         	goto	i1u129_20
  7558  00160E  EF0B  F00B         
  7559                           i1u129_21:
  7560  001612                     	goto	i1l1921
  7561  001612  EF3B  F00B         i1u129_20:
  7562  001616                     	line	20
  7563                           	
  7564                           i1l1907:
  7565  001616                     	movlw	low(01h)
  7566  001616  0E01               	movwf	((c:___awmod@counter)),c
  7567  001618  6E25               	line	21
  7568                           	goto	i1l1911
  7569  00161A  EF15  F00B         	
  7570                           i1l565:
  7571  00161E                     	line	22
  7572                           	
  7573                           i1l1909:
  7574  00161E                     	bcf	status,0
  7575  00161E  90D8               	rlcf	((c:___awmod@divisor)),c
  7576  001620  3623               	rlcf	((c:___awmod@divisor+1)),c
  7577  001622  3624               	line	23
  7578                           	incf	((c:___awmod@counter)),c
  7579  001624  2A25               	goto	i1l1911
  7580  001626  EF15  F00B         	line	24
  7581                           	
  7582                           i1l564:
  7583  00162A                     	line	21
  7584                           	
  7585                           i1l1911:
  7586  00162A                     	
  7587                           	btfss	((c:___awmod@divisor+1)),c,(15)&7
  7588  00162A  AE24               	goto	i1u130_21
  7589  00162C  EF1A  F00B         	goto	i1u130_20
  7590  001630  EF1C  F00B         i1u130_21:
  7591  001634                     	goto	i1l1909
  7592  001634  EF0F  F00B         i1u130_20:
  7593  001638                     	goto	i1l1913
  7594  001638  EF20  F00B         	
  7595                           i1l566:
  7596  00163C                     	goto	i1l1913
  7597  00163C  EF20  F00B         	line	25
  7598                           	
  7599                           i1l567:
  7600  001640                     	line	26
  7601                           	
  7602                           i1l1913:
  7603  001640                     		movf	((c:___awmod@divisor)),c,w
  7604  001640  5023               	subwf	((c:___awmod@dividend)),c,w
  7605  001642  5C21               	movf	((c:___awmod@divisor+1)),c,w
  7606  001644  5024               	subwfb	((c:___awmod@dividend+1)),c,w
  7607  001646  5822               	btfss	status,0
  7608  001648  A0D8               	goto	i1u131_21
  7609  00164A  EF29  F00B         	goto	i1u131_20
  7610  00164E  EF2B  F00B         
  7611                           i1u131_21:
  7612  001652                     	goto	i1l1917
  7613  001652  EF31  F00B         i1u131_20:
  7614  001656                     	line	27
  7615                           	
  7616                           i1l1915:
  7617  001656                     	movf	((c:___awmod@divisor)),c,w
  7618  001656  5023               	subwf	((c:___awmod@dividend)),c
  7619  001658  5E21               	movf	((c:___awmod@divisor+1)),c,w
  7620  00165A  5024               	subwfb	((c:___awmod@dividend+1)),c
  7621  00165C  5A22               
  7622                           	goto	i1l1917
  7623  00165E  EF31  F00B         	
  7624                           i1l568:
  7625  001662                     	line	28
  7626                           	
  7627                           i1l1917:
  7628  001662                     	bcf	status,0
  7629  001662  90D8               	rrcf	((c:___awmod@divisor+1)),c
  7630  001664  3224               	rrcf	((c:___awmod@divisor)),c
  7631  001666  3223               	line	29
  7632                           	
  7633                           i1l1919:
  7634  001668                     	decfsz	((c:___awmod@counter)),c
  7635  001668  2E25               	
  7636                           	goto	i1l1913
  7637  00166A  EF20  F00B         	goto	i1l1921
  7638  00166E  EF3B  F00B         	
  7639                           i1l569:
  7640  001672                     	goto	i1l1921
  7641  001672  EF3B  F00B         	line	30
  7642                           	
  7643                           i1l563:
  7644  001676                     	line	31
  7645                           	
  7646                           i1l1921:
  7647  001676                     	movf	((c:___awmod@sign)),c,w
  7648  001676  5026               	btfsc	status,2
  7649  001678  B4D8               	goto	i1u132_21
  7650  00167A  EF41  F00B         	goto	i1u132_20
  7651  00167E  EF43  F00B         i1u132_21:
  7652  001682                     	goto	i1l1925
  7653  001682  EF49  F00B         i1u132_20:
  7654  001686                     	line	32
  7655                           	
  7656                           i1l1923:
  7657  001686                     	negf	((c:___awmod@dividend)),c
  7658  001686  6C21               	comf	((c:___awmod@dividend+1)),c
  7659  001688  1E22               	btfsc	status,0
  7660  00168A  B0D8               	incf	((c:___awmod@dividend+1)),c
  7661  00168C  2A22               	goto	i1l1925
  7662  00168E  EF49  F00B         	
  7663                           i1l570:
  7664  001692                     	line	33
  7665                           	
  7666                           i1l1925:
  7667  001692                     	movff	(c:___awmod@dividend),(c:?___awmod)
  7668  001692  C021  F021         	movff	(c:___awmod@dividend+1),(c:?___awmod+1)
  7669  001696  C022  F022         	goto	i1l571
  7670  00169A  EF4F  F00B         	
  7671                           i1l1927:
  7672  00169E                     	line	34
  7673                           	
  7674                           i1l571:
  7675  00169E                     	return	;funcret
  7676  00169E  0012               	opt stack 0
  7677                           GLOBAL	__end_of___awmod
  7678                           	__end_of___awmod:
  7679  0016A0                     	signat	___awmod,8314
  7680                           	global	_tc_int
  7681                           
  7682 ;; *************** function _tc_int *****************
  7683 ;; Defined at:
  7684 ;;		line 36 in file "main.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;		None
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;		None
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  1    wreg      void 
  7691 ;; Registers used:
  7692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7698 ;;      Params:         0       0       0       0       0       0       0
  7699 ;;      Locals:         0       0       0       0       0       0       0
  7700 ;;      Temps:         12       0       0       0       0       0       0
  7701 ;;      Totals:        12       0       0       0       0       0       0
  7702 ;;Total ram usage:       12 bytes
  7703 ;; Hardware stack levels used:    1
  7704 ;; Hardware stack levels required when called:    2
  7705 ;; This function calls:
  7706 ;;		___aldiv
  7707 ;;		___awdiv
  7708 ;;		___wmul
  7709 ;;		i2_UART_Write_Text
  7710 ;; This function is called by:
  7711 ;;		Interrupt level 2
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           psect	intcode,class=CODE,space=0,reloc=2
  7715                           global __pintcode
  7716                           __pintcode:
  7717  000008                     psect	intcode
  7718                           	file	"main.c"
  7719                           	line	36
  7720                           	global	__size_of_tc_int
  7721                           	__size_of_tc_int	equ	__end_of_tc_int-_tc_int
  7722  0000                     	
  7723                           _tc_int:
  7724  000008                     ;incstack = 0
  7725                           	opt	stack 22
  7726                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  7727  000008  825A               	global	int_func
  7728                           	call	int_func,f	;refresh shadow registers
  7729  00000A  ED67  F005         psect	intcode_body,class=CODE,space=0,reloc=2
  7730                           global __pintcode_body
  7731                           __pintcode_body:
  7732  000ACE                     int_func:
  7733  000ACE                     
  7734                           	pop	; remove dummy address from shadow register refresh
  7735  000ACE  0006               	movff	fsr2l+0,??_tc_int+4
  7736  000AD0  CFD9 F019          	movff	fsr2h+0,??_tc_int+5
  7737  000AD4  CFDA F01A          	movff	prodl+0,??_tc_int+6
  7738  000AD8  CFF3 F01B          	movff	prodh+0,??_tc_int+7
  7739  000ADC  CFF4 F01C          	movff	tblptrl+0,??_tc_int+8
  7740  000AE0  CFF6 F01D          	movff	tblptrh+0,??_tc_int+9
  7741  000AE4  CFF7 F01E          	movff	tblptru+0,??_tc_int+10
  7742  000AE8  CFF8 F01F          	movff	tablat+0,??_tc_int+11
  7743  000AEC  CFF5 F020          	line	38
  7744                           	
  7745                           i2l2363:
  7746  000AF0                     ;main.c: 38:     if(PIR1bits.TMR1IF){
  7747                           	btfss	((c:3998)),c,0	;volatile
  7748  000AF0  A09E               	goto	i2u177_41
  7749  000AF2  EF7D  F005         	goto	i2u177_40
  7750  000AF6  EF7F  F005         i2u177_41:
  7751  000AFA                     	goto	i2l211
  7752  000AFA  EF46  F006         i2u177_40:
  7753  000AFE                     	line	39
  7754                           	
  7755                           i2l2365:
  7756  000AFE                     ;main.c: 39:         if(music_count==tempo[music_choose][music_index]){
  7757                           	movff	(c:_music_choose),(c:___wmul@multiplier)
  7758  000AFE  C044  F001         	movff	(c:_music_choose+1),(c:___wmul@multiplier+1)
  7759  000B02  C045  F002         	movlw	high(03Ch)
  7760  000B06  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  7761  000B08  6E04               	movlw	low(03Ch)
  7762  000B0A  0E3C               	movwf	((c:___wmul@multiplicand)),c
  7763  000B0C  6E03               	call	___wmul	;wreg free
  7764  000B0E  EC24  F00E         	movlw	low((_tempo))
  7765  000B12  0E00               	movwf	(??_tc_int+0+0)&0ffh,c
  7766  000B14  6E15               	movlw	high((_tempo))
  7767  000B16  0E01               	movwf	1+(??_tc_int+0+0)&0ffh,c
  7768  000B18  6E16               	movf	(0+?___wmul),c,w
  7769  000B1A  5001               	addwf	(??_tc_int+0+0),c
  7770  000B1C  2615               	movf	(1+?___wmul),c,w
  7771  000B1E  5002               	addwfc	(??_tc_int+0+1),c
  7772  000B20  2216               	bcf	status,0
  7773  000B22  90D8               	rlcf	((c:_music_index)),c,w
  7774  000B24  3446               	movwf	fsr2l
  7775  000B26  6ED9               	rlcf	((c:_music_index+1)),c,w
  7776  000B28  3447               	movwf	fsr2h
  7777  000B2A  6EDA               	movf	(??_tc_int+0+0),c,w
  7778  000B2C  5015               	addwf	fsr2l
  7779  000B2E  26D9               	movf	(??_tc_int+0+1),c,w
  7780  000B30  5016               	addwfc	fsr2h
  7781  000B32  22DA               
  7782                           	movf	((c:_music_count)),c,w
  7783  000B34  5048               xorwf	postinc2,w
  7784  000B36  18DE               	bnz	i2u178_41
  7785  000B38  E107               movf	((c:_music_count+1)),c,w
  7786  000B3A  5049               xorwf	postinc2,w
  7787  000B3C  18DE               	btfss	status,2
  7788  000B3E  A4D8               	goto	i2u178_41
  7789  000B40  EFA4  F005         	goto	i2u178_40
  7790  000B44  EFA6  F005         
  7791                           i2u178_41:
  7792  000B48                     	goto	i2l2381
  7793  000B48  EF22  F006         i2u178_40:
  7794  000B4C                     	line	40
  7795                           	
  7796                           i2l2367:
  7797  000B4C                     ;main.c: 40:             music_count=0;
  7798                           	movlw	high(0)
  7799  000B4C  0E00               	movwf	((c:_music_count+1)),c
  7800  000B4E  6E49               	movlw	low(0)
  7801  000B50  0E00               	movwf	((c:_music_count)),c
  7802  000B52  6E48               	line	41
  7803                           	
  7804                           i2l2369:
  7805  000B54                     ;main.c: 41:             music_index++;
  7806                           	infsnz	((c:_music_index)),c
  7807  000B54  4A46               	incf	((c:_music_index+1)),c
  7808  000B56  2A47               	line	42
  7809                           	
  7810                           i2l2371:
  7811  000B58                     ;main.c: 42:             if(tone[music_choose][music_index] == 0)
  7812                           	movff	(c:_music_choose),(c:___wmul@multiplier)
  7813  000B58  C044  F001         	movff	(c:_music_choose+1),(c:___wmul@multiplier+1)
  7814  000B5C  C045  F002         	movlw	high(03Ch)
  7815  000B60  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  7816  000B62  6E04               	movlw	low(03Ch)
  7817  000B64  0E3C               	movwf	((c:___wmul@multiplicand)),c
  7818  000B66  6E03               	call	___wmul	;wreg free
  7819  000B68  EC24  F00E         	movlw	low((_tone))
  7820  000B6C  0E80               	movwf	(??_tc_int+0+0)&0ffh,c
  7821  000B6E  6E15               	movlw	high((_tone))
  7822  000B70  0E00               	movwf	1+(??_tc_int+0+0)&0ffh,c
  7823  000B72  6E16               	movf	(0+?___wmul),c,w
  7824  000B74  5001               	addwf	(??_tc_int+0+0),c
  7825  000B76  2615               	movf	(1+?___wmul),c,w
  7826  000B78  5002               	addwfc	(??_tc_int+0+1),c
  7827  000B7A  2216               	bcf	status,0
  7828  000B7C  90D8               	rlcf	((c:_music_index)),c,w
  7829  000B7E  3446               	movwf	fsr2l
  7830  000B80  6ED9               	rlcf	((c:_music_index+1)),c,w
  7831  000B82  3447               	movwf	fsr2h
  7832  000B84  6EDA               	movf	(??_tc_int+0+0),c,w
  7833  000B86  5015               	addwf	fsr2l
  7834  000B88  26D9               	movf	(??_tc_int+0+1),c,w
  7835  000B8A  5016               	addwfc	fsr2h
  7836  000B8C  22DA               
  7837                           	movf	postinc2,w
  7838  000B8E  50DE               iorwf	postinc2,w
  7839  000B90  10DE               	btfss	status,2
  7840  000B92  A4D8               	goto	i2u179_41
  7841  000B94  EFCE  F005         	goto	i2u179_40
  7842  000B98  EFD0  F005         
  7843                           i2u179_41:
  7844  000B9C                     	goto	i2l213
  7845  000B9C  EFD3  F005         i2u179_40:
  7846  000BA0                     	line	43
  7847                           	
  7848                           i2l2373:
  7849  000BA0                     ;main.c: 43:                 T2CONbits.TMR2ON = 0;
  7850                           	bcf	((c:4042)),c,2	;volatile
  7851  000BA0  94CA               	goto	i2l2381
  7852  000BA2  EF22  F006         	line	44
  7853                           ;main.c: 44:             else{
  7854                           	
  7855                           i2l213:
  7856  000BA6                     	line	45
  7857                           ;main.c: 45:                 T2CONbits.TMR2ON = 1;
  7858                           	bsf	((c:4042)),c,2	;volatile
  7859  000BA6  84CA               	line	46
  7860                           	
  7861                           i2l2375:
  7862  000BA8                     ;main.c: 46:                 PR2 = 62500/tone[music_choose][music_index];
  7863                           	movlw	low(0F424h)
  7864  000BA8  0E24               	movwf	((c:___aldiv@dividend)),c
  7865  000BAA  6E07               	movlw	high(0F424h)
  7866  000BAC  0EF4               	movwf	((c:___aldiv@dividend+1)),c
  7867  000BAE  6E08               	movlw	low highword(0F424h)
  7868  000BB0  0E00               	movwf	((c:___aldiv@dividend+2)),c
  7869  000BB2  6E09               	movlw	high highword(0F424h)
  7870  000BB4  0E00               	movwf	((c:___aldiv@dividend+3)),c
  7871  000BB6  6E0A               	movff	(c:_music_choose),(c:___wmul@multiplier)
  7872  000BB8  C044  F001         	movff	(c:_music_choose+1),(c:___wmul@multiplier+1)
  7873  000BBC  C045  F002         	movlw	high(03Ch)
  7874  000BC0  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  7875  000BC2  6E04               	movlw	low(03Ch)
  7876  000BC4  0E3C               	movwf	((c:___wmul@multiplicand)),c
  7877  000BC6  6E03               	call	___wmul	;wreg free
  7878  000BC8  EC24  F00E         	movlw	low((_tone))
  7879  000BCC  0E80               	movwf	(??_tc_int+0+0)&0ffh,c
  7880  000BCE  6E15               	movlw	high((_tone))
  7881  000BD0  0E00               	movwf	1+(??_tc_int+0+0)&0ffh,c
  7882  000BD2  6E16               	movf	(0+?___wmul),c,w
  7883  000BD4  5001               	addwf	(??_tc_int+0+0),c
  7884  000BD6  2615               	movf	(1+?___wmul),c,w
  7885  000BD8  5002               	addwfc	(??_tc_int+0+1),c
  7886  000BDA  2216               	bcf	status,0
  7887  000BDC  90D8               	rlcf	((c:_music_index)),c,w
  7888  000BDE  3446               	movwf	fsr2l
  7889  000BE0  6ED9               	rlcf	((c:_music_index+1)),c,w
  7890  000BE2  3447               	movwf	fsr2h
  7891  000BE4  6EDA               	movf	(??_tc_int+0+0),c,w
  7892  000BE6  5015               	addwf	fsr2l
  7893  000BE8  26D9               	movf	(??_tc_int+0+1),c,w
  7894  000BEA  5016               	addwfc	fsr2h
  7895  000BEC  22DA               
  7896                           	movff	postinc2,(c:___aldiv@divisor)
  7897  000BEE  CFDE F00B          	movff	postdec2,(c:___aldiv@divisor+1)
  7898  000BF2  CFDD F00C          	movlw	0
  7899  000BF6  0E00               	btfsc	((c:___aldiv@divisor+1)),c,7
  7900  000BF8  BE0C               	movlw	-1
  7901  000BFA  0EFF               	movwf	((c:___aldiv@divisor+2)),c
  7902  000BFC  6E0D               	movwf	((c:___aldiv@divisor+3)),c
  7903  000BFE  6E0E               	call	___aldiv	;wreg free
  7904  000C00  ECDB  F008         	movf	(0+?___aldiv),c,w
  7905  000C04  5007               	movwf	((c:4043)),c	;volatile
  7906  000C06  6ECB               	line	47
  7907                           	
  7908                           i2l2377:
  7909  000C08                     ;main.c: 47:                 CCPR2L = PR2*2/4;
  7910                           	movf	((c:4043)),c,w	;volatile
  7911  000C08  50CB               	mullw	02h
  7912  000C0A  0D02               	movff	prodl,(c:___awdiv@dividend)
  7913  000C0C  CFF3 F001          	movff	prodh,(c:___awdiv@dividend+1)
  7914  000C10  CFF4 F002          	movlw	high(04h)
  7915  000C14  0E00               	movwf	((c:___awdiv@divisor+1)),c
  7916  000C16  6E04               	movlw	low(04h)
  7917  000C18  0E04               	movwf	((c:___awdiv@divisor)),c
  7918  000C1A  6E03               	call	___awdiv	;wreg free
  7919  000C1C  ECFB  F009         	movf	(0+?___awdiv),c,w
  7920  000C20  5001               	movwf	((c:4027)),c	;volatile
  7921  000C22  6EBB               	line	48
  7922                           	
  7923                           i2l2379:
  7924  000C24                     ;main.c: 48:                 CCP2CONbits.DC2B = PR2*2%4;
  7925                           	movf	((c:4043)),c,w	;volatile
  7926  000C24  50CB               	mullw	02h
  7927  000C26  0D02               	movff	prodl,??_tc_int+0+0
  7928  000C28  CFF3 F015          	movlw	03h
  7929  000C2C  0E03               	andwf	(??_tc_int+0+0),c
  7930  000C2E  1615               	swapf	(??_tc_int+0+0),c
  7931  000C30  3A15               	movf	((c:4026)),c,w	;volatile
  7932  000C32  50BA               	xorwf	(??_tc_int+0+0),c,w
  7933  000C34  1815               	andlw	not (((1<<2)-1)<<4)
  7934  000C36  0BCF               	xorwf	(??_tc_int+0+0),c,w
  7935  000C38  1815               	movwf	((c:4026)),c	;volatile
  7936  000C3A  6EBA               	goto	i2l2381
  7937  000C3C  EF22  F006         	line	49
  7938                           ;main.c: 49:             }
  7939                           	
  7940                           i2l214:
  7941  000C40                     	goto	i2l2381
  7942  000C40  EF22  F006         	line	50
  7943                           ;main.c: 50:         }
  7944                           	
  7945                           i2l212:
  7946  000C44                     	line	51
  7947                           	
  7948                           i2l2381:
  7949  000C44                     ;main.c: 51:         if(music_index == length[music_choose])
  7950                           	bcf	status,0
  7951  000C44  90D8               	rlcf	((c:_music_choose)),c,w
  7952  000C46  3444               	movwf	fsr2l
  7953  000C48  6ED9               	rlcf	((c:_music_choose+1)),c,w
  7954  000C4A  3445               	movwf	fsr2h
  7955  000C4C  6EDA               	movlw	low(_length)
  7956  000C4E  0E56               	addwf	fsr2l
  7957  000C50  26D9               	movlw	high(_length)
  7958  000C52  0E00               	addwfc	fsr2h
  7959  000C54  22DA               	movf	((c:_music_index)),c,w
  7960  000C56  5046               xorwf	postinc2,w
  7961  000C58  18DE               	bnz	i2u180_41
  7962  000C5A  E107               movf	((c:_music_index+1)),c,w
  7963  000C5C  5047               xorwf	postinc2,w
  7964  000C5E  18DE               	btfss	status,2
  7965  000C60  A4D8               	goto	i2u180_41
  7966  000C62  EF35  F006         	goto	i2u180_40
  7967  000C66  EF37  F006         
  7968                           i2u180_41:
  7969  000C6A                     	goto	i2l2385
  7970  000C6A  EF3D  F006         i2u180_40:
  7971  000C6E                     	line	52
  7972                           	
  7973                           i2l2383:
  7974  000C6E                     ;main.c: 52:             music_index = 0;
  7975                           	movlw	high(0)
  7976  000C6E  0E00               	movwf	((c:_music_index+1)),c
  7977  000C70  6E47               	movlw	low(0)
  7978  000C72  0E00               	movwf	((c:_music_index)),c
  7979  000C74  6E46               	goto	i2l2385
  7980  000C76  EF3D  F006         	
  7981                           i2l215:
  7982  000C7A                     	line	53
  7983                           	
  7984                           i2l2385:
  7985  000C7A                     ;main.c: 53:         music_count++;
  7986                           	infsnz	((c:_music_count)),c
  7987  000C7A  4A48               	incf	((c:_music_count+1)),c
  7988  000C7C  2A49               	line	54
  7989                           	
  7990                           i2l2387:
  7991  000C7E                     ;main.c: 54:         TMR1 = 34285;
  7992                           	movlw	high(085EDh)
  7993  000C7E  0E85               	movwf	((c:4046+1)),c	;volatile
  7994  000C80  6ECF               	movlw	low(085EDh)
  7995  000C82  0EED               	movwf	((c:4046)),c	;volatile
  7996  000C84  6ECE               	line	55
  7997                           	
  7998                           i2l2389:
  7999  000C86                     ;main.c: 55:         PIR1bits.TMR1IF =0;
  8000                           	bcf	((c:3998)),c,0	;volatile
  8001  000C86  909E               	line	56
  8002                           ;main.c: 56:     }
  8003                           	goto	i2l235
  8004  000C88  EF73  F007         	line	57
  8005                           ;main.c: 57:     else if(PIR2bits.TMR3IF) {
  8006                           	
  8007                           i2l211:
  8008  000C8C                     	btfss	((c:4001)),c,1	;volatile
  8009  000C8C  A2A1               	goto	i2u181_41
  8010  000C8E  EF4B  F006         	goto	i2u181_40
  8011  000C92  EF4D  F006         i2u181_41:
  8012  000C96                     	goto	i2l235
  8013  000C96  EF73  F007         i2u181_40:
  8014  000C9A                     	line	58
  8015                           	
  8016                           i2l2391:
  8017  000C9A                     ;main.c: 58:         if(led_mode == 0){
  8018                           	movf	((c:_led_mode)),c,w
  8019  000C9A  5036               iorwf	((c:_led_mode+1)),c,w
  8020  000C9C  1037               	btfss	status,2
  8021  000C9E  A4D8               	goto	i2u182_41
  8022  000CA0  EF54  F006         	goto	i2u182_40
  8023  000CA4  EF56  F006         
  8024                           i2u182_41:
  8025  000CA8                     	goto	i2l2417
  8026  000CA8  EFFC  F006         i2u182_40:
  8027  000CAC                     	line	59
  8028                           	
  8029                           i2l2393:
  8030  000CAC                     ;main.c: 59:             if(led_loop == 0) {
  8031                           	movf	((c:_led_loop)),c,w
  8032  000CAC  503E               iorwf	((c:_led_loop+1)),c,w
  8033  000CAE  103F               	btfss	status,2
  8034  000CB0  A4D8               	goto	i2u183_41
  8035  000CB2  EF5D  F006         	goto	i2u183_40
  8036  000CB6  EF5F  F006         
  8037                           i2u183_41:
  8038  000CBA                     	goto	i2l2411
  8039  000CBA  EFF2  F006         i2u183_40:
  8040  000CBE                     	line	60
  8041                           	
  8042                           i2l2395:
  8043  000CBE                     ;main.c: 60:                 if(led_num == 1){
  8044                           		decf	((c:_led_num)),c,w
  8045  000CBE  0442               iorwf	((c:_led_num+1)),c,w
  8046  000CC0  1043               	btfss	status,2
  8047  000CC2  A4D8               	goto	i2u184_41
  8048  000CC4  EF66  F006         	goto	i2u184_40
  8049  000CC8  EF68  F006         
  8050                           i2u184_41:
  8051  000CCC                     	goto	i2l2399
  8052  000CCC  EF73  F006         i2u184_40:
  8053  000CD0                     	line	61
  8054                           	
  8055                           i2l2397:
  8056  000CD0                     ;main.c: 61:                     RC2 = !RC2;
  8057                           	btfss	c:(31762/8),(31762)&7	;volatile
  8058  000CD0  A482               	goto	i2u185_41
  8059  000CD2  EF6D  F006         	goto	i2u185_40
  8060  000CD6  EF70  F006         i2u185_41:
  8061  000CDA                     	bsf	c:(31762/8),(31762)&7	;volatile
  8062  000CDA  8482               	goto	i2u186_45
  8063  000CDC  EF71  F006         i2u185_40:
  8064  000CE0                     	bcf	c:(31762/8),(31762)&7	;volatile
  8065  000CE0  9482               i2u186_45:
  8066  000CE2                     	line	62
  8067                           ;main.c: 62:                 }
  8068                           	goto	i2l221
  8069  000CE2  EFEC  F006         	line	63
  8070                           ;main.c: 63:                 else if(led_num == 2){
  8071                           	
  8072                           i2l220:
  8073  000CE6                     	
  8074                           i2l2399:
  8075  000CE6                     		movlw	2
  8076  000CE6  0E02               	xorwf	((c:_led_num)),c,w
  8077  000CE8  1842               iorwf	((c:_led_num+1)),c,w
  8078  000CEA  1043               	btfss	status,2
  8079  000CEC  A4D8               	goto	i2u187_41
  8080  000CEE  EF7B  F006         	goto	i2u187_40
  8081  000CF2  EF7D  F006         
  8082                           i2u187_41:
  8083  000CF6                     	goto	i2l2403
  8084  000CF6  EF91  F006         i2u187_40:
  8085  000CFA                     	line	64
  8086                           	
  8087                           i2l2401:
  8088  000CFA                     ;main.c: 64:                     RC2 = !RC2;
  8089                           	btfss	c:(31762/8),(31762)&7	;volatile
  8090  000CFA  A482               	goto	i2u188_41
  8091  000CFC  EF82  F006         	goto	i2u188_40
  8092  000D00  EF85  F006         i2u188_41:
  8093  000D04                     	bsf	c:(31762/8),(31762)&7	;volatile
  8094  000D04  8482               	goto	i2u189_45
  8095  000D06  EF86  F006         i2u188_40:
  8096  000D0A                     	bcf	c:(31762/8),(31762)&7	;volatile
  8097  000D0A  9482               i2u189_45:
  8098  000D0C                     	line	65
  8099                           ;main.c: 65:                     RD5 = !RD5;
  8100                           	btfss	c:(31773/8),(31773)&7	;volatile
  8101  000D0C  AA83               	goto	i2u190_41
  8102  000D0E  EF8B  F006         	goto	i2u190_40
  8103  000D12  EF8E  F006         i2u190_41:
  8104  000D16                     	bsf	c:(31773/8),(31773)&7	;volatile
  8105  000D16  8A83               	goto	i2u191_45
  8106  000D18  EF8F  F006         i2u190_40:
  8107  000D1C                     	bcf	c:(31773/8),(31773)&7	;volatile
  8108  000D1C  9A83               i2u191_45:
  8109  000D1E                     	line	66
  8110                           ;main.c: 66:                 }
  8111                           	goto	i2l221
  8112  000D1E  EFEC  F006         	line	67
  8113                           ;main.c: 67:                 else if(led_num == 3){
  8114                           	
  8115                           i2l222:
  8116  000D22                     	
  8117                           i2l2403:
  8118  000D22                     		movlw	3
  8119  000D22  0E03               	xorwf	((c:_led_num)),c,w
  8120  000D24  1842               iorwf	((c:_led_num+1)),c,w
  8121  000D26  1043               	btfss	status,2
  8122  000D28  A4D8               	goto	i2u192_41
  8123  000D2A  EF99  F006         	goto	i2u192_40
  8124  000D2E  EF9B  F006         
  8125                           i2u192_41:
  8126  000D32                     	goto	i2l2407
  8127  000D32  EFB8  F006         i2u192_40:
  8128  000D36                     	line	68
  8129                           	
  8130                           i2l2405:
  8131  000D36                     ;main.c: 68:                     RC2 = !RC2;
  8132                           	btfss	c:(31762/8),(31762)&7	;volatile
  8133  000D36  A482               	goto	i2u193_41
  8134  000D38  EFA0  F006         	goto	i2u193_40
  8135  000D3C  EFA3  F006         i2u193_41:
  8136  000D40                     	bsf	c:(31762/8),(31762)&7	;volatile
  8137  000D40  8482               	goto	i2u194_45
  8138  000D42  EFA4  F006         i2u193_40:
  8139  000D46                     	bcf	c:(31762/8),(31762)&7	;volatile
  8140  000D46  9482               i2u194_45:
  8141  000D48                     	line	69
  8142                           ;main.c: 69:                     RD5 = !RD5;
  8143                           	btfss	c:(31773/8),(31773)&7	;volatile
  8144  000D48  AA83               	goto	i2u195_41
  8145  000D4A  EFA9  F006         	goto	i2u195_40
  8146  000D4E  EFAC  F006         i2u195_41:
  8147  000D52                     	bsf	c:(31773/8),(31773)&7	;volatile
  8148  000D52  8A83               	goto	i2u196_45
  8149  000D54  EFAD  F006         i2u195_40:
  8150  000D58                     	bcf	c:(31773/8),(31773)&7	;volatile
  8151  000D58  9A83               i2u196_45:
  8152  000D5A                     	line	70
  8153                           ;main.c: 70:                     RD6 = !RD6;
  8154                           	btfss	c:(31774/8),(31774)&7	;volatile
  8155  000D5A  AC83               	goto	i2u197_41
  8156  000D5C  EFB2  F006         	goto	i2u197_40
  8157  000D60  EFB5  F006         i2u197_41:
  8158  000D64                     	bsf	c:(31774/8),(31774)&7	;volatile
  8159  000D64  8C83               	goto	i2u198_45
  8160  000D66  EFB6  F006         i2u197_40:
  8161  000D6A                     	bcf	c:(31774/8),(31774)&7	;volatile
  8162  000D6A  9C83               i2u198_45:
  8163  000D6C                     	line	71
  8164                           ;main.c: 71:                 }
  8165                           	goto	i2l221
  8166  000D6C  EFEC  F006         	line	72
  8167                           ;main.c: 72:                 else if(led_num == 4){
  8168                           	
  8169                           i2l224:
  8170  000D70                     	
  8171                           i2l2407:
  8172  000D70                     		movlw	4
  8173  000D70  0E04               	xorwf	((c:_led_num)),c,w
  8174  000D72  1842               iorwf	((c:_led_num+1)),c,w
  8175  000D74  1043               	btfss	status,2
  8176  000D76  A4D8               	goto	i2u199_41
  8177  000D78  EFC0  F006         	goto	i2u199_40
  8178  000D7C  EFC2  F006         
  8179                           i2u199_41:
  8180  000D80                     	goto	i2l221
  8181  000D80  EFEC  F006         i2u199_40:
  8182  000D84                     	line	73
  8183                           	
  8184                           i2l2409:
  8185  000D84                     ;main.c: 73:                     RC2 = !RC2;
  8186                           	btfss	c:(31762/8),(31762)&7	;volatile
  8187  000D84  A482               	goto	i2u200_41
  8188  000D86  EFC7  F006         	goto	i2u200_40
  8189  000D8A  EFCA  F006         i2u200_41:
  8190  000D8E                     	bsf	c:(31762/8),(31762)&7	;volatile
  8191  000D8E  8482               	goto	i2u201_45
  8192  000D90  EFCB  F006         i2u200_40:
  8193  000D94                     	bcf	c:(31762/8),(31762)&7	;volatile
  8194  000D94  9482               i2u201_45:
  8195  000D96                     	line	74
  8196                           ;main.c: 74:                     RD5 = !RD5;
  8197                           	btfss	c:(31773/8),(31773)&7	;volatile
  8198  000D96  AA83               	goto	i2u202_41
  8199  000D98  EFD0  F006         	goto	i2u202_40
  8200  000D9C  EFD3  F006         i2u202_41:
  8201  000DA0                     	bsf	c:(31773/8),(31773)&7	;volatile
  8202  000DA0  8A83               	goto	i2u203_45
  8203  000DA2  EFD4  F006         i2u202_40:
  8204  000DA6                     	bcf	c:(31773/8),(31773)&7	;volatile
  8205  000DA6  9A83               i2u203_45:
  8206  000DA8                     	line	75
  8207                           ;main.c: 75:                     RD6 = !RD6;
  8208                           	btfss	c:(31774/8),(31774)&7	;volatile
  8209  000DA8  AC83               	goto	i2u204_41
  8210  000DAA  EFD9  F006         	goto	i2u204_40
  8211  000DAE  EFDC  F006         i2u204_41:
  8212  000DB2                     	bsf	c:(31774/8),(31774)&7	;volatile
  8213  000DB2  8C83               	goto	i2u205_45
  8214  000DB4  EFDD  F006         i2u204_40:
  8215  000DB8                     	bcf	c:(31774/8),(31774)&7	;volatile
  8216  000DB8  9C83               i2u205_45:
  8217  000DBA                     	line	76
  8218                           ;main.c: 76:                     RD7 = !RD7;
  8219                           	btfss	c:(31775/8),(31775)&7	;volatile
  8220  000DBA  AE83               	goto	i2u206_41
  8221  000DBC  EFE2  F006         	goto	i2u206_40
  8222  000DC0  EFE5  F006         i2u206_41:
  8223  000DC4                     	bsf	c:(31775/8),(31775)&7	;volatile
  8224  000DC4  8E83               	goto	i2u207_45
  8225  000DC6  EFE6  F006         i2u206_40:
  8226  000DCA                     	bcf	c:(31775/8),(31775)&7	;volatile
  8227  000DCA  9E83               i2u207_45:
  8228  000DCC                     	goto	i2l221
  8229  000DCC  EFEC  F006         	line	77
  8230                           ;main.c: 77:                 }
  8231                           	
  8232                           i2l226:
  8233  000DD0                     	goto	i2l221
  8234  000DD0  EFEC  F006         	
  8235                           i2l225:
  8236  000DD4                     	goto	i2l221
  8237  000DD4  EFEC  F006         	
  8238                           i2l223:
  8239  000DD8                     	
  8240                           i2l221:
  8241  000DD8                     	line	78
  8242                           ;main.c: 78:                 led_loop = led_interval;
  8243                           	movff	(c:_led_interval),(c:_led_loop)
  8244  000DD8  C040  F03E         	movff	(c:_led_interval+1),(c:_led_loop+1)
  8245  000DDC  C041  F03F         	goto	i2l2411
  8246  000DE0  EFF2  F006         	line	79
  8247                           ;main.c: 79:             }
  8248                           	
  8249                           i2l219:
  8250  000DE4                     	line	80
  8251                           	
  8252                           i2l2411:
  8253  000DE4                     ;main.c: 80:             --led_loop;
  8254                           	decf	((c:_led_loop)),c
  8255  000DE4  063E               	btfss	status,0
  8256  000DE6  A0D8               	decf	((c:_led_loop+1)),c
  8257  000DE8  063F               	line	81
  8258                           	
  8259                           i2l2413:
  8260  000DEA                     ;main.c: 81:             PIR2bits.TMR3IF = 0;
  8261                           	bcf	((c:4001)),c,1	;volatile
  8262  000DEA  92A1               	line	82
  8263                           	
  8264                           i2l2415:
  8265  000DEC                     ;main.c: 82:             TMR3 = 34285;
  8266                           	movlw	high(085EDh)
  8267  000DEC  0E85               	movwf	((c:4018+1)),c	;volatile
  8268  000DEE  6EB3               	movlw	low(085EDh)
  8269  000DF0  0EED               	movwf	((c:4018)),c	;volatile
  8270  000DF2  6EB2               	line	83
  8271                           ;main.c: 83:         }
  8272                           	goto	i2l235
  8273  000DF4  EF73  F007         	line	84
  8274                           ;main.c: 84:         else if(led_mode){
  8275                           	
  8276                           i2l218:
  8277  000DF8                     	
  8278                           i2l2417:
  8279  000DF8                     	movf	((c:_led_mode)),c,w
  8280  000DF8  5036               iorwf	((c:_led_mode+1)),c,w
  8281  000DFA  1037               	btfsc	status,2
  8282  000DFC  B4D8               	goto	i2u208_41
  8283  000DFE  EF03  F007         	goto	i2u208_40
  8284  000E02  EF05  F007         
  8285                           i2u208_41:
  8286  000E06                     	goto	i2l235
  8287  000E06  EF73  F007         i2u208_40:
  8288  000E0A                     	line	85
  8289                           	
  8290                           i2l2419:
  8291  000E0A                     ;main.c: 85:             UART_Write_Text(led_breath);
  8292                           		movff	(c:_led_breath),(c:i2UART_Write_Text@text)
  8293  000E0A  C03A  F002         	movff	(c:_led_breath+1),(c:i2UART_Write_Text@text+1)
  8294  000E0E  C03B  F003         
  8295                           	call	i2_UART_Write_Text	;wreg free
  8296  000E12  EC49  F00C         	line	86
  8297                           	
  8298                           i2l2421:
  8299  000E16                     ;main.c: 86:             if(led_breath == 0)
  8300                           	movf	((c:_led_breath)),c,w
  8301  000E16  503A               iorwf	((c:_led_breath+1)),c,w
  8302  000E18  103B               	btfss	status,2
  8303  000E1A  A4D8               	goto	i2u209_41
  8304  000E1C  EF12  F007         	goto	i2u209_40
  8305  000E20  EF14  F007         
  8306                           i2u209_41:
  8307  000E24                     	goto	i2l2425
  8308  000E24  EF1A  F007         i2u209_40:
  8309  000E28                     	line	87
  8310                           	
  8311                           i2l2423:
  8312  000E28                     ;main.c: 87:                 updown = 0;
  8313                           	movlw	high(0)
  8314  000E28  0E00               	movwf	((c:_updown+1)),c
  8315  000E2A  6E39               	movlw	low(0)
  8316  000E2C  0E00               	movwf	((c:_updown)),c
  8317  000E2E  6E38               	goto	i2l2429
  8318  000E30  EF31  F007         	line	88
  8319                           ;main.c: 88:             else if (led_breath == PR2){
  8320                           	
  8321                           i2l229:
  8322  000E34                     	
  8323                           i2l2425:
  8324  000E34                     	movf	((c:4043)),c,w	;volatile
  8325  000E34  50CB               	movwf	(??_tc_int+0+0)&0ffh,c
  8326  000E36  6E15               	clrf	(??_tc_int+0+0+1)&0ffh,c
  8327  000E38  6A16               
  8328                           	movf	((c:_led_breath)),c,w
  8329  000E3A  503A               xorwf	(??_tc_int+0+0),c,w
  8330  000E3C  1815               	bnz	i2u210_41
  8331  000E3E  E107               movf	((c:_led_breath+1)),c,w
  8332  000E40  503B               xorwf	(??_tc_int+0+1),c,w
  8333  000E42  1816               	btfss	status,2
  8334  000E44  A4D8               	goto	i2u210_41
  8335  000E46  EF27  F007         	goto	i2u210_40
  8336  000E4A  EF29  F007         
  8337                           i2u210_41:
  8338  000E4E                     	goto	i2l2429
  8339  000E4E  EF31  F007         i2u210_40:
  8340  000E52                     	line	89
  8341                           	
  8342                           i2l2427:
  8343  000E52                     ;main.c: 89:                 updown = 1;
  8344                           	movlw	high(01h)
  8345  000E52  0E00               	movwf	((c:_updown+1)),c
  8346  000E54  6E39               	movlw	low(01h)
  8347  000E56  0E01               	movwf	((c:_updown)),c
  8348  000E58  6E38               	goto	i2l2429
  8349  000E5A  EF31  F007         	line	90
  8350                           ;main.c: 90:             }
  8351                           	
  8352                           i2l231:
  8353  000E5E                     	goto	i2l2429
  8354  000E5E  EF31  F007         	
  8355                           i2l230:
  8356  000E62                     	line	91
  8357                           	
  8358                           i2l2429:
  8359  000E62                     ;main.c: 91:             if(updown == 0)
  8360                           	movf	((c:_updown)),c,w
  8361  000E62  5038               iorwf	((c:_updown+1)),c,w
  8362  000E64  1039               	btfss	status,2
  8363  000E66  A4D8               	goto	i2u211_41
  8364  000E68  EF38  F007         	goto	i2u211_40
  8365  000E6C  EF3A  F007         
  8366                           i2u211_41:
  8367  000E70                     	goto	i2l2433
  8368  000E70  EF3E  F007         i2u211_40:
  8369  000E74                     	line	92
  8370                           	
  8371                           i2l2431:
  8372  000E74                     ;main.c: 92:                 ++led_breath;
  8373                           	infsnz	((c:_led_breath)),c
  8374  000E74  4A3A               	incf	((c:_led_breath+1)),c
  8375  000E76  2A3B               	goto	i2l2437
  8376  000E78  EF4E  F007         	line	93
  8377                           ;main.c: 93:             else if(updown == 1)
  8378                           	
  8379                           i2l232:
  8380  000E7C                     	
  8381                           i2l2433:
  8382  000E7C                     		decf	((c:_updown)),c,w
  8383  000E7C  0438               iorwf	((c:_updown+1)),c,w
  8384  000E7E  1039               	btfss	status,2
  8385  000E80  A4D8               	goto	i2u212_41
  8386  000E82  EF45  F007         	goto	i2u212_40
  8387  000E86  EF47  F007         
  8388                           i2u212_41:
  8389  000E8A                     	goto	i2l2437
  8390  000E8A  EF4E  F007         i2u212_40:
  8391  000E8E                     	line	94
  8392                           	
  8393                           i2l2435:
  8394  000E8E                     ;main.c: 94:                 --led_breath;
  8395                           	decf	((c:_led_breath)),c
  8396  000E8E  063A               	btfss	status,0
  8397  000E90  A0D8               	decf	((c:_led_breath+1)),c
  8398  000E92  063B               	goto	i2l2437
  8399  000E94  EF4E  F007         	
  8400                           i2l234:
  8401  000E98                     	goto	i2l2437
  8402  000E98  EF4E  F007         	
  8403                           i2l233:
  8404  000E9C                     	line	95
  8405                           	
  8406                           i2l2437:
  8407  000E9C                     ;main.c: 95:             CCPR1L = led_breath*2/4;
  8408                           	bcf	status,0
  8409  000E9C  90D8               	rlcf	((c:_led_breath)),c,w
  8410  000E9E  343A               	movwf	((c:___awdiv@dividend)),c
  8411  000EA0  6E01               	rlcf	((c:_led_breath+1)),c,w
  8412  000EA2  343B               	movwf	1+((c:___awdiv@dividend)),c
  8413  000EA4  6E02               	movlw	high(04h)
  8414  000EA6  0E00               	movwf	((c:___awdiv@divisor+1)),c
  8415  000EA8  6E04               	movlw	low(04h)
  8416  000EAA  0E04               	movwf	((c:___awdiv@divisor)),c
  8417  000EAC  6E03               	call	___awdiv	;wreg free
  8418  000EAE  ECFB  F009         	movf	(0+?___awdiv),c,w
  8419  000EB2  5001               	movwf	((c:4030)),c	;volatile
  8420  000EB4  6EBE               	line	96
  8421                           	
  8422                           i2l2439:
  8423  000EB6                     ;main.c: 96:             CCP1CONbits.DC1B = led_breath*2%4;
  8424                           	bcf	status,0
  8425  000EB6  90D8               	rlcf	((c:_led_breath)),c,w
  8426  000EB8  343A               	movwf	(??_tc_int+0+0)&0ffh,c
  8427  000EBA  6E15               	movlw	03h
  8428  000EBC  0E03               	andwf	(??_tc_int+0+0),c
  8429  000EBE  1615               	swapf	(??_tc_int+0+0),c
  8430  000EC0  3A15               	movf	((c:4029)),c,w	;volatile
  8431  000EC2  50BD               	xorwf	(??_tc_int+0+0),c,w
  8432  000EC4  1815               	andlw	not (((1<<2)-1)<<4)
  8433  000EC6  0BCF               	xorwf	(??_tc_int+0+0),c,w
  8434  000EC8  1815               	movwf	((c:4029)),c	;volatile
  8435  000ECA  6EBD               	line	97
  8436                           	
  8437                           i2l2441:
  8438  000ECC                     ;main.c: 97:             PIR2bits.TMR3IF = 0;
  8439                           	bcf	((c:4001)),c,1	;volatile
  8440  000ECC  92A1               	line	98
  8441                           	
  8442                           i2l2443:
  8443  000ECE                     ;main.c: 98:             TMR3 = 34285;
  8444                           	movlw	high(085EDh)
  8445  000ECE  0E85               	movwf	((c:4018+1)),c	;volatile
  8446  000ED0  6EB3               	movlw	low(085EDh)
  8447  000ED2  0EED               	movwf	((c:4018)),c	;volatile
  8448  000ED4  6EB2               	goto	i2l235
  8449  000ED6  EF73  F007         	line	99
  8450                           ;main.c: 99:         }
  8451                           	
  8452                           i2l228:
  8453  000EDA                     	goto	i2l235
  8454  000EDA  EF73  F007         	
  8455                           i2l227:
  8456  000EDE                     	goto	i2l235
  8457  000EDE  EF73  F007         	line	100
  8458                           ;main.c: 100:     }
  8459                           	
  8460                           i2l217:
  8461  000EE2                     	goto	i2l235
  8462  000EE2  EF73  F007         	
  8463                           i2l216:
  8464  000EE6                     	line	101
  8465                           	
  8466                           i2l235:
  8467  000EE6                     	movff	??_tc_int+11,tablat+0
  8468  000EE6  C020  FFF5         	movff	??_tc_int+10,tblptru+0
  8469  000EEA  C01F  FFF8         	movff	??_tc_int+9,tblptrh+0
  8470  000EEE  C01E  FFF7         	movff	??_tc_int+8,tblptrl+0
  8471  000EF2  C01D  FFF6         	movff	??_tc_int+7,prodh+0
  8472  000EF6  C01C  FFF4         	movff	??_tc_int+6,prodl+0
  8473  000EFA  C01B  FFF3         	movff	??_tc_int+5,fsr2h+0
  8474  000EFE  C01A  FFDA         	movff	??_tc_int+4,fsr2l+0
  8475  000F02  C019  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  8476  000F06  925A               	retfie f
  8477  000F08  0011               	opt stack 0
  8478                           GLOBAL	__end_of_tc_int
  8479                           	__end_of_tc_int:
  8480  000F0A                     	signat	_tc_int,89
  8481                           	global	i2_UART_Write_Text
  8482                           
  8483 ;; *************** function i2_UART_Write_Text *****************
  8484 ;; Defined at:
  8485 ;;		line 50 in file "setting_hardaware/uart.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  text            2    1[COMRAM] PTR unsigned char 
  8488 ;;		 -> STR_15(6), STR_1(7), RAM(1535), 
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  UART_Write_T    2    5[COMRAM] int 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      void 
  8493 ;; Registers used:
  8494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8500 ;;      Params:         2       0       0       0       0       0       0
  8501 ;;      Locals:         2       0       0       0       0       0       0
  8502 ;;      Temps:          2       0       0       0       0       0       0
  8503 ;;      Totals:         6       0       0       0       0       0       0
  8504 ;;Total ram usage:        6 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    1
  8507 ;; This function calls:
  8508 ;;		i2_UART_Write
  8509 ;; This function is called by:
  8510 ;;		_tc_int
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           psect	text26,class=CODE,space=0,reloc=2,group=0
  8514                           	file	"setting_hardaware/uart.c"
  8515                           	line	50
  8516                           global __ptext26
  8517                           __ptext26:
  8518  001892                     psect	text26
  8519                           	file	"setting_hardaware/uart.c"
  8520                           	line	50
  8521                           	global	__size_ofi2_UART_Write_Text
  8522                           	__size_ofi2_UART_Write_Text	equ	__end_ofi2_UART_Write_Text-i2_UART_Write_Text
  8523  0000                     	
  8524                           i2_UART_Write_Text:
  8525  001892                     ;incstack = 0
  8526                           	opt	stack 22
  8527                           	line	51
  8528                           	
  8529                           i2l2345:
  8530  001892                     ;setting_hardaware/uart.c: 51:     for(int i=0;text[i]!='\0';i++)
  8531                           	movlw	high(0)
  8532  001892  0E00               	movwf	((c:i2UART_Write_Text@i+1)),c
  8533  001894  6E07               	movlw	low(0)
  8534  001896  0E00               	movwf	((c:i2UART_Write_Text@i)),c
  8535  001898  6E06               	goto	i2l2351
  8536  00189A  EF6B  F00C         	
  8537                           i2l64:
  8538  00189E                     	line	52
  8539                           	
  8540                           i2l2347:
  8541  00189E                     ;setting_hardaware/uart.c: 52:         UART_Write(text[i]);
  8542                           	movf	((c:i2UART_Write_Text@i)),c,w
  8543  00189E  5006               	addwf	((c:i2UART_Write_Text@text)),c,w
  8544  0018A0  2402               	movwf	(??i2_UART_Write_Text+0+0)&0ffh,c
  8545  0018A2  6E04               	movf	((c:i2UART_Write_Text@i+1)),c,w
  8546  0018A4  5007               	addwfc	((c:i2UART_Write_Text@text+1)),c,w
  8547  0018A6  2003               	movwf	(??i2_UART_Write_Text+0+0+1)&0ffh,c
  8548  0018A8  6E05               	movff	??i2_UART_Write_Text+0+0,tblptrl
  8549  0018AA  C004  FFF6         	movff	??i2_UART_Write_Text+0+1,tblptrh
  8550  0018AE  C005  FFF7         	clrf	tblptru
  8551  0018B2  6AF8               	
  8552                           	movlw	high __ramtop-1
  8553  0018B4  0E05               	cpfsgt	tblptrh
  8554  0018B6  64F7               	bra	i2u172_47
  8555  0018B8  D003               	tblrd	*
  8556  0018BA  0008               	
  8557                           	movf	tablat,w
  8558  0018BC  50F5               	bra	i2u172_40
  8559  0018BE  D005               i2u172_47:
  8560  0018C0                     	movff	tblptrl,fsr2l
  8561  0018C0  CFF6 FFD9          	movff	tblptrh,fsr2h
  8562  0018C4  CFF7 FFDA          	movf	indf2,w
  8563  0018C8  50DF               i2u172_40:
  8564  0018CA                     	
  8565                           	call	i2_UART_Write
  8566  0018CA  EC7C  F00E         	
  8567                           i2l2349:
  8568  0018CE                     	infsnz	((c:i2UART_Write_Text@i)),c
  8569  0018CE  4A06               	incf	((c:i2UART_Write_Text@i+1)),c
  8570  0018D0  2A07               	goto	i2l2351
  8571  0018D2  EF6B  F00C         	
  8572                           i2l63:
  8573  0018D6                     	
  8574                           i2l2351:
  8575  0018D6                     	movf	((c:i2UART_Write_Text@i)),c,w
  8576  0018D6  5006               	addwf	((c:i2UART_Write_Text@text)),c,w
  8577  0018D8  2402               	movwf	(??i2_UART_Write_Text+0+0)&0ffh,c
  8578  0018DA  6E04               	movf	((c:i2UART_Write_Text@i+1)),c,w
  8579  0018DC  5007               	addwfc	((c:i2UART_Write_Text@text+1)),c,w
  8580  0018DE  2003               	movwf	(??i2_UART_Write_Text+0+0+1)&0ffh,c
  8581  0018E0  6E05               	movff	??i2_UART_Write_Text+0+0,tblptrl
  8582  0018E2  C004  FFF6         	movff	??i2_UART_Write_Text+0+1,tblptrh
  8583  0018E6  C005  FFF7         	clrf	tblptru
  8584  0018EA  6AF8               	
  8585                           	movlw	high __ramtop-1
  8586  0018EC  0E05               	cpfsgt	tblptrh
  8587  0018EE  64F7               	bra	i2u173_47
  8588  0018F0  D003               	tblrd	*
  8589  0018F2  0008               	
  8590                           	movf	tablat,w
  8591  0018F4  50F5               	bra	i2u173_40
  8592  0018F6  D005               i2u173_47:
  8593  0018F8                     	movff	tblptrl,fsr2l
  8594  0018F8  CFF6 FFD9          	movff	tblptrh,fsr2h
  8595  0018FC  CFF7 FFDA          	movf	indf2,w
  8596  001900  50DF               i2u173_40:
  8597  001902                     	iorlw	0
  8598  001902  0900               	btfss	status,2
  8599  001904  A4D8               	goto	i2u174_41
  8600  001906  EF87  F00C         	goto	i2u174_40
  8601  00190A  EF89  F00C         i2u174_41:
  8602  00190E                     	goto	i2l2347
  8603  00190E  EF4F  F00C         i2u174_40:
  8604  001912                     	goto	i2l66
  8605  001912  EF8B  F00C         	
  8606                           i2l65:
  8607  001916                     	line	53
  8608                           	
  8609                           i2l66:
  8610  001916                     	return	;funcret
  8611  001916  0012               	opt stack 0
  8612                           GLOBAL	__end_ofi2_UART_Write_Text
  8613                           	__end_ofi2_UART_Write_Text:
  8614  001918                     	signat	i2_UART_Write_Text,89
  8615                           	global	i2_UART_Write
  8616                           
  8617 ;; *************** function i2_UART_Write *****************
  8618 ;; Defined at:
  8619 ;;		line 40 in file "setting_hardaware/uart.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;  data            1    wreg     unsigned char 
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;  data            1    0[COMRAM] unsigned char 
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      void 
  8626 ;; Registers used:
  8627 ;;		wreg
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8633 ;;      Params:         0       0       0       0       0       0       0
  8634 ;;      Locals:         1       0       0       0       0       0       0
  8635 ;;      Temps:          0       0       0       0       0       0       0
  8636 ;;      Totals:         1       0       0       0       0       0       0
  8637 ;;Total ram usage:        1 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; This function calls:
  8640 ;;		Nothing
  8641 ;; This function is called by:
  8642 ;;		i2_UART_Write_Text
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           psect	text27,class=CODE,space=0,reloc=2,group=0
  8646                           	line	40
  8647                           global __ptext27
  8648                           __ptext27:
  8649  001CF8                     psect	text27
  8650                           	file	"setting_hardaware/uart.c"
  8651                           	line	40
  8652                           	global	__size_ofi2_UART_Write
  8653                           	__size_ofi2_UART_Write	equ	__end_ofi2_UART_Write-i2_UART_Write
  8654  0000                     	
  8655                           i2_UART_Write:
  8656  001CF8                     ;incstack = 0
  8657                           	opt	stack 22
  8658                           ;i2UART_Write@data stored from wreg
  8659                           	movwf	((c:i2UART_Write@data)),c
  8660  001CF8  6E01               	line	42
  8661                           	
  8662                           i2l1933:
  8663  001CFA                     ;setting_hardaware/uart.c: 40: void UART_Write(unsigned char data);setting_hardaware/uar
                                 t.c: 41: {;setting_hardaware/uart.c: 42:     while(!TXSTAbits.TRMT);
  8664                           	goto	i2l54
  8665  001CFA  EF7F  F00E         	
  8666                           i2l55:
  8667  001CFE                     	
  8668                           i2l54:
  8669  001CFE                     	btfss	((c:4012)),c,1	;volatile
  8670  001CFE  A2AC               	goto	i2u134_41
  8671  001D00  EF84  F00E         	goto	i2u134_40
  8672  001D04  EF86  F00E         i2u134_41:
  8673  001D08                     	goto	i2l54
  8674  001D08  EF7F  F00E         i2u134_40:
  8675  001D0C                     	goto	i2l1935
  8676  001D0C  EF88  F00E         	
  8677                           i2l56:
  8678  001D10                     	line	43
  8679                           	
  8680                           i2l1935:
  8681  001D10                     ;setting_hardaware/uart.c: 43:     TXREG = data;
  8682                           	movff	(c:i2UART_Write@data),(c:4013)	;volatile
  8683  001D10  C001  FFAD         	line	44
  8684                           	
  8685                           i2l57:
  8686  001D14                     	return	;funcret
  8687  001D14  0012               	opt stack 0
  8688                           GLOBAL	__end_ofi2_UART_Write
  8689                           	__end_ofi2_UART_Write:
  8690  001D16                     	signat	i2_UART_Write,89
  8691                           	global	___wmul
  8692                           
  8693 ;; *************** function ___wmul *****************
  8694 ;; Defined at:
  8695 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  8696 ;; Parameters:    Size  Location     Type
  8697 ;;  multiplier      2    0[COMRAM] unsigned int 
  8698 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;  product         2    4[COMRAM] unsigned int 
  8701 ;; Return value:  Size  Location     Type
  8702 ;;                  2    0[COMRAM] unsigned int 
  8703 ;; Registers used:
  8704 ;;		wreg, status,2, status,0, prodl, prodh
  8705 ;; Tracked objects:
  8706 ;;		On entry : 0/0
  8707 ;;		On exit  : 0/0
  8708 ;;		Unchanged: 0/0
  8709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8710 ;;      Params:         4       0       0       0       0       0       0
  8711 ;;      Locals:         2       0       0       0       0       0       0
  8712 ;;      Temps:          0       0       0       0       0       0       0
  8713 ;;      Totals:         6       0       0       0       0       0       0
  8714 ;;Total ram usage:        6 bytes
  8715 ;; Hardware stack levels used:    1
  8716 ;; This function calls:
  8717 ;;		Nothing
  8718 ;; This function is called by:
  8719 ;;		_tc_int
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           psect	text28,class=CODE,space=0,reloc=2,group=1
  8723                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  8724                           	line	15
  8725                           global __ptext28
  8726                           __ptext28:
  8727  001C48                     psect	text28
  8728                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  8729                           	line	15
  8730                           	global	__size_of___wmul
  8731                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  8732  0000                     	
  8733                           ___wmul:
  8734  001C48                     ;incstack = 0
  8735                           	opt	stack 23
  8736                           	line	37
  8737                           	
  8738                           i2l2251:
  8739  001C48                     	movf	((c:___wmul@multiplier)),c,w
  8740  001C48  5001               	mulwf	((c:___wmul@multiplicand)),c
  8741  001C4A  0203               	movff	prodl,(c:___wmul@product)
  8742  001C4C  CFF3 F005          	movff	prodh,(c:___wmul@product+1)
  8743  001C50  CFF4 F006          	line	38
  8744                           	movf	((c:___wmul@multiplier)),c,w
  8745  001C54  5001               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
  8746  001C56  0204               	movf	(prodl),c,w
  8747  001C58  50F3               	addwf	((c:___wmul@product+1)),c
  8748  001C5A  2606               
  8749                           	line	39
  8750                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
  8751  001C5C  5002               	mulwf	((c:___wmul@multiplicand)),c
  8752  001C5E  0203               	movf	(prodl),c,w
  8753  001C60  50F3               	addwf	((c:___wmul@product+1)),c
  8754  001C62  2606               
  8755                           	line	52
  8756                           	
  8757                           i2l2253:
  8758  001C64                     	movff	(c:___wmul@product),(c:?___wmul)
  8759  001C64  C005  F001         	movff	(c:___wmul@product+1),(c:?___wmul+1)
  8760  001C68  C006  F002         	goto	i2l327
  8761  001C6C  EF38  F00E         	
  8762                           i2l2255:
  8763  001C70                     	line	53
  8764                           	
  8765                           i2l327:
  8766  001C70                     	return	;funcret
  8767  001C70  0012               	opt stack 0
  8768                           GLOBAL	__end_of___wmul
  8769                           	__end_of___wmul:
  8770  001C72                     	signat	___wmul,8314
  8771                           	global	___awdiv
  8772                           
  8773 ;; *************** function ___awdiv *****************
  8774 ;; Defined at:
  8775 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;  dividend        2    0[COMRAM] int 
  8778 ;;  divisor         2    2[COMRAM] int 
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  quotient        2    6[COMRAM] int 
  8781 ;;  sign            1    5[COMRAM] unsigned char 
  8782 ;;  counter         1    4[COMRAM] unsigned char 
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  2    0[COMRAM] int 
  8785 ;; Registers used:
  8786 ;;		wreg, status,2, status,0
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8792 ;;      Params:         4       0       0       0       0       0       0
  8793 ;;      Locals:         4       0       0       0       0       0       0
  8794 ;;      Temps:          0       0       0       0       0       0       0
  8795 ;;      Totals:         8       0       0       0       0       0       0
  8796 ;;Total ram usage:        8 bytes
  8797 ;; Hardware stack levels used:    1
  8798 ;; This function calls:
  8799 ;;		Nothing
  8800 ;; This function is called by:
  8801 ;;		_tc_int
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           psect	text29,class=CODE,space=0,reloc=2,group=1
  8805                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  8806                           	line	7
  8807                           global __ptext29
  8808                           __ptext29:
  8809  0013F6                     psect	text29
  8810                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  8811                           	line	7
  8812                           	global	__size_of___awdiv
  8813                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  8814  0000                     	
  8815                           ___awdiv:
  8816  0013F6                     ;incstack = 0
  8817                           	opt	stack 23
  8818                           	line	13
  8819                           	
  8820                           i2l2301:
  8821  0013F6                     	movlw	low(0)
  8822  0013F6  0E00               	movwf	((c:___awdiv@sign)),c
  8823  0013F8  6E06               	line	14
  8824                           	
  8825                           i2l2303:
  8826  0013FA                     	btfsc	((c:___awdiv@divisor+1)),c,7
  8827  0013FA  BE04               	goto	i2u166_40
  8828  0013FC  EF04  F00A         	goto	i2u166_41
  8829  001400  EF02  F00A         
  8830                           i2u166_41:
  8831  001404                     	goto	i2l2309
  8832  001404  EF0C  F00A         i2u166_40:
  8833  001408                     	line	15
  8834                           	
  8835                           i2l2305:
  8836  001408                     	negf	((c:___awdiv@divisor)),c
  8837  001408  6C03               	comf	((c:___awdiv@divisor+1)),c
  8838  00140A  1E04               	btfsc	status,0
  8839  00140C  B0D8               	incf	((c:___awdiv@divisor+1)),c
  8840  00140E  2A04               	line	16
  8841                           	
  8842                           i2l2307:
  8843  001410                     	movlw	low(01h)
  8844  001410  0E01               	movwf	((c:___awdiv@sign)),c
  8845  001412  6E06               	goto	i2l2309
  8846  001414  EF0C  F00A         	line	17
  8847                           	
  8848                           i2l548:
  8849  001418                     	line	18
  8850                           	
  8851                           i2l2309:
  8852  001418                     	btfsc	((c:___awdiv@dividend+1)),c,7
  8853  001418  BE02               	goto	i2u167_40
  8854  00141A  EF13  F00A         	goto	i2u167_41
  8855  00141E  EF11  F00A         
  8856                           i2u167_41:
  8857  001422                     	goto	i2l2315
  8858  001422  EF1B  F00A         i2u167_40:
  8859  001426                     	line	19
  8860                           	
  8861                           i2l2311:
  8862  001426                     	negf	((c:___awdiv@dividend)),c
  8863  001426  6C01               	comf	((c:___awdiv@dividend+1)),c
  8864  001428  1E02               	btfsc	status,0
  8865  00142A  B0D8               	incf	((c:___awdiv@dividend+1)),c
  8866  00142C  2A02               	line	20
  8867                           	
  8868                           i2l2313:
  8869  00142E                     	movlw	(01h)&0ffh
  8870  00142E  0E01               	xorwf	((c:___awdiv@sign)),c
  8871  001430  1A06               	goto	i2l2315
  8872  001432  EF1B  F00A         	line	21
  8873                           	
  8874                           i2l549:
  8875  001436                     	line	22
  8876                           	
  8877                           i2l2315:
  8878  001436                     	movlw	high(0)
  8879  001436  0E00               	movwf	((c:___awdiv@quotient+1)),c
  8880  001438  6E08               	movlw	low(0)
  8881  00143A  0E00               	movwf	((c:___awdiv@quotient)),c
  8882  00143C  6E07               	line	23
  8883                           	
  8884                           i2l2317:
  8885  00143E                     	movf	((c:___awdiv@divisor)),c,w
  8886  00143E  5003               iorwf	((c:___awdiv@divisor+1)),c,w
  8887  001440  1004               	btfsc	status,2
  8888  001442  B4D8               	goto	i2u168_41
  8889  001444  EF26  F00A         	goto	i2u168_40
  8890  001448  EF28  F00A         
  8891                           i2u168_41:
  8892  00144C                     	goto	i2l2337
  8893  00144C  EF5C  F00A         i2u168_40:
  8894  001450                     	line	24
  8895                           	
  8896                           i2l2319:
  8897  001450                     	movlw	low(01h)
  8898  001450  0E01               	movwf	((c:___awdiv@counter)),c
  8899  001452  6E05               	line	25
  8900                           	goto	i2l2323
  8901  001454  EF32  F00A         	
  8902                           i2l552:
  8903  001458                     	line	26
  8904                           	
  8905                           i2l2321:
  8906  001458                     	bcf	status,0
  8907  001458  90D8               	rlcf	((c:___awdiv@divisor)),c
  8908  00145A  3603               	rlcf	((c:___awdiv@divisor+1)),c
  8909  00145C  3604               	line	27
  8910                           	incf	((c:___awdiv@counter)),c
  8911  00145E  2A05               	goto	i2l2323
  8912  001460  EF32  F00A         	line	28
  8913                           	
  8914                           i2l551:
  8915  001464                     	line	25
  8916                           	
  8917                           i2l2323:
  8918  001464                     	
  8919                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
  8920  001464  AE04               	goto	i2u169_41
  8921  001466  EF37  F00A         	goto	i2u169_40
  8922  00146A  EF39  F00A         i2u169_41:
  8923  00146E                     	goto	i2l2321
  8924  00146E  EF2C  F00A         i2u169_40:
  8925  001472                     	goto	i2l2325
  8926  001472  EF3D  F00A         	
  8927                           i2l553:
  8928  001476                     	goto	i2l2325
  8929  001476  EF3D  F00A         	line	29
  8930                           	
  8931                           i2l554:
  8932  00147A                     	line	30
  8933                           	
  8934                           i2l2325:
  8935  00147A                     	bcf	status,0
  8936  00147A  90D8               	rlcf	((c:___awdiv@quotient)),c
  8937  00147C  3607               	rlcf	((c:___awdiv@quotient+1)),c
  8938  00147E  3608               	line	31
  8939                           	
  8940                           i2l2327:
  8941  001480                     		movf	((c:___awdiv@divisor)),c,w
  8942  001480  5003               	subwf	((c:___awdiv@dividend)),c,w
  8943  001482  5C01               	movf	((c:___awdiv@divisor+1)),c,w
  8944  001484  5004               	subwfb	((c:___awdiv@dividend+1)),c,w
  8945  001486  5802               	btfss	status,0
  8946  001488  A0D8               	goto	i2u170_41
  8947  00148A  EF49  F00A         	goto	i2u170_40
  8948  00148E  EF4B  F00A         
  8949                           i2u170_41:
  8950  001492                     	goto	i2l2333
  8951  001492  EF52  F00A         i2u170_40:
  8952  001496                     	line	32
  8953                           	
  8954                           i2l2329:
  8955  001496                     	movf	((c:___awdiv@divisor)),c,w
  8956  001496  5003               	subwf	((c:___awdiv@dividend)),c
  8957  001498  5E01               	movf	((c:___awdiv@divisor+1)),c,w
  8958  00149A  5004               	subwfb	((c:___awdiv@dividend+1)),c
  8959  00149C  5A02               
  8960                           	line	33
  8961                           	
  8962                           i2l2331:
  8963  00149E                     	bsf	(0+(0/8)+(c:___awdiv@quotient)),c,(0)&7
  8964  00149E  8007               	goto	i2l2333
  8965  0014A0  EF52  F00A         	line	34
  8966                           	
  8967                           i2l555:
  8968  0014A4                     	line	35
  8969                           	
  8970                           i2l2333:
  8971  0014A4                     	bcf	status,0
  8972  0014A4  90D8               	rrcf	((c:___awdiv@divisor+1)),c
  8973  0014A6  3204               	rrcf	((c:___awdiv@divisor)),c
  8974  0014A8  3203               	line	36
  8975                           	
  8976                           i2l2335:
  8977  0014AA                     	decfsz	((c:___awdiv@counter)),c
  8978  0014AA  2E05               	
  8979                           	goto	i2l2325
  8980  0014AC  EF3D  F00A         	goto	i2l2337
  8981  0014B0  EF5C  F00A         	
  8982                           i2l556:
  8983  0014B4                     	goto	i2l2337
  8984  0014B4  EF5C  F00A         	line	37
  8985                           	
  8986                           i2l550:
  8987  0014B8                     	line	38
  8988                           	
  8989                           i2l2337:
  8990  0014B8                     	movf	((c:___awdiv@sign)),c,w
  8991  0014B8  5006               	btfsc	status,2
  8992  0014BA  B4D8               	goto	i2u171_41
  8993  0014BC  EF62  F00A         	goto	i2u171_40
  8994  0014C0  EF64  F00A         i2u171_41:
  8995  0014C4                     	goto	i2l2341
  8996  0014C4  EF6A  F00A         i2u171_40:
  8997  0014C8                     	line	39
  8998                           	
  8999                           i2l2339:
  9000  0014C8                     	negf	((c:___awdiv@quotient)),c
  9001  0014C8  6C07               	comf	((c:___awdiv@quotient+1)),c
  9002  0014CA  1E08               	btfsc	status,0
  9003  0014CC  B0D8               	incf	((c:___awdiv@quotient+1)),c
  9004  0014CE  2A08               	goto	i2l2341
  9005  0014D0  EF6A  F00A         	
  9006                           i2l557:
  9007  0014D4                     	line	40
  9008                           	
  9009                           i2l2341:
  9010  0014D4                     	movff	(c:___awdiv@quotient),(c:?___awdiv)
  9011  0014D4  C007  F001         	movff	(c:___awdiv@quotient+1),(c:?___awdiv+1)
  9012  0014D8  C008  F002         	goto	i2l558
  9013  0014DC  EF70  F00A         	
  9014                           i2l2343:
  9015  0014E0                     	line	41
  9016                           	
  9017                           i2l558:
  9018  0014E0                     	return	;funcret
  9019  0014E0  0012               	opt stack 0
  9020                           GLOBAL	__end_of___awdiv
  9021                           	__end_of___awdiv:
  9022  0014E2                     	signat	___awdiv,8314
  9023                           	global	___aldiv
  9024                           
  9025 ;; *************** function ___aldiv *****************
  9026 ;; Defined at:
  9027 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;  dividend        4    6[COMRAM] long 
  9030 ;;  divisor         4   10[COMRAM] long 
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;  quotient        4   16[COMRAM] long 
  9033 ;;  sign            1   15[COMRAM] unsigned char 
  9034 ;;  counter         1   14[COMRAM] unsigned char 
  9035 ;; Return value:  Size  Location     Type
  9036 ;;                  4    6[COMRAM] long 
  9037 ;; Registers used:
  9038 ;;		wreg, status,2, status,0
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9044 ;;      Params:         8       0       0       0       0       0       0
  9045 ;;      Locals:         6       0       0       0       0       0       0
  9046 ;;      Temps:          0       0       0       0       0       0       0
  9047 ;;      Totals:        14       0       0       0       0       0       0
  9048 ;;Total ram usage:       14 bytes
  9049 ;; Hardware stack levels used:    1
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_tc_int
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           psect	text30,class=CODE,space=0,reloc=2,group=1
  9057                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  9058                           	line	7
  9059                           global __ptext30
  9060                           __ptext30:
  9061  0011B6                     psect	text30
  9062                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  9063                           	line	7
  9064                           	global	__size_of___aldiv
  9065                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  9066  0000                     	
  9067                           ___aldiv:
  9068  0011B6                     ;incstack = 0
  9069                           	opt	stack 23
  9070                           	line	13
  9071                           	
  9072                           i2l2257:
  9073  0011B6                     	movlw	low(0)
  9074  0011B6  0E00               	movwf	((c:___aldiv@sign)),c
  9075  0011B8  6E10               	line	14
  9076                           	
  9077                           i2l2259:
  9078  0011BA                     	btfsc	((c:___aldiv@divisor+3)),c,7
  9079  0011BA  BE0E               	goto	i2u160_40
  9080  0011BC  EFE4  F008         	goto	i2u160_41
  9081  0011C0  EFE2  F008         
  9082                           i2u160_41:
  9083  0011C4                     	goto	i2l2265
  9084  0011C4  EFF0  F008         i2u160_40:
  9085  0011C8                     	line	15
  9086                           	
  9087                           i2l2261:
  9088  0011C8                     	comf	((c:___aldiv@divisor+3)),c
  9089  0011C8  1E0E               	comf	((c:___aldiv@divisor+2)),c
  9090  0011CA  1E0D               	comf	((c:___aldiv@divisor+1)),c
  9091  0011CC  1E0C               	negf	((c:___aldiv@divisor)),c
  9092  0011CE  6C0B               	movlw	0
  9093  0011D0  0E00               	addwfc	((c:___aldiv@divisor+1)),c
  9094  0011D2  220C               	addwfc	((c:___aldiv@divisor+2)),c
  9095  0011D4  220D               	addwfc	((c:___aldiv@divisor+3)),c
  9096  0011D6  220E               	line	16
  9097                           	
  9098                           i2l2263:
  9099  0011D8                     	movlw	low(01h)
  9100  0011D8  0E01               	movwf	((c:___aldiv@sign)),c
  9101  0011DA  6E10               	goto	i2l2265
  9102  0011DC  EFF0  F008         	line	17
  9103                           	
  9104                           i2l396:
  9105  0011E0                     	line	18
  9106                           	
  9107                           i2l2265:
  9108  0011E0                     	btfsc	((c:___aldiv@dividend+3)),c,7
  9109  0011E0  BE0A               	goto	i2u161_40
  9110  0011E2  EFF7  F008         	goto	i2u161_41
  9111  0011E6  EFF5  F008         
  9112                           i2u161_41:
  9113  0011EA                     	goto	i2l2271
  9114  0011EA  EF03  F009         i2u161_40:
  9115  0011EE                     	line	19
  9116                           	
  9117                           i2l2267:
  9118  0011EE                     	comf	((c:___aldiv@dividend+3)),c
  9119  0011EE  1E0A               	comf	((c:___aldiv@dividend+2)),c
  9120  0011F0  1E09               	comf	((c:___aldiv@dividend+1)),c
  9121  0011F2  1E08               	negf	((c:___aldiv@dividend)),c
  9122  0011F4  6C07               	movlw	0
  9123  0011F6  0E00               	addwfc	((c:___aldiv@dividend+1)),c
  9124  0011F8  2208               	addwfc	((c:___aldiv@dividend+2)),c
  9125  0011FA  2209               	addwfc	((c:___aldiv@dividend+3)),c
  9126  0011FC  220A               	line	20
  9127                           	
  9128                           i2l2269:
  9129  0011FE                     	movlw	(01h)&0ffh
  9130  0011FE  0E01               	xorwf	((c:___aldiv@sign)),c
  9131  001200  1A10               	goto	i2l2271
  9132  001202  EF03  F009         	line	21
  9133                           	
  9134                           i2l397:
  9135  001206                     	line	22
  9136                           	
  9137                           i2l2271:
  9138  001206                     	movlw	low(0)
  9139  001206  0E00               	movwf	((c:___aldiv@quotient)),c
  9140  001208  6E11               	movlw	high(0)
  9141  00120A  0E00               	movwf	((c:___aldiv@quotient+1)),c
  9142  00120C  6E12               	movlw	low highword(0)
  9143  00120E  0E00               	movwf	((c:___aldiv@quotient+2)),c
  9144  001210  6E13               	movlw	high highword(0)
  9145  001212  0E00               	movwf	((c:___aldiv@quotient+3)),c
  9146  001214  6E14               	line	23
  9147                           	
  9148                           i2l2273:
  9149  001216                     	movf	((c:___aldiv@divisor)),c,w
  9150  001216  500B               iorwf	((c:___aldiv@divisor+1)),c,w
  9151  001218  100C               iorwf	((c:___aldiv@divisor+2)),c,w
  9152  00121A  100D               iorwf	((c:___aldiv@divisor+3)),c,w
  9153  00121C  100E               	btfsc	status,2
  9154  00121E  B4D8               	goto	i2u162_41
  9155  001220  EF14  F009         	goto	i2u162_40
  9156  001224  EF16  F009         
  9157                           i2u162_41:
  9158  001228                     	goto	i2l2293
  9159  001228  EF58  F009         i2u162_40:
  9160  00122C                     	line	24
  9161                           	
  9162                           i2l2275:
  9163  00122C                     	movlw	low(01h)
  9164  00122C  0E01               	movwf	((c:___aldiv@counter)),c
  9165  00122E  6E0F               	line	25
  9166                           	goto	i2l2279
  9167  001230  EF22  F009         	
  9168                           i2l400:
  9169  001234                     	line	26
  9170                           	
  9171                           i2l2277:
  9172  001234                     	bcf	status,0
  9173  001234  90D8               	rlcf	((c:___aldiv@divisor)),c
  9174  001236  360B               	rlcf	((c:___aldiv@divisor+1)),c
  9175  001238  360C               	rlcf	((c:___aldiv@divisor+2)),c
  9176  00123A  360D               	rlcf	((c:___aldiv@divisor+3)),c
  9177  00123C  360E               	line	27
  9178                           	incf	((c:___aldiv@counter)),c
  9179  00123E  2A0F               	goto	i2l2279
  9180  001240  EF22  F009         	line	28
  9181                           	
  9182                           i2l399:
  9183  001244                     	line	25
  9184                           	
  9185                           i2l2279:
  9186  001244                     	
  9187                           	btfss	((c:___aldiv@divisor+3)),c,(31)&7
  9188  001244  AE0E               	goto	i2u163_41
  9189  001246  EF27  F009         	goto	i2u163_40
  9190  00124A  EF29  F009         i2u163_41:
  9191  00124E                     	goto	i2l2277
  9192  00124E  EF1A  F009         i2u163_40:
  9193  001252                     	goto	i2l2281
  9194  001252  EF2D  F009         	
  9195                           i2l401:
  9196  001256                     	goto	i2l2281
  9197  001256  EF2D  F009         	line	29
  9198                           	
  9199                           i2l402:
  9200  00125A                     	line	30
  9201                           	
  9202                           i2l2281:
  9203  00125A                     	bcf	status,0
  9204  00125A  90D8               	rlcf	((c:___aldiv@quotient)),c
  9205  00125C  3611               	rlcf	((c:___aldiv@quotient+1)),c
  9206  00125E  3612               	rlcf	((c:___aldiv@quotient+2)),c
  9207  001260  3613               	rlcf	((c:___aldiv@quotient+3)),c
  9208  001262  3614               	line	31
  9209                           	
  9210                           i2l2283:
  9211  001264                     		movf	((c:___aldiv@divisor)),c,w
  9212  001264  500B               	subwf	((c:___aldiv@dividend)),c,w
  9213  001266  5C07               	movf	((c:___aldiv@divisor+1)),c,w
  9214  001268  500C               	subwfb	((c:___aldiv@dividend+1)),c,w
  9215  00126A  5808               	movf	((c:___aldiv@divisor+2)),c,w
  9216  00126C  500D               	subwfb	((c:___aldiv@dividend+2)),c,w
  9217  00126E  5809               	movf	((c:___aldiv@divisor+3)),c,w
  9218  001270  500E               	subwfb	((c:___aldiv@dividend+3)),c,w
  9219  001272  580A               	btfss	status,0
  9220  001274  A0D8               	goto	i2u164_41
  9221  001276  EF3F  F009         	goto	i2u164_40
  9222  00127A  EF41  F009         
  9223                           i2u164_41:
  9224  00127E                     	goto	i2l2289
  9225  00127E  EF4C  F009         i2u164_40:
  9226  001282                     	line	32
  9227                           	
  9228                           i2l2285:
  9229  001282                     	movf	((c:___aldiv@divisor)),c,w
  9230  001282  500B               	subwf	((c:___aldiv@dividend)),c
  9231  001284  5E07               	movf	((c:___aldiv@divisor+1)),c,w
  9232  001286  500C               	subwfb	((c:___aldiv@dividend+1)),c
  9233  001288  5A08               	movf	((c:___aldiv@divisor+2)),c,w
  9234  00128A  500D               	subwfb	((c:___aldiv@dividend+2)),c
  9235  00128C  5A09               	movf	((c:___aldiv@divisor+3)),c,w
  9236  00128E  500E               	subwfb	((c:___aldiv@dividend+3)),c
  9237  001290  5A0A               	line	33
  9238                           	
  9239                           i2l2287:
  9240  001292                     	bsf	(0+(0/8)+(c:___aldiv@quotient)),c,(0)&7
  9241  001292  8011               	goto	i2l2289
  9242  001294  EF4C  F009         	line	34
  9243                           	
  9244                           i2l403:
  9245  001298                     	line	35
  9246                           	
  9247                           i2l2289:
  9248  001298                     	bcf	status,0
  9249  001298  90D8               	rrcf	((c:___aldiv@divisor+3)),c
  9250  00129A  320E               	rrcf	((c:___aldiv@divisor+2)),c
  9251  00129C  320D               	rrcf	((c:___aldiv@divisor+1)),c
  9252  00129E  320C               	rrcf	((c:___aldiv@divisor)),c
  9253  0012A0  320B               	line	36
  9254                           	
  9255                           i2l2291:
  9256  0012A2                     	decfsz	((c:___aldiv@counter)),c
  9257  0012A2  2E0F               	
  9258                           	goto	i2l2281
  9259  0012A4  EF2D  F009         	goto	i2l2293
  9260  0012A8  EF58  F009         	
  9261                           i2l404:
  9262  0012AC                     	goto	i2l2293
  9263  0012AC  EF58  F009         	line	37
  9264                           	
  9265                           i2l398:
  9266  0012B0                     	line	38
  9267                           	
  9268                           i2l2293:
  9269  0012B0                     	movf	((c:___aldiv@sign)),c,w
  9270  0012B0  5010               	btfsc	status,2
  9271  0012B2  B4D8               	goto	i2u165_41
  9272  0012B4  EF5E  F009         	goto	i2u165_40
  9273  0012B8  EF60  F009         i2u165_41:
  9274  0012BC                     	goto	i2l2297
  9275  0012BC  EF6A  F009         i2u165_40:
  9276  0012C0                     	line	39
  9277                           	
  9278                           i2l2295:
  9279  0012C0                     	comf	((c:___aldiv@quotient+3)),c
  9280  0012C0  1E14               	comf	((c:___aldiv@quotient+2)),c
  9281  0012C2  1E13               	comf	((c:___aldiv@quotient+1)),c
  9282  0012C4  1E12               	negf	((c:___aldiv@quotient)),c
  9283  0012C6  6C11               	movlw	0
  9284  0012C8  0E00               	addwfc	((c:___aldiv@quotient+1)),c
  9285  0012CA  2212               	addwfc	((c:___aldiv@quotient+2)),c
  9286  0012CC  2213               	addwfc	((c:___aldiv@quotient+3)),c
  9287  0012CE  2214               	goto	i2l2297
  9288  0012D0  EF6A  F009         	
  9289                           i2l405:
  9290  0012D4                     	line	40
  9291                           	
  9292                           i2l2297:
  9293  0012D4                     	movff	(c:___aldiv@quotient),(c:?___aldiv)
  9294  0012D4  C011  F007         	movff	(c:___aldiv@quotient+1),(c:?___aldiv+1)
  9295  0012D8  C012  F008         	movff	(c:___aldiv@quotient+2),(c:?___aldiv+2)
  9296  0012DC  C013  F009         	movff	(c:___aldiv@quotient+3),(c:?___aldiv+3)
  9297  0012E0  C014  F00A         	goto	i2l406
  9298  0012E4  EF74  F009         	
  9299                           i2l2299:
  9300  0012E8                     	line	41
  9301                           	
  9302                           i2l406:
  9303  0012E8                     	return	;funcret
  9304  0012E8  0012               	opt stack 0
  9305                           GLOBAL	__end_of___aldiv
  9306                           	__end_of___aldiv:
  9307  0012EA                     	signat	___aldiv,8316
  9308                           psect	smallconst
  9309                           	db 0	; dummy byte at the end
  9310  00063B  00                 	global	__smallconst
  9311                           	global	__mediumconst
  9312                           	GLOBAL	__activetblptr
  9313                           __activetblptr	EQU	2
  9314  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  9315                           	PSECT	rparam,class=COMRAM,space=1,noexec
  9316                           	GLOBAL	__Lrparam
  9317                           	FNCONF	rparam,??,?
  9318                           	GLOBAL	___rparam_used
  9319                           	___rparam_used EQU 1
  9320  0000                     	GLOBAL	___param_bank
  9321                           	___param_bank EQU 0
  9322  0000                     GLOBAL	__Lparam, __Hparam
  9323                           GLOBAL	__Lrparam, __Hrparam
  9324                           __Lparam	EQU	__Lrparam
  9325  0000                     __Hparam	EQU	__Hrparam
  9326  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  9327                           	global	btemp
  9328                           btemp:
  9329  00005A                     	ds	1
  9330  00005A                     	global	int$flags
  9331                           	int$flags	set btemp
  9332  0000                     	global	wtemp8
  9333                           	wtemp8 set btemp+1
  9334  0000                     	global	ttemp5
  9335                           	ttemp5 set btemp+1
  9336  0000                     	global	ttemp6
  9337                           	ttemp6 set btemp+4
  9338  0000                     	global	ttemp7
  9339                           	ttemp7 set btemp+8
  9340  0000                     	end


Data Sizes:
    Strings     58
    Constant    0
    Data        244
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     43      89
    BANK0           128      8     128
    BANK1           256     11     131
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(COMRAM[10]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(COMRAM[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(COMRAM[10]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(COMRAM[10]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(COMRAM[10]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_30(CODE[2]), STR_28(CODE[2]), STR_26(CODE[6]), STR_24(CODE[7]), 
		 -> STR_22(CODE[6]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> mystring(COMRAM[10]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(COMRAM[10]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 1535
		 -> STR_15(CODE[6]), STR_1(CODE[7]), RAM(DATA[1535]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(COMRAM[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    _MyusartRead->___awmod

Critical Paths under _tc_int in COMRAM

    _tc_int->___aldiv
    i2_UART_Write_Text->i2_UART_Write
    ___aldiv->___wmul

Critical Paths under _main in BANK0

    _main->_strstr
    _strcmp->_GetString
    _Stopmusic->_ClearBuffer
    _Playmusic->_ClearBuffer
    _Mode3->_strstr
    _Mode2->_strstr
    _Mode1->_strstr
    _strstr->_strlen
    _strstr->_strncmp
    _UART_Write_Text->_UART_Write

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_strstr
    _Mode3->_strstr
    _Mode2->_strstr
    _Mode1->_strstr
    _strstr->_strncmp

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _tc_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _tc_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20943
                        _ClearBuffer
                          _GetString
                              _Mode1
                              _Mode2
                              _Mode3
                          _Playmusic
                  _SYSTEM_Initialize
                          _Stopmusic
                             _strcmp
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               7     3      4    1061
                                              2 BANK0      4     0      4
                                              0 BANK1      3     3      0
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (1) _Stopmusic                                            0     0      0      68
                        _ClearBuffer
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Playmusic                                            0     0      0      68
                        _ClearBuffer
 ---------------------------------------------------------------------------------
 (1) _Mode3                                                0     0      0    4743
                        _ClearBuffer
                          _GetString
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _Mode2                                                0     0      0    5130
                        _ClearBuffer
                          _GetString
                    _UART_Write_Text
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _Mode1                                                0     0      0    5130
                        _ClearBuffer
                          _GetString
                    _UART_Write_Text
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               6     2      4    4675
                                              6 BANK0      2     2      0
                                              7 BANK1      4     0      4
                          _GetString (ARG)
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                             13     7      6     595
                                              0 BANK0      6     0      6
                                              0 BANK1      7     7      0
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     220
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               5     1      4     304
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      6     4      2     387
                                              1 BANK0      6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetString                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Lo_ISR                                               5     5      0     470
                                             38 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (5) _MyusartRead                                          0     0      0     470
                            ___awmod
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (6) i1_UART_Write                                         1     1      0      22
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                             32 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _tc_int                                              12    12      0    1809
                                             20 COMRAM    12    12      0
                            ___aldiv
                            ___awdiv
                             ___wmul
                  i2_UART_Write_Text
 ---------------------------------------------------------------------------------
 (8) i2_UART_Write_Text                                    6     4      2     138
                                              1 COMRAM     6     4      2
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (9) i2_UART_Write                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) ___aldiv                                             14     6      8     452
                                              6 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _GetString
   _Mode1
     _ClearBuffer
     _GetString
     _UART_Write_Text
       _UART_Write
     _strstr
       _GetString (ARG)
       _strchr (ARG)
       _strlen (ARG)
       _strncmp (ARG)
   _Mode2
     _ClearBuffer
     _GetString
     _UART_Write_Text
       _UART_Write
     _strstr
       _GetString (ARG)
       _strchr (ARG)
       _strlen (ARG)
       _strncmp (ARG)
   _Mode3
     _ClearBuffer
     _GetString
     _strstr
       _GetString (ARG)
       _strchr (ARG)
       _strlen (ARG)
       _strncmp (ARG)
   _Playmusic
     _ClearBuffer
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _Stopmusic
     _ClearBuffer
   _strcmp
     _GetString (ARG)
   _strstr
     _GetString (ARG)
     _strchr (ARG)
     _strlen (ARG)
     _strncmp (ARG)

 _Lo_ISR (ROOT)
   _MyusartRead
     ___awmod
     i1_UART_Write

 _tc_int (ROOT)
   ___aldiv
     ___wmul (ARG)
   ___awdiv
   ___wmul
   i2_UART_Write_Text
     i2_UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      B      83       7       51.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80      8      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2B      59       1       70.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15C      15        0.0%
DATA                 0      0     15C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Dec 22 16:28:53 2018

                            l15 1D42                              l18 1D5C                              l51 1CB8  
                            l60 1D52                              l70 1AE4                              l54 1CC2  
                            l71 1AEC                              l55 1CC2                              l63 1850  
                            l56 1CD4                              l64 1814                              l57 1CD8  
                            l65 1890                              l66 1890                              l91 1D6A  
                            l69 1AB0                              l88 1D64                    ___awdiv@sign 0006  
                            bsr 000FE0             ___wmul@multiplicand 0003                     __CFG_BORV$3 000000  
                  __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000         __end_of_CCP1_Initialize 1D6C  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                             l108 1D2C  
                           l302 1B4A                             l310 0F12                             l311 0F48  
                           l240 07B0                             l312 106A                             l320 105A  
                           l241 07A8                             l305 1C96                             l321 1056  
                           l313 0F7E                             l250 09F4                             l242 0700  
                           l322 106E                             l314 1066                             l251 09EC  
                           l243 07A4                             l323 1072                             l315 0FB4  
                           l260 094C                             l252 083C                             l244 074E  
                           l324 1072                             l316 1062                             l253 09E8  
                           l261 09D8                             l245 07A0                             l317 0FEA  
                           l270 0A5A                             l262 0990                             l254 0880  
                           l246 079C                             l238 0670                             l318 105E  
                           l271 0AA0                             l255 09E4                             l263 09D4  
                           l247 07AC                             l239 06B6                             l319 1020  
                           l272 0A78                             l264 09D0                             l256 08C4  
                           l248 07B4                             l280 16FA                             l273 0A9C  
                           l265 09F0                             l257 09E0                             l249 07F8  
                           l281 1706                             l274 0A98                             l266 09F8  
                           l258 0908                             l282 1760                             l290 10FC  
                           l275 0AC8                             l267 0AC0                             l259 09DC  
                           l283 1748                             l291 115A                             l276 0AC4  
                           l268 0A3E                             l284 1768                             l292 1152  
                           l277 0ACC                             l269 0AA0                             l285 1764  
                           l293 114E                             l286 176C                             l294 1156  
                           l295 1162                             l296 11AC                             l297 11B4  
                           l289 10A6                             l298 11B0                             l299 11B4  
                  __CFG_CPB$OFF 000000                             _RC2 007C12                             _RD5 007C1D  
                           _RD6 007C1E                             _RD7 007C1F                             _PR2 000FCB  
                  __CFG_CPD$OFF 000000                             _str 002C                    ___awmod@sign 0026  
                           wreg 000FE8                    __CFG_IESO$ON 000000                    __CFG_LVP$OFF 000000  
                  __CFG_WDT$OFF 000000                            l1001 1780                            l1002 1772  
                          l1004 17C6                            l1021 15B2                            l1005 17CA  
                          l1022 15B6                            l1006 1804                            l1031 1B62  
                          l1015 15BA                            l1032 1B58                            l1040 132A  
                          l1016 1582                            l1025 1BA6                            l1033 1B82  
                          l1017 150E                            l1026 1BD2                            l1034 1BA4  
                          l1042 13B4                            l1018 154E                            l1027 1BFE  
                          l1043 13B8                            l1019 15C6                            l1028 1BF2  
                          l1037 1326                            l1038 13F4                            l1039 1340  
                          l2501 13B8                            l2511 1BD2                            l2503 13F4  
                          l2513 1BF2                            l2505 1BA6                            l2521 1C98  
                          l2601 1D36                            l2515 1BFE                            l2507 1BC2  
                          l2611 0656                            l2531 1CAC                            l2523 1CA2  
                          l2603 1D3E                            l2509 1BCE                            l2701 07EC  
                          l2621 0662                            l2613 0658                            l2605 063C  
                          l2517 1D54                            l2541 1CB6                            l2533 1CAE  
                          l2525 1CA6                            l2551 1D44                            l2471 1CBE  
                          l2711 0830                            l2703 07F4                            l2631 06A8  
                          l2623 0664                            l2615 065C                            l2607 0640  
                          l2543 1D16                            l2519 1D5E                            l2535 1CB0  
                          l2527 1CA8                            l2553 1D52                            l2473 1CD4  
                          l2561 1850                            l2481 1B82                            l2721 0874  
                          l2713 0838                            l2705 07F8                            l2641 06EC  
                          l2633 06AA                            l2625 0670                            l2617 065E  
                          l2609 0648                            l2801 16AC                            l2545 1D18  
                          l2537 1CB2                            l2529 1CAA                            l2571 1AC0  
                          l2563 1A82                            l2555 1806                            l2483 1BA4  
                          l2475 1B4C                            l2491 132A                            l2731 08B8  
                          l2723 087C                            l2707 0826                            l2715 083C  
                          l2651 06FC                            l2643 06EE                            l2635 06B2  
                          l2627 069E                            l2619 0660                            l2811 16C2  
                          l2803 16BA                            l2547 1D1C                            l2539 1CB4  
                          l2573 1AC4                            l2565 1A8C                            l2557 1814  
                          l2477 1B58                            l2493 1340                            l2485 12EA  
                          l2581 150E                            l2741 08FC                            l2733 08C0  
                          l2717 086A                            l2725 0880                            l2709 082E  
                          l2661 073A                            l2645 06F0                            l2653 0700  
                          l2629 06A6                            l2637 06B6                            l2821 16CE  
                          l2813 16C4                            l2805 16BC                            l2901 1AF4  
                          l2549 1D1E                            l2567 1AAC                            l2575 1AE4  
                          l2559 1846                            l2479 1B62                            l2495 1358  
                          l2487 1316                            l2591 1596                            l2583 153E  
                          l2751 0940                            l2743 0904                            l2727 08AE  
                          l2735 08C4                            l2719 0872                            l2671 074A  
                          l2663 073C                            l2655 072E                            l2647 06F2  
                          l2639 06E4                            l2831 16EE                            l2823 16D0  
                          l2815 16C6                            l2807 16BE                            l2911 1B0C  
                          l2903 1AF8                            l2569 1AB0                            l2497 1374  
                          l2489 1322                            l2585 154A                            l2593 15BA  
                          l2577 14E2                            l2761 0984                            l2753 0948  
                          l2737 08F2                            l2745 0908                            l2729 08B6  
                          l2681 0788                            l2665 073E                            l2657 0736  
                          l2673 074E                            l2649 06F4                            l2841 1746  
                          l2833 16FA                            l2825 16D2                            l2817 16CA  
                          l2809 16C0                            l2921 1B18                            l2913 1B0E  
                          l2905 1B00                            l2499 1386                            l2595 15C6  
                          l2587 154E                            l2579 14F6                            l2771 09C8  
                          l2763 098C                            l2747 0936                            l2755 094C  
                          l2739 08FA                            l2691 0792                            l2683 078A  
                          l2675 077C                            l2667 0740                            l2659 0738  
                          l2843 1758                            l2835 1700                            l2827 16DA  
                          l2819 16CC                            l2851 107C                            l2931 1B2E  
                          l2923 1B1A                            l2915 1B10                            l2907 1B08  
                          l2589 1582                            l2781 0A52                            l2757 097A  
                          l2765 0990                            l2749 093E                            l2773 09F8  
                          l2693 0794                            l2685 078C                            l2677 0784  
                          l2669 0742                            l2845 1768                            l2837 1706  
                          l2829 16EC                            l2861 108E                            l2853 1080  
                          l2933 1B36                            l2925 1B1C                            l2917 1B12  
                          l2909 1B0A                            l2597 1D2E                            l2941 1C76  
                          l2791 0AA8                            l2783 0A5A                            l2775 0A26  
                          l2767 09BE                            l2759 0982                            l2687 078E  
                          l2679 0786                            l2695 07B4                            l2839 1734  
                          l2871 10D4                            l2863 1090                            l2855 1088  
                          l2847 1076                            l2935 1B3E                            l2927 1B1E  
                          l2919 1B14                            l2599 1D32                            l2951 1C92  
                          l2943 1C78                            l2793 0AB8                            l2785 0A6E  
                          l2777 0A38                            l2769 09C6                            l2697 07E2  
                          l2689 0790                            l2881 112A                            l2873 10D8  
                          l2865 1094                            l2857 108A                            l2849 107A  
                          l2937 1B46                            l2929 1B26                            l2945 1C7A  
                          l2961 17CA                            l2953 176E                            l2795 0AC8  
                          l2787 0A78                            l2779 0A3E                            l2699 07EA  
                          l2891 1190                            l2883 112E                            l2875 10F0  
                          l2867 1096                            l2859 108C                            l2947 1C82  
                          l2939 1C72                            l2963 1804                            l2955 1772  
                          l2971 0F48                            l2789 0A8C                            l2797 16A0  
                          l2893 1194                            l2885 1146                            l2877 10F8  
                          l2869 10A6                            l2949 1C8A                            l2957 1780  
                          l2981 0FE2                            l2973 0F76                            l2965 0F0A  
                          l2799 16A4                            l2895 11A4                            l2887 115A  
                          l2879 10FC                            l2959 17AA                            l2983 0FEA  
                          l2975 0F7E                            l2967 0F12                            l2889 1162  
                          l2897 1AEE                            l2985 1018                            l2977 0FAC  
                          l2969 0F40                            l2899 1AF2                            l2987 1020  
                          l2979 0FB4                            l2989 104E                            _ADFM 007E07  
                          STR_1 0601                            STR_2 0627                            STR_3 0613  
                          STR_4 0629                            STR_5 062B                            STR_6 0627  
                          STR_7 0613                            STR_8 0629                            STR_9 062B  
                          _CREN 007D5C                            u2200 1B7E                            u2201 1B7A  
                          u2210 1316                            u2211 1312                            u2300 188C  
                          u2220 1358                            u2301 1888                            u2221 1354  
                          u2310 1AA8                            u2230 1374                            u2311 1AA4  
                          u2231 1370                            u2320 1AE0                            u2240 1386  
                          u2400 077C                            u2321 1ADC                            u2241 1382  
                          u2401 0778                            u2250 13B0                            u2330 14F6  
                          u2410 07E2                            u2251 13AC                            u2331 14F2  
                          u2411 07DE                            u2260 1BC2                            u2340 153E  
                          u2500 0A38                            u2420 0826                            u2261 1BBE  
                          u2341 153A                            u2501 0A34                            u2421 0822  
                          u2190 1CD0                            u2270 1BEE                            u2350 1596  
                          u2510 0A52                            u2430 086A                            u2191 1CCC  
                          u2271 1BEA                            u2351 1592                            u2511 0A4E  
                          u2431 0866                            u2280 1842                            u2360 15AE  
                          u2520 0A6E                            u2440 08AE                            u2600 17AA  
                          u2361 15AA                            u2521 0A6A                            u2441 08AA  
                          u2601 17A6                            u2290 187C                            u2530 0A8C  
                          u2450 08F2                            u2370 069E                            u2610 17C2  
                          u2531 0A88                            u2451 08EE                            u2371 069A  
                          u2611 17BE                            u2460 0936                            u2380 06E4  
                          u2540 16EC                            u2620 0F40                            u2461 0932  
                          u2381 06E0                            u2541 16E8                            u2621 0F3C  
                          u2470 097A                            u2390 072E                            u2550 1734  
                          u2630 0F76                            u2287 1838                            u2471 0976  
                          u2391 072A                            u2551 1730                            u2631 0F72  
                          u2480 09BE                            u2560 1746                            u2640 0FAC  
                          u2297 1872                            u2481 09BA                            u2561 1742  
                          u2641 0FA8                            u2490 0A26                            u2570 10D4  
                          u2650 0FE2                            u2491 0A22                            u2571 10D0  
                          u2651 0FDE                            u2580 112A                            u2660 1018  
                          u2581 1126                            u2661 1014                            u2590 1190  
                          u2670 104E                            u2591 118C                            u2671 104A  
                          _RCIF 007CF5                            i1l54 1CE0                            i1l55 1CE0  
                          i1l56 1CF2                            i1l80 0054                            i1l57 1CF6  
                          i1l81 0060                            i1l74 1C46                            i2l54 1CFE  
                          i2l55 1CFE                            i2l63 18D6                            i1l79 005C  
                          i2l56 1D10                            i2l64 189E                            i2l57 1D14  
                          i2l65 1916                            i2l66 1916                            _TMR1 000FCE  
                          _TMR3 000FB2                    __CFG_WDTPS$1 000000                            _main 0F0A  
                          fsr2h 000FDA                            _tone 0080                            indf2 000FDF  
                          fsr1l 000FE1                            fsr2l 000FD9                            btemp 005A  
                          prodh 000FF4                            prodl 000FF3                            start 0078  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000000         __end_of_UART_Write_Text 1892  
              ?_UART_Initialize 0001  __size_of_OSCILLATOR_Initialize 000A   __end_of_OSCILLATOR_Initialize 1D5E  
               __end_of___aldiv 12EA                           ?_main 0001                 __end_of___awdiv 14E2  
                         STR_10 062D                           STR_11 062F                           STR_12 0631  
                         STR_20 0621                           STR_13 0633                           STR_21 061B  
                         STR_22 061B                           STR_30 0639                           STR_14 0637  
                         STR_15 060F                           STR_23 0608                           STR_24 0608  
                         STR_16 0637                           STR_17 0627                           STR_25 0615  
                         STR_18 0613                           STR_26 0615                           STR_19 0637  
                         STR_27 0635                           STR_28 0635                 __end_of___awmod 16A0  
                         STR_29 0639                 ___awdiv@divisor 0003                           i2l211 0C8C  
                         i2l220 0CE6                           i2l212 0C44                           i2l221 0DD8  
                         i2l213 0BA6                           i2l230 0E62                           i2l222 0D22  
                         i2l214 0C40                           i2l231 0E5E                           i2l223 0DD8  
                         i2l215 0C7A                           i2l400 1234                           i2l216 0EE6  
                         i2l232 0E7C                           i2l224 0D70                           i2l401 1256  
                         i2l217 0EE2                           i2l233 0E9C                           i2l225 0DD4  
                         i1l561 15EA                           i2l402 125A                           i2l234 0E98  
                         i2l218 0DF8                           i2l226 0DD0                           i1l570 1692  
                         i1l562 1604                           i2l403 1298                           i2l227 0EDE  
                         i2l219 0DE4                           i2l235 0EE6                           i1l571 169E  
                         i1l563 1676                           i2l404 12AC                           i2l228 0EDA  
                         i1l564 162A                           i2l405 12D4                           i2l229 0E34  
                         i1l565 161E                           i2l406 12E8                           i1l566 163C  
                         i2l327 1C70                           i1l567 1640                           i1l568 1662  
                         i1l569 1672                           i2l550 14B8                           i2l551 1464  
                         i2l552 1458                           i2l553 1476                           i2l554 147A  
                         i2l555 14A4                           i2l396 11E0                           i2l556 14B4  
                         i2l548 1418                           i2l397 1206                           i2l557 14D4  
                         i2l549 1436                           i2l398 12B0                           i2l558 14E0  
                         i2l399 1244                 ___awdiv@counter 0005                           _RCREG 000FAE  
                         _SPBRG 000FAF                           _TRISA 000F92                           _TXREG 000FAD  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                           _Mode1 063C  
                         _Mode2 16A0                           _Mode3 1076                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                     ?_UART_Write 0001                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
                         _tempo 0100                     _ClearBuffer 1A82                           tablat 000FF5  
                         ttemp5 005B                           ttemp6 005E                           ttemp7 0062  
                         status 000FD8                           wtemp8 005B                 __end_of_strncmp 13F6  
                __CFG_PBADEN$ON 000000                 __initialization 1918                    __end_of_main 1076  
                        ??_main 0100                ?_CCP1_Initialize 0001                   __activetblptr 000002  
            __size_of_GetString 0010                          ?_Mode1 0001                          ?_Mode2 0001  
                        ?_Mode3 0001                          _ADCON1 000FC1                          _ADRESH 000FC4  
                        _ADRESL 000FC3                          _CCPR1L 000FBE                          _CCPR2L 000FBB  
              ___awdiv@dividend 0001                          i1l2361 0060                          i1l2353 002E  
                        i1l2355 003C                          i1l1901 15EA                          i1l2357 004A  
                        i1l1911 162A                          i1l1903 15F8                          i1l2359 0054  
                        i1l1913 1640                          i1l1921 1676                          i1l1905 1604  
                        i1l1923 1686                          i1l1915 1656                          i1l1907 1616  
                        i1l1931 1CF2                          i1l1925 1692                          i1l1917 1662  
                        i1l1909 161E                          i1l1941 1C22                          i1l1927 169E  
                        i1l1919 1668                          i1l1943 1C26                          i1l1929 1CDC  
                        i1l1945 1C46                          i1l1937 1C00                          i1l1939 1C10  
                        i2l2301 13F6                          i1l1893 15C8                          i2l2311 1426  
                        i2l2303 13FA                          i1l1895 15CC                          i2l2321 1458  
                        i2l2313 142E                          i2l2305 1408                          i2l2401 0CFA  
                        i1l1897 15DA                          i2l2331 149E                          i2l2323 1464  
                        i2l2315 1436                          i2l2307 1410                          i2l2251 1C48  
                        i2l2403 0D22                          i2l2411 0DE4                          i1l1899 15E2  
                        i2l2261 11C8                          i2l2341 14D4                          i2l2333 14A4  
                        i2l2325 147A                          i2l2317 143E                          i2l2309 1418  
                        i2l2253 1C64                          i2l2421 0E16                          i2l2413 0DEA  
                        i2l2405 0D36                          i2l2271 1206                          i2l2263 11D8  
                        i2l2343 14E0                          i2l2335 14AA                          i2l2327 1480  
                        i2l2319 1450                          i2l2255 1C70                          i2l2351 18D6  
                        i2l2431 0E74                          i2l2423 0E28                          i2l2415 0DEC  
                        i2l2407 0D70                          i2l2281 125A                          i2l2273 1216  
                        i2l2265 11E0                          i2l2257 11B6                          i2l2329 1496  
                        i2l2337 14B8                          i2l2345 1892                          i2l2441 0ECC  
                        i2l2433 0E7C                          i2l2425 0E34                          i2l2409 0D84  
                        i2l2417 0DF8                          i2l2291 12A2                          i2l2283 1264  
                        i2l2275 122C                          i2l2267 11EE                          i2l2259 11BA  
                        i2l2339 14C8                          i2l2347 189E                          i2l2443 0ECE  
                        i2l2435 0E8E                          i2l2427 0E52                          i2l2419 0E0A  
                        i2l2371 0B58                          i2l2363 0AF0                          i2l2285 1282  
                        i2l2277 1234                          i2l2293 12B0                          i2l2269 11FE  
                        i2l2349 18CE                          i2l2437 0E9C                          i2l2429 0E62  
                        i2l2373 0BA0                          i2l2381 0C44                          i2l2365 0AFE  
                        i2l2295 12C0                          i2l2287 1292                          i2l2279 1244  
                        i2l2439 0EB6                          i2l2391 0C9A                          i2l2383 0C6E  
                        i2l2375 0BA8                          i2l2367 0B4C                          i2l2297 12D4  
                        i2l2289 1298                          i2l2393 0CAC                          i2l2385 0C7A  
                        i2l2377 0C08                          i2l2369 0B54                          i2l2299 12E8  
                        i2l2395 0CBE                          i2l2387 0C7E                          i2l2379 0C24  
                        i2l1933 1CFA                          i2l2397 0CD0                          i2l2389 0C86  
                        i2l1935 1D10                          i2l2399 0CE6                          _Lo_ISR 0018  
                __CFG_XINST$OFF 000000             __size_of_UART_Write 0020                       ??___aldiv 000F  
                        ___wmul 1C48                       ??___awdiv 0005                  __CFG_STVREN$ON 000000  
                     ??___awmod 0025                ?_UART_Write_Text 00F9                          _lenStr 004A  
                        _length 0056                          clear_0 197E                          _tc_int 0008  
            __size_of_Playmusic 005E                ___awdiv@quotient 0007                 ___awmod@divisor 0023  
               ___awmod@counter 0025                          _updown 0038                          _strchr 1BA6  
                        _strcmp 176E                          _strlen 1B4C                          _strstr 14E2  
                  __pdataCOMRAM 0056                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                       ??_strncmp 0178  
 __size_of_INTERRUPT_Initialize 0008               _SYSTEM_Initialize 1D2E                      __accesstop 0080  
       __end_of__initialization 1984              __size_of_Stopmusic 0026              ?_SYSTEM_Initialize 0001  
                 ___rparam_used 000001               __end_of_GetString 1D54                   ?i1_UART_Write 0001  
                 __end_of_Mode1 0ACE                   __end_of_Mode2 176E                   __end_of_Mode3 11B6  
                __pcstackCOMRAM 0001                    __pidataBANK0 1992                    __pidataBANK1 1A0A  
           ??_SYSTEM_Initialize 00F8                   ??_MyusartRead 0027                         ??_Mode1 0100  
                       ??_Mode2 0100                         ??_Mode3 0100                   ?i2_UART_Write 0001  
     __end_of_SYSTEM_Initialize 1D44               __end_of_Playmusic 1B4C                i2UART_Write@data 0001  
                       ?_Lo_ISR 0001                  ??i1_UART_Write 0021              i2UART_Write_Text@i 0006  
                       ?___wmul 0001                         _CCP1CON 000FBD                         ?_tc_int 0001  
       __size_of_ADC_Initialize 0018                         ?_strchr 00F8                         ?_strcmp 00FA  
                       ?_strlen 00F8                         ?_strstr 017F               __end_of_Stopmusic 1C98  
                ??i2_UART_Write 0001                    ??_UART_Write 00F8                      _led_breath 003A  
                  ?_ClearBuffer 0001             __end_of_MyusartRead 1C48                 __size_of_Lo_ISR 0060  
                       __Hparam 0000                         __Lparam 0000                         ___aldiv 11B6  
                       ___awdiv 13F6                         ___awmod 15C8                 __size_of___wmul 002A  
            __end_of_UART_Write 1CDA                    __psmallconst 0600                         __pcinit 1918  
                       __ramtop 0600                 __size_of_tc_int 0F02                         __ptext0 0F0A  
                       __ptext1 176E                         __ptext2 1C72                         __ptext3 1D2E  
                       __ptext4 1C98                         __ptext5 1D54                         __ptext6 1D5E  
                       __ptext7 1D6A                         __ptext8 1D16                         __ptext9 1AEE  
                       _led_num 0042                 __size_of_strchr 005A                 __size_of_strcmp 0098  
               __size_of_strlen 005A                       _T1CONbits 000FCD                 __size_of_strstr 00E6  
         _OSCILLATOR_Initialize 1D54                       _T2CONbits 000FCA                       _T3CONbits 000FB1  
              ___awmod@dividend 0021                ___aldiv@dividend 0007        __size_of_UART_Initialize 0022  
    __size_of_SYSTEM_Initialize 0016                         _strncmp 12EA                  __pintcode_body 0ACE  
          end_of_initialization 1984                   __Lmediumconst 0000                         int_func 0ACE  
                     _RCSTAbits 000FAB                ___aldiv@quotient 0011                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc2 000FDE  
                       strchr@c 00FA                         strchr@s 00F8                         strcmp@l 00FA  
                       strcmp@r 00FC                         strlen@a 00FC                         strlen@s 00F8  
                       strstr@h 017F                         strstr@n 0181                  UART_Write@data 00F8  
                     _TRISCbits 000F94                       _TRISDbits 000F95                     _MyusartRead 1C00  
          __end_ofi1_UART_Write 1CF8                    _led_interval 0040        __size_of_CCP1_Initialize 0002  
                   _CCP1CONbits 000FBD                     _CCP2CONbits 000FBA                       _TXSTAbits 000FAC  
                __end_of_Lo_ISR 0078            __end_ofi2_UART_Write 1D16    __end_of_INTERRUPT_Initialize 1D66  
                     _GetString 1D44                  __end_of___wmul 1C72                     _BAUDCONbits 000FB8  
                 __pidataCOMRAM 1D66                  _ADC_Initialize 1D16          ?_OSCILLATOR_Initialize 0001  
                __end_of_tc_int 0F0A        __size_of_UART_Write_Text 008C                  __end_of_strchr 1C00  
                __end_of_strcmp 1806                  __end_of_strlen 1BA6                  __end_of_strstr 15C8  
           start_initialization 1918                    ClearBuffer@i 00F8               ??_UART_Initialize 00F8  
          __size_of_ClearBuffer 006C                __CFG_OSC$INTIO67 000000                        ??_Lo_ISR 0027  
                     _Playmusic 1AEE                        ??___wmul 0005          __end_of_ADC_Initialize 1D2E  
                   __pdataBANK0 0080                     __pdataBANK1 0100                      ?_GetString 00F8  
              __CFG_LPT1OSC$OFF 000000                        ??_tc_int 0015                        ??_strchr 00FC  
                      ??_strcmp 0178                        ??_strlen 00FA                        ??_strstr 00FE  
                   __pbssCOMRAM 002C               i2_UART_Write_Text 1892                   __pcstackBANK0 00F8  
                 __pcstackBANK1 0178                       _Stopmusic 1C72              ?i2_UART_Write_Text 0002  
         i2UART_Write_Text@text 0002             ??i2_UART_Write_Text 0004               ??_CCP1_Initialize 00F8  
                    ?_Playmusic 0001               __CFG_CCP2MX$PORTC 000000                       __pintcode 0008  
                      ?___aldiv 0007                        ?___awdiv 0001                        ?___awmod 0021  
               ?_ADC_Initialize 0001                     __pintcodelo 0018           __size_ofi1_UART_Write 001E  
     __end_ofi2_UART_Write_Text 1918                     __smallconst 0600                  __size_of_Mode1 0492  
                __size_of_Mode2 00CE                  __size_of_Mode3 0140                      ?_Stopmusic 0001  
                      ?_strncmp 00F8               ??_UART_Write_Text 00FB            _INTERRUPT_Initialize 1D5E  
               ___aldiv@divisor 000B                 ___aldiv@counter 000F                  ___wmul@product 0005  
         __size_ofi2_UART_Write 001E                        _IPR1bits 000F9F                        _IPR2bits 000FA2  
                      _PIE1bits 000F9D                        _PIE2bits 000FA0                        i1u130_20 1638  
                      i1u130_21 1634                        i1u131_20 1656                        i1u131_21 1652  
                      i1u132_20 1686                        i1u132_21 1682                        i1u133_20 1CEE  
                      i1u133_21 1CEA                        i1u127_20 15DA                        i1u127_21 15D6  
                      i1u128_20 15F8                        i1u128_21 15F4                        i1u129_20 1616  
                      i1u129_21 1612                        i1u175_20 003C                        i1u175_21 0038  
                      i1u176_20 004A                        i1u176_21 0046                        i2u200_40 0D94  
                      i2u200_41 0D8E                        i2u201_45 0D96                        i2u210_40 0E52  
                      i2u202_40 0DA6                        i2u210_41 0E4E                        i2u202_41 0DA0  
                      i2u211_40 0E74                        i2u211_41 0E70                        i2u203_45 0DA8  
                      i2u212_40 0E8E                        i2u204_40 0DB8                        i2u212_41 0E8A  
                      i2u204_41 0DB2                        i2u205_45 0DBA                        i2u134_40 1D0C  
                      i2u206_40 0DCA                        i2u134_41 1D08                        i2u206_41 0DC4  
                      i2u207_45 0DCC                        i2u160_40 11C8                        i2u208_40 0E0A  
                      i2u160_41 11C4                        i2u208_41 0E06                        i2u161_40 11EE  
                      i2u209_40 0E28                        i2u161_41 11EA                        i2u209_41 0E24  
                      i2u162_40 122C                        i2u170_40 1496                        i2u162_41 1228  
                      i2u170_41 1492                        i2u163_40 1252                        i2u171_40 14C8  
                      i2u163_41 124E                        i2u171_41 14C4                        i2u164_40 1282  
                      i2u172_40 18CA                        i2u180_40 0C6E                        i2u164_41 127E  
                      i2u180_41 0C6A                        i2u172_47 18C0                        i2u165_40 12C0  
                      i2u173_40 1902                        i2u181_40 0C9A                        i2u165_41 12BC  
                      i2u181_41 0C96                        i2u173_47 18F8                        i2u166_40 1408  
                      i2u174_40 1912                        i2u190_40 0D1C                        i2u182_40 0CAC  
                      i2u166_41 1404                        i2u174_41 190E                        i2u190_41 0D16  
                      i2u182_41 0CA8                        i2u167_40 1426                        i2u183_40 0CBE  
                      i2u167_41 1422                        i2u183_41 0CBA                        i2u191_45 0D1E  
                      i2u168_40 1450                        i2u192_40 0D36                        i2u184_40 0CD0  
                      i2u168_41 144C                        i2u192_41 0D32                        i2u184_41 0CCC  
                      i2u169_40 1472                        i2u193_40 0D46                        i2u185_40 0CE0  
                      i2u177_40 0AFE                        i2u169_41 146E                        i2u193_41 0D40  
                      i2u185_41 0CDA                        i2u177_41 0AFA                        _PIR1bits 000F9E  
                      i2u178_40 0B4C                        i2u178_41 0B48                        i2u194_45 0D48  
                      i2u186_45 0CE2                        i2u195_40 0D58                        i2u187_40 0CFA  
                      i2u179_40 0BA0                        i2u195_41 0D52                        i2u187_41 0CF6  
                      i2u179_41 0B9C                        _PIR2bits 000FA1                        i2u188_40 0D0A  
                      i2u188_41 0D04                        i2u196_45 0D5A                        i2u197_40 0D6A  
                      i2u197_41 0D64                        i2u189_45 0D0C                        i2u198_45 0D6C  
                      i2u199_40 0D84                        i2u199_41 0D80                    i1_UART_Write 1CDA  
                      _RCONbits 000FD0                     ??_GetString 00FA                      _ADCON0bits 000FC2  
                    _ADCON2bits 000FC0               ___wmul@multiplier 0001                    ?_MyusartRead 0001  
                  i2_UART_Write 1CF8                       copy_data0 192C                       copy_data1 194C  
                     copy_data2 196C           ?_INTERRUPT_Initialize 0001                i1UART_Write@data 0021  
                   ??_Playmusic 00FA                        __Hrparam 0000                        __Lrparam 0000  
            __CFG_BOREN$SBORDIS 000000         ??_OSCILLATOR_Initialize 00F8                __size_of___aldiv 0134  
              __size_of___awdiv 00EC                __size_of___awmod 00D8      __size_ofi2_UART_Write_Text 0086  
               _UART_Initialize 1C98                     ??_Stopmusic 00FA                        __ptext10 1076  
                      __ptext11 16A0                        __ptext20 1A82                        __ptext12 063C  
                      __ptext13 14E2                        __ptext30 11B6                        __ptext22 1C00  
                      __ptext14 12EA                        __ptext23 1CDA                        __ptext15 1B4C  
                      __ptext24 15C8                        __ptext16 1BA6                        __ptext17 1806  
                      __ptext26 1892                        __ptext18 1CBA                        __ptext27 1CF8  
                      __ptext19 1D44                        __ptext28 1C48                        __ptext29 13F6  
                      _led_mode 0036                        _led_loop 003E                __size_of_strncmp 010C  
           UART_Write_Text@text 00F9                   __size_of_main 016C                        int$flags 005A  
                      _mystring 004C                   _music_playing 003C                      _INTCONbits 000FF2  
               _CCP1_Initialize 1D6A          ??_INTERRUPT_Initialize 00F8                   ??_ClearBuffer 00F8  
                      intlevel1 0000                        intlevel2 0000                       strncmp@_l 00F8  
                     strncmp@_r 00FA                ??_ADC_Initialize 00F8                      _OSCCONbits 000FD3  
                  _music_choose 0044         __end_of_UART_Initialize 1CBA                 _UART_Write_Text 1806  
                      strncmp@l 017B                        strncmp@n 00FC                        strncmp@r 017D  
                  ___aldiv@sign 0010                      _UART_Write 1CBA                        strstr@nl 00FE  
                   _music_count 0048                     _music_index 0046            __size_of_MyusartRead 0048  
              UART_Write_Text@i 00FD             __end_of_ClearBuffer 1AEE  
