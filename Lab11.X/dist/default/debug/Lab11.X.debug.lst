

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Dec 22 16:54:55 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   384                           PORTA equ 0F80h ;# 
   385  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   386                           PORTB equ 0F81h ;# 
   387  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   388                           PORTC equ 0F82h ;# 
   389  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   390                           PORTD equ 0F83h ;# 
   391  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   392                           PORTE equ 0F84h ;# 
   393  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   394                           LATA equ 0F89h ;# 
   395  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   396                           LATB equ 0F8Ah ;# 
   397  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   398                           LATC equ 0F8Bh ;# 
   399  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   400                           LATD equ 0F8Ch ;# 
   401  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   402                           LATE equ 0F8Dh ;# 
   403  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   404                           TRISA equ 0F92h ;# 
   405  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   406                           DDRA equ 0F92h ;# 
   407  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   408                           TRISB equ 0F93h ;# 
   409  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   410                           DDRB equ 0F93h ;# 
   411  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   412                           TRISC equ 0F94h ;# 
   413  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   414                           DDRC equ 0F94h ;# 
   415  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   416                           TRISD equ 0F95h ;# 
   417  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   418                           DDRD equ 0F95h ;# 
   419  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   420                           TRISE equ 0F96h ;# 
   421  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   422                           DDRE equ 0F96h ;# 
   423  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   424                           OSCTUNE equ 0F9Bh ;# 
   425  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   426                           PIE1 equ 0F9Dh ;# 
   427  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   428                           PIR1 equ 0F9Eh ;# 
   429  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   430                           IPR1 equ 0F9Fh ;# 
   431  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   432                           PIE2 equ 0FA0h ;# 
   433  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   434                           PIR2 equ 0FA1h ;# 
   435  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   436                           IPR2 equ 0FA2h ;# 
   437  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   438                           EECON1 equ 0FA6h ;# 
   439  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   440                           EECON2 equ 0FA7h ;# 
   441  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   442                           EEDATA equ 0FA8h ;# 
   443  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   444                           EEADR equ 0FA9h ;# 
   445  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   446                           RCSTA equ 0FABh ;# 
   447  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   448                           RCSTA1 equ 0FABh ;# 
   449  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   450                           TXSTA equ 0FACh ;# 
   451  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   452                           TXSTA1 equ 0FACh ;# 
   453  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   454                           TXREG equ 0FADh ;# 
   455  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   456                           TXREG1 equ 0FADh ;# 
   457  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   458                           RCREG equ 0FAEh ;# 
   459  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   460                           RCREG1 equ 0FAEh ;# 
   461  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   462                           SPBRG equ 0FAFh ;# 
   463  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   464                           SPBRG1 equ 0FAFh ;# 
   465  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   466                           SPBRGH equ 0FB0h ;# 
   467  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   468                           T3CON equ 0FB1h ;# 
   469  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   470                           TMR3 equ 0FB2h ;# 
   471  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   472                           TMR3L equ 0FB2h ;# 
   473  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   474                           TMR3H equ 0FB3h ;# 
   475  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   476                           CMCON equ 0FB4h ;# 
   477  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   478                           CVRCON equ 0FB5h ;# 
   479  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   480                           ECCP1AS equ 0FB6h ;# 
   481  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   482                           ECCPAS equ 0FB6h ;# 
   483  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   484                           PWM1CON equ 0FB7h ;# 
   485  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   486                           ECCP1DEL equ 0FB7h ;# 
   487  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   488                           BAUDCON equ 0FB8h ;# 
   489  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   490                           BAUDCTL equ 0FB8h ;# 
   491  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   492                           CCP2CON equ 0FBAh ;# 
   493  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   494                           CCPR2 equ 0FBBh ;# 
   495  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   496                           CCPR2L equ 0FBBh ;# 
   497  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   498                           CCPR2H equ 0FBCh ;# 
   499  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   500                           CCP1CON equ 0FBDh ;# 
   501  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   502                           CCPR1 equ 0FBEh ;# 
   503  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   504                           CCPR1L equ 0FBEh ;# 
   505  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   506                           CCPR1H equ 0FBFh ;# 
   507  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   508                           ADCON2 equ 0FC0h ;# 
   509  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   510                           ADCON1 equ 0FC1h ;# 
   511  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   512                           ADCON0 equ 0FC2h ;# 
   513  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   514                           ADRES equ 0FC3h ;# 
   515  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   516                           ADRESL equ 0FC3h ;# 
   517  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   518                           ADRESH equ 0FC4h ;# 
   519  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   520                           SSPCON2 equ 0FC5h ;# 
   521  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   522                           SSPCON1 equ 0FC6h ;# 
   523  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   524                           SSPSTAT equ 0FC7h ;# 
   525  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   526                           SSPADD equ 0FC8h ;# 
   527  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   528                           SSPBUF equ 0FC9h ;# 
   529  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   530                           T2CON equ 0FCAh ;# 
   531  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   532                           PR2 equ 0FCBh ;# 
   533  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   534                           MEMCON equ 0FCBh ;# 
   535  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   536                           TMR2 equ 0FCCh ;# 
   537  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   538                           T1CON equ 0FCDh ;# 
   539  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   540                           TMR1 equ 0FCEh ;# 
   541  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   542                           TMR1L equ 0FCEh ;# 
   543  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   544                           TMR1H equ 0FCFh ;# 
   545  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   546                           RCON equ 0FD0h ;# 
   547  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   548                           WDTCON equ 0FD1h ;# 
   549  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   550                           HLVDCON equ 0FD2h ;# 
   551  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   552                           LVDCON equ 0FD2h ;# 
   553  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   554                           OSCCON equ 0FD3h ;# 
   555  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   556                           T0CON equ 0FD5h ;# 
   557  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   558                           TMR0 equ 0FD6h ;# 
   559  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   560                           TMR0L equ 0FD6h ;# 
   561  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   562                           TMR0H equ 0FD7h ;# 
   563  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   564                           STATUS equ 0FD8h ;# 
   565  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   566                           FSR2 equ 0FD9h ;# 
   567  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   568                           FSR2L equ 0FD9h ;# 
   569  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   570                           FSR2H equ 0FDAh ;# 
   571  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   572                           PLUSW2 equ 0FDBh ;# 
   573  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   574                           PREINC2 equ 0FDCh ;# 
   575  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   576                           POSTDEC2 equ 0FDDh ;# 
   577  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   578                           POSTINC2 equ 0FDEh ;# 
   579  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   580                           INDF2 equ 0FDFh ;# 
   581  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   582                           BSR equ 0FE0h ;# 
   583  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   584                           FSR1 equ 0FE1h ;# 
   585  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   586                           FSR1L equ 0FE1h ;# 
   587  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   588                           FSR1H equ 0FE2h ;# 
   589  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   590                           PLUSW1 equ 0FE3h ;# 
   591  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   592                           PREINC1 equ 0FE4h ;# 
   593  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   594                           POSTDEC1 equ 0FE5h ;# 
   595  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   596                           POSTINC1 equ 0FE6h ;# 
   597  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   598                           INDF1 equ 0FE7h ;# 
   599  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   600                           WREG equ 0FE8h ;# 
   601  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   602                           FSR0 equ 0FE9h ;# 
   603  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   604                           FSR0L equ 0FE9h ;# 
   605  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   606                           FSR0H equ 0FEAh ;# 
   607  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   608                           PLUSW0 equ 0FEBh ;# 
   609  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   610                           PREINC0 equ 0FECh ;# 
   611  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   612                           POSTDEC0 equ 0FEDh ;# 
   613  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   614                           POSTINC0 equ 0FEEh ;# 
   615  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   616                           INDF0 equ 0FEFh ;# 
   617  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   618                           INTCON3 equ 0FF0h ;# 
   619  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   620                           INTCON2 equ 0FF1h ;# 
   621  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   622                           INTCON equ 0FF2h ;# 
   623  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   624                           PROD equ 0FF3h ;# 
   625  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   626                           PRODL equ 0FF3h ;# 
   627  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   628                           PRODH equ 0FF4h ;# 
   629  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   630                           TABLAT equ 0FF5h ;# 
   631  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   632                           TBLPTR equ 0FF6h ;# 
   633  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   634                           TBLPTRL equ 0FF6h ;# 
   635  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   636                           TBLPTRH equ 0FF7h ;# 
   637  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   638                           TBLPTRU equ 0FF8h ;# 
   639  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   640                           PCLAT equ 0FF9h ;# 
   641  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   642                           PC equ 0FF9h ;# 
   643  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   644                           PCL equ 0FF9h ;# 
   645  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   646                           PCLATH equ 0FFAh ;# 
   647  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   648                           PCLATU equ 0FFBh ;# 
   649  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   650                           STKPTR equ 0FFCh ;# 
   651  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   652                           TOS equ 0FFDh ;# 
   653  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   654                           TOSL equ 0FFDh ;# 
   655  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   656                           TOSH equ 0FFEh ;# 
   657  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   658                           TOSU equ 0FFFh ;# 
   659  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   660                           PORTA equ 0F80h ;# 
   661  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   662                           PORTB equ 0F81h ;# 
   663  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   664                           PORTC equ 0F82h ;# 
   665  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   666                           PORTD equ 0F83h ;# 
   667  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   668                           PORTE equ 0F84h ;# 
   669  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   670                           LATA equ 0F89h ;# 
   671  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   672                           LATB equ 0F8Ah ;# 
   673  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   674                           LATC equ 0F8Bh ;# 
   675  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   676                           LATD equ 0F8Ch ;# 
   677  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   678                           LATE equ 0F8Dh ;# 
   679  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   680                           TRISA equ 0F92h ;# 
   681  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   682                           DDRA equ 0F92h ;# 
   683  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   684                           TRISB equ 0F93h ;# 
   685  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   686                           DDRB equ 0F93h ;# 
   687  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   688                           TRISC equ 0F94h ;# 
   689  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   690                           DDRC equ 0F94h ;# 
   691  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   692                           TRISD equ 0F95h ;# 
   693  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   694                           DDRD equ 0F95h ;# 
   695  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   696                           TRISE equ 0F96h ;# 
   697  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   698                           DDRE equ 0F96h ;# 
   699  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   700                           OSCTUNE equ 0F9Bh ;# 
   701  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   702                           PIE1 equ 0F9Dh ;# 
   703  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   704                           PIR1 equ 0F9Eh ;# 
   705  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   706                           IPR1 equ 0F9Fh ;# 
   707  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   708                           PIE2 equ 0FA0h ;# 
   709  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   710                           PIR2 equ 0FA1h ;# 
   711  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   712                           IPR2 equ 0FA2h ;# 
   713  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   714                           EECON1 equ 0FA6h ;# 
   715  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   716                           EECON2 equ 0FA7h ;# 
   717  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   718                           EEDATA equ 0FA8h ;# 
   719  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   720                           EEADR equ 0FA9h ;# 
   721  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   722                           RCSTA equ 0FABh ;# 
   723  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   724                           RCSTA1 equ 0FABh ;# 
   725  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   726                           TXSTA equ 0FACh ;# 
   727  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   728                           TXSTA1 equ 0FACh ;# 
   729  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   730                           TXREG equ 0FADh ;# 
   731  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   732                           TXREG1 equ 0FADh ;# 
   733  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   734                           RCREG equ 0FAEh ;# 
   735  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   736                           RCREG1 equ 0FAEh ;# 
   737  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   738                           SPBRG equ 0FAFh ;# 
   739  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   740                           SPBRG1 equ 0FAFh ;# 
   741  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   742                           SPBRGH equ 0FB0h ;# 
   743  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   744                           T3CON equ 0FB1h ;# 
   745  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   746                           TMR3 equ 0FB2h ;# 
   747  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   748                           TMR3L equ 0FB2h ;# 
   749  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   750                           TMR3H equ 0FB3h ;# 
   751  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   752                           CMCON equ 0FB4h ;# 
   753  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   754                           CVRCON equ 0FB5h ;# 
   755  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   756                           ECCP1AS equ 0FB6h ;# 
   757  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   758                           ECCPAS equ 0FB6h ;# 
   759  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   760                           PWM1CON equ 0FB7h ;# 
   761  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   762                           ECCP1DEL equ 0FB7h ;# 
   763  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   764                           BAUDCON equ 0FB8h ;# 
   765  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   766                           BAUDCTL equ 0FB8h ;# 
   767  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   768                           CCP2CON equ 0FBAh ;# 
   769  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   770                           CCPR2 equ 0FBBh ;# 
   771  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   772                           CCPR2L equ 0FBBh ;# 
   773  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   774                           CCPR2H equ 0FBCh ;# 
   775  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   776                           CCP1CON equ 0FBDh ;# 
   777  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   778                           CCPR1 equ 0FBEh ;# 
   779  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   780                           CCPR1L equ 0FBEh ;# 
   781  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   782                           CCPR1H equ 0FBFh ;# 
   783  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   784                           ADCON2 equ 0FC0h ;# 
   785  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   786                           ADCON1 equ 0FC1h ;# 
   787  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   788                           ADCON0 equ 0FC2h ;# 
   789  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   790                           ADRES equ 0FC3h ;# 
   791  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   792                           ADRESL equ 0FC3h ;# 
   793  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   794                           ADRESH equ 0FC4h ;# 
   795  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   796                           SSPCON2 equ 0FC5h ;# 
   797  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   798                           SSPCON1 equ 0FC6h ;# 
   799  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   800                           SSPSTAT equ 0FC7h ;# 
   801  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   802                           SSPADD equ 0FC8h ;# 
   803  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   804                           SSPBUF equ 0FC9h ;# 
   805  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   806                           T2CON equ 0FCAh ;# 
   807  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   808                           PR2 equ 0FCBh ;# 
   809  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   810                           MEMCON equ 0FCBh ;# 
   811  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   812                           TMR2 equ 0FCCh ;# 
   813  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   814                           T1CON equ 0FCDh ;# 
   815  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   816                           TMR1 equ 0FCEh ;# 
   817  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   818                           TMR1L equ 0FCEh ;# 
   819  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   820                           TMR1H equ 0FCFh ;# 
   821  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   822                           RCON equ 0FD0h ;# 
   823  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   824                           WDTCON equ 0FD1h ;# 
   825  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   826                           HLVDCON equ 0FD2h ;# 
   827  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   828                           LVDCON equ 0FD2h ;# 
   829  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   830                           OSCCON equ 0FD3h ;# 
   831  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   832                           T0CON equ 0FD5h ;# 
   833  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   834                           TMR0 equ 0FD6h ;# 
   835  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   836                           TMR0L equ 0FD6h ;# 
   837  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   838                           TMR0H equ 0FD7h ;# 
   839  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   840                           STATUS equ 0FD8h ;# 
   841  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   842                           FSR2 equ 0FD9h ;# 
   843  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   844                           FSR2L equ 0FD9h ;# 
   845  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   846                           FSR2H equ 0FDAh ;# 
   847  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   848                           PLUSW2 equ 0FDBh ;# 
   849  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   850                           PREINC2 equ 0FDCh ;# 
   851  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   852                           POSTDEC2 equ 0FDDh ;# 
   853  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   854                           POSTINC2 equ 0FDEh ;# 
   855  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   856                           INDF2 equ 0FDFh ;# 
   857  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   858                           BSR equ 0FE0h ;# 
   859  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   860                           FSR1 equ 0FE1h ;# 
   861  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   862                           FSR1L equ 0FE1h ;# 
   863  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   864                           FSR1H equ 0FE2h ;# 
   865  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   866                           PLUSW1 equ 0FE3h ;# 
   867  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   868                           PREINC1 equ 0FE4h ;# 
   869  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   870                           POSTDEC1 equ 0FE5h ;# 
   871  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   872                           POSTINC1 equ 0FE6h ;# 
   873  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   874                           INDF1 equ 0FE7h ;# 
   875  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   876                           WREG equ 0FE8h ;# 
   877  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   878                           FSR0 equ 0FE9h ;# 
   879  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   880                           FSR0L equ 0FE9h ;# 
   881  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   882                           FSR0H equ 0FEAh ;# 
   883  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   884                           PLUSW0 equ 0FEBh ;# 
   885  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   886                           PREINC0 equ 0FECh ;# 
   887  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   888                           POSTDEC0 equ 0FEDh ;# 
   889  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   890                           POSTINC0 equ 0FEEh ;# 
   891  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   892                           INDF0 equ 0FEFh ;# 
   893  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   894                           INTCON3 equ 0FF0h ;# 
   895  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   896                           INTCON2 equ 0FF1h ;# 
   897  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   898                           INTCON equ 0FF2h ;# 
   899  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   900                           PROD equ 0FF3h ;# 
   901  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   902                           PRODL equ 0FF3h ;# 
   903  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   904                           PRODH equ 0FF4h ;# 
   905  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   906                           TABLAT equ 0FF5h ;# 
   907  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   908                           TBLPTR equ 0FF6h ;# 
   909  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   910                           TBLPTRL equ 0FF6h ;# 
   911  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   912                           TBLPTRH equ 0FF7h ;# 
   913  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   914                           TBLPTRU equ 0FF8h ;# 
   915  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   916                           PCLAT equ 0FF9h ;# 
   917  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   918                           PC equ 0FF9h ;# 
   919  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   920                           PCL equ 0FF9h ;# 
   921  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   922                           PCLATH equ 0FFAh ;# 
   923  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   924                           PCLATU equ 0FFBh ;# 
   925  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   926                           STKPTR equ 0FFCh ;# 
   927  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   928                           TOS equ 0FFDh ;# 
   929  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   930                           TOSL equ 0FFDh ;# 
   931  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   932                           TOSH equ 0FFEh ;# 
   933  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   934                           TOSU equ 0FFFh ;# 
   935  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   936                           PORTA equ 0F80h ;# 
   937  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   938                           PORTB equ 0F81h ;# 
   939  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   940                           PORTC equ 0F82h ;# 
   941  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   942                           PORTD equ 0F83h ;# 
   943  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   944                           PORTE equ 0F84h ;# 
   945  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   946                           LATA equ 0F89h ;# 
   947  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   948                           LATB equ 0F8Ah ;# 
   949  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   950                           LATC equ 0F8Bh ;# 
   951  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   952                           LATD equ 0F8Ch ;# 
   953  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   954                           LATE equ 0F8Dh ;# 
   955  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   956                           TRISA equ 0F92h ;# 
   957  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   958                           DDRA equ 0F92h ;# 
   959  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   960                           TRISB equ 0F93h ;# 
   961  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   962                           DDRB equ 0F93h ;# 
   963  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   964                           TRISC equ 0F94h ;# 
   965  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   966                           DDRC equ 0F94h ;# 
   967  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   968                           TRISD equ 0F95h ;# 
   969  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   970                           DDRD equ 0F95h ;# 
   971  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   972                           TRISE equ 0F96h ;# 
   973  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   974                           DDRE equ 0F96h ;# 
   975  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   976                           OSCTUNE equ 0F9Bh ;# 
   977  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   978                           PIE1 equ 0F9Dh ;# 
   979  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   980                           PIR1 equ 0F9Eh ;# 
   981  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   982                           IPR1 equ 0F9Fh ;# 
   983  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   984                           PIE2 equ 0FA0h ;# 
   985  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   986                           PIR2 equ 0FA1h ;# 
   987  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   988                           IPR2 equ 0FA2h ;# 
   989  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   990                           EECON1 equ 0FA6h ;# 
   991  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   992                           EECON2 equ 0FA7h ;# 
   993  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   994                           EEDATA equ 0FA8h ;# 
   995  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   996                           EEADR equ 0FA9h ;# 
   997  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   998                           RCSTA equ 0FABh ;# 
   999  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1000                           RCSTA1 equ 0FABh ;# 
  1001  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1002                           TXSTA equ 0FACh ;# 
  1003  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1004                           TXSTA1 equ 0FACh ;# 
  1005  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1006                           TXREG equ 0FADh ;# 
  1007  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1008                           TXREG1 equ 0FADh ;# 
  1009  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1010                           RCREG equ 0FAEh ;# 
  1011  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1012                           RCREG1 equ 0FAEh ;# 
  1013  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1014                           SPBRG equ 0FAFh ;# 
  1015  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1016                           SPBRG1 equ 0FAFh ;# 
  1017  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1018                           SPBRGH equ 0FB0h ;# 
  1019  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1020                           T3CON equ 0FB1h ;# 
  1021  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1022                           TMR3 equ 0FB2h ;# 
  1023  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1024                           TMR3L equ 0FB2h ;# 
  1025  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1026                           TMR3H equ 0FB3h ;# 
  1027  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1028                           CMCON equ 0FB4h ;# 
  1029  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1030                           CVRCON equ 0FB5h ;# 
  1031  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1032                           ECCP1AS equ 0FB6h ;# 
  1033  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1034                           ECCPAS equ 0FB6h ;# 
  1035  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1036                           PWM1CON equ 0FB7h ;# 
  1037  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1038                           ECCP1DEL equ 0FB7h ;# 
  1039  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1040                           BAUDCON equ 0FB8h ;# 
  1041  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1042                           BAUDCTL equ 0FB8h ;# 
  1043  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1044                           CCP2CON equ 0FBAh ;# 
  1045  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1046                           CCPR2 equ 0FBBh ;# 
  1047  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1048                           CCPR2L equ 0FBBh ;# 
  1049  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1050                           CCPR2H equ 0FBCh ;# 
  1051  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1052                           CCP1CON equ 0FBDh ;# 
  1053  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1054                           CCPR1 equ 0FBEh ;# 
  1055  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1056                           CCPR1L equ 0FBEh ;# 
  1057  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1058                           CCPR1H equ 0FBFh ;# 
  1059  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1060                           ADCON2 equ 0FC0h ;# 
  1061  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1062                           ADCON1 equ 0FC1h ;# 
  1063  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1064                           ADCON0 equ 0FC2h ;# 
  1065  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1066                           ADRES equ 0FC3h ;# 
  1067  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1068                           ADRESL equ 0FC3h ;# 
  1069  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1070                           ADRESH equ 0FC4h ;# 
  1071  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1072                           SSPCON2 equ 0FC5h ;# 
  1073  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1074                           SSPCON1 equ 0FC6h ;# 
  1075  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1076                           SSPSTAT equ 0FC7h ;# 
  1077  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1078                           SSPADD equ 0FC8h ;# 
  1079  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1080                           SSPBUF equ 0FC9h ;# 
  1081  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1082                           T2CON equ 0FCAh ;# 
  1083  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1084                           PR2 equ 0FCBh ;# 
  1085  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1086                           MEMCON equ 0FCBh ;# 
  1087  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1088                           TMR2 equ 0FCCh ;# 
  1089  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1090                           T1CON equ 0FCDh ;# 
  1091  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1092                           TMR1 equ 0FCEh ;# 
  1093  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1094                           TMR1L equ 0FCEh ;# 
  1095  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1096                           TMR1H equ 0FCFh ;# 
  1097  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1098                           RCON equ 0FD0h ;# 
  1099  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1100                           WDTCON equ 0FD1h ;# 
  1101  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1102                           HLVDCON equ 0FD2h ;# 
  1103  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1104                           LVDCON equ 0FD2h ;# 
  1105  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1106                           OSCCON equ 0FD3h ;# 
  1107  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1108                           T0CON equ 0FD5h ;# 
  1109  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1110                           TMR0 equ 0FD6h ;# 
  1111  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1112                           TMR0L equ 0FD6h ;# 
  1113  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1114                           TMR0H equ 0FD7h ;# 
  1115  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1116                           STATUS equ 0FD8h ;# 
  1117  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1118                           FSR2 equ 0FD9h ;# 
  1119  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1120                           FSR2L equ 0FD9h ;# 
  1121  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1122                           FSR2H equ 0FDAh ;# 
  1123  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1124                           PLUSW2 equ 0FDBh ;# 
  1125  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1126                           PREINC2 equ 0FDCh ;# 
  1127  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1128                           POSTDEC2 equ 0FDDh ;# 
  1129  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1130                           POSTINC2 equ 0FDEh ;# 
  1131  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1132                           INDF2 equ 0FDFh ;# 
  1133  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1134                           BSR equ 0FE0h ;# 
  1135  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1136                           FSR1 equ 0FE1h ;# 
  1137  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1138                           FSR1L equ 0FE1h ;# 
  1139  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1140                           FSR1H equ 0FE2h ;# 
  1141  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1142                           PLUSW1 equ 0FE3h ;# 
  1143  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1144                           PREINC1 equ 0FE4h ;# 
  1145  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1146                           POSTDEC1 equ 0FE5h ;# 
  1147  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1148                           POSTINC1 equ 0FE6h ;# 
  1149  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1150                           INDF1 equ 0FE7h ;# 
  1151  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1152                           WREG equ 0FE8h ;# 
  1153  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1154                           FSR0 equ 0FE9h ;# 
  1155  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1156                           FSR0L equ 0FE9h ;# 
  1157  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1158                           FSR0H equ 0FEAh ;# 
  1159  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1160                           PLUSW0 equ 0FEBh ;# 
  1161  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1162                           PREINC0 equ 0FECh ;# 
  1163  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1164                           POSTDEC0 equ 0FEDh ;# 
  1165  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1166                           POSTINC0 equ 0FEEh ;# 
  1167  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1168                           INDF0 equ 0FEFh ;# 
  1169  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1170                           INTCON3 equ 0FF0h ;# 
  1171  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1172                           INTCON2 equ 0FF1h ;# 
  1173  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1174                           INTCON equ 0FF2h ;# 
  1175  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1176                           PROD equ 0FF3h ;# 
  1177  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1178                           PRODL equ 0FF3h ;# 
  1179  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1180                           PRODH equ 0FF4h ;# 
  1181  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1182                           TABLAT equ 0FF5h ;# 
  1183  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1184                           TBLPTR equ 0FF6h ;# 
  1185  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1186                           TBLPTRL equ 0FF6h ;# 
  1187  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1188                           TBLPTRH equ 0FF7h ;# 
  1189  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1190                           TBLPTRU equ 0FF8h ;# 
  1191  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1192                           PCLAT equ 0FF9h ;# 
  1193  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1194                           PC equ 0FF9h ;# 
  1195  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1196                           PCL equ 0FF9h ;# 
  1197  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1198                           PCLATH equ 0FFAh ;# 
  1199  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1200                           PCLATU equ 0FFBh ;# 
  1201  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1202                           STKPTR equ 0FFCh ;# 
  1203  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1204                           TOS equ 0FFDh ;# 
  1205  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1206                           TOSL equ 0FFDh ;# 
  1207  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1208                           TOSH equ 0FFEh ;# 
  1209  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1210                           TOSU equ 0FFFh ;# 
  1211  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1212                           PORTA equ 0F80h ;# 
  1213  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1214                           PORTB equ 0F81h ;# 
  1215  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1216                           PORTC equ 0F82h ;# 
  1217  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1218                           PORTD equ 0F83h ;# 
  1219  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1220                           PORTE equ 0F84h ;# 
  1221  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1222                           LATA equ 0F89h ;# 
  1223  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1224                           LATB equ 0F8Ah ;# 
  1225  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1226                           LATC equ 0F8Bh ;# 
  1227  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1228                           LATD equ 0F8Ch ;# 
  1229  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1230                           LATE equ 0F8Dh ;# 
  1231  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1232                           TRISA equ 0F92h ;# 
  1233  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1234                           DDRA equ 0F92h ;# 
  1235  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1236                           TRISB equ 0F93h ;# 
  1237  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1238                           DDRB equ 0F93h ;# 
  1239  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1240                           TRISC equ 0F94h ;# 
  1241  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1242                           DDRC equ 0F94h ;# 
  1243  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1244                           TRISD equ 0F95h ;# 
  1245  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1246                           DDRD equ 0F95h ;# 
  1247  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1248                           TRISE equ 0F96h ;# 
  1249  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1250                           DDRE equ 0F96h ;# 
  1251  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1252                           OSCTUNE equ 0F9Bh ;# 
  1253  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1254                           PIE1 equ 0F9Dh ;# 
  1255  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1256                           PIR1 equ 0F9Eh ;# 
  1257  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1258                           IPR1 equ 0F9Fh ;# 
  1259  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1260                           PIE2 equ 0FA0h ;# 
  1261  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1262                           PIR2 equ 0FA1h ;# 
  1263  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1264                           IPR2 equ 0FA2h ;# 
  1265  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1266                           EECON1 equ 0FA6h ;# 
  1267  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1268                           EECON2 equ 0FA7h ;# 
  1269  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1270                           EEDATA equ 0FA8h ;# 
  1271  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1272                           EEADR equ 0FA9h ;# 
  1273  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1274                           RCSTA equ 0FABh ;# 
  1275  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1276                           RCSTA1 equ 0FABh ;# 
  1277  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1278                           TXSTA equ 0FACh ;# 
  1279  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1280                           TXSTA1 equ 0FACh ;# 
  1281  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1282                           TXREG equ 0FADh ;# 
  1283  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1284                           TXREG1 equ 0FADh ;# 
  1285  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1286                           RCREG equ 0FAEh ;# 
  1287  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1288                           RCREG1 equ 0FAEh ;# 
  1289  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1290                           SPBRG equ 0FAFh ;# 
  1291  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1292                           SPBRG1 equ 0FAFh ;# 
  1293  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1294                           SPBRGH equ 0FB0h ;# 
  1295  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1296                           T3CON equ 0FB1h ;# 
  1297  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1298                           TMR3 equ 0FB2h ;# 
  1299  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1300                           TMR3L equ 0FB2h ;# 
  1301  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1302                           TMR3H equ 0FB3h ;# 
  1303  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1304                           CMCON equ 0FB4h ;# 
  1305  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1306                           CVRCON equ 0FB5h ;# 
  1307  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1308                           ECCP1AS equ 0FB6h ;# 
  1309  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1310                           ECCPAS equ 0FB6h ;# 
  1311  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1312                           PWM1CON equ 0FB7h ;# 
  1313  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1314                           ECCP1DEL equ 0FB7h ;# 
  1315  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1316                           BAUDCON equ 0FB8h ;# 
  1317  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1318                           BAUDCTL equ 0FB8h ;# 
  1319  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1320                           CCP2CON equ 0FBAh ;# 
  1321  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1322                           CCPR2 equ 0FBBh ;# 
  1323  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1324                           CCPR2L equ 0FBBh ;# 
  1325  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1326                           CCPR2H equ 0FBCh ;# 
  1327  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1328                           CCP1CON equ 0FBDh ;# 
  1329  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1330                           CCPR1 equ 0FBEh ;# 
  1331  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1332                           CCPR1L equ 0FBEh ;# 
  1333  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1334                           CCPR1H equ 0FBFh ;# 
  1335  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1336                           ADCON2 equ 0FC0h ;# 
  1337  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1338                           ADCON1 equ 0FC1h ;# 
  1339  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1340                           ADCON0 equ 0FC2h ;# 
  1341  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1342                           ADRES equ 0FC3h ;# 
  1343  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1344                           ADRESL equ 0FC3h ;# 
  1345  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1346                           ADRESH equ 0FC4h ;# 
  1347  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1348                           SSPCON2 equ 0FC5h ;# 
  1349  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1350                           SSPCON1 equ 0FC6h ;# 
  1351  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1352                           SSPSTAT equ 0FC7h ;# 
  1353  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1354                           SSPADD equ 0FC8h ;# 
  1355  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1356                           SSPBUF equ 0FC9h ;# 
  1357  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1358                           T2CON equ 0FCAh ;# 
  1359  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1360                           PR2 equ 0FCBh ;# 
  1361  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1362                           MEMCON equ 0FCBh ;# 
  1363  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1364                           TMR2 equ 0FCCh ;# 
  1365  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1366                           T1CON equ 0FCDh ;# 
  1367  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1368                           TMR1 equ 0FCEh ;# 
  1369  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1370                           TMR1L equ 0FCEh ;# 
  1371  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1372                           TMR1H equ 0FCFh ;# 
  1373  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1374                           RCON equ 0FD0h ;# 
  1375  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1376                           WDTCON equ 0FD1h ;# 
  1377  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1378                           HLVDCON equ 0FD2h ;# 
  1379  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1380                           LVDCON equ 0FD2h ;# 
  1381  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1382                           OSCCON equ 0FD3h ;# 
  1383  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1384                           T0CON equ 0FD5h ;# 
  1385  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1386                           TMR0 equ 0FD6h ;# 
  1387  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1388                           TMR0L equ 0FD6h ;# 
  1389  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1390                           TMR0H equ 0FD7h ;# 
  1391  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1392                           STATUS equ 0FD8h ;# 
  1393  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1394                           FSR2 equ 0FD9h ;# 
  1395  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1396                           FSR2L equ 0FD9h ;# 
  1397  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1398                           FSR2H equ 0FDAh ;# 
  1399  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1400                           PLUSW2 equ 0FDBh ;# 
  1401  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1402                           PREINC2 equ 0FDCh ;# 
  1403  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1404                           POSTDEC2 equ 0FDDh ;# 
  1405  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1406                           POSTINC2 equ 0FDEh ;# 
  1407  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1408                           INDF2 equ 0FDFh ;# 
  1409  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1410                           BSR equ 0FE0h ;# 
  1411  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1412                           FSR1 equ 0FE1h ;# 
  1413  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1414                           FSR1L equ 0FE1h ;# 
  1415  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1416                           FSR1H equ 0FE2h ;# 
  1417  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1418                           PLUSW1 equ 0FE3h ;# 
  1419  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1420                           PREINC1 equ 0FE4h ;# 
  1421  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1422                           POSTDEC1 equ 0FE5h ;# 
  1423  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1424                           POSTINC1 equ 0FE6h ;# 
  1425  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1426                           INDF1 equ 0FE7h ;# 
  1427  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1428                           WREG equ 0FE8h ;# 
  1429  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1430                           FSR0 equ 0FE9h ;# 
  1431  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1432                           FSR0L equ 0FE9h ;# 
  1433  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1434                           FSR0H equ 0FEAh ;# 
  1435  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1436                           PLUSW0 equ 0FEBh ;# 
  1437  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1438                           PREINC0 equ 0FECh ;# 
  1439  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1440                           POSTDEC0 equ 0FEDh ;# 
  1441  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1442                           POSTINC0 equ 0FEEh ;# 
  1443  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1444                           INDF0 equ 0FEFh ;# 
  1445  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1446                           INTCON3 equ 0FF0h ;# 
  1447  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1448                           INTCON2 equ 0FF1h ;# 
  1449  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1450                           INTCON equ 0FF2h ;# 
  1451  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1452                           PROD equ 0FF3h ;# 
  1453  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1454                           PRODL equ 0FF3h ;# 
  1455  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1456                           PRODH equ 0FF4h ;# 
  1457  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1458                           TABLAT equ 0FF5h ;# 
  1459  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1460                           TBLPTR equ 0FF6h ;# 
  1461  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1462                           TBLPTRL equ 0FF6h ;# 
  1463  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1464                           TBLPTRH equ 0FF7h ;# 
  1465  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1466                           TBLPTRU equ 0FF8h ;# 
  1467  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1468                           PCLAT equ 0FF9h ;# 
  1469  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1470                           PC equ 0FF9h ;# 
  1471  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1472                           PCL equ 0FF9h ;# 
  1473  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1474                           PCLATH equ 0FFAh ;# 
  1475  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1476                           PCLATU equ 0FFBh ;# 
  1477  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1478                           STKPTR equ 0FFCh ;# 
  1479  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1480                           TOS equ 0FFDh ;# 
  1481  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1482                           TOSL equ 0FFDh ;# 
  1483  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1484                           TOSH equ 0FFEh ;# 
  1485  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1486                           TOSU equ 0FFFh ;# 
  1487  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1488                           PORTA equ 0F80h ;# 
  1489  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1490                           PORTB equ 0F81h ;# 
  1491  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1492                           PORTC equ 0F82h ;# 
  1493  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1494                           PORTD equ 0F83h ;# 
  1495  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1496                           PORTE equ 0F84h ;# 
  1497  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1498                           LATA equ 0F89h ;# 
  1499  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1500                           LATB equ 0F8Ah ;# 
  1501  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1502                           LATC equ 0F8Bh ;# 
  1503  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1504                           LATD equ 0F8Ch ;# 
  1505  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1506                           LATE equ 0F8Dh ;# 
  1507  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1508                           TRISA equ 0F92h ;# 
  1509  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1510                           DDRA equ 0F92h ;# 
  1511  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1512                           TRISB equ 0F93h ;# 
  1513  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1514                           DDRB equ 0F93h ;# 
  1515  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1516                           TRISC equ 0F94h ;# 
  1517  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1518                           DDRC equ 0F94h ;# 
  1519  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1520                           TRISD equ 0F95h ;# 
  1521  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1522                           DDRD equ 0F95h ;# 
  1523  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1524                           TRISE equ 0F96h ;# 
  1525  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1526                           DDRE equ 0F96h ;# 
  1527  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1528                           OSCTUNE equ 0F9Bh ;# 
  1529  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1530                           PIE1 equ 0F9Dh ;# 
  1531  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1532                           PIR1 equ 0F9Eh ;# 
  1533  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1534                           IPR1 equ 0F9Fh ;# 
  1535  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1536                           PIE2 equ 0FA0h ;# 
  1537  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1538                           PIR2 equ 0FA1h ;# 
  1539  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1540                           IPR2 equ 0FA2h ;# 
  1541  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1542                           EECON1 equ 0FA6h ;# 
  1543  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1544                           EECON2 equ 0FA7h ;# 
  1545  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1546                           EEDATA equ 0FA8h ;# 
  1547  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1548                           EEADR equ 0FA9h ;# 
  1549  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1550                           RCSTA equ 0FABh ;# 
  1551  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1552                           RCSTA1 equ 0FABh ;# 
  1553  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1554                           TXSTA equ 0FACh ;# 
  1555  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1556                           TXSTA1 equ 0FACh ;# 
  1557  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1558                           TXREG equ 0FADh ;# 
  1559  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1560                           TXREG1 equ 0FADh ;# 
  1561  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1562                           RCREG equ 0FAEh ;# 
  1563  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1564                           RCREG1 equ 0FAEh ;# 
  1565  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1566                           SPBRG equ 0FAFh ;# 
  1567  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1568                           SPBRG1 equ 0FAFh ;# 
  1569  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1570                           SPBRGH equ 0FB0h ;# 
  1571  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1572                           T3CON equ 0FB1h ;# 
  1573  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1574                           TMR3 equ 0FB2h ;# 
  1575  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1576                           TMR3L equ 0FB2h ;# 
  1577  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1578                           TMR3H equ 0FB3h ;# 
  1579  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1580                           CMCON equ 0FB4h ;# 
  1581  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1582                           CVRCON equ 0FB5h ;# 
  1583  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1584                           ECCP1AS equ 0FB6h ;# 
  1585  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1586                           ECCPAS equ 0FB6h ;# 
  1587  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1588                           PWM1CON equ 0FB7h ;# 
  1589  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1590                           ECCP1DEL equ 0FB7h ;# 
  1591  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1592                           BAUDCON equ 0FB8h ;# 
  1593  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1594                           BAUDCTL equ 0FB8h ;# 
  1595  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1596                           CCP2CON equ 0FBAh ;# 
  1597  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1598                           CCPR2 equ 0FBBh ;# 
  1599  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1600                           CCPR2L equ 0FBBh ;# 
  1601  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1602                           CCPR2H equ 0FBCh ;# 
  1603  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1604                           CCP1CON equ 0FBDh ;# 
  1605  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1606                           CCPR1 equ 0FBEh ;# 
  1607  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1608                           CCPR1L equ 0FBEh ;# 
  1609  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1610                           CCPR1H equ 0FBFh ;# 
  1611  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1612                           ADCON2 equ 0FC0h ;# 
  1613  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1614                           ADCON1 equ 0FC1h ;# 
  1615  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1616                           ADCON0 equ 0FC2h ;# 
  1617  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1618                           ADRES equ 0FC3h ;# 
  1619  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1620                           ADRESL equ 0FC3h ;# 
  1621  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1622                           ADRESH equ 0FC4h ;# 
  1623  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1624                           SSPCON2 equ 0FC5h ;# 
  1625  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1626                           SSPCON1 equ 0FC6h ;# 
  1627  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1628                           SSPSTAT equ 0FC7h ;# 
  1629  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1630                           SSPADD equ 0FC8h ;# 
  1631  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1632                           SSPBUF equ 0FC9h ;# 
  1633  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1634                           T2CON equ 0FCAh ;# 
  1635  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1636                           PR2 equ 0FCBh ;# 
  1637  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1638                           MEMCON equ 0FCBh ;# 
  1639  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1640                           TMR2 equ 0FCCh ;# 
  1641  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1642                           T1CON equ 0FCDh ;# 
  1643  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1644                           TMR1 equ 0FCEh ;# 
  1645  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1646                           TMR1L equ 0FCEh ;# 
  1647  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1648                           TMR1H equ 0FCFh ;# 
  1649  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1650                           RCON equ 0FD0h ;# 
  1651  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1652                           WDTCON equ 0FD1h ;# 
  1653  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1654                           HLVDCON equ 0FD2h ;# 
  1655  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1656                           LVDCON equ 0FD2h ;# 
  1657  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1658                           OSCCON equ 0FD3h ;# 
  1659  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1660                           T0CON equ 0FD5h ;# 
  1661  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1662                           TMR0 equ 0FD6h ;# 
  1663  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1664                           TMR0L equ 0FD6h ;# 
  1665  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1666                           TMR0H equ 0FD7h ;# 
  1667  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1668                           STATUS equ 0FD8h ;# 
  1669  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1670                           FSR2 equ 0FD9h ;# 
  1671  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1672                           FSR2L equ 0FD9h ;# 
  1673  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1674                           FSR2H equ 0FDAh ;# 
  1675  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1676                           PLUSW2 equ 0FDBh ;# 
  1677  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1678                           PREINC2 equ 0FDCh ;# 
  1679  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1680                           POSTDEC2 equ 0FDDh ;# 
  1681  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1682                           POSTINC2 equ 0FDEh ;# 
  1683  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1684                           INDF2 equ 0FDFh ;# 
  1685  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1686                           BSR equ 0FE0h ;# 
  1687  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1688                           FSR1 equ 0FE1h ;# 
  1689  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1690                           FSR1L equ 0FE1h ;# 
  1691  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1692                           FSR1H equ 0FE2h ;# 
  1693  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1694                           PLUSW1 equ 0FE3h ;# 
  1695  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1696                           PREINC1 equ 0FE4h ;# 
  1697  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1698                           POSTDEC1 equ 0FE5h ;# 
  1699  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1700                           POSTINC1 equ 0FE6h ;# 
  1701  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1702                           INDF1 equ 0FE7h ;# 
  1703  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1704                           WREG equ 0FE8h ;# 
  1705  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1706                           FSR0 equ 0FE9h ;# 
  1707  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1708                           FSR0L equ 0FE9h ;# 
  1709  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1710                           FSR0H equ 0FEAh ;# 
  1711  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1712                           PLUSW0 equ 0FEBh ;# 
  1713  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1714                           PREINC0 equ 0FECh ;# 
  1715  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1716                           POSTDEC0 equ 0FEDh ;# 
  1717  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1718                           POSTINC0 equ 0FEEh ;# 
  1719  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1720                           INDF0 equ 0FEFh ;# 
  1721  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1722                           INTCON3 equ 0FF0h ;# 
  1723  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1724                           INTCON2 equ 0FF1h ;# 
  1725  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1726                           INTCON equ 0FF2h ;# 
  1727  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1728                           PROD equ 0FF3h ;# 
  1729  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1730                           PRODL equ 0FF3h ;# 
  1731  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1732                           PRODH equ 0FF4h ;# 
  1733  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1734                           TABLAT equ 0FF5h ;# 
  1735  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1736                           TBLPTR equ 0FF6h ;# 
  1737  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1738                           TBLPTRL equ 0FF6h ;# 
  1739  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1740                           TBLPTRH equ 0FF7h ;# 
  1741  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1742                           TBLPTRU equ 0FF8h ;# 
  1743  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1744                           PCLAT equ 0FF9h ;# 
  1745  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1746                           PC equ 0FF9h ;# 
  1747  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1748                           PCL equ 0FF9h ;# 
  1749  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1750                           PCLATH equ 0FFAh ;# 
  1751  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1752                           PCLATU equ 0FFBh ;# 
  1753  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1754                           STKPTR equ 0FFCh ;# 
  1755  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1756                           TOS equ 0FFDh ;# 
  1757  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1758                           TOSL equ 0FFDh ;# 
  1759  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1760                           TOSH equ 0FFEh ;# 
  1761  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
  1762                           TOSU equ 0FFFh ;# 
  1763  0000                     	FNCALL	_main,_ClearBuffer
  1764                           	FNCALL	_main,_GetString
  1765                           	FNCALL	_main,_Mode1
  1766                           	FNCALL	_main,_Mode2
  1767                           	FNCALL	_main,_Mode3
  1768                           	FNCALL	_main,_Playmusic
  1769                           	FNCALL	_main,_SYSTEM_Initialize
  1770                           	FNCALL	_main,_Stopmusic
  1771                           	FNCALL	_main,_strcmp
  1772                           	FNCALL	_main,_strstr
  1773                           	FNCALL	_Stopmusic,_ClearBuffer
  1774                           	FNCALL	_SYSTEM_Initialize,_ADC_Initialize
  1775                           	FNCALL	_SYSTEM_Initialize,_CCP1_Initialize
  1776                           	FNCALL	_SYSTEM_Initialize,_INTERRUPT_Initialize
  1777                           	FNCALL	_SYSTEM_Initialize,_OSCILLATOR_Initialize
  1778                           	FNCALL	_SYSTEM_Initialize,_UART_Initialize
  1779                           	FNCALL	_Playmusic,_ClearBuffer
  1780                           	FNCALL	_Mode3,_ClearBuffer
  1781                           	FNCALL	_Mode3,_GetString
  1782                           	FNCALL	_Mode3,_strstr
  1783                           	FNCALL	_Mode2,_ADC_Read
  1784                           	FNCALL	_Mode2,_ClearBuffer
  1785                           	FNCALL	_Mode2,_GetString
  1786                           	FNCALL	_Mode2,_UART_Write_Text
  1787                           	FNCALL	_Mode2,___awdiv
  1788                           	FNCALL	_Mode2,___fladd
  1789                           	FNCALL	_Mode2,___flmul
  1790                           	FNCALL	_Mode2,___flsub
  1791                           	FNCALL	_Mode2,___fltol
  1792                           	FNCALL	_Mode2,___xxtofl
  1793                           	FNCALL	_Mode2,_strstr
  1794                           	FNCALL	___flsub,___fladd
  1795                           	FNCALL	_Mode1,_ClearBuffer
  1796                           	FNCALL	_Mode1,_GetString
  1797                           	FNCALL	_Mode1,_UART_Write_Text
  1798                           	FNCALL	_Mode1,_strstr
  1799                           	FNCALL	_strstr,_strchr
  1800                           	FNCALL	_strstr,_strlen
  1801                           	FNCALL	_strstr,_strncmp
  1802                           	FNCALL	_UART_Write_Text,_UART_Write
  1803                           	FNROOT	_main
  1804                           	FNCALL	_Lo_ISR,_MyusartRead
  1805                           	FNCALL	_MyusartRead,___awmod
  1806                           	FNCALL	_MyusartRead,i1_UART_Write
  1807                           	FNCALL	intlevel1,_Lo_ISR
  1808                           	global	intlevel1
  1809                           	FNROOT	intlevel1
  1810                           	FNCALL	_tc_int,___aldiv
  1811                           	FNCALL	_tc_int,___wmul
  1812                           	FNCALL	_tc_int,i2___awdiv
  1813                           	FNCALL	intlevel2,_tc_int
  1814                           	global	intlevel2
  1815                           	FNROOT	intlevel2
  1816                           	global	_length
  1817                           	global	_tempo
  1818                           	global	_tone
  1819                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
  1820                           global __pidataCOMRAM
  1821                           __pidataCOMRAM:
  1822  002C90                     	file	"main.c"
  1823                           	line	23
  1824                           
  1825                           ;initializer for _length
  1826                           	dw	(01Eh)&0ffffh
  1827  002C90  001E               	dw	(013h)&0ffffh
  1828  002C92  0013               psect	idataBANK1,class=CODE,space=0,delta=1,noexec
  1829                           global __pidataBANK1
  1830                           __pidataBANK1:
  1831  00236C                     	line	21
  1832                           
  1833                           ;initializer for _tempo
  1834                           	dw	(01h)&0ffffh
  1835  00236C  0001               	dw	(01h)&0ffffh
  1836  00236E  0001               	dw	(01h)&0ffffh
  1837  002370  0001               	dw	(01h)&0ffffh
  1838  002372  0001               	dw	(01h)&0ffffh
  1839  002374  0001               	dw	(01h)&0ffffh
  1840  002376  0001               	dw	(01h)&0ffffh
  1841  002378  0001               	dw	(01h)&0ffffh
  1842  00237A  0001               	dw	(01h)&0ffffh
  1843  00237C  0001               	dw	(01h)&0ffffh
  1844  00237E  0001               	dw	(01h)&0ffffh
  1845  002380  0001               	dw	(01h)&0ffffh
  1846  002382  0001               	dw	(01h)&0ffffh
  1847  002384  0001               	dw	(01h)&0ffffh
  1848  002386  0001               	dw	(01h)&0ffffh
  1849  002388  0001               	dw	(01h)&0ffffh
  1850  00238A  0001               	dw	(01h)&0ffffh
  1851  00238C  0001               	dw	(01h)&0ffffh
  1852  00238E  0001               	dw	(01h)&0ffffh
  1853  002390  0001               	dw	(01h)&0ffffh
  1854  002392  0001               	dw	(01h)&0ffffh
  1855  002394  0001               	dw	(01h)&0ffffh
  1856  002396  0001               	dw	(01h)&0ffffh
  1857  002398  0001               	dw	(01h)&0ffffh
  1858  00239A  0001               	dw	(01h)&0ffffh
  1859  00239C  0001               	dw	(01h)&0ffffh
  1860  00239E  0001               	dw	(01h)&0ffffh
  1861  0023A0  0001               	dw	(01h)&0ffffh
  1862  0023A2  0001               	dw	(01h)&0ffffh
  1863  0023A4  0001               	dw	(01h)&0ffffh
  1864  0023A6  0001               	dw	(01h)&0ffffh
  1865  0023A8  0001               	dw	(01h)&0ffffh
  1866  0023AA  0001               	dw	(02h)&0ffffh
  1867  0023AC  0002               	dw	(01h)&0ffffh
  1868  0023AE  0001               	dw	(01h)&0ffffh
  1869  0023B0  0001               	dw	(01h)&0ffffh
  1870  0023B2  0001               	dw	(01h)&0ffffh
  1871  0023B4  0001               	dw	(02h)&0ffffh
  1872  0023B6  0002               	dw	(01h)&0ffffh
  1873  0023B8  0001               	dw	(01h)&0ffffh
  1874  0023BA  0001               	dw	(01h)&0ffffh
  1875  0023BC  0001               	dw	(01h)&0ffffh
  1876  0023BE  0001               	dw	(02h)&0ffffh
  1877  0023C0  0002               	dw	(01h)&0ffffh
  1878  0023C2  0001               	dw	(01h)&0ffffh
  1879  0023C4  0001               	dw	(01h)&0ffffh
  1880  0023C6  0001               	dw	(01h)&0ffffh
  1881  0023C8  0001               	dw	(03h)&0ffffh
  1882  0023CA  0003               	dw	(01h)&0ffffh
  1883  0023CC  0001               	db   0
  1884  0023CE  00                 	db   0
  1885  0023CF  00                 	db   0
  1886  0023D0  00                 	db   0
  1887  0023D1  00                 	db   0
  1888  0023D2  00                 	db   0
  1889  0023D3  00                 	db   0
  1890  0023D4  00                 	db   0
  1891  0023D5  00                 	db   0
  1892  0023D6  00                 	db   0
  1893  0023D7  00                 	db   0
  1894  0023D8  00                 	db   0
  1895  0023D9  00                 	db   0
  1896  0023DA  00                 	db   0
  1897  0023DB  00                 	db   0
  1898  0023DC  00                 	db   0
  1899  0023DD  00                 	db   0
  1900  0023DE  00                 	db   0
  1901  0023DF  00                 	db   0
  1902  0023E0  00                 	db   0
  1903  0023E1  00                 	db   0
  1904  0023E2  00                 	db   0
  1905  0023E3  00                 	line	19
  1906                           
  1907                           ;initializer for _tone
  1908                           	dw	(030Fh)&0ffffh
  1909  0023E4  030F               	dw	(0293h)&0ffffh
  1910  0023E6  0293               	dw	(0293h)&0ffffh
  1911  0023E8  0293               	dw	(0)&0ffffh
  1912  0023EA  0000               	dw	(02BAh)&0ffffh
  1913  0023EC  02BA               	dw	(024Bh)&0ffffh
  1914  0023EE  024B               	dw	(024Bh)&0ffffh
  1915  0023F0  024B               	dw	(0)&0ffffh
  1916  0023F2  0000               	dw	(020Bh)&0ffffh
  1917  0023F4  020B               	dw	(024Bh)&0ffffh
  1918  0023F6  024B               	dw	(0293h)&0ffffh
  1919  0023F8  0293               	dw	(02BAh)&0ffffh
  1920  0023FA  02BA               	dw	(030Fh)&0ffffh
  1921  0023FC  030F               	dw	(030Fh)&0ffffh
  1922  0023FE  030F               	dw	(030Fh)&0ffffh
  1923  002400  030F               	dw	(0)&0ffffh
  1924  002402  0000               	dw	(030Fh)&0ffffh
  1925  002404  030F               	dw	(0293h)&0ffffh
  1926  002406  0293               	dw	(0293h)&0ffffh
  1927  002408  0293               	dw	(0)&0ffffh
  1928  00240A  0000               	dw	(02BAh)&0ffffh
  1929  00240C  02BA               	dw	(024Bh)&0ffffh
  1930  00240E  024B               	dw	(024Bh)&0ffffh
  1931  002410  024B               	dw	(0)&0ffffh
  1932  002412  0000               	dw	(020Bh)&0ffffh
  1933  002414  020B               	dw	(0293h)&0ffffh
  1934  002416  0293               	dw	(030Fh)&0ffffh
  1935  002418  030F               	dw	(030Fh)&0ffffh
  1936  00241A  030F               	dw	(0293h)&0ffffh
  1937  00241C  0293               	dw	(0)&0ffffh
  1938  00241E  0000               	dw	(0149h)&0ffffh
  1939  002420  0149               	dw	(0188h)&0ffffh
  1940  002422  0188               	dw	(01B8h)&0ffffh
  1941  002424  01B8               	dw	(01B8h)&0ffffh
  1942  002426  01B8               	dw	(0)&0ffffh
  1943  002428  0000               	dw	(01B8h)&0ffffh
  1944  00242A  01B8               	dw	(0118Dh)&0ffffh
  1945  00242C  118D               	dw	(020Bh)&0ffffh
  1946  00242E  020B               	dw	(020Bh)&0ffffh
  1947  002430  020B               	dw	(0)&0ffffh
  1948  002432  0000               	dw	(020Bh)&0ffffh
  1949  002434  020B               	dw	(024Bh)&0ffffh
  1950  002436  024B               	dw	(0118Dh)&0ffffh
  1951  002438  118D               	dw	(0118Dh)&0ffffh
  1952  00243A  118D               	dw	(0)&0ffffh
  1953  00243C  0000               	dw	(01B8h)&0ffffh
  1954  00243E  01B8               	dw	(0188h)&0ffffh
  1955  002440  0188               	dw	(01B8h)&0ffffh
  1956  002442  01B8               	dw	(0)&0ffffh
  1957  002444  0000               	db   0
  1958  002446  00                 	db   0
  1959  002447  00                 	db   0
  1960  002448  00                 	db   0
  1961  002449  00                 	db   0
  1962  00244A  00                 	db   0
  1963  00244B  00                 	db   0
  1964  00244C  00                 	db   0
  1965  00244D  00                 	db   0
  1966  00244E  00                 	db   0
  1967  00244F  00                 	db   0
  1968  002450  00                 	db   0
  1969  002451  00                 	db   0
  1970  002452  00                 	db   0
  1971  002453  00                 	db   0
  1972  002454  00                 	db   0
  1973  002455  00                 	db   0
  1974  002456  00                 	db   0
  1975  002457  00                 	db   0
  1976  002458  00                 	db   0
  1977  002459  00                 	db   0
  1978  00245A  00                 	db   0
  1979  00245B  00                 	global	_led_mode
  1980                           	global	_updown
  1981                           	global	_led_breath
  1982                           	global	_led_loop
  1983                           	global	_led_interval
  1984                           	global	_led_num
  1985                           	global	_music_choose
  1986                           	global	_music_index
  1987                           	global	_music_count
  1988                           	global	_lenStr
  1989                           	global	_mystring
  1990                           	global	_music_playing
  1991                           	global	_TRISDbits
  1992                           _TRISDbits	set	0xF95
  1993  0000                     	global	_TRISA
  1994                           _TRISA	set	0xF92
  1995  0000                     	global	_TRISCbits
  1996                           _TRISCbits	set	0xF94
  1997  0000                     	global	_RD7
  1998                           _RD7	set	0x7C1F
  1999  0000                     	global	_RD6
  2000                           _RD6	set	0x7C1E
  2001  0000                     	global	_RD5
  2002                           _RD5	set	0x7C1D
  2003  0000                     	global	_RC2
  2004                           _RC2	set	0x7C12
  2005  0000                     	global	_TMR3
  2006                           _TMR3	set	0xFB2
  2007  0000                     	global	_TMR1
  2008                           _TMR1	set	0xFCE
  2009  0000                     	global	_T1CONbits
  2010                           _T1CONbits	set	0xFCD
  2011  0000                     	global	_IPR2bits
  2012                           _IPR2bits	set	0xFA2
  2013  0000                     	global	_PIE2bits
  2014                           _PIE2bits	set	0xFA0
  2015  0000                     	global	_T3CONbits
  2016                           _T3CONbits	set	0xFB1
  2017  0000                     	global	_CCP1CONbits
  2018                           _CCP1CONbits	set	0xFBD
  2019  0000                     	global	_CCPR1L
  2020                           _CCPR1L	set	0xFBE
  2021  0000                     	global	_PIR2bits
  2022                           _PIR2bits	set	0xFA1
  2023  0000                     	global	_CCP2CONbits
  2024                           _CCP2CONbits	set	0xFBA
  2025  0000                     	global	_CCPR2L
  2026                           _CCPR2L	set	0xFBB
  2027  0000                     	global	_PR2
  2028                           _PR2	set	0xFCB
  2029  0000                     	global	_T2CONbits
  2030                           _T2CONbits	set	0xFCA
  2031  0000                     	global	_ADCON0bits
  2032                           _ADCON0bits	set	0xFC2
  2033  0000                     	global	_ADRESL
  2034                           _ADRESL	set	0xFC3
  2035  0000                     	global	_ADRESH
  2036                           _ADRESH	set	0xFC4
  2037  0000                     	global	_ADCON2bits
  2038                           _ADCON2bits	set	0xFC0
  2039  0000                     	global	_ADCON1
  2040                           _ADCON1	set	0xFC1
  2041  0000                     	global	_RCONbits
  2042                           _RCONbits	set	0xFD0
  2043  0000                     	global	_RCREG
  2044                           _RCREG	set	0xFAE
  2045  0000                     	global	_TXREG
  2046                           _TXREG	set	0xFAD
  2047  0000                     	global	_IPR1bits
  2048                           _IPR1bits	set	0xF9F
  2049  0000                     	global	_PIE1bits
  2050                           _PIE1bits	set	0xF9D
  2051  0000                     	global	_PIR1bits
  2052                           _PIR1bits	set	0xF9E
  2053  0000                     	global	_RCSTAbits
  2054                           _RCSTAbits	set	0xFAB
  2055  0000                     	global	_SPBRG
  2056                           _SPBRG	set	0xFAF
  2057  0000                     	global	_BAUDCONbits
  2058                           _BAUDCONbits	set	0xFB8
  2059  0000                     	global	_TXSTAbits
  2060                           _TXSTAbits	set	0xFAC
  2061  0000                     	global	_OSCCONbits
  2062                           _OSCCONbits	set	0xFD3
  2063  0000                     	global	_ADFM
  2064                           _ADFM	set	0x7E07
  2065  0000                     	global	_CREN
  2066                           _CREN	set	0x7D5C
  2067  0000                     	global	_RCIF
  2068                           _RCIF	set	0x7CF5
  2069  0000                     	global	_INTCONbits
  2070                           _INTCONbits	set	0xFF2
  2071  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
  2072                           global __psmallconst
  2073                           __psmallconst:
  2074  000600                     	db	0
  2075  000600  00                 	
  2076                           STR_1:
  2077  000601                     	db	77	;'M'
  2078  000601  4D                 	db	111	;'o'
  2079  000602  6F                 	db	100	;'d'
  2080  000603  64                 	db	101	;'e'
  2081  000604  65                 	db	49	;'1'
  2082  000605  31                 	db	32
  2083  000606  20                 	db	0
  2084  000607  00                 	
  2085                           STR_23:
  2086  000608                     	db	98	;'b'
  2087  000608  62                 	db	114	;'r'
  2088  000609  72                 	db	101	;'e'
  2089  00060A  65                 	db	97	;'a'
  2090  00060B  61                 	db	116	;'t'
  2091  00060C  74                 	db	104	;'h'
  2092  00060D  68                 	db	0
  2093  00060E  00                 	
  2094                           STR_15:
  2095  00060F                     	db	77	;'M'
  2096  00060F  4D                 	db	111	;'o'
  2097  000610  6F                 	db	100	;'d'
  2098  000611  64                 	db	101	;'e'
  2099  000612  65                 	db	50	;'2'
  2100  000613  32                 	db	0
  2101  000614  00                 	
  2102                           STR_25:
  2103  000615                     	db	109	;'m'
  2104  000615  6D                 	db	117	;'u'
  2105  000616  75                 	db	115	;'s'
  2106  000617  73                 	db	105	;'i'
  2107  000618  69                 	db	99	;'c'
  2108  000619  63                 	db	0
  2109  00061A  00                 	
  2110                           STR_21:
  2111  00061B                     	db	98	;'b'
  2112  00061B  62                 	db	108	;'l'
  2113  00061C  6C                 	db	105	;'i'
  2114  00061D  69                 	db	110	;'n'
  2115  00061E  6E                 	db	107	;'k'
  2116  00061F  6B                 	db	0
  2117  000620  00                 	
  2118                           STR_20:
  2119  000621                     	db	99	;'c'
  2120  000621  63                 	db	108	;'l'
  2121  000622  6C                 	db	101	;'e'
  2122  000623  65                 	db	97	;'a'
  2123  000624  61                 	db	114	;'r'
  2124  000625  72                 	db	0
  2125  000626  00                 	
  2126                           STR_2:
  2127  000627                     	db	49	;'1'
  2128  000627  31                 	db	0
  2129  000628  00                 	
  2130                           STR_4:
  2131  000629                     	db	51	;'3'
  2132  000629  33                 	db	0
  2133  00062A  00                 	
  2134                           STR_5:
  2135  00062B                     	db	52	;'4'
  2136  00062B  34                 	db	0
  2137  00062C  00                 	
  2138                           STR_10:
  2139  00062D                     	db	53	;'5'
  2140  00062D  35                 	db	0
  2141  00062E  00                 	
  2142                           STR_11:
  2143  00062F                     	db	54	;'6'
  2144  00062F  36                 	db	0
  2145  000630  00                 	
  2146                           STR_12:
  2147  000631                     	db	55	;'7'
  2148  000631  37                 	db	0
  2149  000632  00                 	
  2150                           STR_13:
  2151  000633                     	db	56	;'8'
  2152  000633  38                 	db	0
  2153  000634  00                 	
  2154                           STR_27:
  2155  000635                     	db	112	;'p'
  2156  000635  70                 	db	0
  2157  000636  00                 	
  2158                           STR_14:
  2159  000637                     	db	113	;'q'
  2160  000637  71                 	db	0
  2161  000638  00                 	
  2162                           STR_29:
  2163  000639                     	db	115	;'s'
  2164  000639  73                 	db	0
  2165  00063A  00                 STR_30	equ	STR_29+0
  2166  0000                     STR_16	equ	STR_14+0
  2167  0000                     STR_19	equ	STR_14+0
  2168  0000                     STR_28	equ	STR_27+0
  2169  0000                     STR_22	equ	STR_21+0
  2170  0000                     STR_24	equ	STR_23+0
  2171  0000                     STR_26	equ	STR_25+0
  2172  0000                     STR_9	equ	STR_5+0
  2173  0000                     STR_8	equ	STR_4+0
  2174  0000                     STR_3	equ	STR_15+4
  2175  0000                     STR_7	equ	STR_15+4
  2176  0000                     STR_18	equ	STR_15+4
  2177  0000                     STR_6	equ	STR_2+0
  2178  0000                     STR_17	equ	STR_2+0
  2179  0000                     ; #config settings
  2180                           global __CFG_OSC$INTIO67
  2181                           __CFG_OSC$INTIO67 equ 0x0
  2182  0000                     global __CFG_FCMEN$OFF
  2183                           __CFG_FCMEN$OFF equ 0x0
  2184  0000                     global __CFG_IESO$ON
  2185                           __CFG_IESO$ON equ 0x0
  2186  0000                     global __CFG_PWRT$OFF
  2187                           __CFG_PWRT$OFF equ 0x0
  2188  0000                     global __CFG_BOREN$SBORDIS
  2189                           __CFG_BOREN$SBORDIS equ 0x0
  2190  0000                     global __CFG_BORV$3
  2191                           __CFG_BORV$3 equ 0x0
  2192  0000                     global __CFG_WDT$OFF
  2193                           __CFG_WDT$OFF equ 0x0
  2194  0000                     global __CFG_WDTPS$1
  2195                           __CFG_WDTPS$1 equ 0x0
  2196  0000                     global __CFG_CCP2MX$PORTC
  2197                           __CFG_CCP2MX$PORTC equ 0x0
  2198  0000                     global __CFG_PBADEN$ON
  2199                           __CFG_PBADEN$ON equ 0x0
  2200  0000                     global __CFG_LPT1OSC$OFF
  2201                           __CFG_LPT1OSC$OFF equ 0x0
  2202  0000                     global __CFG_MCLRE$ON
  2203                           __CFG_MCLRE$ON equ 0x0
  2204  0000                     global __CFG_STVREN$ON
  2205                           __CFG_STVREN$ON equ 0x0
  2206  0000                     global __CFG_LVP$OFF
  2207                           __CFG_LVP$OFF equ 0x0
  2208  0000                     global __CFG_XINST$OFF
  2209                           __CFG_XINST$OFF equ 0x0
  2210  0000                     global __CFG_CP0$OFF
  2211                           __CFG_CP0$OFF equ 0x0
  2212  0000                     global __CFG_CP1$OFF
  2213                           __CFG_CP1$OFF equ 0x0
  2214  0000                     global __CFG_CP2$OFF
  2215                           __CFG_CP2$OFF equ 0x0
  2216  0000                     global __CFG_CP3$OFF
  2217                           __CFG_CP3$OFF equ 0x0
  2218  0000                     global __CFG_CPB$OFF
  2219                           __CFG_CPB$OFF equ 0x0
  2220  0000                     global __CFG_CPD$OFF
  2221                           __CFG_CPD$OFF equ 0x0
  2222  0000                     global __CFG_WRT0$OFF
  2223                           __CFG_WRT0$OFF equ 0x0
  2224  0000                     global __CFG_WRT1$OFF
  2225                           __CFG_WRT1$OFF equ 0x0
  2226  0000                     global __CFG_WRT2$OFF
  2227                           __CFG_WRT2$OFF equ 0x0
  2228  0000                     global __CFG_WRT3$OFF
  2229                           __CFG_WRT3$OFF equ 0x0
  2230  0000                     global __CFG_WRTC$OFF
  2231                           __CFG_WRTC$OFF equ 0x0
  2232  0000                     global __CFG_WRTB$OFF
  2233                           __CFG_WRTB$OFF equ 0x0
  2234  0000                     global __CFG_WRTD$OFF
  2235                           __CFG_WRTD$OFF equ 0x0
  2236  0000                     global __CFG_EBTR0$OFF
  2237                           __CFG_EBTR0$OFF equ 0x0
  2238  0000                     global __CFG_EBTR1$OFF
  2239                           __CFG_EBTR1$OFF equ 0x0
  2240  0000                     global __CFG_EBTR2$OFF
  2241                           __CFG_EBTR2$OFF equ 0x0
  2242  0000                     global __CFG_EBTR3$OFF
  2243                           __CFG_EBTR3$OFF equ 0x0
  2244  0000                     global __CFG_EBTRB$OFF
  2245                           __CFG_EBTRB$OFF equ 0x0
  2246  0000                     	file	"C:\Users\NIGHTK~1\AppData\Local\Temp\s7jc."
  2247                           	line	#
  2248                           psect	cinit,class=CODE,delta=1,reloc=2
  2249                           global __pcinit
  2250                           __pcinit:
  2251  002878                     global start_initialization
  2252                           start_initialization:
  2253  002878                     
  2254                           global __initialization
  2255                           __initialization:
  2256  002878                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
  2257                           global __pbssCOMRAM
  2258                           __pbssCOMRAM:
  2259  000036                     	global	_led_mode
  2260                           _led_mode:
  2261  000036                            ds      2
  2262  000036                     	global	_updown
  2263                           _updown:
  2264  000038                            ds      2
  2265  000038                     	global	_led_breath
  2266                           _led_breath:
  2267  00003A                            ds      2
  2268  00003A                     	global	_led_loop
  2269                           _led_loop:
  2270  00003C                            ds      2
  2271  00003C                     	global	_led_interval
  2272                           _led_interval:
  2273  00003E                            ds      2
  2274  00003E                     	global	_led_num
  2275                           _led_num:
  2276  000040                            ds      2
  2277  000040                     	global	_music_choose
  2278                           _music_choose:
  2279  000042                            ds      2
  2280  000042                     	global	_music_index
  2281                           _music_index:
  2282  000044                            ds      2
  2283  000044                     	global	_music_count
  2284                           _music_count:
  2285  000046                            ds      2
  2286  000046                     	global	_lenStr
  2287                           _lenStr:
  2288  000048                            ds      2
  2289  000048                     	global	_mystring
  2290                           _mystring:
  2291  00004A                            ds      10
  2292  00004A                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
  2293                           global __pdataCOMRAM
  2294                           __pdataCOMRAM:
  2295  000054                     	file	"main.c"
  2296                           	line	23
  2297                           	global	_length
  2298                           _length:
  2299  000054                            ds      4
  2300  000054                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
  2301                           global __pbssBANK0
  2302                           __pbssBANK0:
  2303  0000B3                     	global	_str
  2304                           	global	_str
  2305                           _str:
  2306  0000B3                            ds      10
  2307  0000B3                     	global	_music_playing
  2308                           _music_playing:
  2309  0000BD                            ds      2
  2310  0000BD                     psect	dataBANK1,class=BANK1,space=1,noexec,lowdata
  2311                           global __pdataBANK1
  2312                           __pdataBANK1:
  2313  000100                     	file	"main.c"
  2314                           	line	21
  2315                           	global	_tempo
  2316                           _tempo:
  2317  000100                            ds      120
  2318  000100                     psect	dataBANK1
  2319                           	file	"main.c"
  2320                           	line	19
  2321                           	global	_tone
  2322                           _tone:
  2323  000178                            ds      120
  2324  000178                     	file	"C:\Users\NIGHTK~1\AppData\Local\Temp\s7jc."
  2325                           	line	#
  2326                           psect	cinit
  2327                           ; Initialize objects allocated to BANK1 (240 bytes)
  2328                           	global __pidataBANK1
  2329                           	; load TBLPTR registers with __pidataBANK1
  2330                           	movlw	low (__pidataBANK1)
  2331  002878  0E6C               	movwf	tblptrl
  2332  00287A  6EF6               	movlw	high(__pidataBANK1)
  2333  00287C  0E23               	movwf	tblptrh
  2334  00287E  6EF7               	movlw	low highword(__pidataBANK1)
  2335  002880  0E00               	movwf	tblptru
  2336  002882  6EF8               	lfsr	0,__pdataBANK1
  2337  002884  EE01  F000         	lfsr	1,240
  2338  002888  EE10 F0F0          	copy_data0:
  2339  00288C                     	tblrd	*+
  2340  00288C  0009               	movff	tablat, postinc0
  2341  00288E  CFF5 FFEE          	movf	postdec1,w
  2342  002892  50E5               	movf	fsr1l,w
  2343  002894  50E1               	bnz	copy_data0
  2344  002896  E1FA               ; Initialize objects allocated to COMRAM (4 bytes)
  2345                           	global __pidataCOMRAM
  2346                           	; load TBLPTR registers with __pidataCOMRAM
  2347                           	movlw	low (__pidataCOMRAM)
  2348  002898  0E90               	movwf	tblptrl
  2349  00289A  6EF6               	movlw	high(__pidataCOMRAM)
  2350  00289C  0E2C               	movwf	tblptrh
  2351  00289E  6EF7               	movlw	low highword(__pidataCOMRAM)
  2352  0028A0  0E00               	movwf	tblptru
  2353  0028A2  6EF8               	lfsr	0,__pdataCOMRAM
  2354  0028A4  EE00  F054         	lfsr	1,4
  2355  0028A8  EE10 F004          	copy_data1:
  2356  0028AC                     	tblrd	*+
  2357  0028AC  0009               	movff	tablat, postinc0
  2358  0028AE  CFF5 FFEE          	movf	postdec1,w
  2359  0028B2  50E5               	movf	fsr1l,w
  2360  0028B4  50E1               	bnz	copy_data1
  2361  0028B6  E1FA               	line	#
  2362                           ; Clear objects allocated to BANK0 (12 bytes)
  2363                           	global __pbssBANK0
  2364                           lfsr	0,__pbssBANK0
  2365  0028B8  EE00  F0B3         movlw	12
  2366  0028BC  0E0C               clear_0:
  2367  0028BE                     clrf	postinc0,c
  2368  0028BE  6AEE               decf	wreg
  2369  0028C0  06E8               bnz	clear_0
  2370  0028C2  E1FD               ; Clear objects allocated to COMRAM (30 bytes)
  2371                           	global __pbssCOMRAM
  2372                           lfsr	0,__pbssCOMRAM
  2373  0028C4  EE00  F036         movlw	30
  2374  0028C8  0E1E               clear_1:
  2375  0028CA                     clrf	postinc0,c
  2376  0028CA  6AEE               decf	wreg
  2377  0028CC  06E8               bnz	clear_1
  2378  0028CE  E1FD               psect cinit,class=CODE,delta=1
  2379                           global end_of_initialization,__end_of__initialization
  2380                           
  2381                           ;End of C runtime variable initialization code
  2382                           
  2383                           end_of_initialization:
  2384  0028D0                     __end_of__initialization:
  2385  0028D0                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  2386  0028D0  9058               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  2387  0028D2  9258               	GLOBAL	__Lsmallconst
  2388                           	movlw	low highword(__Lsmallconst)
  2389  0028D4  0E00               	movwf	tblptru
  2390  0028D6  6EF8               	movlw	high(__Lsmallconst)
  2391  0028D8  0E06               	movwf	tblptrh
  2392  0028DA  6EF7               movlb 0
  2393  0028DC  0100               goto _main	;jump to C main() function
  2394  0028DE  EFA8  F00E         psect	cstackBANK0,class=BANK0,space=1,noexec
  2395                           global __pcstackBANK0
  2396                           __pcstackBANK0:
  2397  000080                     	global	?_strstr
  2398                           ?_strstr:	; 2 bytes @ 0x0
  2399  000080                     	global	___xxtofl@sign
  2400                           ___xxtofl@sign:	; 1 bytes @ 0x0
  2401  000080                     	global	strstr@h
  2402                           strstr@h:	; 2 bytes @ 0x0
  2403  000080                     	ds   1
  2404  000080                     	global	___xxtofl@exp
  2405                           ___xxtofl@exp:	; 1 bytes @ 0x1
  2406  000081                     	ds   1
  2407  000081                     	global	strstr@n
  2408                           strstr@n:	; 2 bytes @ 0x2
  2409  000082                     	global	___xxtofl@arg
  2410                           ___xxtofl@arg:	; 4 bytes @ 0x2
  2411  000082                     	ds   2
  2412  000082                     	global	strstr@nl
  2413                           strstr@nl:	; 2 bytes @ 0x4
  2414  000084                     	ds   2
  2415  000084                     	global	?___fladd
  2416                           ?___fladd:	; 4 bytes @ 0x6
  2417  000086                     	global	?___flmul
  2418                           ?___flmul:	; 4 bytes @ 0x6
  2419  000086                     	global	___fladd@b
  2420                           ___fladd@b:	; 4 bytes @ 0x6
  2421  000086                     	global	___flmul@b
  2422                           ___flmul@b:	; 4 bytes @ 0x6
  2423  000086                     	ds   4
  2424  000086                     	global	___fladd@a
  2425                           ___fladd@a:	; 4 bytes @ 0xA
  2426  00008A                     	global	___flmul@a
  2427                           ___flmul@a:	; 4 bytes @ 0xA
  2428  00008A                     	ds   4
  2429  00008A                     ??___fladd:	; 1 bytes @ 0xE
  2430  00008E                     ??___flmul:	; 1 bytes @ 0xE
  2431  00008E                     	ds   4
  2432  00008E                     	global	___flmul@sign
  2433                           ___flmul@sign:	; 1 bytes @ 0x12
  2434  000092                     	ds   1
  2435  000092                     	global	___flmul@aexp
  2436                           ___flmul@aexp:	; 1 bytes @ 0x13
  2437  000093                     	ds   1
  2438  000093                     	global	___flmul@grs
  2439                           ___flmul@grs:	; 4 bytes @ 0x14
  2440  000094                     	ds   2
  2441  000094                     	global	___fladd@signs
  2442                           ___fladd@signs:	; 1 bytes @ 0x16
  2443  000096                     	ds   1
  2444  000096                     	global	___fladd@aexp
  2445                           ___fladd@aexp:	; 1 bytes @ 0x17
  2446  000097                     	ds   1
  2447  000097                     	global	___fladd@bexp
  2448                           ___fladd@bexp:	; 1 bytes @ 0x18
  2449  000098                     	global	___flmul@bexp
  2450                           ___flmul@bexp:	; 1 bytes @ 0x18
  2451  000098                     	ds   1
  2452  000098                     	global	___fladd@grs
  2453                           ___fladd@grs:	; 1 bytes @ 0x19
  2454  000099                     	global	___flmul@prod
  2455                           ___flmul@prod:	; 4 bytes @ 0x19
  2456  000099                     	ds   1
  2457  000099                     	global	?___flsub
  2458                           ?___flsub:	; 4 bytes @ 0x1A
  2459  00009A                     	global	___flsub@b
  2460                           ___flsub@b:	; 4 bytes @ 0x1A
  2461  00009A                     	ds   3
  2462  00009A                     	global	___flmul@temp
  2463                           ___flmul@temp:	; 2 bytes @ 0x1D
  2464  00009D                     	ds   1
  2465  00009D                     	global	___flsub@a
  2466                           ___flsub@a:	; 4 bytes @ 0x1E
  2467  00009E                     	ds   4
  2468  00009E                     	global	?___fltol
  2469                           ?___fltol:	; 4 bytes @ 0x22
  2470  0000A2                     	global	___fltol@f1
  2471                           ___fltol@f1:	; 4 bytes @ 0x22
  2472  0000A2                     	ds   4
  2473  0000A2                     ??___fltol:	; 1 bytes @ 0x26
  2474  0000A6                     	ds   4
  2475  0000A6                     	global	___fltol@sign1
  2476                           ___fltol@sign1:	; 1 bytes @ 0x2A
  2477  0000AA                     	ds   1
  2478  0000AA                     	global	___fltol@exp1
  2479                           ___fltol@exp1:	; 1 bytes @ 0x2B
  2480  0000AB                     	ds   1
  2481  0000AB                     ??_Mode2:	; 1 bytes @ 0x2C
  2482  0000AC                     	ds   3
  2483  0000AC                     	global	Mode2@interval
  2484                           Mode2@interval:	; 4 bytes @ 0x2F
  2485  0000AF                     	ds   4
  2486  0000AF                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  2487                           global __pcstackCOMRAM
  2488                           __pcstackCOMRAM:
  2489  000001                     ?_OSCILLATOR_Initialize:	; 1 bytes @ 0x0
  2490  000001                     ?_INTERRUPT_Initialize:	; 1 bytes @ 0x0
  2491  000001                     ?_UART_Initialize:	; 1 bytes @ 0x0
  2492  000001                     ?_CCP1_Initialize:	; 1 bytes @ 0x0
  2493  000001                     ?_ADC_Initialize:	; 1 bytes @ 0x0
  2494  000001                     ?_SYSTEM_Initialize:	; 1 bytes @ 0x0
  2495  000001                     ?_UART_Write:	; 1 bytes @ 0x0
  2496  000001                     ?_ClearBuffer:	; 1 bytes @ 0x0
  2497  000001                     ?_MyusartRead:	; 1 bytes @ 0x0
  2498  000001                     ?_Lo_ISR:	; 1 bytes @ 0x0
  2499  000001                     ?_tc_int:	; 1 bytes @ 0x0
  2500  000001                     ?_Mode1:	; 1 bytes @ 0x0
  2501  000001                     ?_Mode2:	; 1 bytes @ 0x0
  2502  000001                     ?_Mode3:	; 1 bytes @ 0x0
  2503  000001                     ?_Playmusic:	; 1 bytes @ 0x0
  2504  000001                     ?_Stopmusic:	; 1 bytes @ 0x0
  2505  000001                     ?_main:	; 1 bytes @ 0x0
  2506  000001                     ?i1_UART_Write:	; 1 bytes @ 0x0
  2507  000001                     	global	?___wmul
  2508                           ?___wmul:	; 2 bytes @ 0x0
  2509  000001                     	global	?i2___awdiv
  2510                           ?i2___awdiv:	; 2 bytes @ 0x0
  2511  000001                     	global	___wmul@multiplier
  2512                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2513  000001                     	global	i2___awdiv@dividend
  2514                           i2___awdiv@dividend:	; 2 bytes @ 0x0
  2515  000001                     	ds   2
  2516  000001                     	global	___wmul@multiplicand
  2517                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2518  000003                     	global	i2___awdiv@divisor
  2519                           i2___awdiv@divisor:	; 2 bytes @ 0x2
  2520  000003                     	ds   2
  2521  000003                     ??___wmul:	; 1 bytes @ 0x4
  2522  000005                     ??i2___awdiv:	; 1 bytes @ 0x4
  2523  000005                     	global	i2___awdiv@counter
  2524                           i2___awdiv@counter:	; 1 bytes @ 0x4
  2525  000005                     	global	___wmul@product
  2526                           ___wmul@product:	; 2 bytes @ 0x4
  2527  000005                     	ds   1
  2528  000005                     	global	i2___awdiv@sign
  2529                           i2___awdiv@sign:	; 1 bytes @ 0x5
  2530  000006                     	ds   1
  2531  000006                     	global	?___aldiv
  2532                           ?___aldiv:	; 4 bytes @ 0x6
  2533  000007                     	global	i2___awdiv@quotient
  2534                           i2___awdiv@quotient:	; 2 bytes @ 0x6
  2535  000007                     	global	___aldiv@dividend
  2536                           ___aldiv@dividend:	; 4 bytes @ 0x6
  2537  000007                     	ds   4
  2538  000007                     	global	___aldiv@divisor
  2539                           ___aldiv@divisor:	; 4 bytes @ 0xA
  2540  00000B                     	ds   4
  2541  00000B                     ??___aldiv:	; 1 bytes @ 0xE
  2542  00000F                     	global	___aldiv@counter
  2543                           ___aldiv@counter:	; 1 bytes @ 0xE
  2544  00000F                     	ds   1
  2545  00000F                     	global	___aldiv@sign
  2546                           ___aldiv@sign:	; 1 bytes @ 0xF
  2547  000010                     	ds   1
  2548  000010                     	global	___aldiv@quotient
  2549                           ___aldiv@quotient:	; 4 bytes @ 0x10
  2550  000011                     	ds   4
  2551  000011                     ??_tc_int:	; 1 bytes @ 0x14
  2552  000015                     	ds   8
  2553  000015                     ??i1_UART_Write:	; 1 bytes @ 0x1C
  2554  00001D                     	global	?___awmod
  2555                           ?___awmod:	; 2 bytes @ 0x1C
  2556  00001D                     	global	i1UART_Write@data
  2557                           i1UART_Write@data:	; 1 bytes @ 0x1C
  2558  00001D                     	global	___awmod@dividend
  2559                           ___awmod@dividend:	; 2 bytes @ 0x1C
  2560  00001D                     	ds   2
  2561  00001D                     	global	___awmod@divisor
  2562                           ___awmod@divisor:	; 2 bytes @ 0x1E
  2563  00001F                     	ds   2
  2564  00001F                     ??___awmod:	; 1 bytes @ 0x20
  2565  000021                     	global	___awmod@counter
  2566                           ___awmod@counter:	; 1 bytes @ 0x20
  2567  000021                     	ds   1
  2568  000021                     	global	___awmod@sign
  2569                           ___awmod@sign:	; 1 bytes @ 0x21
  2570  000022                     	ds   1
  2571  000022                     ??_MyusartRead:	; 1 bytes @ 0x22
  2572  000023                     ??_Lo_ISR:	; 1 bytes @ 0x22
  2573  000023                     	ds   5
  2574  000023                     ??_OSCILLATOR_Initialize:	; 1 bytes @ 0x27
  2575  000028                     ??_INTERRUPT_Initialize:	; 1 bytes @ 0x27
  2576  000028                     ??_UART_Initialize:	; 1 bytes @ 0x27
  2577  000028                     ??_CCP1_Initialize:	; 1 bytes @ 0x27
  2578  000028                     ??_ADC_Initialize:	; 1 bytes @ 0x27
  2579  000028                     ??_SYSTEM_Initialize:	; 1 bytes @ 0x27
  2580  000028                     ??_UART_Write:	; 1 bytes @ 0x27
  2581  000028                     ??_ClearBuffer:	; 1 bytes @ 0x27
  2582  000028                     	global	?_GetString
  2583                           ?_GetString:	; 2 bytes @ 0x27
  2584  000028                     	global	?_strlen
  2585                           ?_strlen:	; 2 bytes @ 0x27
  2586  000028                     	global	?_strncmp
  2587                           ?_strncmp:	; 2 bytes @ 0x27
  2588  000028                     	global	?_strchr
  2589                           ?_strchr:	; 2 bytes @ 0x27
  2590  000028                     	global	?_ADC_Read
  2591                           ?_ADC_Read:	; 2 bytes @ 0x27
  2592  000028                     	global	?___awdiv
  2593                           ?___awdiv:	; 2 bytes @ 0x27
  2594  000028                     	global	UART_Write@data
  2595                           UART_Write@data:	; 1 bytes @ 0x27
  2596  000028                     	global	ClearBuffer@i
  2597                           ClearBuffer@i:	; 2 bytes @ 0x27
  2598  000028                     	global	ADC_Read@channel
  2599                           ADC_Read@channel:	; 2 bytes @ 0x27
  2600  000028                     	global	___awdiv@dividend
  2601                           ___awdiv@dividend:	; 2 bytes @ 0x27
  2602  000028                     	global	strchr@s
  2603                           strchr@s:	; 2 bytes @ 0x27
  2604  000028                     	global	strlen@s
  2605                           strlen@s:	; 2 bytes @ 0x27
  2606  000028                     	global	strncmp@_l
  2607                           strncmp@_l:	; 2 bytes @ 0x27
  2608  000028                     	ds   1
  2609  000028                     ?_UART_Write_Text:	; 1 bytes @ 0x28
  2610  000029                     	global	UART_Write_Text@text
  2611                           UART_Write_Text@text:	; 2 bytes @ 0x28
  2612  000029                     	ds   1
  2613  000029                     ??_GetString:	; 1 bytes @ 0x29
  2614  00002A                     ??_strlen:	; 1 bytes @ 0x29
  2615  00002A                     ??_ADC_Read:	; 1 bytes @ 0x29
  2616  00002A                     ??_Playmusic:	; 1 bytes @ 0x29
  2617  00002A                     ??_Stopmusic:	; 1 bytes @ 0x29
  2618  00002A                     	global	?_strcmp
  2619                           ?_strcmp:	; 2 bytes @ 0x29
  2620  00002A                     	global	___awdiv@divisor
  2621                           ___awdiv@divisor:	; 2 bytes @ 0x29
  2622  00002A                     	global	strcmp@l
  2623                           strcmp@l:	; 2 bytes @ 0x29
  2624  00002A                     	global	strchr@c
  2625                           strchr@c:	; 2 bytes @ 0x29
  2626  00002A                     	global	strncmp@_r
  2627                           strncmp@_r:	; 2 bytes @ 0x29
  2628  00002A                     	ds   1
  2629  00002A                     ??_UART_Write_Text:	; 1 bytes @ 0x2A
  2630  00002B                     	ds   1
  2631  00002B                     ??_strchr:	; 1 bytes @ 0x2B
  2632  00002C                     ??___awdiv:	; 1 bytes @ 0x2B
  2633  00002C                     	global	___awdiv@counter
  2634                           ___awdiv@counter:	; 1 bytes @ 0x2B
  2635  00002C                     	global	ADC_Read@digital
  2636                           ADC_Read@digital:	; 2 bytes @ 0x2B
  2637  00002C                     	global	strcmp@r
  2638                           strcmp@r:	; 2 bytes @ 0x2B
  2639  00002C                     	global	strlen@a
  2640                           strlen@a:	; 2 bytes @ 0x2B
  2641  00002C                     	global	strncmp@n
  2642                           strncmp@n:	; 2 bytes @ 0x2B
  2643  00002C                     	ds   1
  2644  00002C                     	global	___awdiv@sign
  2645                           ___awdiv@sign:	; 1 bytes @ 0x2C
  2646  00002D                     	global	UART_Write_Text@i
  2647                           UART_Write_Text@i:	; 2 bytes @ 0x2C
  2648  00002D                     	ds   1
  2649  00002D                     ??_strcmp:	; 1 bytes @ 0x2D
  2650  00002E                     ??_strncmp:	; 1 bytes @ 0x2D
  2651  00002E                     	global	?___xxtofl
  2652                           ?___xxtofl:	; 4 bytes @ 0x2D
  2653  00002E                     	global	___awdiv@quotient
  2654                           ___awdiv@quotient:	; 2 bytes @ 0x2D
  2655  00002E                     	global	___xxtofl@val
  2656                           ___xxtofl@val:	; 4 bytes @ 0x2D
  2657  00002E                     	ds   3
  2658  00002E                     	global	strncmp@l
  2659                           strncmp@l:	; 2 bytes @ 0x30
  2660  000031                     	ds   1
  2661  000031                     ??___xxtofl:	; 1 bytes @ 0x31
  2662  000032                     	ds   1
  2663  000032                     	global	strncmp@r
  2664                           strncmp@r:	; 2 bytes @ 0x32
  2665  000033                     	ds   2
  2666  000033                     ??_strstr:	; 1 bytes @ 0x34
  2667  000035                     ??_Mode1:	; 1 bytes @ 0x34
  2668  000035                     ??_Mode3:	; 1 bytes @ 0x34
  2669  000035                     	ds   1
  2670  000035                     ??___flsub:	; 1 bytes @ 0x35
  2671  000036                     ??_main:	; 1 bytes @ 0x35
  2672  000036                     ;!
  2673                           ;!Data Sizes:
  2674                           ;!    Strings     58
  2675                           ;!    Constant    0
  2676                           ;!    Data        244
  2677                           ;!    BSS         42
  2678                           ;!    Persistent  0
  2679                           ;!    Stack       0
  2680                           ;!
  2681                           ;!Auto Spaces:
  2682                           ;!    Space          Size  Autos    Used
  2683                           ;!    COMRAM          126     53      87
  2684                           ;!    BANK0           128     51      63
  2685                           ;!    BANK1           256      0     240
  2686                           ;!    BANK2           256      0       0
  2687                           ;!    BANK3           256      0       0
  2688                           ;!    BANK4           256      0       0
  2689                           ;!    BANK5           244      0       0
  2690                           
  2691                           ;!
  2692                           ;!Pointer List with Targets:
  2693                           ;!
  2694                           ;!    strncmp@_r	PTR const unsigned char  size(2) Largest target is 6
  2695                           ;!		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
  2696                           ;!		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
  2697                           ;!		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
  2698                           ;!		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
  2699                           ;!		 -> STR_3(CODE[2]), STR_2(CODE[2]), 
  2700                           ;!
  2701                           ;!    strncmp@r	PTR const unsigned char  size(2) Largest target is 6
  2702                           ;!		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
  2703                           ;!		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
  2704                           ;!		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
  2705                           ;!		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
  2706                           ;!		 -> STR_3(CODE[2]), STR_2(CODE[2]), 
  2707                           ;!
  2708                           ;!    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
  2709                           ;!		 -> NULL(NULL[0]), mystring(COMRAM[10]), 
  2710                           ;!
  2711                           ;!    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
  2712                           ;!		 -> NULL(NULL[0]), mystring(COMRAM[10]), 
  2713                           ;!
  2714                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 6
  2715                           ;!		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
  2716                           ;!		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
  2717                           ;!		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
  2718                           ;!		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
  2719                           ;!		 -> STR_3(CODE[2]), STR_2(CODE[2]), 
  2720                           ;!
  2721                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 6
  2722                           ;!		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
  2723                           ;!		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
  2724                           ;!		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
  2725                           ;!		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
  2726                           ;!		 -> STR_3(CODE[2]), STR_2(CODE[2]), 
  2727                           ;!
  2728                           ;!    strchr@s	PTR const unsigned char  size(2) Largest target is 10
  2729                           ;!		 -> NULL(NULL[0]), mystring(COMRAM[10]), 
  2730                           ;!
  2731                           ;!    sp__strchr	PTR unsigned char  size(2) Largest target is 10
  2732                           ;!		 -> NULL(NULL[0]), mystring(COMRAM[10]), 
  2733                           ;!
  2734                           ;!    strstr@h	PTR const unsigned char  size(2) Largest target is 10
  2735                           ;!		 -> NULL(NULL[0]), mystring(COMRAM[10]), 
  2736                           ;!
  2737                           ;!    strstr@n	PTR const unsigned char  size(2) Largest target is 6
  2738                           ;!		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
  2739                           ;!		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
  2740                           ;!		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
  2741                           ;!		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
  2742                           ;!		 -> STR_3(CODE[2]), STR_2(CODE[2]), 
  2743                           ;!
  2744                           ;!    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
  2745                           ;!		 -> STR_30(CODE[2]), STR_28(CODE[2]), STR_26(CODE[6]), STR_24(CODE[7]), 
  2746                           ;!		 -> STR_22(CODE[6]), 
  2747                           ;!
  2748                           ;!    strcmp@l	PTR const unsigned char  size(2) Largest target is 10
  2749                           ;!		 -> mystring(COMRAM[10]), 
  2750                           ;!
  2751                           ;!    sp__strstr	PTR unsigned char  size(2) Largest target is 10
  2752                           ;!		 -> NULL(NULL[0]), mystring(COMRAM[10]), 
  2753                           ;!
  2754                           ;!    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 7
  2755                           ;!		 -> STR_15(CODE[6]), STR_1(CODE[7]), 
  2756                           ;!
  2757                           ;!    sp__GetString	PTR unsigned char  size(2) Largest target is 10
  2758                           ;!		 -> mystring(COMRAM[10]), 
  2759                           ;!
  2760                           
  2761                           
  2762                           ;!
  2763                           ;!Critical Paths under _main in COMRAM
  2764                           ;!
  2765                           ;!    _strcmp->_GetString
  2766                           ;!    _Stopmusic->_ClearBuffer
  2767                           ;!    _Playmusic->_ClearBuffer
  2768                           ;!    _Mode2->___xxtofl
  2769                           ;!    ___xxtofl->_ADC_Read
  2770                           ;!    ___fltol->___xxtofl
  2771                           ;!    ___flsub->___xxtofl
  2772                           ;!    ___fladd->___xxtofl
  2773                           ;!    ___flmul->___xxtofl
  2774                           ;!    _strstr->_strncmp
  2775                           ;!    _UART_Write_Text->_UART_Write
  2776                           ;!
  2777                           ;!Critical Paths under _Lo_ISR in COMRAM
  2778                           ;!
  2779                           ;!    _MyusartRead->___awmod
  2780                           ;!
  2781                           ;!Critical Paths under _tc_int in COMRAM
  2782                           ;!
  2783                           ;!    _tc_int->___aldiv
  2784                           ;!    ___aldiv->___wmul
  2785                           ;!
  2786                           ;!Critical Paths under _main in BANK0
  2787                           ;!
  2788                           ;!    _main->_Mode2
  2789                           ;!    _Mode3->_strstr
  2790                           ;!    _Mode2->___fltol
  2791                           ;!    ___fltol->___flsub
  2792                           ;!    ___flsub->___fladd
  2793                           ;!    ___fladd->___xxtofl
  2794                           ;!    ___flmul->___xxtofl
  2795                           ;!    _Mode1->_strstr
  2796                           ;!
  2797                           ;!Critical Paths under _Lo_ISR in BANK0
  2798                           ;!
  2799                           ;!    None.
  2800                           ;!
  2801                           ;!Critical Paths under _tc_int in BANK0
  2802                           ;!
  2803                           ;!    None.
  2804                           ;!
  2805                           ;!Critical Paths under _main in BANK1
  2806                           ;!
  2807                           ;!    None.
  2808                           ;!
  2809                           ;!Critical Paths under _Lo_ISR in BANK1
  2810                           ;!
  2811                           ;!    None.
  2812                           ;!
  2813                           ;!Critical Paths under _tc_int in BANK1
  2814                           ;!
  2815                           ;!    None.
  2816                           ;!
  2817                           ;!Critical Paths under _main in BANK2
  2818                           ;!
  2819                           ;!    None.
  2820                           ;!
  2821                           ;!Critical Paths under _Lo_ISR in BANK2
  2822                           ;!
  2823                           ;!    None.
  2824                           ;!
  2825                           ;!Critical Paths under _tc_int in BANK2
  2826                           ;!
  2827                           ;!    None.
  2828                           ;!
  2829                           ;!Critical Paths under _main in BANK3
  2830                           ;!
  2831                           ;!    None.
  2832                           ;!
  2833                           ;!Critical Paths under _Lo_ISR in BANK3
  2834                           ;!
  2835                           ;!    None.
  2836                           ;!
  2837                           ;!Critical Paths under _tc_int in BANK3
  2838                           ;!
  2839                           ;!    None.
  2840                           ;!
  2841                           ;!Critical Paths under _main in BANK4
  2842                           ;!
  2843                           ;!    None.
  2844                           ;!
  2845                           ;!Critical Paths under _Lo_ISR in BANK4
  2846                           ;!
  2847                           ;!    None.
  2848                           ;!
  2849                           ;!Critical Paths under _tc_int in BANK4
  2850                           ;!
  2851                           ;!    None.
  2852                           ;!
  2853                           ;!Critical Paths under _main in BANK5
  2854                           ;!
  2855                           ;!    None.
  2856                           ;!
  2857                           ;!Critical Paths under _Lo_ISR in BANK5
  2858                           ;!
  2859                           ;!    None.
  2860                           ;!
  2861                           ;!Critical Paths under _tc_int in BANK5
  2862                           ;!
  2863                           ;!    None.
  2864                           
  2865 ;;
  2866 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2867 ;;
  2868                           
  2869                           ;!
  2870                           ;!Call Graph Tables:
  2871                           ;!
  2872                           ;! ---------------------------------------------------------------------------------
  2873                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2874                           ;! ---------------------------------------------------------------------------------
  2875                           ;! (0) _main                                                 0     0      0   32233
  2876                           ;!                        _ClearBuffer
  2877                           ;!                          _GetString
  2878                           ;!                              _Mode1
  2879                           ;!                              _Mode2
  2880                           ;!                              _Mode3
  2881                           ;!                          _Playmusic
  2882                           ;!                  _SYSTEM_Initialize
  2883                           ;!                          _Stopmusic
  2884                           ;!                             _strcmp
  2885                           ;!                             _strstr
  2886                           ;! ---------------------------------------------------------------------------------
  2887                           ;! (1) _strcmp                                               7     3      4     872
  2888                           ;!                                             41 COMRAM     7     3      4
  2889                           ;!                          _GetString (ARG)
  2890                           ;! ---------------------------------------------------------------------------------
  2891                           ;! (1) _Stopmusic                                            0     0      0      68
  2892                           ;!                        _ClearBuffer
  2893                           ;! ---------------------------------------------------------------------------------
  2894                           ;! (1) _SYSTEM_Initialize                                    0     0      0       0
  2895                           ;!                     _ADC_Initialize
  2896                           ;!                    _CCP1_Initialize
  2897                           ;!               _INTERRUPT_Initialize
  2898                           ;!              _OSCILLATOR_Initialize
  2899                           ;!                    _UART_Initialize
  2900                           ;! ---------------------------------------------------------------------------------
  2901                           ;! (2) _UART_Initialize                                      0     0      0       0
  2902                           ;! ---------------------------------------------------------------------------------
  2903                           ;! (2) _OSCILLATOR_Initialize                                0     0      0       0
  2904                           ;! ---------------------------------------------------------------------------------
  2905                           ;! (2) _INTERRUPT_Initialize                                 0     0      0       0
  2906                           ;! ---------------------------------------------------------------------------------
  2907                           ;! (2) _CCP1_Initialize                                      0     0      0       0
  2908                           ;! ---------------------------------------------------------------------------------
  2909                           ;! (2) _ADC_Initialize                                       0     0      0       0
  2910                           ;! ---------------------------------------------------------------------------------
  2911                           ;! (1) _Playmusic                                            0     0      0      68
  2912                           ;!                        _ClearBuffer
  2913                           ;! ---------------------------------------------------------------------------------
  2914                           ;! (1) _Mode3                                                0     0      0    4743
  2915                           ;!                        _ClearBuffer
  2916                           ;!                          _GetString
  2917                           ;!                             _strstr
  2918                           ;! ---------------------------------------------------------------------------------
  2919                           ;! (1) _Mode2                                                7     7      0   16732
  2920                           ;!                                             44 BANK0      7     7      0
  2921                           ;!                           _ADC_Read
  2922                           ;!                        _ClearBuffer
  2923                           ;!                          _GetString
  2924                           ;!                    _UART_Write_Text
  2925                           ;!                            ___awdiv
  2926                           ;!                            ___fladd
  2927                           ;!                            ___flmul
  2928                           ;!                            ___flsub
  2929                           ;!                            ___fltol
  2930                           ;!                           ___xxtofl
  2931                           ;!                             _strstr
  2932                           ;! ---------------------------------------------------------------------------------
  2933                           ;! (2) ___xxtofl                                            14    10      4     746
  2934                           ;!                                             45 COMRAM     8     4      4
  2935                           ;!                                              0 BANK0      6     6      0
  2936                           ;!                           _ADC_Read (ARG)
  2937                           ;! ---------------------------------------------------------------------------------
  2938                           ;! (2) ___fltol                                             10     6      4     381
  2939                           ;!                                             34 BANK0     10     6      4
  2940                           ;!                            ___fladd (ARG)
  2941                           ;!                            ___flsub (ARG)
  2942                           ;!                           ___xxtofl (ARG)
  2943                           ;! ---------------------------------------------------------------------------------
  2944                           ;! (2) ___flsub                                              8     0      8    3827
  2945                           ;!                                             26 BANK0      8     0      8
  2946                           ;!                            ___fladd
  2947                           ;!                           ___xxtofl (ARG)
  2948                           ;! ---------------------------------------------------------------------------------
  2949                           ;! (3) ___fladd                                             20    12      8    3442
  2950                           ;!                                              6 BANK0     20    12      8
  2951                           ;!                           ___xxtofl (ARG)
  2952                           ;! ---------------------------------------------------------------------------------
  2953                           ;! (2) ___flmul                                             25    17      8    2513
  2954                           ;!                                              6 BANK0     25    17      8
  2955                           ;!                           _ADC_Read (ARG)
  2956                           ;!                           ___xxtofl (ARG)
  2957                           ;! ---------------------------------------------------------------------------------
  2958                           ;! (2) ___awdiv                                              8     4      4     652
  2959                           ;!                                             39 COMRAM     8     4      4
  2960                           ;! ---------------------------------------------------------------------------------
  2961                           ;! (2) _ADC_Read                                             6     4      2      99
  2962                           ;!                                             39 COMRAM     6     4      2
  2963                           ;! ---------------------------------------------------------------------------------
  2964                           ;! (1) _Mode1                                                0     0      0    5007
  2965                           ;!                        _ClearBuffer
  2966                           ;!                          _GetString
  2967                           ;!                    _UART_Write_Text
  2968                           ;!                             _strstr
  2969                           ;! ---------------------------------------------------------------------------------
  2970                           ;! (1) _strstr                                               6     2      4    4675
  2971                           ;!                                              0 BANK0      6     2      4
  2972                           ;!                          _GetString (ARG)
  2973                           ;!                             _strchr
  2974                           ;!                             _strlen
  2975                           ;!                            _strncmp
  2976                           ;! ---------------------------------------------------------------------------------
  2977                           ;! (2) _strncmp                                             13     7      6     595
  2978                           ;!                                             39 COMRAM    13     7      6
  2979                           ;! ---------------------------------------------------------------------------------
  2980                           ;! (2) _strlen                                               6     4      2     220
  2981                           ;!                                             39 COMRAM     6     4      2
  2982                           ;! ---------------------------------------------------------------------------------
  2983                           ;! (2) _strchr                                               5     1      4     304
  2984                           ;!                                             39 COMRAM     5     1      4
  2985                           ;! ---------------------------------------------------------------------------------
  2986                           ;! (2) _UART_Write_Text                                      6     4      2     264
  2987                           ;!                                             40 COMRAM     6     4      2
  2988                           ;!                         _UART_Write
  2989                           ;! ---------------------------------------------------------------------------------
  2990                           ;! (3) _UART_Write                                           1     1      0      22
  2991                           ;!                                             39 COMRAM     1     1      0
  2992                           ;! ---------------------------------------------------------------------------------
  2993                           ;! (2) _GetString                                            2     0      2       0
  2994                           ;!                                             39 COMRAM     2     0      2
  2995                           ;! ---------------------------------------------------------------------------------
  2996                           ;! (2) _ClearBuffer                                          2     2      0      68
  2997                           ;!                                             39 COMRAM     2     2      0
  2998                           ;! ---------------------------------------------------------------------------------
  2999                           ;! Estimated maximum stack depth 3
  3000                           ;! ---------------------------------------------------------------------------------
  3001                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3002                           ;! ---------------------------------------------------------------------------------
  3003                           ;! (4) _Lo_ISR                                               5     5      0     470
  3004                           ;!                                             34 COMRAM     5     5      0
  3005                           ;!                        _MyusartRead
  3006                           ;! ---------------------------------------------------------------------------------
  3007                           ;! (5) _MyusartRead                                          0     0      0     470
  3008                           ;!                            ___awmod
  3009                           ;!                       i1_UART_Write
  3010                           ;! ---------------------------------------------------------------------------------
  3011                           ;! (6) i1_UART_Write                                         1     1      0      22
  3012                           ;!                                             28 COMRAM     1     1      0
  3013                           ;! ---------------------------------------------------------------------------------
  3014                           ;! (6) ___awmod                                              6     2      4     448
  3015                           ;!                                             28 COMRAM     6     2      4
  3016                           ;! ---------------------------------------------------------------------------------
  3017                           ;! Estimated maximum stack depth 6
  3018                           ;! ---------------------------------------------------------------------------------
  3019                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3020                           ;! ---------------------------------------------------------------------------------
  3021                           ;! (7) _tc_int                                               8     8      0    1471
  3022                           ;!                                             20 COMRAM     8     8      0
  3023                           ;!                            ___aldiv
  3024                           ;!                             ___wmul
  3025                           ;!                          i2___awdiv
  3026                           ;! ---------------------------------------------------------------------------------
  3027                           ;! (8) i2___awdiv                                            8     4      4     404
  3028                           ;!                                              0 COMRAM     8     4      4
  3029                           ;! ---------------------------------------------------------------------------------
  3030                           ;! (8) ___wmul                                               6     2      4     615
  3031                           ;!                                              0 COMRAM     6     2      4
  3032                           ;! ---------------------------------------------------------------------------------
  3033                           ;! (8) ___aldiv                                             14     6      8     452
  3034                           ;!                                              6 COMRAM    14     6      8
  3035                           ;!                             ___wmul (ARG)
  3036                           ;! ---------------------------------------------------------------------------------
  3037                           ;! Estimated maximum stack depth 8
  3038                           ;! ---------------------------------------------------------------------------------
  3039                           ;!
  3040                           ;! Call Graph Graphs:
  3041                           ;!
  3042                           ;! _main (ROOT)
  3043                           ;!   _ClearBuffer
  3044                           ;!   _GetString
  3045                           ;!   _Mode1
  3046                           ;!     _ClearBuffer
  3047                           ;!     _GetString
  3048                           ;!     _UART_Write_Text
  3049                           ;!       _UART_Write
  3050                           ;!     _strstr
  3051                           ;!       _GetString (ARG)
  3052                           ;!       _strchr (ARG)
  3053                           ;!       _strlen (ARG)
  3054                           ;!       _strncmp (ARG)
  3055                           ;!   _Mode2
  3056                           ;!     _ADC_Read
  3057                           ;!     _ClearBuffer
  3058                           ;!     _GetString
  3059                           ;!     _UART_Write_Text
  3060                           ;!       _UART_Write
  3061                           ;!     ___awdiv
  3062                           ;!     ___fladd
  3063                           ;!       ___xxtofl (ARG)
  3064                           ;!         _ADC_Read (ARG)
  3065                           ;!     ___flmul
  3066                           ;!       _ADC_Read (ARG)
  3067                           ;!       ___xxtofl (ARG)
  3068                           ;!         _ADC_Read (ARG)
  3069                           ;!     ___flsub
  3070                           ;!       ___fladd
  3071                           ;!         ___xxtofl (ARG)
  3072                           ;!           _ADC_Read (ARG)
  3073                           ;!       ___xxtofl (ARG)
  3074                           ;!         _ADC_Read (ARG)
  3075                           ;!     ___fltol
  3076                           ;!       ___fladd (ARG)
  3077                           ;!         ___xxtofl (ARG)
  3078                           ;!           _ADC_Read (ARG)
  3079                           ;!       ___flsub (ARG)
  3080                           ;!         ___fladd
  3081                           ;!           ___xxtofl (ARG)
  3082                           ;!             _ADC_Read (ARG)
  3083                           ;!         ___xxtofl (ARG)
  3084                           ;!           _ADC_Read (ARG)
  3085                           ;!       ___xxtofl (ARG)
  3086                           ;!         _ADC_Read (ARG)
  3087                           ;!     ___xxtofl
  3088                           ;!       _ADC_Read (ARG)
  3089                           ;!     _strstr
  3090                           ;!       _GetString (ARG)
  3091                           ;!       _strchr (ARG)
  3092                           ;!       _strlen (ARG)
  3093                           ;!       _strncmp (ARG)
  3094                           ;!   _Mode3
  3095                           ;!     _ClearBuffer
  3096                           ;!     _GetString
  3097                           ;!     _strstr
  3098                           ;!       _GetString (ARG)
  3099                           ;!       _strchr (ARG)
  3100                           ;!       _strlen (ARG)
  3101                           ;!       _strncmp (ARG)
  3102                           ;!   _Playmusic
  3103                           ;!     _ClearBuffer
  3104                           ;!   _SYSTEM_Initialize
  3105                           ;!     _ADC_Initialize
  3106                           ;!     _CCP1_Initialize
  3107                           ;!     _INTERRUPT_Initialize
  3108                           ;!     _OSCILLATOR_Initialize
  3109                           ;!     _UART_Initialize
  3110                           ;!   _Stopmusic
  3111                           ;!     _ClearBuffer
  3112                           ;!   _strcmp
  3113                           ;!     _GetString (ARG)
  3114                           ;!   _strstr
  3115                           ;!     _GetString (ARG)
  3116                           ;!     _strchr (ARG)
  3117                           ;!     _strlen (ARG)
  3118                           ;!     _strncmp (ARG)
  3119                           ;!
  3120                           ;! _Lo_ISR (ROOT)
  3121                           ;!   _MyusartRead
  3122                           ;!     ___awmod
  3123                           ;!     i1_UART_Write
  3124                           ;!
  3125                           ;! _tc_int (ROOT)
  3126                           ;!   ___aldiv
  3127                           ;!     ___wmul (ARG)
  3128                           ;!   ___wmul
  3129                           ;!   i2___awdiv
  3130                           ;!
  3131                           
  3132                           ;! Address spaces:
  3133                           
  3134                           ;!Name               Size   Autos  Total    Cost      Usage
  3135                           ;!BIGRAM             5F3      0       0      16        0.0%
  3136                           ;!EEDATA             100      0       0       0        0.0%
  3137                           ;!BITBANK4           100      0       0      11        0.0%
  3138                           ;!BANK4              100      0       0      12        0.0%
  3139                           ;!BITBANK3           100      0       0       9        0.0%
  3140                           ;!BANK3              100      0       0      10        0.0%
  3141                           ;!BITBANK2           100      0       0       7        0.0%
  3142                           ;!BANK2              100      0       0       8        0.0%
  3143                           ;!BITBANK1           100      0       0       5        0.0%
  3144                           ;!BANK1              100      0      F0       6       93.8%
  3145                           ;!BITBANK5            F4      0       0      15        0.0%
  3146                           ;!BANK5               F4      0       0      13        0.0%
  3147                           ;!BITBANK0            80      0       0       3        0.0%
  3148                           ;!BANK0               80     33      3F       4       49.2%
  3149                           ;!BITCOMRAM           7E      0       0       0        0.0%
  3150                           ;!COMRAM              7E     35      57       1       69.0%
  3151                           ;!BITSFR_5             0      0       0     200        0.0%
  3152                           ;!SFR_5                0      0       0     200        0.0%
  3153                           ;!BITSFR_4             0      0       0     200        0.0%
  3154                           ;!SFR_4                0      0       0     200        0.0%
  3155                           ;!BITSFR_3             0      0       0     200        0.0%
  3156                           ;!SFR_3                0      0       0     200        0.0%
  3157                           ;!BITSFR_2             0      0       0     200        0.0%
  3158                           ;!SFR_2                0      0       0     200        0.0%
  3159                           ;!BITSFR_1             0      0       0     200        0.0%
  3160                           ;!SFR_1                0      0       0     200        0.0%
  3161                           ;!BITSFR               0      0       0     200        0.0%
  3162                           ;!SFR                  0      0       0     200        0.0%
  3163                           ;!STACK                0      0       0       2        0.0%
  3164                           ;!NULL                 0      0       0       0        0.0%
  3165                           ;!ABS                  0      0     186      14        0.0%
  3166                           ;!DATA                 0      0     186      17        0.0%
  3167                           ;!CODE                 0      0       0       0        0.0%
  3168                           
  3169                           	global	_main
  3170                           
  3171 ;; *************** function _main *****************
  3172 ;; Defined at:
  3173 ;;		line 372 in file "main.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;		None
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;		None
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      void 
  3180 ;; Registers used:
  3181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3187 ;;      Params:         0       0       0       0       0       0       0
  3188 ;;      Locals:         0       0       0       0       0       0       0
  3189 ;;      Temps:          0       0       0       0       0       0       0
  3190 ;;      Totals:         0       0       0       0       0       0       0
  3191 ;;Total ram usage:        0 bytes
  3192 ;; Hardware stack levels required when called:    8
  3193 ;; This function calls:
  3194 ;;		_ClearBuffer
  3195 ;;		_GetString
  3196 ;;		_Mode1
  3197 ;;		_Mode2
  3198 ;;		_Mode3
  3199 ;;		_Playmusic
  3200 ;;		_SYSTEM_Initialize
  3201 ;;		_Stopmusic
  3202 ;;		_strcmp
  3203 ;;		_strstr
  3204 ;; This function is called by:
  3205 ;;		Startup code after reset
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           psect	text0,class=CODE,space=0,reloc=2,group=0
  3209                           	file	"main.c"
  3210                           	line	372
  3211                           global __ptext0
  3212                           __ptext0:
  3213  001D50                     psect	text0
  3214                           	file	"main.c"
  3215                           	line	372
  3216                           	global	__size_of_main
  3217                           	__size_of_main	equ	__end_of_main-_main
  3218  0000                     	
  3219                           _main:
  3220  001D50                     ;incstack = 0
  3221                           	opt	stack 23
  3222                           	line	374
  3223                           	
  3224                           l4257:
  3225  001D50                     ;main.c: 374:     SYSTEM_Initialize() ;
  3226                           	call	_SYSTEM_Initialize	;wreg free
  3227  001D50  EC2D  F016         	goto	l4259
  3228  001D54  EFAC  F00E         	line	375
  3229                           ;main.c: 375:     while(1) {
  3230                           	
  3231                           l316:
  3232  001D58                     	line	376
  3233                           	
  3234                           l4259:
  3235  001D58                     ;main.c: 376:         if(strstr(GetString(), "clear") != ((void*)0))
  3236                           	call	_GetString	;wreg free
  3237  001D58  EC38  F016         	movff	0+?_GetString,(strstr@h)
  3238  001D5C  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  3239  001D60  C029  F081         		movlw	low(STR_20)
  3240  001D64  0E21               	movlb	0	; () banked
  3241  001D66  0100               	movwf	((strstr@n))&0ffh
  3242  001D68  6F82               	movlw	high(STR_20)
  3243  001D6A  0E06               	movwf	((strstr@n+1))&0ffh
  3244  001D6C  6F83               
  3245                           	call	_strstr	;wreg free
  3246  001D6E  EC1A  F013         	movlb	0	; () banked
  3247  001D72  0100               	movf	(0+?_strstr)&0ffh,w
  3248  001D74  5180               iorwf	(1+?_strstr)&0ffh,w
  3249  001D76  1181               	btfsc	status,2
  3250  001D78  B4D8               	goto	u4881
  3251  001D7A  EFC1  F00E         	goto	u4880
  3252  001D7E  EFC3  F00E         
  3253                           u4881:
  3254  001D82                     	goto	l4263
  3255  001D82  EFC7  F00E         u4880:
  3256  001D86                     	line	377
  3257                           	
  3258                           l4261:; BSR set to: 0
  3259  001D86                     
  3260                           ;main.c: 377:             ClearBuffer();
  3261                           	call	_ClearBuffer	;wreg free
  3262  001D86  EC71  F014         	goto	l4259
  3263  001D8A  EFAC  F00E         	line	378
  3264                           ;main.c: 378:         else if(!strcmp(GetString(), "blink"))
  3265                           	
  3266                           l317:
  3267  001D8E                     	
  3268                           l4263:
  3269  001D8E                     	call	_GetString	;wreg free
  3270  001D8E  EC38  F016         	movff	0+?_GetString,(c:strcmp@l)
  3271  001D92  C028  F02A         	movff	1+?_GetString,(c:strcmp@l+1)
  3272  001D96  C029  F02B         		movlw	low(STR_22)
  3273  001D9A  0E1B               	movwf	((c:strcmp@r)),c
  3274  001D9C  6E2C               	movlw	high(STR_22)
  3275  001D9E  0E06               	movwf	((c:strcmp@r+1)),c
  3276  001DA0  6E2D               
  3277                           	call	_strcmp	;wreg free
  3278  001DA2  ECF5  F013         	movf	(0+?_strcmp),c,w
  3279  001DA6  502A               iorwf	(1+?_strcmp),c,w
  3280  001DA8  102B               	btfss	status,2
  3281  001DAA  A4D8               	goto	u4891
  3282  001DAC  EFDA  F00E         	goto	u4890
  3283  001DB0  EFDC  F00E         
  3284                           u4891:
  3285  001DB4                     	goto	l4267
  3286  001DB4  EFE0  F00E         u4890:
  3287  001DB8                     	line	379
  3288                           	
  3289                           l4265:
  3290  001DB8                     ;main.c: 379:             Mode1();
  3291                           	call	_Mode1	;wreg free
  3292  001DB8  ECE1  F005         	goto	l4259
  3293  001DBC  EFAC  F00E         	line	380
  3294                           ;main.c: 380:         else if(!strcmp(GetString(), "breath"))
  3295                           	
  3296                           l319:
  3297  001DC0                     	
  3298                           l4267:
  3299  001DC0                     	call	_GetString	;wreg free
  3300  001DC0  EC38  F016         	movff	0+?_GetString,(c:strcmp@l)
  3301  001DC4  C028  F02A         	movff	1+?_GetString,(c:strcmp@l+1)
  3302  001DC8  C029  F02B         		movlw	low(STR_24)
  3303  001DCC  0E08               	movwf	((c:strcmp@r)),c
  3304  001DCE  6E2C               	movlw	high(STR_24)
  3305  001DD0  0E06               	movwf	((c:strcmp@r+1)),c
  3306  001DD2  6E2D               
  3307                           	call	_strcmp	;wreg free
  3308  001DD4  ECF5  F013         	movf	(0+?_strcmp),c,w
  3309  001DD8  502A               iorwf	(1+?_strcmp),c,w
  3310  001DDA  102B               	btfss	status,2
  3311  001DDC  A4D8               	goto	u4901
  3312  001DDE  EFF3  F00E         	goto	u4900
  3313  001DE2  EFF5  F00E         
  3314                           u4901:
  3315  001DE6                     	goto	l4271
  3316  001DE6  EFF9  F00E         u4900:
  3317  001DEA                     	line	381
  3318                           	
  3319                           l4269:
  3320  001DEA                     ;main.c: 381:             Mode2();
  3321                           	call	_Mode2	;wreg free
  3322  001DEA  EC69  F00C         	goto	l4259
  3323  001DEE  EFAC  F00E         	line	382
  3324                           ;main.c: 382:         else if(!strcmp(GetString(), "music"))
  3325                           	
  3326                           l321:
  3327  001DF2                     	
  3328                           l4271:
  3329  001DF2                     	call	_GetString	;wreg free
  3330  001DF2  EC38  F016         	movff	0+?_GetString,(c:strcmp@l)
  3331  001DF6  C028  F02A         	movff	1+?_GetString,(c:strcmp@l+1)
  3332  001DFA  C029  F02B         		movlw	low(STR_26)
  3333  001DFE  0E15               	movwf	((c:strcmp@r)),c
  3334  001E00  6E2C               	movlw	high(STR_26)
  3335  001E02  0E06               	movwf	((c:strcmp@r+1)),c
  3336  001E04  6E2D               
  3337                           	call	_strcmp	;wreg free
  3338  001E06  ECF5  F013         	movf	(0+?_strcmp),c,w
  3339  001E0A  502A               iorwf	(1+?_strcmp),c,w
  3340  001E0C  102B               	btfss	status,2
  3341  001E0E  A4D8               	goto	u4911
  3342  001E10  EF0C  F00F         	goto	u4910
  3343  001E14  EF0E  F00F         
  3344                           u4911:
  3345  001E18                     	goto	l4275
  3346  001E18  EF12  F00F         u4910:
  3347  001E1C                     	line	383
  3348                           	
  3349                           l4273:
  3350  001E1C                     ;main.c: 383:             Mode3();
  3351                           	call	_Mode3	;wreg free
  3352  001E1C  ECFE  F00F         	goto	l4259
  3353  001E20  EFAC  F00E         	line	384
  3354                           ;main.c: 384:         else if(!strcmp(GetString(), "p"))
  3355                           	
  3356                           l323:
  3357  001E24                     	
  3358                           l4275:
  3359  001E24                     	call	_GetString	;wreg free
  3360  001E24  EC38  F016         	movff	0+?_GetString,(c:strcmp@l)
  3361  001E28  C028  F02A         	movff	1+?_GetString,(c:strcmp@l+1)
  3362  001E2C  C029  F02B         		movlw	low(STR_28)
  3363  001E30  0E35               	movwf	((c:strcmp@r)),c
  3364  001E32  6E2C               	movlw	high(STR_28)
  3365  001E34  0E06               	movwf	((c:strcmp@r+1)),c
  3366  001E36  6E2D               
  3367                           	call	_strcmp	;wreg free
  3368  001E38  ECF5  F013         	movf	(0+?_strcmp),c,w
  3369  001E3C  502A               iorwf	(1+?_strcmp),c,w
  3370  001E3E  102B               	btfss	status,2
  3371  001E40  A4D8               	goto	u4921
  3372  001E42  EF25  F00F         	goto	u4920
  3373  001E46  EF27  F00F         
  3374                           u4921:
  3375  001E4A                     	goto	l4279
  3376  001E4A  EF2B  F00F         u4920:
  3377  001E4E                     	line	385
  3378                           	
  3379                           l4277:
  3380  001E4E                     ;main.c: 385:             Playmusic();
  3381                           	call	_Playmusic	;wreg free
  3382  001E4E  ECA6  F014         	goto	l4259
  3383  001E52  EFAC  F00E         	line	386
  3384                           ;main.c: 386:         else if(!strcmp(GetString(), "s"))
  3385                           	
  3386                           l325:
  3387  001E56                     	
  3388                           l4279:
  3389  001E56                     	call	_GetString	;wreg free
  3390  001E56  EC38  F016         	movff	0+?_GetString,(c:strcmp@l)
  3391  001E5A  C028  F02A         	movff	1+?_GetString,(c:strcmp@l+1)
  3392  001E5E  C029  F02B         		movlw	low(STR_30)
  3393  001E62  0E39               	movwf	((c:strcmp@r)),c
  3394  001E64  6E2C               	movlw	high(STR_30)
  3395  001E66  0E06               	movwf	((c:strcmp@r+1)),c
  3396  001E68  6E2D               
  3397                           	call	_strcmp	;wreg free
  3398  001E6A  ECF5  F013         	movf	(0+?_strcmp),c,w
  3399  001E6E  502A               iorwf	(1+?_strcmp),c,w
  3400  001E70  102B               	btfss	status,2
  3401  001E72  A4D8               	goto	u4931
  3402  001E74  EF3E  F00F         	goto	u4930
  3403  001E78  EF40  F00F         
  3404                           u4931:
  3405  001E7C                     	goto	l4259
  3406  001E7C  EFAC  F00E         u4930:
  3407  001E80                     	line	387
  3408                           	
  3409                           l4281:
  3410  001E80                     ;main.c: 387:             Stopmusic();
  3411                           	call	_Stopmusic	;wreg free
  3412  001E80  ECDE  F015         	goto	l4259
  3413  001E84  EFAC  F00E         	
  3414                           l327:
  3415  001E88                     	goto	l4259
  3416  001E88  EFAC  F00E         	
  3417                           l326:
  3418  001E8C                     	goto	l4259
  3419  001E8C  EFAC  F00E         	
  3420                           l324:
  3421  001E90                     	goto	l4259
  3422  001E90  EFAC  F00E         	
  3423                           l322:
  3424  001E94                     	goto	l4259
  3425  001E94  EFAC  F00E         	
  3426                           l320:
  3427  001E98                     	goto	l4259
  3428  001E98  EFAC  F00E         	
  3429                           l318:
  3430  001E9C                     	goto	l4259
  3431  001E9C  EFAC  F00E         	line	388
  3432                           ;main.c: 388:     }
  3433                           	
  3434                           l328:
  3435  001EA0                     	goto	l4259
  3436  001EA0  EFAC  F00E         	
  3437                           l329:
  3438  001EA4                     	line	391
  3439                           ;main.c: 389:     return;
  3440                           	
  3441                           l330:
  3442  001EA4                     	global	start
  3443                           	goto	start
  3444  001EA4  EF3C  F000         	opt stack 0
  3445                           GLOBAL	__end_of_main
  3446                           	__end_of_main:
  3447  001EA8                     	signat	_main,89
  3448                           	global	_strcmp
  3449                           
  3450 ;; *************** function _strcmp *****************
  3451 ;; Defined at:
  3452 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcmp.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  l               2   41[COMRAM] PTR const unsigned char 
  3455 ;;		 -> mystring(10), 
  3456 ;;  r               2   43[COMRAM] PTR const unsigned char 
  3457 ;;		 -> STR_30(2), STR_28(2), STR_26(6), STR_24(7), 
  3458 ;;		 -> STR_22(6), 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  2   41[COMRAM] int 
  3463 ;; Registers used:
  3464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3470 ;;      Params:         4       0       0       0       0       0       0
  3471 ;;      Locals:         0       0       0       0       0       0       0
  3472 ;;      Temps:          3       0       0       0       0       0       0
  3473 ;;      Totals:         7       0       0       0       0       0       0
  3474 ;;Total ram usage:        7 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; Hardware stack levels required when called:    5
  3477 ;; This function calls:
  3478 ;;		Nothing
  3479 ;; This function is called by:
  3480 ;;		_main
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           psect	text1,class=CODE,space=0,reloc=2,group=2
  3484                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcmp.c"
  3485                           	line	3
  3486                           global __ptext1
  3487                           __ptext1:
  3488  0027EA                     psect	text1
  3489                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcmp.c"
  3490                           	line	3
  3491                           	global	__size_of_strcmp
  3492                           	__size_of_strcmp	equ	__end_of_strcmp-_strcmp
  3493  0000                     	
  3494                           _strcmp:
  3495  0027EA                     ;incstack = 0
  3496                           	opt	stack 25
  3497                           	line	5
  3498                           	
  3499                           l3283:
  3500  0027EA                     	goto	l3287
  3501  0027EA  EFFD  F013         	
  3502                           l1008:
  3503  0027EE                     	
  3504                           l3285:
  3505  0027EE                     	infsnz	((c:strcmp@l)),c
  3506  0027EE  4A2A               	incf	((c:strcmp@l+1)),c
  3507  0027F0  2A2B               	infsnz	((c:strcmp@r)),c
  3508  0027F2  4A2C               	incf	((c:strcmp@r+1)),c
  3509  0027F4  2A2D               	goto	l3287
  3510  0027F6  EFFD  F013         	
  3511                           l1007:
  3512  0027FA                     	
  3513                           l3287:
  3514  0027FA                     	movff	(c:strcmp@l),fsr2l
  3515  0027FA  C02A  FFD9         	movff	(c:strcmp@l+1),fsr2h
  3516  0027FE  C02B  FFDA         	movf	indf2,w
  3517  002802  50DF               	movwf	(??_strcmp+0+0)&0ffh,c
  3518  002804  6E2E               	movff	(c:strcmp@r),tblptrl
  3519  002806  C02C  FFF6         	movff	(c:strcmp@r+1),tblptrh
  3520  00280A  C02D  FFF7         	if	0	;tblptru may be non-zero
  3521  00280E                     	clrf	tblptru
  3523  00280E                     	if	0	;tblptru may be non-zero
  3524  00280E                     	global __mediumconst
  3525                           movlw	low highword(__mediumconst)
  3528  00280E                     	tblrd	*
  3529  00280E  0008               	
  3530                           	movf	tablat,w
  3531  002810  50F5               	xorwf	((??_strcmp+0+0)),c,w
  3532  002812  182E               
  3533                           	btfss	status,2
  3534  002814  A4D8               	goto	u3231
  3535  002816  EF0F  F014         	goto	u3230
  3536  00281A  EF11  F014         u3231:
  3537  00281E                     	goto	l3291
  3538  00281E  EF21  F014         u3230:
  3539  002822                     	
  3540                           l3289:
  3541  002822                     	movff	(c:strcmp@l),fsr2l
  3542  002822  C02A  FFD9         	movff	(c:strcmp@l+1),fsr2h
  3543  002826  C02B  FFDA         	movf	indf2,w
  3544  00282A  50DF               	btfss	status,2
  3545  00282C  A4D8               	goto	u3241
  3546  00282E  EF1B  F014         	goto	u3240
  3547  002832  EF1D  F014         u3241:
  3548  002836                     	goto	l3285
  3549  002836  EFF7  F013         u3240:
  3550  00283A                     	goto	l3291
  3551  00283A  EF21  F014         	
  3552                           l1010:
  3553  00283E                     	goto	l3291
  3554  00283E  EF21  F014         	
  3555                           l1011:
  3556  002842                     	line	6
  3557                           	
  3558                           l3291:
  3559  002842                     	movff	(c:strcmp@r),tblptrl
  3560  002842  C02C  FFF6         	movff	(c:strcmp@r+1),tblptrh
  3561  002846  C02D  FFF7         	if	0	;tblptru may be non-zero
  3562  00284A                     	clrf	tblptru
  3564  00284A                     	if	0	;tblptru may be non-zero
  3565  00284A                     	global __mediumconst
  3566                           movlw	low highword(__mediumconst)
  3569  00284A                     	tblrd	*
  3570  00284A  0008               	
  3571                           	movf	tablat,w
  3572  00284C  50F5               	movwf	(??_strcmp+0+0)&0ffh,c
  3573  00284E  6E2E               	clrf	(??_strcmp+0+0+1)&0ffh,c
  3574  002850  6A2F               
  3575                           	comf	(??_strcmp+0+0),c
  3576  002852  1E2E               	comf	(??_strcmp+0+1),c
  3577  002854  1E2F               	infsnz	(??_strcmp+0+0),c
  3578  002856  4A2E               	incf	(??_strcmp+0+1),c
  3579  002858  2A2F               	movff	(c:strcmp@l),fsr2l
  3580  00285A  C02A  FFD9         	movff	(c:strcmp@l+1),fsr2h
  3581  00285E  C02B  FFDA         	movf	indf2,w
  3582  002862  50DF               	movwf	(??_strcmp+2+0)&0ffh,c
  3583  002864  6E30               	movf	((??_strcmp+2+0)),c,w
  3584  002866  5030               	addwf	(??_strcmp+0+0),c,w
  3585  002868  242E               	movwf	((c:?_strcmp)),c
  3586  00286A  6E2A               	movlw	0
  3587  00286C  0E00               	addwfc	(??_strcmp+0+1),c,w
  3588  00286E  202F               	movwf	1+((c:?_strcmp)),c
  3589  002870  6E2B               	goto	l1012
  3590  002872  EF3B  F014         	
  3591                           l3293:
  3592  002876                     	line	7
  3593                           	
  3594                           l1012:
  3595  002876                     	return	;funcret
  3596  002876  0012               	opt stack 0
  3597                           GLOBAL	__end_of_strcmp
  3598                           	__end_of_strcmp:
  3599  002878                     	signat	_strcmp,8314
  3600                           	global	_Stopmusic
  3601                           
  3602 ;; *************** function _Stopmusic *****************
  3603 ;; Defined at:
  3604 ;;		line 362 in file "main.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;		None
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;		None
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3618 ;;      Params:         0       0       0       0       0       0       0
  3619 ;;      Locals:         0       0       0       0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0       0       0
  3621 ;;      Totals:         0       0       0       0       0       0       0
  3622 ;;Total ram usage:        0 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:    6
  3625 ;; This function calls:
  3626 ;;		_ClearBuffer
  3627 ;; This function is called by:
  3628 ;;		_main
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           psect	text2,class=CODE,space=0,reloc=2,group=0
  3632                           	file	"main.c"
  3633                           	line	362
  3634                           global __ptext2
  3635                           __ptext2:
  3636  002BBC                     psect	text2
  3637                           	file	"main.c"
  3638                           	line	362
  3639                           	global	__size_of_Stopmusic
  3640                           	__size_of_Stopmusic	equ	__end_of_Stopmusic-_Stopmusic
  3641  0000                     	
  3642                           _Stopmusic:
  3643  002BBC                     ;incstack = 0
  3644                           	opt	stack 24
  3645                           	line	363
  3646                           	
  3647                           l3269:
  3648  002BBC                     ;main.c: 363:     ClearBuffer();
  3649                           	call	_ClearBuffer	;wreg free
  3650  002BBC  EC71  F014         	line	364
  3651                           	
  3652                           l3271:
  3653  002BC0                     ;main.c: 364:     T2CONbits.TMR2ON = 0;
  3654                           	bcf	((c:4042)),c,2	;volatile
  3655  002BC0  94CA               	line	365
  3656                           	
  3657                           l3273:
  3658  002BC2                     ;main.c: 365:     T1CONbits.TMR1ON = 0;
  3659                           	bcf	((c:4045)),c,0	;volatile
  3660  002BC2  90CD               	line	366
  3661                           	
  3662                           l3275:
  3663  002BC4                     ;main.c: 366:     music_count = 0;
  3664                           	movlw	high(0)
  3665  002BC4  0E00               	movwf	((c:_music_count+1)),c
  3666  002BC6  6E47               	movlw	low(0)
  3667  002BC8  0E00               	movwf	((c:_music_count)),c
  3668  002BCA  6E46               	line	367
  3669                           	
  3670                           l3277:
  3671  002BCC                     ;main.c: 367:     music_index = 0;
  3672                           	movlw	high(0)
  3673  002BCC  0E00               	movwf	((c:_music_index+1)),c
  3674  002BCE  6E45               	movlw	low(0)
  3675  002BD0  0E00               	movwf	((c:_music_index)),c
  3676  002BD2  6E44               	line	368
  3677                           	
  3678                           l3279:
  3679  002BD4                     ;main.c: 368:     music_playing = 0;
  3680                           	movlw	high(0)
  3681  002BD4  0E00               	movlb	0	; () banked
  3682  002BD6  0100               	movwf	((_music_playing+1))&0ffh
  3683  002BD8  6FBE               	movlw	low(0)
  3684  002BDA  0E00               	movwf	((_music_playing))&0ffh
  3685  002BDC  6FBD               	line	369
  3686                           	
  3687                           l3281:; BSR set to: 0
  3688  002BDE                     
  3689                           ;main.c: 369:     ClearBuffer();
  3690                           	call	_ClearBuffer	;wreg free
  3691  002BDE  EC71  F014         	line	370
  3692                           	
  3693                           l311:
  3694  002BE2                     	return	;funcret
  3695  002BE2  0012               	opt stack 0
  3696                           GLOBAL	__end_of_Stopmusic
  3697                           	__end_of_Stopmusic:
  3698  002BE4                     	signat	_Stopmusic,89
  3699                           	global	_SYSTEM_Initialize
  3700                           
  3701 ;; *************** function _SYSTEM_Initialize *****************
  3702 ;; Defined at:
  3703 ;;		line 60 in file "setting_hardaware/setting.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3717 ;;      Params:         0       0       0       0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0
  3720 ;;      Totals:         0       0       0       0       0       0       0
  3721 ;;Total ram usage:        0 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    6
  3724 ;; This function calls:
  3725 ;;		_ADC_Initialize
  3726 ;;		_CCP1_Initialize
  3727 ;;		_INTERRUPT_Initialize
  3728 ;;		_OSCILLATOR_Initialize
  3729 ;;		_UART_Initialize
  3730 ;; This function is called by:
  3731 ;;		_main
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           psect	text3,class=CODE,space=0,reloc=2,group=0
  3735                           	file	"setting_hardaware/setting.c"
  3736                           	line	60
  3737                           global __ptext3
  3738                           __ptext3:
  3739  002C5A                     psect	text3
  3740                           	file	"setting_hardaware/setting.c"
  3741                           	line	60
  3742                           	global	__size_of_SYSTEM_Initialize
  3743                           	__size_of_SYSTEM_Initialize	equ	__end_of_SYSTEM_Initialize-_SYSTEM_Initialize
  3744  0000                     	
  3745                           _SYSTEM_Initialize:
  3746  002C5A                     ;incstack = 0
  3747                           	opt	stack 24
  3748                           	line	63
  3749                           	
  3750                           l1697:
  3751  002C5A                     ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  3752                           	call	_OSCILLATOR_Initialize	;wreg free
  3753  002C5A  EC3F  F016         	line	67
  3754                           	
  3755                           l1699:
  3756  002C5E                     ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  3757                           	call	_INTERRUPT_Initialize	;wreg free
  3758  002C5E  EC44  F016         	line	68
  3759                           	
  3760                           l1701:
  3761  002C62                     ;setting_hardaware/setting.c: 68:     UART_Initialize();
  3762                           	call	_UART_Initialize	;wreg free
  3763  002C62  ECF2  F015         	line	69
  3764                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
  3765                           	call	_CCP1_Initialize	;wreg free
  3766  002C66  EC4A  F016         	line	70
  3767                           	
  3768                           l1703:
  3769  002C6A                     ;setting_hardaware/setting.c: 70:     ADC_Initialize();
  3770                           	call	_ADC_Initialize	;wreg free
  3771  002C6A  EC21  F016         	line	71
  3772                           	
  3773                           l15:
  3774  002C6E                     	return	;funcret
  3775  002C6E  0012               	opt stack 0
  3776                           GLOBAL	__end_of_SYSTEM_Initialize
  3777                           	__end_of_SYSTEM_Initialize:
  3778  002C70                     	signat	_SYSTEM_Initialize,89
  3779                           	global	_UART_Initialize
  3780                           
  3781 ;; *************** function _UART_Initialize *****************
  3782 ;; Defined at:
  3783 ;;		line 7 in file "setting_hardaware/uart.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3797 ;;      Params:         0       0       0       0       0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0
  3800 ;;      Totals:         0       0       0       0       0       0       0
  3801 ;;Total ram usage:        0 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    5
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_SYSTEM_Initialize
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           psect	text4,class=CODE,space=0,reloc=2,group=0
  3811                           	file	"setting_hardaware/uart.c"
  3812                           	line	7
  3813                           global __ptext4
  3814                           __ptext4:
  3815  002BE4                     psect	text4
  3816                           	file	"setting_hardaware/uart.c"
  3817                           	line	7
  3818                           	global	__size_of_UART_Initialize
  3819                           	__size_of_UART_Initialize	equ	__end_of_UART_Initialize-_UART_Initialize
  3820  0000                     	
  3821                           _UART_Initialize:
  3822  002BE4                     ;incstack = 0
  3823                           	opt	stack 24
  3824                           	line	10
  3825                           	
  3826                           l1303:
  3827  002BE4                     ;setting_hardaware/uart.c: 10:     TRISCbits.TRISC6 = 1;
  3828                           	bsf	((c:3988)),c,6	;volatile
  3829  002BE4  8C94               	line	11
  3830                           ;setting_hardaware/uart.c: 11:     TRISCbits.TRISC7 = 1;
  3831                           	bsf	((c:3988)),c,7	;volatile
  3832  002BE6  8E94               	line	22
  3833                           ;setting_hardaware/uart.c: 22:     TXSTAbits.SYNC = 0;
  3834                           	bcf	((c:4012)),c,4	;volatile
  3835  002BE8  98AC               	line	23
  3836                           ;setting_hardaware/uart.c: 23:     BAUDCONbits.BRG16 = 0 ;
  3837                           	bcf	((c:4024)),c,3	;volatile
  3838  002BEA  96B8               	line	24
  3839                           ;setting_hardaware/uart.c: 24:     TXSTAbits.BRGH = 1;
  3840                           	bsf	((c:4012)),c,2	;volatile
  3841  002BEC  84AC               	line	25
  3842                           	
  3843                           l1305:
  3844  002BEE                     ;setting_hardaware/uart.c: 25:     SPBRG = 51;
  3845                           	movlw	low(033h)
  3846  002BEE  0E33               	movwf	((c:4015)),c	;volatile
  3847  002BF0  6EAF               	line	28
  3848                           	
  3849                           l1307:
  3850  002BF2                     ;setting_hardaware/uart.c: 28:     RCSTAbits.SPEN = 1;
  3851                           	bsf	((c:4011)),c,7	;volatile
  3852  002BF2  8EAB               	line	29
  3853                           	
  3854                           l1309:
  3855  002BF4                     ;setting_hardaware/uart.c: 29:     PIR1bits.TXIF = 1;
  3856                           	bsf	((c:3998)),c,4	;volatile
  3857  002BF4  889E               	line	30
  3858                           	
  3859                           l1311:
  3860  002BF6                     ;setting_hardaware/uart.c: 30:     PIR1bits.RCIF = 0;
  3861                           	bcf	((c:3998)),c,5	;volatile
  3862  002BF6  9A9E               	line	31
  3863                           	
  3864                           l1313:
  3865  002BF8                     ;setting_hardaware/uart.c: 31:     TXSTAbits.TXEN = 1;
  3866                           	bsf	((c:4012)),c,5	;volatile
  3867  002BF8  8AAC               	line	32
  3868                           	
  3869                           l1315:
  3870  002BFA                     ;setting_hardaware/uart.c: 32:     RCSTAbits.CREN = 1;
  3871                           	bsf	((c:4011)),c,4	;volatile
  3872  002BFA  88AB               	line	34
  3873                           	
  3874                           l1317:
  3875  002BFC                     ;setting_hardaware/uart.c: 34:     PIE1bits.TXIE = 0;
  3876                           	bcf	((c:3997)),c,4	;volatile
  3877  002BFC  989D               	line	35
  3878                           	
  3879                           l1319:
  3880  002BFE                     ;setting_hardaware/uart.c: 35:     IPR1bits.TXIP = 0;
  3881                           	bcf	((c:3999)),c,4	;volatile
  3882  002BFE  989F               	line	36
  3883                           	
  3884                           l1321:
  3885  002C00                     ;setting_hardaware/uart.c: 36:     PIE1bits.RCIE = 1;
  3886                           	bsf	((c:3997)),c,5	;volatile
  3887  002C00  8A9D               	line	37
  3888                           	
  3889                           l1323:
  3890  002C02                     ;setting_hardaware/uart.c: 37:     IPR1bits.RCIP = 0;
  3891                           	bcf	((c:3999)),c,5	;volatile
  3892  002C02  9A9F               	line	38
  3893                           	
  3894                           l51:
  3895  002C04                     	return	;funcret
  3896  002C04  0012               	opt stack 0
  3897                           GLOBAL	__end_of_UART_Initialize
  3898                           	__end_of_UART_Initialize:
  3899  002C06                     	signat	_UART_Initialize,89
  3900                           	global	_OSCILLATOR_Initialize
  3901                           
  3902 ;; *************** function _OSCILLATOR_Initialize *****************
  3903 ;; Defined at:
  3904 ;;		line 73 in file "setting_hardaware/setting.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;		None
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;		None
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      void 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3918 ;;      Params:         0       0       0       0       0       0       0
  3919 ;;      Locals:         0       0       0       0       0       0       0
  3920 ;;      Temps:          0       0       0       0       0       0       0
  3921 ;;      Totals:         0       0       0       0       0       0       0
  3922 ;;Total ram usage:        0 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; Hardware stack levels required when called:    5
  3925 ;; This function calls:
  3926 ;;		Nothing
  3927 ;; This function is called by:
  3928 ;;		_SYSTEM_Initialize
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           psect	text5,class=CODE,space=0,reloc=2,group=0
  3932                           	file	"setting_hardaware/setting.c"
  3933                           	line	73
  3934                           global __ptext5
  3935                           __ptext5:
  3936  002C7E                     psect	text5
  3937                           	file	"setting_hardaware/setting.c"
  3938                           	line	73
  3939                           	global	__size_of_OSCILLATOR_Initialize
  3940                           	__size_of_OSCILLATOR_Initialize	equ	__end_of_OSCILLATOR_Initialize-_OSCILLATOR_Initiali
                                 ze
  3941  0000                     	
  3942                           _OSCILLATOR_Initialize:
  3943  002C7E                     ;incstack = 0
  3944                           	opt	stack 24
  3945                           	line	75
  3946                           	
  3947                           l1299:
  3948  002C7E                     ;setting_hardaware/setting.c: 75:     OSCCONbits.IRCF = 6;
  3949                           	movf	((c:4051)),c,w	;volatile
  3950  002C7E  50D3               	andlw	not (((1<<3)-1)<<4)
  3951  002C80  0B8F               	iorlw	(06h & ((1<<3)-1))<<4
  3952  002C82  0960               	movwf	((c:4051)),c	;volatile
  3953  002C84  6ED3               	line	77
  3954                           	
  3955                           l18:
  3956  002C86                     	return	;funcret
  3957  002C86  0012               	opt stack 0
  3958                           GLOBAL	__end_of_OSCILLATOR_Initialize
  3959                           	__end_of_OSCILLATOR_Initialize:
  3960  002C88                     	signat	_OSCILLATOR_Initialize,89
  3961                           	global	_INTERRUPT_Initialize
  3962                           
  3963 ;; *************** function _INTERRUPT_Initialize *****************
  3964 ;; Defined at:
  3965 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;		None
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;		None
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  1    wreg      void 
  3972 ;; Registers used:
  3973 ;;		None
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3979 ;;      Params:         0       0       0       0       0       0       0
  3980 ;;      Locals:         0       0       0       0       0       0       0
  3981 ;;      Temps:          0       0       0       0       0       0       0
  3982 ;;      Totals:         0       0       0       0       0       0       0
  3983 ;;Total ram usage:        0 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:    5
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_SYSTEM_Initialize
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           psect	text6,class=CODE,space=0,reloc=2,group=0
  3993                           	file	"setting_hardaware/interrupt_manager.c"
  3994                           	line	3
  3995                           global __ptext6
  3996                           __ptext6:
  3997  002C88                     psect	text6
  3998                           	file	"setting_hardaware/interrupt_manager.c"
  3999                           	line	3
  4000                           	global	__size_of_INTERRUPT_Initialize
  4001                           	__size_of_INTERRUPT_Initialize	equ	__end_of_INTERRUPT_Initialize-_INTERRUPT_Initialize

  4002  0000                     	
  4003                           _INTERRUPT_Initialize:
  4004  002C88                     ;incstack = 0
  4005                           	opt	stack 24
  4006                           	line	5
  4007                           	
  4008                           l1301:
  4009  002C88                     ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  4010                           	bsf	((c:4048)),c,7	;volatile
  4011  002C88  8ED0               	line	6
  4012                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  4013                           	bsf	((c:4082)),c,7	;volatile
  4014  002C8A  8EF2               	line	7
  4015                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  4016                           	bsf	((c:4082)),c,6	;volatile
  4017  002C8C  8CF2               	line	8
  4018                           	
  4019                           l88:
  4020  002C8E                     	return	;funcret
  4021  002C8E  0012               	opt stack 0
  4022                           GLOBAL	__end_of_INTERRUPT_Initialize
  4023                           	__end_of_INTERRUPT_Initialize:
  4024  002C90                     	signat	_INTERRUPT_Initialize,89
  4025                           	global	_CCP1_Initialize
  4026                           
  4027 ;; *************** function _CCP1_Initialize *****************
  4028 ;; Defined at:
  4029 ;;		line 3 in file "setting_hardaware/ccp1.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;		None
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		None
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4043 ;;      Params:         0       0       0       0       0       0       0
  4044 ;;      Locals:         0       0       0       0       0       0       0
  4045 ;;      Temps:          0       0       0       0       0       0       0
  4046 ;;      Totals:         0       0       0       0       0       0       0
  4047 ;;Total ram usage:        0 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; Hardware stack levels required when called:    5
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_SYSTEM_Initialize
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           psect	text7,class=CODE,space=0,reloc=2,group=0
  4057                           	file	"setting_hardaware/ccp1.c"
  4058                           	line	3
  4059                           global __ptext7
  4060                           __ptext7:
  4061  002C94                     psect	text7
  4062                           	file	"setting_hardaware/ccp1.c"
  4063                           	line	3
  4064                           	global	__size_of_CCP1_Initialize
  4065                           	__size_of_CCP1_Initialize	equ	__end_of_CCP1_Initialize-_CCP1_Initialize
  4066  0000                     	
  4067                           _CCP1_Initialize:
  4068  002C94                     ;incstack = 0
  4069                           	opt	stack 24
  4070                           	line	8
  4071                           	
  4072                           l91:
  4073  002C94                     	return	;funcret
  4074  002C94  0012               	opt stack 0
  4075                           GLOBAL	__end_of_CCP1_Initialize
  4076                           	__end_of_CCP1_Initialize:
  4077  002C96                     	signat	_CCP1_Initialize,89
  4078                           	global	_ADC_Initialize
  4079                           
  4080 ;; *************** function _ADC_Initialize *****************
  4081 ;; Defined at:
  4082 ;;		line 3 in file "setting_hardaware/adc.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4096 ;;      Params:         0       0       0       0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0
  4099 ;;      Totals:         0       0       0       0       0       0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    5
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_SYSTEM_Initialize
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           psect	text8,class=CODE,space=0,reloc=2,group=0
  4110                           	file	"setting_hardaware/adc.c"
  4111                           	line	3
  4112                           global __ptext8
  4113                           __ptext8:
  4114  002C42                     psect	text8
  4115                           	file	"setting_hardaware/adc.c"
  4116                           	line	3
  4117                           	global	__size_of_ADC_Initialize
  4118                           	__size_of_ADC_Initialize	equ	__end_of_ADC_Initialize-_ADC_Initialize
  4119  0000                     	
  4120                           _ADC_Initialize:
  4121  002C42                     ;incstack = 0
  4122                           	opt	stack 24
  4123                           	line	4
  4124                           	
  4125                           l1325:
  4126  002C42                     ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
  4127                           	setf	((c:3986)),c	;volatile
  4128  002C42  6892               	line	5
  4129                           	
  4130                           l1327:
  4131  002C44                     ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
  4132                           	movlw	low(0Eh)
  4133  002C44  0E0E               	movwf	((c:4033)),c	;volatile
  4134  002C46  6EC1               	line	7
  4135                           	
  4136                           l1329:
  4137  002C48                     ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
  4138                           	bsf	c:(32263/8),(32263)&7	;volatile
  4139  002C48  8EC0               	line	8
  4140                           	
  4141                           l1331:
  4142  002C4A                     ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
  4143                           		
  4144                           	bsf	((c:4032)),c, 0+0	;volatile
  4145  002C4A  80C0               	bsf	((c:4032)),c, 0+1	;volatile
  4146  002C4C  82C0               	bsf	((c:4032)),c, 0+2	;volatile
  4147  002C4E  84C0               
  4148                           	line	9
  4149                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
  4150                           	movlw	low(0)
  4151  002C50  0E00               	movwf	((c:4036)),c	;volatile
  4152  002C52  6EC4               	line	10
  4153                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
  4154                           	movlw	low(0)
  4155  002C54  0E00               	movwf	((c:4035)),c	;volatile
  4156  002C56  6EC3               	line	11
  4157                           	
  4158                           l108:
  4159  002C58                     	return	;funcret
  4160  002C58  0012               	opt stack 0
  4161                           GLOBAL	__end_of_ADC_Initialize
  4162                           	__end_of_ADC_Initialize:
  4163  002C5A                     	signat	_ADC_Initialize,89
  4164                           	global	_Playmusic
  4165                           
  4166 ;; *************** function _Playmusic *****************
  4167 ;; Defined at:
  4168 ;;		line 338 in file "main.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4182 ;;      Params:         0       0       0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0
  4185 ;;      Totals:         0       0       0       0       0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    6
  4189 ;; This function calls:
  4190 ;;		_ClearBuffer
  4191 ;; This function is called by:
  4192 ;;		_main
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           psect	text9,class=CODE,space=0,reloc=2,group=0
  4196                           	file	"main.c"
  4197                           	line	338
  4198                           global __ptext9
  4199                           __ptext9:
  4200  00294C                     psect	text9
  4201                           	file	"main.c"
  4202                           	line	338
  4203                           	global	__size_of_Playmusic
  4204                           	__size_of_Playmusic	equ	__end_of_Playmusic-_Playmusic
  4205  0000                     	
  4206                           _Playmusic:
  4207  00294C                     ;incstack = 0
  4208                           	opt	stack 24
  4209                           	line	339
  4210                           	
  4211                           l3227:
  4212  00294C                     ;main.c: 339:     ClearBuffer();
  4213                           	call	_ClearBuffer	;wreg free
  4214  00294C  EC71  F014         	line	340
  4215                           	
  4216                           l3229:
  4217  002950                     ;main.c: 340:     TRISCbits.RC1 = 0;
  4218                           	bcf	((c:3988)),c,1	;volatile
  4219  002950  9294               	line	341
  4220                           	
  4221                           l3231:
  4222  002952                     ;main.c: 341:     T2CONbits.T2CKPS = 3;
  4223                           	movlw	(03h & ((1<<2)-1))<<0
  4224  002952  0E03               	iorwf	((c:4042)),c	;volatile
  4225  002954  12CA               	line	342
  4226                           	
  4227                           l3233:
  4228  002956                     ;main.c: 342:     OSCCONbits.IRCF = 6;
  4229                           	movf	((c:4051)),c,w	;volatile
  4230  002956  50D3               	andlw	not (((1<<3)-1)<<4)
  4231  002958  0B8F               	iorlw	(06h & ((1<<3)-1))<<4
  4232  00295A  0960               	movwf	((c:4051)),c	;volatile
  4233  00295C  6ED3               	line	343
  4234                           	
  4235                           l3235:
  4236  00295E                     ;main.c: 343:     CCP2CONbits.CCP2M = 12;
  4237                           	movf	((c:4026)),c,w	;volatile
  4238  00295E  50BA               	andlw	not (((1<<4)-1)<<0)
  4239  002960  0BF0               	iorlw	(0Ch & ((1<<4)-1))<<0
  4240  002962  090C               	movwf	((c:4026)),c	;volatile
  4241  002964  6EBA               	line	344
  4242                           	
  4243                           l3237:
  4244  002966                     ;main.c: 344:     RCONbits.IPEN = 1;
  4245                           	bsf	((c:4048)),c,7	;volatile
  4246  002966  8ED0               	line	345
  4247                           	
  4248                           l3239:
  4249  002968                     ;main.c: 345:     PIE1bits.TMR1IE =1;
  4250                           	bsf	((c:3997)),c,0	;volatile
  4251  002968  809D               	line	346
  4252                           	
  4253                           l3241:
  4254  00296A                     ;main.c: 346:     PIR1bits.TMR1IF =0;
  4255                           	bcf	((c:3998)),c,0	;volatile
  4256  00296A  909E               	line	347
  4257                           	
  4258                           l3243:
  4259  00296C                     ;main.c: 347:     IPR1bits.TMR1IP =1;
  4260                           	bsf	((c:3999)),c,0	;volatile
  4261  00296C  809F               	line	348
  4262                           	
  4263                           l3245:
  4264  00296E                     ;main.c: 348:     INTCONbits.GIE =1;
  4265                           	bsf	((c:4082)),c,7	;volatile
  4266  00296E  8EF2               	line	349
  4267                           	
  4268                           l3247:
  4269  002970                     ;main.c: 349:     T1CONbits.RD16 = 1;
  4270                           	bsf	((c:4045)),c,7	;volatile
  4271  002970  8ECD               	line	350
  4272                           	
  4273                           l3249:
  4274  002972                     ;main.c: 350:     T1CONbits.T1CKPS = 3;
  4275                           	movlw	(03h & ((1<<2)-1))<<4
  4276  002972  0E30               	iorwf	((c:4045)),c	;volatile
  4277  002974  12CD               	line	351
  4278                           	
  4279                           l3251:
  4280  002976                     ;main.c: 351:     T1CONbits.TMR1CS = 0;
  4281                           	bcf	((c:4045)),c,1	;volatile
  4282  002976  92CD               	line	352
  4283                           	
  4284                           l3253:
  4285  002978                     ;main.c: 352:     T2CONbits.TMR2ON = 1;
  4286                           	bsf	((c:4042)),c,2	;volatile
  4287  002978  84CA               	line	353
  4288                           	
  4289                           l3255:
  4290  00297A                     ;main.c: 353:     T1CONbits.TMR1ON = 1;
  4291                           	bsf	((c:4045)),c,0	;volatile
  4292  00297A  80CD               	line	354
  4293                           	
  4294                           l3257:
  4295  00297C                     ;main.c: 354:     music_choose = 0;
  4296                           	movlw	high(0)
  4297  00297C  0E00               	movwf	((c:_music_choose+1)),c
  4298  00297E  6E43               	movlw	low(0)
  4299  002980  0E00               	movwf	((c:_music_choose)),c
  4300  002982  6E42               	line	355
  4301                           	
  4302                           l3259:
  4303  002984                     ;main.c: 355:     music_count = 0;
  4304                           	movlw	high(0)
  4305  002984  0E00               	movwf	((c:_music_count+1)),c
  4306  002986  6E47               	movlw	low(0)
  4307  002988  0E00               	movwf	((c:_music_count)),c
  4308  00298A  6E46               	line	356
  4309                           	
  4310                           l3261:
  4311  00298C                     ;main.c: 356:     music_index = 0;
  4312                           	movlw	high(0)
  4313  00298C  0E00               	movwf	((c:_music_index+1)),c
  4314  00298E  6E45               	movlw	low(0)
  4315  002990  0E00               	movwf	((c:_music_index)),c
  4316  002992  6E44               	line	357
  4317                           	
  4318                           l3263:
  4319  002994                     ;main.c: 357:     music_playing = 1;
  4320                           	movlw	high(01h)
  4321  002994  0E00               	movlb	0	; () banked
  4322  002996  0100               	movwf	((_music_playing+1))&0ffh
  4323  002998  6FBE               	movlw	low(01h)
  4324  00299A  0E01               	movwf	((_music_playing))&0ffh
  4325  00299C  6FBD               	line	358
  4326                           	
  4327                           l3265:; BSR set to: 0
  4328  00299E                     
  4329                           ;main.c: 358:     TMR1 = 34285;
  4330                           	movlw	high(085EDh)
  4331  00299E  0E85               	movwf	((c:4046+1)),c	;volatile
  4332  0029A0  6ECF               	movlw	low(085EDh)
  4333  0029A2  0EED               	movwf	((c:4046)),c	;volatile
  4334  0029A4  6ECE               	line	359
  4335                           	
  4336                           l3267:; BSR set to: 0
  4337  0029A6                     
  4338                           ;main.c: 359:     ClearBuffer();
  4339                           	call	_ClearBuffer	;wreg free
  4340  0029A6  EC71  F014         	line	360
  4341                           	
  4342                           l308:
  4343  0029AA                     	return	;funcret
  4344  0029AA  0012               	opt stack 0
  4345                           GLOBAL	__end_of_Playmusic
  4346                           	__end_of_Playmusic:
  4347  0029AC                     	signat	_Playmusic,89
  4348                           	global	_Mode3
  4349                           
  4350 ;; *************** function _Mode3 *****************
  4351 ;; Defined at:
  4352 ;;		line 292 in file "main.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4366 ;;      Params:         0       0       0       0       0       0       0
  4367 ;;      Locals:         0       0       0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0
  4369 ;;      Totals:         0       0       0       0       0       0       0
  4370 ;;Total ram usage:        0 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:    7
  4373 ;; This function calls:
  4374 ;;		_ClearBuffer
  4375 ;;		_GetString
  4376 ;;		_strstr
  4377 ;; This function is called by:
  4378 ;;		_main
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           psect	text10,class=CODE,space=0,reloc=2,group=0
  4382                           	line	292
  4383                           global __ptext10
  4384                           __ptext10:
  4385  001FFC                     psect	text10
  4386                           	file	"main.c"
  4387                           	line	292
  4388                           	global	__size_of_Mode3
  4389                           	__size_of_Mode3	equ	__end_of_Mode3-_Mode3
  4390  0000                     	
  4391                           _Mode3:
  4392  001FFC                     ;incstack = 0
  4393                           	opt	stack 23
  4394                           	line	293
  4395                           	
  4396                           l4207:
  4397  001FFC                     ;main.c: 293:     ClearBuffer();
  4398                           	call	_ClearBuffer	;wreg free
  4399  001FFC  EC71  F014         	line	294
  4400                           	
  4401                           l4209:
  4402  002000                     ;main.c: 294:     TRISCbits.RC1 = 0;
  4403                           	bcf	((c:3988)),c,1	;volatile
  4404  002000  9294               	line	295
  4405                           	
  4406                           l4211:
  4407  002002                     ;main.c: 295:     T2CONbits.T2CKPS = 3;
  4408                           	movlw	(03h & ((1<<2)-1))<<0
  4409  002002  0E03               	iorwf	((c:4042)),c	;volatile
  4410  002004  12CA               	line	296
  4411                           	
  4412                           l4213:
  4413  002006                     ;main.c: 296:     CCP2CONbits.CCP2M = 12;
  4414                           	movf	((c:4026)),c,w	;volatile
  4415  002006  50BA               	andlw	not (((1<<4)-1)<<0)
  4416  002008  0BF0               	iorlw	(0Ch & ((1<<4)-1))<<0
  4417  00200A  090C               	movwf	((c:4026)),c	;volatile
  4418  00200C  6EBA               	line	297
  4419                           	
  4420                           l4215:
  4421  00200E                     ;main.c: 297:     PIE1bits.TMR1IE =1;
  4422                           	bsf	((c:3997)),c,0	;volatile
  4423  00200E  809D               	line	298
  4424                           	
  4425                           l4217:
  4426  002010                     ;main.c: 298:     PIR1bits.TMR1IF =0;
  4427                           	bcf	((c:3998)),c,0	;volatile
  4428  002010  909E               	line	299
  4429                           	
  4430                           l4219:
  4431  002012                     ;main.c: 299:     IPR1bits.TMR1IP =1;
  4432                           	bsf	((c:3999)),c,0	;volatile
  4433  002012  809F               	line	300
  4434                           	
  4435                           l4221:
  4436  002014                     ;main.c: 300:     T1CONbits.RD16 = 1;
  4437                           	bsf	((c:4045)),c,7	;volatile
  4438  002014  8ECD               	line	301
  4439                           	
  4440                           l4223:
  4441  002016                     ;main.c: 301:     T1CONbits.T1CKPS = 3;
  4442                           	movlw	(03h & ((1<<2)-1))<<4
  4443  002016  0E30               	iorwf	((c:4045)),c	;volatile
  4444  002018  12CD               	line	302
  4445                           	
  4446                           l4225:
  4447  00201A                     ;main.c: 302:     T1CONbits.TMR1CS = 0;
  4448                           	bcf	((c:4045)),c,1	;volatile
  4449  00201A  92CD               	line	303
  4450                           	
  4451                           l4227:
  4452  00201C                     ;main.c: 303:     TMR1 = 34285;
  4453                           	movlw	high(085EDh)
  4454  00201C  0E85               	movwf	((c:4046+1)),c	;volatile
  4455  00201E  6ECF               	movlw	low(085EDh)
  4456  002020  0EED               	movwf	((c:4046)),c	;volatile
  4457  002022  6ECE               	line	304
  4458                           ;main.c: 304:     ClearBuffer();
  4459                           	call	_ClearBuffer	;wreg free
  4460  002024  EC71  F014         	goto	l4229
  4461  002028  EF16  F010         	line	305
  4462                           ;main.c: 305:     while(1){
  4463                           	
  4464                           l295:
  4465  00202C                     	line	306
  4466                           	
  4467                           l4229:
  4468  00202C                     ;main.c: 306:         if(strstr(GetString(), "1") != ((void*)0)){
  4469                           	call	_GetString	;wreg free
  4470  00202C  EC38  F016         	movff	0+?_GetString,(strstr@h)
  4471  002030  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  4472  002034  C029  F081         		movlw	low(STR_17)
  4473  002038  0E27               	movlb	0	; () banked
  4474  00203A  0100               	movwf	((strstr@n))&0ffh
  4475  00203C  6F82               	movlw	high(STR_17)
  4476  00203E  0E06               	movwf	((strstr@n+1))&0ffh
  4477  002040  6F83               
  4478                           	call	_strstr	;wreg free
  4479  002042  EC1A  F013         	movlb	0	; () banked
  4480  002046  0100               	movf	(0+?_strstr)&0ffh,w
  4481  002048  5180               iorwf	(1+?_strstr)&0ffh,w
  4482  00204A  1181               	btfsc	status,2
  4483  00204C  B4D8               	goto	u4851
  4484  00204E  EF2B  F010         	goto	u4850
  4485  002052  EF2D  F010         
  4486                           u4851:
  4487  002056                     	goto	l4239
  4488  002056  EF41  F010         u4850:
  4489  00205A                     	line	307
  4490                           	
  4491                           l4231:; BSR set to: 0
  4492  00205A                     
  4493                           ;main.c: 307:             T2CONbits.TMR2ON = 1;
  4494                           	bsf	((c:4042)),c,2	;volatile
  4495  00205A  84CA               	line	308
  4496                           ;main.c: 308:             T1CONbits.TMR1ON = 1;
  4497                           	bsf	((c:4045)),c,0	;volatile
  4498  00205C  80CD               	line	309
  4499                           	
  4500                           l4233:; BSR set to: 0
  4501  00205E                     
  4502                           ;main.c: 309:             music_choose = 0;
  4503                           	movlw	high(0)
  4504  00205E  0E00               	movwf	((c:_music_choose+1)),c
  4505  002060  6E43               	movlw	low(0)
  4506  002062  0E00               	movwf	((c:_music_choose)),c
  4507  002064  6E42               	line	310
  4508                           ;main.c: 310:             music_count = 0;
  4509                           	movlw	high(0)
  4510  002066  0E00               	movwf	((c:_music_count+1)),c
  4511  002068  6E47               	movlw	low(0)
  4512  00206A  0E00               	movwf	((c:_music_count)),c
  4513  00206C  6E46               	line	311
  4514                           ;main.c: 311:             music_index = 0;
  4515                           	movlw	high(0)
  4516  00206E  0E00               	movwf	((c:_music_index+1)),c
  4517  002070  6E45               	movlw	low(0)
  4518  002072  0E00               	movwf	((c:_music_index)),c
  4519  002074  6E44               	line	312
  4520                           	
  4521                           l4235:; BSR set to: 0
  4522  002076                     
  4523                           ;main.c: 312:             ClearBuffer();
  4524                           	call	_ClearBuffer	;wreg free
  4525  002076  EC71  F014         	line	313
  4526                           ;main.c: 313:             break;
  4527                           	goto	l4247
  4528  00207A  EF70  F010         	line	314
  4529                           	
  4530                           l4237:
  4531  00207E                     ;main.c: 314:         }
  4532                           	goto	l4229
  4533  00207E  EF16  F010         	line	315
  4534                           ;main.c: 315:         else if(strstr(GetString(), "2") != ((void*)0)){
  4535                           	
  4536                           l296:
  4537  002082                     	
  4538                           l4239:
  4539  002082                     	call	_GetString	;wreg free
  4540  002082  EC38  F016         	movff	0+?_GetString,(strstr@h)
  4541  002086  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  4542  00208A  C029  F081         		movlw	low(STR_18)
  4543  00208E  0E13               	movlb	0	; () banked
  4544  002090  0100               	movwf	((strstr@n))&0ffh
  4545  002092  6F82               	movlw	high(STR_18)
  4546  002094  0E06               	movwf	((strstr@n+1))&0ffh
  4547  002096  6F83               
  4548                           	call	_strstr	;wreg free
  4549  002098  EC1A  F013         	movlb	0	; () banked
  4550  00209C  0100               	movf	(0+?_strstr)&0ffh,w
  4551  00209E  5180               iorwf	(1+?_strstr)&0ffh,w
  4552  0020A0  1181               	btfsc	status,2
  4553  0020A2  B4D8               	goto	u4861
  4554  0020A4  EF56  F010         	goto	u4860
  4555  0020A8  EF58  F010         
  4556                           u4861:
  4557  0020AC                     	goto	l4229
  4558  0020AC  EF16  F010         u4860:
  4559  0020B0                     	line	316
  4560                           	
  4561                           l4241:; BSR set to: 0
  4562  0020B0                     
  4563                           ;main.c: 316:             T2CONbits.TMR2ON = 1;
  4564                           	bsf	((c:4042)),c,2	;volatile
  4565  0020B0  84CA               	line	317
  4566                           ;main.c: 317:             T1CONbits.TMR1ON = 1;
  4567                           	bsf	((c:4045)),c,0	;volatile
  4568  0020B2  80CD               	line	318
  4569                           	
  4570                           l4243:; BSR set to: 0
  4571  0020B4                     
  4572                           ;main.c: 318:             music_choose = 1;
  4573                           	movlw	high(01h)
  4574  0020B4  0E00               	movwf	((c:_music_choose+1)),c
  4575  0020B6  6E43               	movlw	low(01h)
  4576  0020B8  0E01               	movwf	((c:_music_choose)),c
  4577  0020BA  6E42               	line	319
  4578                           ;main.c: 319:             music_count = 0;
  4579                           	movlw	high(0)
  4580  0020BC  0E00               	movwf	((c:_music_count+1)),c
  4581  0020BE  6E47               	movlw	low(0)
  4582  0020C0  0E00               	movwf	((c:_music_count)),c
  4583  0020C2  6E46               	line	320
  4584                           ;main.c: 320:             music_index = 0;
  4585                           	movlw	high(0)
  4586  0020C4  0E00               	movwf	((c:_music_index+1)),c
  4587  0020C6  6E45               	movlw	low(0)
  4588  0020C8  0E00               	movwf	((c:_music_index)),c
  4589  0020CA  6E44               	line	321
  4590                           	
  4591                           l4245:; BSR set to: 0
  4592  0020CC                     
  4593                           ;main.c: 321:             ClearBuffer();
  4594                           	call	_ClearBuffer	;wreg free
  4595  0020CC  EC71  F014         	line	322
  4596                           ;main.c: 322:             break;
  4597                           	goto	l4247
  4598  0020D0  EF70  F010         	line	323
  4599                           ;main.c: 323:         }
  4600                           	
  4601                           l299:
  4602  0020D4                     	goto	l4229
  4603  0020D4  EF16  F010         	
  4604                           l298:
  4605  0020D8                     	goto	l4229
  4606  0020D8  EF16  F010         	line	324
  4607                           ;main.c: 324:     }
  4608                           	
  4609                           l300:
  4610  0020DC                     	goto	l4229
  4611  0020DC  EF16  F010         	
  4612                           l297:
  4613  0020E0                     	line	325
  4614                           	
  4615                           l4247:
  4616  0020E0                     ;main.c: 325:     ClearBuffer();
  4617                           	call	_ClearBuffer	;wreg free
  4618  0020E0  EC71  F014         	goto	l4249
  4619  0020E4  EF74  F010         	line	326
  4620                           ;main.c: 326:     while(1){
  4621                           	
  4622                           l301:
  4623  0020E8                     	line	327
  4624                           	
  4625                           l4249:
  4626  0020E8                     ;main.c: 327:         if(strstr(GetString(), "q") != ((void*)0)) {
  4627                           	call	_GetString	;wreg free
  4628  0020E8  EC38  F016         	movff	0+?_GetString,(strstr@h)
  4629  0020EC  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  4630  0020F0  C029  F081         		movlw	low(STR_19)
  4631  0020F4  0E37               	movlb	0	; () banked
  4632  0020F6  0100               	movwf	((strstr@n))&0ffh
  4633  0020F8  6F82               	movlw	high(STR_19)
  4634  0020FA  0E06               	movwf	((strstr@n+1))&0ffh
  4635  0020FC  6F83               
  4636                           	call	_strstr	;wreg free
  4637  0020FE  EC1A  F013         	movlb	0	; () banked
  4638  002102  0100               	movf	(0+?_strstr)&0ffh,w
  4639  002104  5180               iorwf	(1+?_strstr)&0ffh,w
  4640  002106  1181               	btfsc	status,2
  4641  002108  B4D8               	goto	u4871
  4642  00210A  EF89  F010         	goto	u4870
  4643  00210E  EF8B  F010         
  4644                           u4871:
  4645  002112                     	goto	l4249
  4646  002112  EF74  F010         u4870:
  4647  002116                     	line	328
  4648                           	
  4649                           l4251:; BSR set to: 0
  4650  002116                     
  4651                           ;main.c: 328:             T2CONbits.TMR2ON = 0;
  4652                           	bcf	((c:4042)),c,2	;volatile
  4653  002116  94CA               	line	329
  4654                           ;main.c: 329:             T1CONbits.TMR1ON = 0;
  4655                           	bcf	((c:4045)),c,0	;volatile
  4656  002118  90CD               	line	330
  4657                           	
  4658                           l4253:; BSR set to: 0
  4659  00211A                     
  4660                           ;main.c: 330:             music_count = 0;
  4661                           	movlw	high(0)
  4662  00211A  0E00               	movwf	((c:_music_count+1)),c
  4663  00211C  6E47               	movlw	low(0)
  4664  00211E  0E00               	movwf	((c:_music_count)),c
  4665  002120  6E46               	line	331
  4666                           ;main.c: 331:             music_index = 0;
  4667                           	movlw	high(0)
  4668  002122  0E00               	movwf	((c:_music_index+1)),c
  4669  002124  6E45               	movlw	low(0)
  4670  002126  0E00               	movwf	((c:_music_index)),c
  4671  002128  6E44               	line	332
  4672                           	
  4673                           l4255:; BSR set to: 0
  4674  00212A                     
  4675                           ;main.c: 332:             ClearBuffer();
  4676                           	call	_ClearBuffer	;wreg free
  4677  00212A  EC71  F014         	line	333
  4678                           ;main.c: 333:             break;
  4679                           	goto	l305
  4680  00212E  EF9D  F010         	line	334
  4681                           ;main.c: 334:         }
  4682                           	
  4683                           l302:
  4684  002132                     	goto	l4249
  4685  002132  EF74  F010         	line	335
  4686                           ;main.c: 335:     }
  4687                           	
  4688                           l304:
  4689  002136                     	goto	l4249
  4690  002136  EF74  F010         	
  4691                           l303:
  4692  00213A                     	line	336
  4693                           	
  4694                           l305:
  4695  00213A                     	return	;funcret
  4696  00213A  0012               	opt stack 0
  4697                           GLOBAL	__end_of_Mode3
  4698                           	__end_of_Mode3:
  4699  00213C                     	signat	_Mode3,89
  4700                           	global	_Mode2
  4701                           
  4702 ;; *************** function _Mode2 *****************
  4703 ;; Defined at:
  4704 ;;		line 240 in file "main.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;		None
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  interval        4   47[BANK0 ] float 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4718 ;;      Params:         0       0       0       0       0       0       0
  4719 ;;      Locals:         0       4       0       0       0       0       0
  4720 ;;      Temps:          0       3       0       0       0       0       0
  4721 ;;      Totals:         0       7       0       0       0       0       0
  4722 ;;Total ram usage:        7 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:    7
  4725 ;; This function calls:
  4726 ;;		_ADC_Read
  4727 ;;		_ClearBuffer
  4728 ;;		_GetString
  4729 ;;		_UART_Write_Text
  4730 ;;		___awdiv
  4731 ;;		___fladd
  4732 ;;		___flmul
  4733 ;;		___flsub
  4734 ;;		___fltol
  4735 ;;		___xxtofl
  4736 ;;		_strstr
  4737 ;; This function is called by:
  4738 ;;		_main
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           psect	text11,class=CODE,space=0,reloc=2,group=0
  4742                           	line	240
  4743                           global __ptext11
  4744                           __ptext11:
  4745  0018D2                     psect	text11
  4746                           	file	"main.c"
  4747                           	line	240
  4748                           	global	__size_of_Mode2
  4749                           	__size_of_Mode2	equ	__end_of_Mode2-_Mode2
  4750  0000                     	
  4751                           _Mode2:
  4752  0018D2                     ;incstack = 0
  4753                           	opt	stack 23
  4754                           	line	241
  4755                           	
  4756                           l4143:
  4757  0018D2                     ;main.c: 241:     ClearBuffer();
  4758                           	call	_ClearBuffer	;wreg free
  4759  0018D2  EC71  F014         	line	242
  4760                           	
  4761                           l4145:
  4762  0018D6                     ;main.c: 242:     led_mode = 1;
  4763                           	movlw	high(01h)
  4764  0018D6  0E00               	movwf	((c:_led_mode+1)),c
  4765  0018D8  6E37               	movlw	low(01h)
  4766  0018DA  0E01               	movwf	((c:_led_mode)),c
  4767  0018DC  6E36               	line	244
  4768                           	
  4769                           l4147:
  4770  0018DE                     ;main.c: 244:     UART_Write_Text("Mode2");
  4771                           		movlw	low(STR_15)
  4772  0018DE  0E0F               	movwf	((c:UART_Write_Text@text)),c
  4773  0018E0  6E29               	movlw	high(STR_15)
  4774  0018E2  0E06               	movwf	((c:UART_Write_Text@text+1)),c
  4775  0018E4  6E2A               
  4776                           	call	_UART_Write_Text	;wreg free
  4777  0018E6  ECD6  F014         	line	246
  4778                           	
  4779                           l4149:
  4780  0018EA                     ;main.c: 246:     CCP1CONbits.DC1B = 0;
  4781                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
  4782  0018EA  0ECF               	andwf	((c:4029)),c	;volatile
  4783  0018EC  16BD               	line	247
  4784                           	
  4785                           l4151:
  4786  0018EE                     ;main.c: 247:     CCP1CONbits.CCP1M = 1100;
  4787                           	movf	((c:4029)),c,w	;volatile
  4788  0018EE  50BD               	andlw	not (((1<<4)-1)<<0)
  4789  0018F0  0BF0               	iorlw	(0Ch & ((1<<4)-1))<<0
  4790  0018F2  090C               	movwf	((c:4029)),c	;volatile
  4791  0018F4  6EBD               	line	248
  4792                           	
  4793                           l4153:
  4794  0018F6                     ;main.c: 248:     CCP1CONbits.P1M = 3;
  4795                           	movlw	(03h & ((1<<2)-1))<<6
  4796  0018F6  0EC0               	iorwf	((c:4029)),c	;volatile
  4797  0018F8  12BD               	line	249
  4798                           	
  4799                           l4155:
  4800  0018FA                     ;main.c: 249:     TRISCbits.RC2 = 0;
  4801                           	bcf	((c:3988)),c,2	;volatile
  4802  0018FA  9494               	line	250
  4803                           	
  4804                           l4157:
  4805  0018FC                     ;main.c: 250:     TRISDbits.RD5 = 0;
  4806                           	bcf	((c:3989)),c,5	;volatile
  4807  0018FC  9A95               	line	251
  4808                           	
  4809                           l4159:
  4810  0018FE                     ;main.c: 251:     TRISDbits.RD6 = 0;
  4811                           	bcf	((c:3989)),c,6	;volatile
  4812  0018FE  9C95               	line	252
  4813                           	
  4814                           l4161:
  4815  001900                     ;main.c: 252:     TRISDbits.RD7 = 0;
  4816                           	bcf	((c:3989)),c,7	;volatile
  4817  001900  9E95               	line	254
  4818                           	
  4819                           l4163:
  4820  001902                     ;main.c: 254:     if(music_playing == 0){
  4821                           	movlb	0	; () banked
  4822  001902  0100               	movf	((_music_playing))&0ffh,w
  4823  001904  51BD               iorwf	((_music_playing+1))&0ffh,w
  4824  001906  11BE               	btfss	status,2
  4825  001908  A4D8               	goto	u4781
  4826  00190A  EF89  F00C         	goto	u4780
  4827  00190E  EF8B  F00C         
  4828                           u4781:
  4829  001912                     	goto	l4169
  4830  001912  EF96  F00C         u4780:
  4831  001916                     	line	255
  4832                           	
  4833                           l4165:; BSR set to: 0
  4834  001916                     
  4835                           ;main.c: 255:         T2CONbits.TMR2ON = 1;
  4836                           	bsf	((c:4042)),c,2	;volatile
  4837  001916  84CA               	line	256
  4838                           	
  4839                           l4167:; BSR set to: 0
  4840  001918                     
  4841                           ;main.c: 256:         T2CONbits.T2CKPS = 3;
  4842                           	movlw	(03h & ((1<<2)-1))<<0
  4843  001918  0E03               	iorwf	((c:4042)),c	;volatile
  4844  00191A  12CA               	line	257
  4845                           ;main.c: 257:         CCPR2L = 0;
  4846                           	movlw	low(0)
  4847  00191C  0E00               	movwf	((c:4027)),c	;volatile
  4848  00191E  6EBB               	line	258
  4849                           ;main.c: 258:         CCP2CONbits.DC2B = 0;
  4850                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
  4851  001920  0ECF               	andwf	((c:4026)),c	;volatile
  4852  001922  16BA               	line	259
  4853                           ;main.c: 259:         PR2 = 10000;
  4854                           	movlw	low(010h)
  4855  001924  0E10               	movwf	((c:4043)),c	;volatile
  4856  001926  6ECB               	goto	l4169
  4857  001928  EF96  F00C         	line	260
  4858                           ;main.c: 260:     }
  4859                           	
  4860                           l280:; BSR set to: 0
  4861  00192C                     
  4862                           	line	261
  4863                           	
  4864                           l4169:; BSR set to: 0
  4865  00192C                     
  4866                           ;main.c: 261:     led_breath = PR2;
  4867                           	movff	(c:4043),(c:_led_breath)	;volatile
  4868  00192C  CFCB F03A          	clrf	((c:_led_breath+1)),c
  4869  001930  6A3B               	goto	l4171
  4870  001932  EF9B  F00C         	line	263
  4871                           ;main.c: 263:     while(1){
  4872                           	
  4873                           l281:; BSR set to: 0
  4874  001936                     
  4875                           	line	264
  4876                           	
  4877                           l4171:
  4878  001936                     ;main.c: 264:         float interval = ((float)5/1023)*ADC_Read(0);
  4879                           	movlw	high(0)
  4880  001936  0E00               	movwf	((c:ADC_Read@channel+1)),c
  4881  001938  6E29               	movlw	low(0)
  4882  00193A  0E00               	movwf	((c:ADC_Read@channel)),c
  4883  00193C  6E28               	call	_ADC_Read	;wreg free
  4884  00193E  ECA6  F015         	movff	0+?_ADC_Read,(c:___xxtofl@val)
  4885  001942  C028  F02E         	movff	1+?_ADC_Read,(c:___xxtofl@val+1)
  4886  001946  C029  F02F         	movlw	0
  4887  00194A  0E00               	btfsc	((c:___xxtofl@val+1)),c,7
  4888  00194C  BE2F               	movlw	-1
  4889  00194E  0EFF               	movwf	((c:___xxtofl@val+2)),c
  4890  001950  6E30               	movwf	((c:___xxtofl@val+3)),c
  4891  001952  6E31               	movlw	(01h)&0ffh
  4892  001954  0E01               	
  4893                           	call	___xxtofl
  4894  001956  ECB8  F00D         	movff	0+?___xxtofl,(___flmul@b)
  4895  00195A  C02E  F086         	movff	1+?___xxtofl,(___flmul@b+1)
  4896  00195E  C02F  F087         	movff	2+?___xxtofl,(___flmul@b+2)
  4897  001962  C030  F088         	movff	3+?___xxtofl,(___flmul@b+3)
  4898  001966  C031  F089         	
  4899                           	movlw	low(normalize32(0x3ba0280a))
  4900  00196A  0E0A               	movlb	0	; () banked
  4901  00196C  0100               	movwf	((___flmul@a))&0ffh
  4902  00196E  6F8A               	movlw	high(normalize32(0x3ba0280a))
  4903  001970  0E28               	movwf	((___flmul@a+1))&0ffh
  4904  001972  6F8B               	movlw	low highword(normalize32(0x3ba0280a))
  4905  001974  0EA0               	movwf	((___flmul@a+2))&0ffh
  4906  001976  6F8C               	movlw	high highword(normalize32(0x3ba0280a))
  4907  001978  0E3B               	movwf	((___flmul@a+3))&0ffh
  4908  00197A  6F8D               	call	___flmul	;wreg free
  4909  00197C  EC29  F008         	movff	0+?___flmul,(Mode2@interval)
  4910  001980  C086  F0AF         	movff	1+?___flmul,(Mode2@interval+1)
  4911  001984  C087  F0B0         	movff	2+?___flmul,(Mode2@interval+2)
  4912  001988  C088  F0B1         	movff	3+?___flmul,(Mode2@interval+3)
  4913  00198C  C089  F0B2         	
  4914                           	line	265
  4915                           	
  4916                           l4173:
  4917  001990                     ;main.c: 265:         if(updown == 0)
  4918                           	movf	((c:_updown)),c,w
  4919  001990  5038               iorwf	((c:_updown+1)),c,w
  4920  001992  1039               	btfss	status,2
  4921  001994  A4D8               	goto	u4791
  4922  001996  EFCF  F00C         	goto	u4790
  4923  00199A  EFD1  F00C         
  4924                           u4791:
  4925  00199E                     	goto	l4177
  4926  00199E  EFFF  F00C         u4790:
  4927  0019A2                     	line	266
  4928                           	
  4929                           l4175:
  4930  0019A2                     ;main.c: 266:             led_breath+=interval;
  4931                           	movff	(Mode2@interval),(___fladd@a)
  4932  0019A2  C0AF  F08A         	movff	(Mode2@interval+1),(___fladd@a+1)
  4933  0019A6  C0B0  F08B         	movff	(Mode2@interval+2),(___fladd@a+2)
  4934  0019AA  C0B1  F08C         	movff	(Mode2@interval+3),(___fladd@a+3)
  4935  0019AE  C0B2  F08D         	movff	(c:_led_breath),(c:___xxtofl@val)
  4936  0019B2  C03A  F02E         	movff	(c:_led_breath+1),(c:___xxtofl@val+1)
  4937  0019B6  C03B  F02F         	movlw	0
  4938  0019BA  0E00               	btfsc	((c:___xxtofl@val+1)),c,7
  4939  0019BC  BE2F               	movlw	-1
  4940  0019BE  0EFF               	movwf	((c:___xxtofl@val+2)),c
  4941  0019C0  6E30               	movwf	((c:___xxtofl@val+3)),c
  4942  0019C2  6E31               	movlw	(01h)&0ffh
  4943  0019C4  0E01               	
  4944                           	call	___xxtofl
  4945  0019C6  ECB8  F00D         	movff	0+?___xxtofl,(___fladd@b)
  4946  0019CA  C02E  F086         	movff	1+?___xxtofl,(___fladd@b+1)
  4947  0019CE  C02F  F087         	movff	2+?___xxtofl,(___fladd@b+2)
  4948  0019D2  C030  F088         	movff	3+?___xxtofl,(___fladd@b+3)
  4949  0019D6  C031  F089         	
  4950                           	call	___fladd	;wreg free
  4951  0019DA  EC1E  F003         	movff	0+?___fladd,(___fltol@f1)
  4952  0019DE  C086  F0A2         	movff	1+?___fladd,(___fltol@f1+1)
  4953  0019E2  C087  F0A3         	movff	2+?___fladd,(___fltol@f1+2)
  4954  0019E6  C088  F0A4         	movff	3+?___fladd,(___fltol@f1+3)
  4955  0019EA  C089  F0A5         	
  4956                           	call	___fltol	;wreg free
  4957  0019EE  EC54  F00F         	movff	0+?___fltol,(c:_led_breath)
  4958  0019F2  C0A2  F03A         	movff	1+?___fltol,(c:_led_breath+1)
  4959  0019F6  C0A3  F03B         	goto	l4181
  4960  0019FA  EF38  F00D         	line	267
  4961                           ;main.c: 267:         else if(updown == 1)
  4962                           	
  4963                           l282:
  4964  0019FE                     	
  4965                           l4177:
  4966  0019FE                     		decf	((c:_updown)),c,w
  4967  0019FE  0438               iorwf	((c:_updown+1)),c,w
  4968  001A00  1039               	btfss	status,2
  4969  001A02  A4D8               	goto	u4801
  4970  001A04  EF06  F00D         	goto	u4800
  4971  001A08  EF08  F00D         
  4972                           u4801:
  4973  001A0C                     	goto	l4181
  4974  001A0C  EF38  F00D         u4800:
  4975  001A10                     	line	268
  4976                           	
  4977                           l4179:
  4978  001A10                     ;main.c: 268:             led_breath-=interval;
  4979                           	movff	(Mode2@interval),(___flsub@a)
  4980  001A10  C0AF  F09E         	movff	(Mode2@interval+1),(___flsub@a+1)
  4981  001A14  C0B0  F09F         	movff	(Mode2@interval+2),(___flsub@a+2)
  4982  001A18  C0B1  F0A0         	movff	(Mode2@interval+3),(___flsub@a+3)
  4983  001A1C  C0B2  F0A1         	movff	(c:_led_breath),(c:___xxtofl@val)
  4984  001A20  C03A  F02E         	movff	(c:_led_breath+1),(c:___xxtofl@val+1)
  4985  001A24  C03B  F02F         	movlw	0
  4986  001A28  0E00               	btfsc	((c:___xxtofl@val+1)),c,7
  4987  001A2A  BE2F               	movlw	-1
  4988  001A2C  0EFF               	movwf	((c:___xxtofl@val+2)),c
  4989  001A2E  6E30               	movwf	((c:___xxtofl@val+3)),c
  4990  001A30  6E31               	movlw	(01h)&0ffh
  4991  001A32  0E01               	
  4992                           	call	___xxtofl
  4993  001A34  ECB8  F00D         	movff	0+?___xxtofl,(___flsub@b)
  4994  001A38  C02E  F09A         	movff	1+?___xxtofl,(___flsub@b+1)
  4995  001A3C  C02F  F09B         	movff	2+?___xxtofl,(___flsub@b+2)
  4996  001A40  C030  F09C         	movff	3+?___xxtofl,(___flsub@b+3)
  4997  001A44  C031  F09D         	
  4998                           	call	___flsub	;wreg free
  4999  001A48  EC5C  F015         	movff	0+?___flsub,(___fltol@f1)
  5000  001A4C  C09A  F0A2         	movff	1+?___flsub,(___fltol@f1+1)
  5001  001A50  C09B  F0A3         	movff	2+?___flsub,(___fltol@f1+2)
  5002  001A54  C09C  F0A4         	movff	3+?___flsub,(___fltol@f1+3)
  5003  001A58  C09D  F0A5         	
  5004                           	call	___fltol	;wreg free
  5005  001A5C  EC54  F00F         	movff	0+?___fltol,(c:_led_breath)
  5006  001A60  C0A2  F03A         	movff	1+?___fltol,(c:_led_breath+1)
  5007  001A64  C0A3  F03B         	goto	l4181
  5008  001A68  EF38  F00D         	
  5009                           l284:
  5010  001A6C                     	goto	l4181
  5011  001A6C  EF38  F00D         	
  5012                           l283:
  5013  001A70                     	line	269
  5014                           	
  5015                           l4181:
  5016  001A70                     ;main.c: 269:         if(led_breath <= 0){
  5017                           	btfsc	((c:_led_breath+1)),c,7
  5018  001A70  BE3B               	goto	u4810
  5019  001A72  EF45  F00D         	movf	((c:_led_breath+1)),c,w
  5020  001A76  503B               	bnz	u4811
  5021  001A78  E106               	decf	((c:_led_breath)),c,w
  5022  001A7A  043A               	btfsc	status,0
  5023  001A7C  B0D8               	goto	u4811
  5024  001A7E  EF43  F00D         	goto	u4810
  5025  001A82  EF45  F00D         
  5026                           u4811:
  5027  001A86                     	goto	l4185
  5028  001A86  EF4F  F00D         u4810:
  5029  001A8A                     	line	270
  5030                           	
  5031                           l4183:
  5032  001A8A                     ;main.c: 270:             updown = 0;
  5033                           	movlw	high(0)
  5034  001A8A  0E00               	movwf	((c:_updown+1)),c
  5035  001A8C  6E39               	movlw	low(0)
  5036  001A8E  0E00               	movwf	((c:_updown)),c
  5037  001A90  6E38               	line	271
  5038                           ;main.c: 271:             led_breath = 0;
  5039                           	movlw	high(0)
  5040  001A92  0E00               	movwf	((c:_led_breath+1)),c
  5041  001A94  6E3B               	movlw	low(0)
  5042  001A96  0E00               	movwf	((c:_led_breath)),c
  5043  001A98  6E3A               	line	272
  5044                           ;main.c: 272:         }
  5045                           	goto	l4191
  5046  001A9A  EF6D  F00D         	line	273
  5047                           ;main.c: 273:         else if (led_breath >= PR2){
  5048                           	
  5049                           l285:
  5050  001A9E                     	
  5051                           l4185:
  5052  001A9E                     	movf	((c:4043)),c,w	;volatile
  5053  001A9E  50CB               	movlb	0	; () banked
  5054  001AA0  0100               	movwf	(??_Mode2+0+0)&0ffh
  5055  001AA2  6FAC               	clrf	(??_Mode2+0+0+1)&0ffh
  5056  001AA4  6BAD               
  5057                           		movf	(??_Mode2+0+0)&0ffh,w
  5058  001AA6  51AC               	subwf	((c:_led_breath)),c,w
  5059  001AA8  5C3A               	movf	((c:_led_breath+1)),c,w
  5060  001AAA  503B               	xorlw	80h
  5061  001AAC  0A80               	movwf	(??_Mode2+2+0)&0ffh
  5062  001AAE  6FAE               	movf	(??_Mode2+0+1)&0ffh,w
  5063  001AB0  51AD               	xorlw	80h
  5064  001AB2  0A80               	subwfb	(??_Mode2+2+0)&0ffh,w
  5065  001AB4  59AE               	btfss	status,0
  5066  001AB6  A0D8               	goto	u4821
  5067  001AB8  EF60  F00D         	goto	u4820
  5068  001ABC  EF62  F00D         
  5069                           u4821:
  5070  001AC0                     	goto	l4191
  5071  001AC0  EF6D  F00D         u4820:
  5072  001AC4                     	line	274
  5073                           	
  5074                           l4187:; BSR set to: 0
  5075  001AC4                     
  5076                           ;main.c: 274:             updown = 1;
  5077                           	movlw	high(01h)
  5078  001AC4  0E00               	movwf	((c:_updown+1)),c
  5079  001AC6  6E39               	movlw	low(01h)
  5080  001AC8  0E01               	movwf	((c:_updown)),c
  5081  001ACA  6E38               	line	275
  5082                           	
  5083                           l4189:; BSR set to: 0
  5084  001ACC                     
  5085                           ;main.c: 275:             led_breath = PR2;
  5086                           	movff	(c:4043),(c:_led_breath)	;volatile
  5087  001ACC  CFCB F03A          	clrf	((c:_led_breath+1)),c
  5088  001AD0  6A3B               	goto	l4191
  5089  001AD2  EF6D  F00D         	line	276
  5090                           ;main.c: 276:         }
  5091                           	
  5092                           l287:; BSR set to: 0
  5093  001AD6                     
  5094                           	goto	l4191
  5095  001AD6  EF6D  F00D         	
  5096                           l286:; BSR set to: 0
  5097  001ADA                     
  5098                           	line	278
  5099                           	
  5100                           l4191:
  5101  001ADA                     ;main.c: 278:         CCPR1L = led_breath*2/4;
  5102                           	bcf	status,0
  5103  001ADA  90D8               	rlcf	((c:_led_breath)),c,w
  5104  001ADC  343A               	movwf	((c:___awdiv@dividend)),c
  5105  001ADE  6E28               	rlcf	((c:_led_breath+1)),c,w
  5106  001AE0  343B               	movwf	1+((c:___awdiv@dividend)),c
  5107  001AE2  6E29               	movlw	high(04h)
  5108  001AE4  0E00               	movwf	((c:___awdiv@divisor+1)),c
  5109  001AE6  6E2B               	movlw	low(04h)
  5110  001AE8  0E04               	movwf	((c:___awdiv@divisor)),c
  5111  001AEA  6E2A               	call	___awdiv	;wreg free
  5112  001AEC  EC2E  F012         	movf	(0+?___awdiv),c,w
  5113  001AF0  5028               	movwf	((c:4030)),c	;volatile
  5114  001AF2  6EBE               	line	279
  5115                           	
  5116                           l4193:
  5117  001AF4                     ;main.c: 279:         CCP1CONbits.DC1B = led_breath*2%4;
  5118                           	bcf	status,0
  5119  001AF4  90D8               	rlcf	((c:_led_breath)),c,w
  5120  001AF6  343A               	movlb	0	; () banked
  5121  001AF8  0100               	movwf	(??_Mode2+0+0)&0ffh
  5122  001AFA  6FAC               	movlw	03h
  5123  001AFC  0E03               	andwf	(??_Mode2+0+0)&0ffh
  5124  001AFE  17AC               	swapf	(??_Mode2+0+0)&0ffh
  5125  001B00  3BAC               	movf	((c:4029)),c,w	;volatile
  5126  001B02  50BD               	xorwf	(??_Mode2+0+0)&0ffh,w
  5127  001B04  19AC               	andlw	not (((1<<2)-1)<<4)
  5128  001B06  0BCF               	xorwf	(??_Mode2+0+0)&0ffh,w
  5129  001B08  19AC               	movwf	((c:4029)),c	;volatile
  5130  001B0A  6EBD               	line	280
  5131                           	
  5132                           l4195:; BSR set to: 0
  5133  001B0C                     
  5134                           ;main.c: 280:         if(strstr(GetString(), "q") != ((void*)0)) {
  5135                           	call	_GetString	;wreg free
  5136  001B0C  EC38  F016         	movff	0+?_GetString,(strstr@h)
  5137  001B10  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  5138  001B14  C029  F081         		movlw	low(STR_16)
  5139  001B18  0E37               	movlb	0	; () banked
  5140  001B1A  0100               	movwf	((strstr@n))&0ffh
  5141  001B1C  6F82               	movlw	high(STR_16)
  5142  001B1E  0E06               	movwf	((strstr@n+1))&0ffh
  5143  001B20  6F83               
  5144                           	call	_strstr	;wreg free
  5145  001B22  EC1A  F013         	movlb	0	; () banked
  5146  001B26  0100               	movf	(0+?_strstr)&0ffh,w
  5147  001B28  5180               iorwf	(1+?_strstr)&0ffh,w
  5148  001B2A  1181               	btfsc	status,2
  5149  001B2C  B4D8               	goto	u4831
  5150  001B2E  EF9B  F00D         	goto	u4830
  5151  001B32  EF9D  F00D         
  5152                           u4831:
  5153  001B36                     	goto	l4171
  5154  001B36  EF9B  F00C         u4830:
  5155  001B3A                     	line	281
  5156                           	
  5157                           l4197:; BSR set to: 0
  5158  001B3A                     
  5159                           ;main.c: 281:             if(music_playing == 0)
  5160                           	movf	((_music_playing))&0ffh,w
  5161  001B3A  51BD               iorwf	((_music_playing+1))&0ffh,w
  5162  001B3C  11BE               	btfss	status,2
  5163  001B3E  A4D8               	goto	u4841
  5164  001B40  EFA4  F00D         	goto	u4840
  5165  001B44  EFA6  F00D         
  5166                           u4841:
  5167  001B48                     	goto	l4201
  5168  001B48  EFA9  F00D         u4840:
  5169  001B4C                     	line	282
  5170                           	
  5171                           l4199:; BSR set to: 0
  5172  001B4C                     
  5173                           ;main.c: 282:                 T2CONbits.TMR2ON = 0;
  5174                           	bcf	((c:4042)),c,2	;volatile
  5175  001B4C  94CA               	goto	l4201
  5176  001B4E  EFA9  F00D         	
  5177                           l289:; BSR set to: 0
  5178  001B52                     
  5179                           	line	283
  5180                           	
  5181                           l4201:; BSR set to: 0
  5182  001B52                     
  5183                           ;main.c: 283:             CCPR1L = 0;
  5184                           	movlw	low(0)
  5185  001B52  0E00               	movwf	((c:4030)),c	;volatile
  5186  001B54  6EBE               	line	284
  5187                           ;main.c: 284:             CCP1CONbits.DC1B = 0;
  5188                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
  5189  001B56  0ECF               	andwf	((c:4029)),c	;volatile
  5190  001B58  16BD               	line	285
  5191                           	
  5192                           l4203:; BSR set to: 0
  5193  001B5A                     
  5194                           ;main.c: 285:             ClearBuffer();
  5195                           	call	_ClearBuffer	;wreg free
  5196  001B5A  EC71  F014         	line	286
  5197                           ;main.c: 286:             break;
  5198                           	goto	l4205
  5199  001B5E  EFB5  F00D         	line	287
  5200                           ;main.c: 287:         }
  5201                           	
  5202                           l288:
  5203  001B62                     	goto	l4171
  5204  001B62  EF9B  F00C         	line	288
  5205                           ;main.c: 288:     }
  5206                           	
  5207                           l291:
  5208  001B66                     	goto	l4171
  5209  001B66  EF9B  F00C         	
  5210                           l290:
  5211  001B6A                     	line	289
  5212                           	
  5213                           l4205:
  5214  001B6A                     ;main.c: 289:     ClearBuffer();
  5215                           	call	_ClearBuffer	;wreg free
  5216  001B6A  EC71  F014         	line	290
  5217                           	
  5218                           l292:
  5219  001B6E                     	return	;funcret
  5220  001B6E  0012               	opt stack 0
  5221                           GLOBAL	__end_of_Mode2
  5222                           	__end_of_Mode2:
  5223  001B70                     	signat	_Mode2,89
  5224                           	global	___xxtofl
  5225                           
  5226 ;; *************** function ___xxtofl *****************
  5227 ;; Defined at:
  5228 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;  sign            1    wreg     unsigned char 
  5231 ;;  val             4   45[COMRAM] long 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  sign            1    0[BANK0 ] unsigned char 
  5234 ;;  arg             4    2[BANK0 ] unsigned long 
  5235 ;;  exp             1    1[BANK0 ] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  4   45[COMRAM] unsigned char 
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5245 ;;      Params:         4       0       0       0       0       0       0
  5246 ;;      Locals:         0       6       0       0       0       0       0
  5247 ;;      Temps:          4       0       0       0       0       0       0
  5248 ;;      Totals:         8       6       0       0       0       0       0
  5249 ;;Total ram usage:       14 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:    5
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_Mode2
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           psect	text12,class=CODE,space=0,reloc=2,group=1
  5259                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  5260                           	line	10
  5261                           global __ptext12
  5262                           __ptext12:
  5263  001B70                     psect	text12
  5264                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  5265                           	line	10
  5266                           	global	__size_of___xxtofl
  5267                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  5268  0000                     	
  5269                           ___xxtofl:
  5270  001B70                     ;incstack = 0
  5271                           	opt	stack 24
  5272                           ;___xxtofl@sign stored from wreg
  5273                           	movlb	0	; () banked
  5274  001B70  0100               	movwf	((___xxtofl@sign))&0ffh
  5275  001B72  6F80               	line	15
  5276                           	
  5277                           l3905:
  5278  001B74                     	movlb	0	; () banked
  5279  001B74  0100               	movf	((___xxtofl@sign))&0ffh,w
  5280  001B76  5180               	btfsc	status,2
  5281  001B78  B4D8               	goto	u4511
  5282  001B7A  EFC1  F00D         	goto	u4510
  5283  001B7E  EFC3  F00D         u4511:
  5284  001B82                     	goto	l988
  5285  001B82  EFE5  F00D         u4510:
  5286  001B86                     	
  5287                           l3907:; BSR set to: 0
  5288  001B86                     
  5289                           	btfsc	((c:___xxtofl@val+3)),c,7
  5290  001B86  BE31               	goto	u4520
  5291  001B88  EFCA  F00D         	goto	u4521
  5292  001B8C  EFC8  F00D         
  5293                           u4521:
  5294  001B90                     	goto	l988
  5295  001B90  EFE5  F00D         u4520:
  5296  001B94                     	line	16
  5297                           	
  5298                           l3909:; BSR set to: 0
  5299  001B94                     
  5300                           	movff	(c:___xxtofl@val),??___xxtofl+0+0
  5301  001B94  C02E  F032         	movff	(c:___xxtofl@val+1),??___xxtofl+0+0+1
  5302  001B98  C02F  F033         	movff	(c:___xxtofl@val+2),??___xxtofl+0+0+2
  5303  001B9C  C030  F034         	movff	(c:___xxtofl@val+3),??___xxtofl+0+0+3
  5304  001BA0  C031  F035         	comf	(??___xxtofl+0+0),c
  5305  001BA4  1E32               	comf	(??___xxtofl+0+1),c
  5306  001BA6  1E33               	comf	(??___xxtofl+0+2),c
  5307  001BA8  1E34               	comf	(??___xxtofl+0+3),c
  5308  001BAA  1E35               	incf	(??___xxtofl+0+0),c
  5309  001BAC  2A32               	movlw	0
  5310  001BAE  0E00               	addwfc	(??___xxtofl+0+1),c
  5311  001BB0  2233               	addwfc	(??___xxtofl+0+2),c
  5312  001BB2  2234               	addwfc	(??___xxtofl+0+3),c
  5313  001BB4  2235               	movff	??___xxtofl+0+0,(___xxtofl@arg)
  5314  001BB6  C032  F082         	movff	??___xxtofl+0+1,(___xxtofl@arg+1)
  5315  001BBA  C033  F083         	movff	??___xxtofl+0+2,(___xxtofl@arg+2)
  5316  001BBE  C034  F084         	movff	??___xxtofl+0+3,(___xxtofl@arg+3)
  5317  001BC2  C035  F085         	line	17
  5318                           	goto	l3911
  5319  001BC6  EFEF  F00D         	line	18
  5320                           	
  5321                           l988:; BSR set to: 0
  5322  001BCA                     
  5323                           	line	19
  5324                           	movff	(c:___xxtofl@val),(___xxtofl@arg)
  5325  001BCA  C02E  F082         	movff	(c:___xxtofl@val+1),(___xxtofl@arg+1)
  5326  001BCE  C02F  F083         	movff	(c:___xxtofl@val+2),(___xxtofl@arg+2)
  5327  001BD2  C030  F084         	movff	(c:___xxtofl@val+3),(___xxtofl@arg+3)
  5328  001BD6  C031  F085         	goto	l3911
  5329  001BDA  EFEF  F00D         	line	20
  5330                           	
  5331                           l989:; BSR set to: 0
  5332  001BDE                     
  5333                           	line	21
  5334                           	
  5335                           l3911:; BSR set to: 0
  5336  001BDE                     
  5337                           	movf	((c:___xxtofl@val)),c,w
  5338  001BDE  502E               iorwf	((c:___xxtofl@val+1)),c,w
  5339  001BE0  102F               iorwf	((c:___xxtofl@val+2)),c,w
  5340  001BE2  1030               iorwf	((c:___xxtofl@val+3)),c,w
  5341  001BE4  1031               	btfss	status,2
  5342  001BE6  A4D8               	goto	u4531
  5343  001BE8  EFF8  F00D         	goto	u4530
  5344  001BEC  EFFA  F00D         
  5345                           u4531:
  5346  001BF0                     	goto	l3917
  5347  001BF0  EF06  F00E         u4530:
  5348  001BF4                     	line	22
  5349                           	
  5350                           l3913:; BSR set to: 0
  5351  001BF4                     
  5352                           	movlw	low(normalize32(0x0))
  5353  001BF4  0E00               	movwf	((c:?___xxtofl)),c
  5354  001BF6  6E2E               	movlw	high(normalize32(0x0))
  5355  001BF8  0E00               	movwf	((c:?___xxtofl+1)),c
  5356  001BFA  6E2F               	movlw	low highword(normalize32(0x0))
  5357  001BFC  0E00               	movwf	((c:?___xxtofl+2)),c
  5358  001BFE  6E30               	movlw	high highword(normalize32(0x0))
  5359  001C00  0E00               	movwf	((c:?___xxtofl+3)),c
  5360  001C02  6E31               	goto	l991
  5361  001C04  EFA7  F00E         	
  5362                           l3915:; BSR set to: 0
  5363  001C08                     
  5364                           	goto	l991
  5365  001C08  EFA7  F00E         	
  5366                           l990:; BSR set to: 0
  5367  001C0C                     
  5368                           	line	23
  5369                           	
  5370                           l3917:; BSR set to: 0
  5371  001C0C                     
  5372                           	movlw	low(096h)
  5373  001C0C  0E96               	movwf	((___xxtofl@exp))&0ffh
  5374  001C0E  6F81               	line	24
  5375                           	goto	l3921
  5376  001C10  EF12  F00E         	
  5377                           l993:; BSR set to: 0
  5378  001C14                     
  5379                           	line	25
  5380                           	
  5381                           l3919:; BSR set to: 0
  5382  001C14                     
  5383                           	incf	((___xxtofl@exp))&0ffh
  5384  001C14  2B81               	line	26
  5385                           	bcf	status,0
  5386  001C16  90D8               	rrcf	((___xxtofl@arg+3))&0ffh
  5387  001C18  3385               	rrcf	((___xxtofl@arg+2))&0ffh
  5388  001C1A  3384               	rrcf	((___xxtofl@arg+1))&0ffh
  5389  001C1C  3383               	rrcf	((___xxtofl@arg))&0ffh
  5390  001C1E  3382               	goto	l3921
  5391  001C20  EF12  F00E         	line	27
  5392                           	
  5393                           l992:; BSR set to: 0
  5394  001C24                     
  5395                           	line	24
  5396                           	
  5397                           l3921:; BSR set to: 0
  5398  001C24                     
  5399                           	movlw	0
  5400  001C24  0E00               	andwf	((___xxtofl@arg))&0ffh,w
  5401  001C26  1582               	movwf	(??___xxtofl+0+0)&0ffh,c
  5402  001C28  6E32               	movlw	0
  5403  001C2A  0E00               	andwf	((___xxtofl@arg+1))&0ffh,w
  5404  001C2C  1583               	movwf	1+(??___xxtofl+0+0)&0ffh,c
  5405  001C2E  6E33               	
  5406                           	movlw	0
  5407  001C30  0E00               	andwf	((___xxtofl@arg+2))&0ffh,w
  5408  001C32  1584               	movwf	2+(??___xxtofl+0+0)&0ffh,c
  5409  001C34  6E34               	
  5410                           	movlw	0FEh
  5411  001C36  0EFE               	andwf	((___xxtofl@arg+3))&0ffh,w
  5412  001C38  1585               	movwf	3+(??___xxtofl+0+0)&0ffh,c
  5413  001C3A  6E35               	movf	(??___xxtofl+0+0),c,w
  5414  001C3C  5032               iorwf	(??___xxtofl+0+1),c,w
  5415  001C3E  1033               iorwf	(??___xxtofl+0+2),c,w
  5416  001C40  1034               iorwf	(??___xxtofl+0+3),c,w
  5417  001C42  1035               	btfss	status,2
  5418  001C44  A4D8               	goto	u4541
  5419  001C46  EF27  F00E         	goto	u4540
  5420  001C4A  EF29  F00E         
  5421                           u4541:
  5422  001C4E                     	goto	l3919
  5423  001C4E  EF0A  F00E         u4540:
  5424  001C52                     	goto	l995
  5425  001C52  EF39  F00E         	
  5426                           l994:; BSR set to: 0
  5427  001C56                     
  5428                           	line	28
  5429                           	goto	l995
  5430  001C56  EF39  F00E         	
  5431                           l996:; BSR set to: 0
  5432  001C5A                     
  5433                           	line	29
  5434                           	
  5435                           l3923:; BSR set to: 0
  5436  001C5A                     
  5437                           	incf	((___xxtofl@exp))&0ffh
  5438  001C5A  2B81               	line	30
  5439                           	
  5440                           l3925:; BSR set to: 0
  5441  001C5C                     
  5442                           	movlw	low(01h)
  5443  001C5C  0E01               	addwf	((___xxtofl@arg))&0ffh
  5444  001C5E  2782               	movlw	0
  5445  001C60  0E00               	addwfc	((___xxtofl@arg+1))&0ffh
  5446  001C62  2383               	addwfc	((___xxtofl@arg+2))&0ffh
  5447  001C64  2384               	addwfc	((___xxtofl@arg+3))&0ffh
  5448  001C66  2385               	line	31
  5449                           	
  5450                           l3927:; BSR set to: 0
  5451  001C68                     
  5452                           	bcf	status,0
  5453  001C68  90D8               	rrcf	((___xxtofl@arg+3))&0ffh
  5454  001C6A  3385               	rrcf	((___xxtofl@arg+2))&0ffh
  5455  001C6C  3384               	rrcf	((___xxtofl@arg+1))&0ffh
  5456  001C6E  3383               	rrcf	((___xxtofl@arg))&0ffh
  5457  001C70  3382               	line	32
  5458                           	
  5459                           l995:; BSR set to: 0
  5460  001C72                     
  5461                           	line	28
  5462                           	movlw	0
  5463  001C72  0E00               	andwf	((___xxtofl@arg))&0ffh,w
  5464  001C74  1582               	movwf	(??___xxtofl+0+0)&0ffh,c
  5465  001C76  6E32               	movlw	0
  5466  001C78  0E00               	andwf	((___xxtofl@arg+1))&0ffh,w
  5467  001C7A  1583               	movwf	1+(??___xxtofl+0+0)&0ffh,c
  5468  001C7C  6E33               	
  5469                           	movlw	0
  5470  001C7E  0E00               	andwf	((___xxtofl@arg+2))&0ffh,w
  5471  001C80  1584               	movwf	2+(??___xxtofl+0+0)&0ffh,c
  5472  001C82  6E34               	
  5473                           	movlw	0FFh
  5474  001C84  0EFF               	andwf	((___xxtofl@arg+3))&0ffh,w
  5475  001C86  1585               	movwf	3+(??___xxtofl+0+0)&0ffh,c
  5476  001C88  6E35               	movf	(??___xxtofl+0+0),c,w
  5477  001C8A  5032               iorwf	(??___xxtofl+0+1),c,w
  5478  001C8C  1033               iorwf	(??___xxtofl+0+2),c,w
  5479  001C8E  1034               iorwf	(??___xxtofl+0+3),c,w
  5480  001C90  1035               	btfss	status,2
  5481  001C92  A4D8               	goto	u4551
  5482  001C94  EF4E  F00E         	goto	u4550
  5483  001C98  EF50  F00E         
  5484                           u4551:
  5485  001C9C                     	goto	l3923
  5486  001C9C  EF2D  F00E         u4550:
  5487  001CA0                     	goto	l3931
  5488  001CA0  EF5C  F00E         	
  5489                           l997:; BSR set to: 0
  5490  001CA4                     
  5491                           	line	33
  5492                           	goto	l3931
  5493  001CA4  EF5C  F00E         	
  5494                           l999:; BSR set to: 0
  5495  001CA8                     
  5496                           	line	34
  5497                           	
  5498                           l3929:; BSR set to: 0
  5499  001CA8                     
  5500                           	decf	((___xxtofl@exp))&0ffh
  5501  001CA8  0781               	line	35
  5502                           	bcf	status,0
  5503  001CAA  90D8               	rlcf	((___xxtofl@arg))&0ffh
  5504  001CAC  3782               	rlcf	((___xxtofl@arg+1))&0ffh
  5505  001CAE  3783               	rlcf	((___xxtofl@arg+2))&0ffh
  5506  001CB0  3784               	rlcf	((___xxtofl@arg+3))&0ffh
  5507  001CB2  3785               	goto	l3931
  5508  001CB4  EF5C  F00E         	line	36
  5509                           	
  5510                           l998:; BSR set to: 0
  5511  001CB8                     
  5512                           	line	33
  5513                           	
  5514                           l3931:; BSR set to: 0
  5515  001CB8                     
  5516                           	
  5517                           	btfsc	((___xxtofl@arg+2))&0ffh,(23)&7
  5518  001CB8  BF84               	goto	u4561
  5519  001CBA  EF61  F00E         	goto	u4560
  5520  001CBE  EF63  F00E         u4561:
  5521  001CC2                     	goto	l1002
  5522  001CC2  EF6D  F00E         u4560:
  5523  001CC6                     	
  5524                           l3933:; BSR set to: 0
  5525  001CC6                     
  5526                           		movlw	02h-0
  5527  001CC6  0E02               	cpfslt	((___xxtofl@exp))&0ffh
  5528  001CC8  6181               	goto	u4571
  5529  001CCA  EF69  F00E         	goto	u4570
  5530  001CCE  EF6B  F00E         
  5531                           u4571:
  5532  001CD2                     	goto	l3929
  5533  001CD2  EF54  F00E         u4570:
  5534  001CD6                     	goto	l1002
  5535  001CD6  EF6D  F00E         	
  5536                           l1001:; BSR set to: 0
  5537  001CDA                     
  5538                           	
  5539                           l1002:; BSR set to: 0
  5540  001CDA                     
  5541                           	line	37
  5542                           	
  5543                           	btfsc	((___xxtofl@exp))&0ffh,(0)&7
  5544  001CDA  B181               	goto	u4581
  5545  001CDC  EF72  F00E         	goto	u4580
  5546  001CE0  EF74  F00E         u4581:
  5547  001CE4                     	goto	l3937
  5548  001CE4  EF77  F00E         u4580:
  5549  001CE8                     	line	38
  5550                           	
  5551                           l3935:; BSR set to: 0
  5552  001CE8                     
  5553                           	bcf	(0+(23/8)+(___xxtofl@arg))&0ffh,(23)&7
  5554  001CE8  9F84               	goto	l3937
  5555  001CEA  EF77  F00E         	
  5556                           l1003:; BSR set to: 0
  5557  001CEE                     
  5558                           	line	39
  5559                           	
  5560                           l3937:; BSR set to: 0
  5561  001CEE                     
  5562                           	bcf status,0
  5563  001CEE  90D8               	rrcf	((___xxtofl@exp))&0ffh
  5564  001CF0  3381               
  5565                           	line	40
  5566                           	
  5567                           l3939:; BSR set to: 0
  5568  001CF2                     
  5569                           	movff	(___xxtofl@exp),??___xxtofl+0+0
  5570  001CF2  C081  F032         	clrf	(??___xxtofl+0+0+1)&0ffh,c
  5571  001CF6  6A33               	clrf	(??___xxtofl+0+0+2)&0ffh,c
  5572  001CF8  6A34               	clrf	(??___xxtofl+0+0+3)&0ffh,c
  5573  001CFA  6A35               	movff	??___xxtofl+0+0,??___xxtofl+0+3
  5574  001CFC  C032  F035         	clrf	(??___xxtofl+0+2),c
  5575  001D00  6A34               	clrf	(??___xxtofl+0+1),c
  5576  001D02  6A33               	clrf	(??___xxtofl+0+0),c
  5577  001D04  6A32               	movf	(??___xxtofl+0+0),c,w
  5578  001D06  5032               	iorwf	((___xxtofl@arg))&0ffh
  5579  001D08  1382               	movf	(??___xxtofl+0+1),c,w
  5580  001D0A  5033               	iorwf	((___xxtofl@arg+1))&0ffh
  5581  001D0C  1383               	movf	(??___xxtofl+0+2),c,w
  5582  001D0E  5034               	iorwf	((___xxtofl@arg+2))&0ffh
  5583  001D10  1384               	movf	(??___xxtofl+0+3),c,w
  5584  001D12  5035               	iorwf	((___xxtofl@arg+3))&0ffh
  5585  001D14  1385               
  5586                           	line	41
  5587                           	
  5588                           l3941:; BSR set to: 0
  5589  001D16                     
  5590                           	movf	((___xxtofl@sign))&0ffh,w
  5591  001D16  5180               	btfsc	status,2
  5592  001D18  B4D8               	goto	u4591
  5593  001D1A  EF91  F00E         	goto	u4590
  5594  001D1E  EF93  F00E         u4591:
  5595  001D22                     	goto	l3947
  5596  001D22  EF9D  F00E         u4590:
  5597  001D26                     	
  5598                           l3943:; BSR set to: 0
  5599  001D26                     
  5600                           	btfsc	((c:___xxtofl@val+3)),c,7
  5601  001D26  BE31               	goto	u4600
  5602  001D28  EF9A  F00E         	goto	u4601
  5603  001D2C  EF98  F00E         
  5604                           u4601:
  5605  001D30                     	goto	l3947
  5606  001D30  EF9D  F00E         u4600:
  5607  001D34                     	line	42
  5608                           	
  5609                           l3945:; BSR set to: 0
  5610  001D34                     
  5611                           	bsf	(0+(31/8)+(___xxtofl@arg))&0ffh,(31)&7
  5612  001D34  8F85               	goto	l3947
  5613  001D36  EF9D  F00E         	
  5614                           l1004:; BSR set to: 0
  5615  001D3A                     
  5616                           	line	43
  5617                           	
  5618                           l3947:; BSR set to: 0
  5619  001D3A                     
  5620                           	movff	(___xxtofl@arg),(c:?___xxtofl)
  5621  001D3A  C082  F02E         	movff	(___xxtofl@arg+1),(c:?___xxtofl+1)
  5622  001D3E  C083  F02F         	movff	(___xxtofl@arg+2),(c:?___xxtofl+2)
  5623  001D42  C084  F030         	movff	(___xxtofl@arg+3),(c:?___xxtofl+3)
  5624  001D46  C085  F031         	goto	l991
  5625  001D4A  EFA7  F00E         	
  5626                           l3949:; BSR set to: 0
  5627  001D4E                     
  5628                           	line	44
  5629                           	
  5630                           l991:; BSR set to: 0
  5631  001D4E                     
  5632                           	return	;funcret
  5633  001D4E  0012               	opt stack 0
  5634                           GLOBAL	__end_of___xxtofl
  5635                           	__end_of___xxtofl:
  5636  001D50                     	signat	___xxtofl,8316
  5637                           	global	___fltol
  5638                           
  5639 ;; *************** function ___fltol *****************
  5640 ;; Defined at:
  5641 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  f1              4   34[BANK0 ] unsigned char 
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;  exp1            1   43[BANK0 ] unsigned char 
  5646 ;;  sign1           1   42[BANK0 ] unsigned char 
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  4   34[BANK0 ] long 
  5649 ;; Registers used:
  5650 ;;		wreg, status,2, status,0
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5656 ;;      Params:         0       4       0       0       0       0       0
  5657 ;;      Locals:         0       2       0       0       0       0       0
  5658 ;;      Temps:          0       4       0       0       0       0       0
  5659 ;;      Totals:         0      10       0       0       0       0       0
  5660 ;;Total ram usage:       10 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; Hardware stack levels required when called:    5
  5663 ;; This function calls:
  5664 ;;		Nothing
  5665 ;; This function is called by:
  5666 ;;		_Mode2
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           psect	text13,class=CODE,space=0,reloc=2,group=1
  5670                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  5671                           	line	43
  5672                           global __ptext13
  5673                           __ptext13:
  5674  001EA8                     psect	text13
  5675                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  5676                           	line	43
  5677                           	global	__size_of___fltol
  5678                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  5679  0000                     	
  5680                           ___fltol:; BSR set to: 0
  5681  001EA8                     
  5682                           ;incstack = 0
  5683                           	opt	stack 24
  5684                           	line	47
  5685                           	
  5686                           l2817:
  5687  001EA8                     	movlb	0	; () banked
  5688  001EA8  0100               	rlcf	((___fltol@f1+2))&0ffh,w
  5689  001EAA  35A4               	rlcf	((___fltol@f1+3))&0ffh,w
  5690  001EAC  35A5               	movwf	((___fltol@exp1))&0ffh
  5691  001EAE  6FAB               	movf	((___fltol@exp1))&0ffh,w
  5692  001EB0  51AB               	btfss	status,2
  5693  001EB2  A4D8               	goto	u2781
  5694  001EB4  EF5E  F00F         	goto	u2780
  5695  001EB8  EF60  F00F         u2781:
  5696  001EBC                     	goto	l2823
  5697  001EBC  EF6C  F00F         u2780:
  5698  001EC0                     	line	48
  5699                           	
  5700                           l2819:; BSR set to: 0
  5701  001EC0                     
  5702                           	movlw	low(0)
  5703  001EC0  0E00               	movwf	((?___fltol))&0ffh
  5704  001EC2  6FA2               	movlw	high(0)
  5705  001EC4  0E00               	movwf	((?___fltol+1))&0ffh
  5706  001EC6  6FA3               	movlw	low highword(0)
  5707  001EC8  0E00               	movwf	((?___fltol+2))&0ffh
  5708  001ECA  6FA4               	movlw	high highword(0)
  5709  001ECC  0E00               	movwf	((?___fltol+3))&0ffh
  5710  001ECE  6FA5               	goto	l630
  5711  001ED0  EFFD  F00F         	
  5712                           l2821:; BSR set to: 0
  5713  001ED4                     
  5714                           	goto	l630
  5715  001ED4  EFFD  F00F         	
  5716                           l629:; BSR set to: 0
  5717  001ED8                     
  5718                           	line	49
  5719                           	
  5720                           l2823:; BSR set to: 0
  5721  001ED8                     
  5722                           	movff	(___fltol@f1),??___fltol+0+0
  5723  001ED8  C0A2  F0A6         	movff	(___fltol@f1+1),??___fltol+0+0+1
  5724  001EDC  C0A3  F0A7         	movff	(___fltol@f1+2),??___fltol+0+0+2
  5725  001EE0  C0A4  F0A8         	movff	(___fltol@f1+3),??___fltol+0+0+3
  5726  001EE4  C0A5  F0A9         	movlw	01Fh+1
  5727  001EE8  0E20               	goto	u2790
  5728  001EEA  EF7C  F00F         u2795:
  5729  001EEE                     	bcf	status,0
  5730  001EEE  90D8               	rrcf	(??___fltol+0+3)&0ffh
  5731  001EF0  33A9               	rrcf	(??___fltol+0+2)&0ffh
  5732  001EF2  33A8               	rrcf	(??___fltol+0+1)&0ffh
  5733  001EF4  33A7               	rrcf	(??___fltol+0+0)&0ffh
  5734  001EF6  33A6               u2790:
  5735  001EF8                     	decfsz	wreg
  5736  001EF8  2EE8               	goto	u2795
  5737  001EFA  EF77  F00F         	movf	(??___fltol+0+0)&0ffh,w
  5738  001EFE  51A6               	movwf	((___fltol@sign1))&0ffh
  5739  001F00  6FAA               	line	50
  5740                           	
  5741                           l2825:; BSR set to: 0
  5742  001F02                     
  5743                           	bsf	(0+(23/8)+(___fltol@f1))&0ffh,(23)&7
  5744  001F02  8FA4               	line	51
  5745                           	
  5746                           l2827:; BSR set to: 0
  5747  001F04                     
  5748                           	movlw	0FFh
  5749  001F04  0EFF               	andwf	((___fltol@f1))&0ffh
  5750  001F06  17A2               	movlw	0FFh
  5751  001F08  0EFF               	andwf	((___fltol@f1+1))&0ffh
  5752  001F0A  17A3               	movlw	0FFh
  5753  001F0C  0EFF               	andwf	((___fltol@f1+2))&0ffh
  5754  001F0E  17A4               	movlw	0
  5755  001F10  0E00               	andwf	((___fltol@f1+3))&0ffh
  5756  001F12  17A5               	line	52
  5757                           	
  5758                           l2829:; BSR set to: 0
  5759  001F14                     
  5760                           	movlw	(096h)&0ffh
  5761  001F14  0E96               	subwf	((___fltol@exp1))&0ffh
  5762  001F16  5FAB               	line	53
  5763                           	
  5764                           l2831:; BSR set to: 0
  5765  001F18                     
  5766                           	btfsc	((___fltol@exp1))&0ffh,7
  5767  001F18  BFAB               	goto	u2800
  5768  001F1A  EF93  F00F         	goto	u2801
  5769  001F1E  EF91  F00F         
  5770                           u2801:
  5771  001F22                     	goto	l2843
  5772  001F22  EFB7  F00F         u2800:
  5773  001F26                     	line	54
  5774                           	
  5775                           l2833:; BSR set to: 0
  5776  001F26                     
  5777                           		movf	((___fltol@exp1))&0ffh,w
  5778  001F26  51AB               	xorlw	80h
  5779  001F28  0A80               	addlw	-(80h^-23)
  5780  001F2A  0F97               	btfsc	status,0
  5781  001F2C  B0D8               	goto	u2811
  5782  001F2E  EF9B  F00F         	goto	u2810
  5783  001F32  EF9D  F00F         
  5784                           u2811:
  5785  001F36                     	goto	l2839
  5786  001F36  EFAB  F00F         u2810:
  5787  001F3A                     	line	55
  5788                           	
  5789                           l2835:; BSR set to: 0
  5790  001F3A                     
  5791                           	movlw	low(0)
  5792  001F3A  0E00               	movwf	((?___fltol))&0ffh
  5793  001F3C  6FA2               	movlw	high(0)
  5794  001F3E  0E00               	movwf	((?___fltol+1))&0ffh
  5795  001F40  6FA3               	movlw	low highword(0)
  5796  001F42  0E00               	movwf	((?___fltol+2))&0ffh
  5797  001F44  6FA4               	movlw	high highword(0)
  5798  001F46  0E00               	movwf	((?___fltol+3))&0ffh
  5799  001F48  6FA5               	goto	l630
  5800  001F4A  EFFD  F00F         	
  5801                           l2837:; BSR set to: 0
  5802  001F4E                     
  5803                           	goto	l630
  5804  001F4E  EFFD  F00F         	
  5805                           l632:; BSR set to: 0
  5806  001F52                     
  5807                           	goto	l2839
  5808  001F52  EFAB  F00F         	line	56
  5809                           	
  5810                           l633:; BSR set to: 0
  5811  001F56                     
  5812                           	line	57
  5813                           	
  5814                           l2839:; BSR set to: 0
  5815  001F56                     
  5816                           	bcf	status,0
  5817  001F56  90D8               	rrcf	((___fltol@f1+3))&0ffh
  5818  001F58  33A5               	rrcf	((___fltol@f1+2))&0ffh
  5819  001F5A  33A4               	rrcf	((___fltol@f1+1))&0ffh
  5820  001F5C  33A3               	rrcf	((___fltol@f1))&0ffh
  5821  001F5E  33A2               	
  5822                           l2841:; BSR set to: 0
  5823  001F60                     
  5824                           	incfsz	((___fltol@exp1))&0ffh
  5825  001F60  3FAB               	
  5826                           	goto	l2839
  5827  001F62  EFAB  F00F         	goto	l2853
  5828  001F66  EFE1  F00F         	
  5829                           l634:; BSR set to: 0
  5830  001F6A                     
  5831                           	line	59
  5832                           	goto	l2853
  5833  001F6A  EFE1  F00F         	
  5834                           l631:; BSR set to: 0
  5835  001F6E                     
  5836                           	line	60
  5837                           	
  5838                           l2843:; BSR set to: 0
  5839  001F6E                     
  5840                           		movlw	020h-1
  5841  001F6E  0E1F               	cpfsgt	((___fltol@exp1))&0ffh
  5842  001F70  65AB               	goto	u2821
  5843  001F72  EFBD  F00F         	goto	u2820
  5844  001F76  EFBF  F00F         
  5845                           u2821:
  5846  001F7A                     	goto	l2851
  5847  001F7A  EFD5  F00F         u2820:
  5848  001F7E                     	line	61
  5849                           	
  5850                           l2845:; BSR set to: 0
  5851  001F7E                     
  5852                           	movlw	low(0)
  5853  001F7E  0E00               	movwf	((?___fltol))&0ffh
  5854  001F80  6FA2               	movlw	high(0)
  5855  001F82  0E00               	movwf	((?___fltol+1))&0ffh
  5856  001F84  6FA3               	movlw	low highword(0)
  5857  001F86  0E00               	movwf	((?___fltol+2))&0ffh
  5858  001F88  6FA4               	movlw	high highword(0)
  5859  001F8A  0E00               	movwf	((?___fltol+3))&0ffh
  5860  001F8C  6FA5               	goto	l630
  5861  001F8E  EFFD  F00F         	
  5862                           l2847:; BSR set to: 0
  5863  001F92                     
  5864                           	goto	l630
  5865  001F92  EFFD  F00F         	
  5866                           l636:; BSR set to: 0
  5867  001F96                     
  5868                           	line	62
  5869                           	goto	l2851
  5870  001F96  EFD5  F00F         	
  5871                           l638:; BSR set to: 0
  5872  001F9A                     
  5873                           	line	63
  5874                           	
  5875                           l2849:; BSR set to: 0
  5876  001F9A                     
  5877                           	bcf	status,0
  5878  001F9A  90D8               	rlcf	((___fltol@f1))&0ffh
  5879  001F9C  37A2               	rlcf	((___fltol@f1+1))&0ffh
  5880  001F9E  37A3               	rlcf	((___fltol@f1+2))&0ffh
  5881  001FA0  37A4               	rlcf	((___fltol@f1+3))&0ffh
  5882  001FA2  37A5               	line	64
  5883                           	decf	((___fltol@exp1))&0ffh
  5884  001FA4  07AB               	goto	l2851
  5885  001FA6  EFD5  F00F         	line	65
  5886                           	
  5887                           l637:; BSR set to: 0
  5888  001FAA                     
  5889                           	line	62
  5890                           	
  5891                           l2851:; BSR set to: 0
  5892  001FAA                     
  5893                           	movf	((___fltol@exp1))&0ffh,w
  5894  001FAA  51AB               	btfss	status,2
  5895  001FAC  A4D8               	goto	u2831
  5896  001FAE  EFDB  F00F         	goto	u2830
  5897  001FB2  EFDD  F00F         u2831:
  5898  001FB6                     	goto	l2849
  5899  001FB6  EFCD  F00F         u2830:
  5900  001FBA                     	goto	l2853
  5901  001FBA  EFE1  F00F         	
  5902                           l639:; BSR set to: 0
  5903  001FBE                     
  5904                           	goto	l2853
  5905  001FBE  EFE1  F00F         	line	66
  5906                           	
  5907                           l635:; BSR set to: 0
  5908  001FC2                     
  5909                           	line	67
  5910                           	
  5911                           l2853:; BSR set to: 0
  5912  001FC2                     
  5913                           	movf	((___fltol@sign1))&0ffh,w
  5914  001FC2  51AA               	btfsc	status,2
  5915  001FC4  B4D8               	goto	u2841
  5916  001FC6  EFE7  F00F         	goto	u2840
  5917  001FCA  EFE9  F00F         u2841:
  5918  001FCE                     	goto	l2857
  5919  001FCE  EFF3  F00F         u2840:
  5920  001FD2                     	line	68
  5921                           	
  5922                           l2855:; BSR set to: 0
  5923  001FD2                     
  5924                           	comf	((___fltol@f1+3))&0ffh
  5925  001FD2  1FA5               	comf	((___fltol@f1+2))&0ffh
  5926  001FD4  1FA4               	comf	((___fltol@f1+1))&0ffh
  5927  001FD6  1FA3               	negf	((___fltol@f1))&0ffh
  5928  001FD8  6DA2               	movlw	0
  5929  001FDA  0E00               	addwfc	((___fltol@f1+1))&0ffh
  5930  001FDC  23A3               	addwfc	((___fltol@f1+2))&0ffh
  5931  001FDE  23A4               	addwfc	((___fltol@f1+3))&0ffh
  5932  001FE0  23A5               	goto	l2857
  5933  001FE2  EFF3  F00F         	
  5934                           l640:; BSR set to: 0
  5935  001FE6                     
  5936                           	line	69
  5937                           	
  5938                           l2857:; BSR set to: 0
  5939  001FE6                     
  5940                           	movff	(___fltol@f1),(?___fltol)
  5941  001FE6  C0A2  F0A2         	movff	(___fltol@f1+1),(?___fltol+1)
  5942  001FEA  C0A3  F0A3         	movff	(___fltol@f1+2),(?___fltol+2)
  5943  001FEE  C0A4  F0A4         	movff	(___fltol@f1+3),(?___fltol+3)
  5944  001FF2  C0A5  F0A5         	goto	l630
  5945  001FF6  EFFD  F00F         	
  5946                           l2859:; BSR set to: 0
  5947  001FFA                     
  5948                           	line	70
  5949                           	
  5950                           l630:; BSR set to: 0
  5951  001FFA                     
  5952                           	return	;funcret
  5953  001FFA  0012               	opt stack 0
  5954                           GLOBAL	__end_of___fltol
  5955                           	__end_of___fltol:
  5956  001FFC                     	signat	___fltol,4220
  5957                           	global	___flsub
  5958                           
  5959 ;; *************** function ___flsub *****************
  5960 ;; Defined at:
  5961 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  b               4   26[BANK0 ] long 
  5964 ;;  a               4   30[BANK0 ] long 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;		None
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  4   26[BANK0 ] long 
  5969 ;; Registers used:
  5970 ;;		wreg, status,2, status,0, cstack
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5976 ;;      Params:         0       8       0       0       0       0       0
  5977 ;;      Locals:         0       0       0       0       0       0       0
  5978 ;;      Temps:          0       0       0       0       0       0       0
  5979 ;;      Totals:         0       8       0       0       0       0       0
  5980 ;;Total ram usage:        8 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:    6
  5983 ;; This function calls:
  5984 ;;		___fladd
  5985 ;; This function is called by:
  5986 ;;		_Mode2
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           psect	text14,class=CODE,space=0,reloc=2,group=1
  5990                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
  5991                           	line	245
  5992                           global __ptext14
  5993                           __ptext14:
  5994  002AB8                     psect	text14
  5995                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
  5996                           	line	245
  5997                           	global	__size_of___flsub
  5998                           	__size_of___flsub	equ	__end_of___flsub-___flsub
  5999  0000                     	
  6000                           ___flsub:; BSR set to: 0
  6001  002AB8                     
  6002                           ;incstack = 0
  6003                           	opt	stack 23
  6004                           	line	248
  6005                           	
  6006                           l3899:
  6007  002AB8                     	movlw	0
  6008  002AB8  0E00               	movlb	0	; () banked
  6009  002ABA  0100               	xorwf	((___flsub@a))&0ffh
  6010  002ABC  1B9E               	movlw	0
  6011  002ABE  0E00               	xorwf	((___flsub@a+1))&0ffh
  6012  002AC0  1B9F               	movlw	0
  6013  002AC2  0E00               	xorwf	((___flsub@a+2))&0ffh
  6014  002AC4  1BA0               	movlw	080h
  6015  002AC6  0E80               	xorwf	((___flsub@a+3))&0ffh
  6016  002AC8  1BA1               	line	249
  6017                           	
  6018                           l3901:; BSR set to: 0
  6019  002ACA                     
  6020                           	movff	(___flsub@b),(___fladd@b)
  6021  002ACA  C09A  F086         	movff	(___flsub@b+1),(___fladd@b+1)
  6022  002ACE  C09B  F087         	movff	(___flsub@b+2),(___fladd@b+2)
  6023  002AD2  C09C  F088         	movff	(___flsub@b+3),(___fladd@b+3)
  6024  002AD6  C09D  F089         	movff	(___flsub@a),(___fladd@a)
  6025  002ADA  C09E  F08A         	movff	(___flsub@a+1),(___fladd@a+1)
  6026  002ADE  C09F  F08B         	movff	(___flsub@a+2),(___fladd@a+2)
  6027  002AE2  C0A0  F08C         	movff	(___flsub@a+3),(___fladd@a+3)
  6028  002AE6  C0A1  F08D         	call	___fladd	;wreg free
  6029  002AEA  EC1E  F003         	movff	0+?___fladd,(?___flsub)
  6030  002AEE  C086  F09A         	movff	1+?___fladd,(?___flsub+1)
  6031  002AF2  C087  F09B         	movff	2+?___fladd,(?___flsub+2)
  6032  002AF6  C088  F09C         	movff	3+?___fladd,(?___flsub+3)
  6033  002AFA  C089  F09D         	
  6034                           	goto	l903
  6035  002AFE  EF81  F015         	
  6036                           l3903:
  6037  002B02                     	line	250
  6038                           	
  6039                           l903:
  6040  002B02                     	return	;funcret
  6041  002B02  0012               	opt stack 0
  6042                           GLOBAL	__end_of___flsub
  6043                           	__end_of___flsub:
  6044  002B04                     	signat	___flsub,8316
  6045                           	global	___fladd
  6046                           
  6047 ;; *************** function ___fladd *****************
  6048 ;; Defined at:
  6049 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  b               4    6[BANK0 ] long 
  6052 ;;  a               4   10[BANK0 ] long 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  grs             1   25[BANK0 ] unsigned char 
  6055 ;;  bexp            1   24[BANK0 ] unsigned char 
  6056 ;;  aexp            1   23[BANK0 ] unsigned char 
  6057 ;;  signs           1   22[BANK0 ] unsigned char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  4    6[BANK0 ] unsigned char 
  6060 ;; Registers used:
  6061 ;;		wreg, status,2, status,0
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6067 ;;      Params:         0       8       0       0       0       0       0
  6068 ;;      Locals:         0       4       0       0       0       0       0
  6069 ;;      Temps:          0       8       0       0       0       0       0
  6070 ;;      Totals:         0      20       0       0       0       0       0
  6071 ;;Total ram usage:       20 bytes
  6072 ;; Hardware stack levels used:    1
  6073 ;; Hardware stack levels required when called:    5
  6074 ;; This function calls:
  6075 ;;		Nothing
  6076 ;; This function is called by:
  6077 ;;		_Mode2
  6078 ;;		___flsub
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           psect	text15,class=CODE,space=0,reloc=2,group=1
  6082                           	line	10
  6083                           global __ptext15
  6084                           __ptext15:
  6085  00063C                     psect	text15
  6086                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
  6087                           	line	10
  6088                           	global	__size_of___fladd
  6089                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  6090  0000                     	
  6091                           ___fladd:
  6092  00063C                     ;incstack = 0
  6093                           	opt	stack 23
  6094                           	line	21
  6095                           	
  6096                           l3505:
  6097  00063C                     	movlb	0	; () banked
  6098  00063C  0100               	movf	(0+(___fladd@b+03h))&0ffh,w
  6099  00063E  5189               	andlw	low(080h)
  6100  000640  0B80               	movwf	((___fladd@signs))&0ffh
  6101  000642  6F96               	line	22
  6102                           	movf	(0+(___fladd@b+03h))&0ffh,w
  6103  000644  5189               	addwf	(0+(___fladd@b+03h))&0ffh,w
  6104  000646  2589               	movwf	((___fladd@bexp))&0ffh
  6105  000648  6F98               	line	23
  6106                           	
  6107                           l3507:; BSR set to: 0
  6108  00064A                     
  6109                           	
  6110                           	btfss	(0+(___fladd@b+02h))&0ffh,(7)&7
  6111  00064A  AF88               	goto	u3811
  6112  00064C  EF2A  F003         	goto	u3810
  6113  000650  EF2C  F003         u3811:
  6114  000654                     	goto	l3511
  6115  000654  EF2F  F003         u3810:
  6116  000658                     	line	24
  6117                           	
  6118                           l3509:; BSR set to: 0
  6119  000658                     
  6120                           	bsf	(0+(0/8)+(___fladd@bexp))&0ffh,(0)&7
  6121  000658  8198               	goto	l3511
  6122  00065A  EF2F  F003         	line	25
  6123                           	
  6124                           l849:; BSR set to: 0
  6125  00065E                     
  6126                           	line	28
  6127                           	
  6128                           l3511:; BSR set to: 0
  6129  00065E                     
  6130                           	movf	((___fladd@bexp))&0ffh,w
  6131  00065E  5198               	btfsc	status,2
  6132  000660  B4D8               	goto	u3821
  6133  000662  EF35  F003         	goto	u3820
  6134  000666  EF37  F003         u3821:
  6135  00066A                     	goto	l3521
  6136  00066A  EF4E  F003         u3820:
  6137  00066E                     	line	30
  6138                           	
  6139                           l3513:; BSR set to: 0
  6140  00066E                     
  6141                           		incf	((___fladd@bexp))&0ffh,w
  6142  00066E  2998               	btfss	status,2
  6143  000670  A4D8               	goto	u3831
  6144  000672  EF3D  F003         	goto	u3830
  6145  000676  EF3F  F003         
  6146                           u3831:
  6147  00067A                     	goto	l3517
  6148  00067A  EF49  F003         u3830:
  6149  00067E                     	line	32
  6150                           	
  6151                           l3515:; BSR set to: 0
  6152  00067E                     
  6153                           	movlw	low(normalize32(0x0))
  6154  00067E  0E00               	movwf	((___fladd@b))&0ffh
  6155  000680  6F86               	movlw	high(normalize32(0x0))
  6156  000682  0E00               	movwf	((___fladd@b+1))&0ffh
  6157  000684  6F87               	movlw	low highword(normalize32(0x0))
  6158  000686  0E00               	movwf	((___fladd@b+2))&0ffh
  6159  000688  6F88               	movlw	high highword(normalize32(0x0))
  6160  00068A  0E00               	movwf	((___fladd@b+3))&0ffh
  6161  00068C  6F89               	goto	l3517
  6162  00068E  EF49  F003         	line	33
  6163                           	
  6164                           l851:; BSR set to: 0
  6165  000692                     
  6166                           	line	35
  6167                           	
  6168                           l3517:; BSR set to: 0
  6169  000692                     
  6170                           	bsf	(0+(23/8)+(___fladd@b))&0ffh,(23)&7
  6171  000692  8F88               	line	37
  6172                           	
  6173                           l3519:; BSR set to: 0
  6174  000694                     
  6175                           	movlw	low(0)
  6176  000694  0E00               	movwf	(0+(___fladd@b+03h))&0ffh
  6177  000696  6F89               	line	38
  6178                           	goto	l3523
  6179  000698  EF58  F003         	line	39
  6180                           	
  6181                           l850:; BSR set to: 0
  6182  00069C                     
  6183                           	line	41
  6184                           	
  6185                           l3521:; BSR set to: 0
  6186  00069C                     
  6187                           	movlw	low(normalize32(0x0))
  6188  00069C  0E00               	movwf	((___fladd@b))&0ffh
  6189  00069E  6F86               	movlw	high(normalize32(0x0))
  6190  0006A0  0E00               	movwf	((___fladd@b+1))&0ffh
  6191  0006A2  6F87               	movlw	low highword(normalize32(0x0))
  6192  0006A4  0E00               	movwf	((___fladd@b+2))&0ffh
  6193  0006A6  6F88               	movlw	high highword(normalize32(0x0))
  6194  0006A8  0E00               	movwf	((___fladd@b+3))&0ffh
  6195  0006AA  6F89               	goto	l3523
  6196  0006AC  EF58  F003         	line	42
  6197                           	
  6198                           l852:; BSR set to: 0
  6199  0006B0                     
  6200                           	line	44
  6201                           	
  6202                           l3523:; BSR set to: 0
  6203  0006B0                     
  6204                           	movf	(0+(___fladd@a+03h))&0ffh,w
  6205  0006B0  518D               	andlw	low(080h)
  6206  0006B2  0B80               	movwf	((___fladd@aexp))&0ffh
  6207  0006B4  6F97               	line	46
  6208                           	
  6209                           l3525:; BSR set to: 0
  6210  0006B6                     
  6211                           	movf	((___fladd@signs))&0ffh,w
  6212  0006B6  5196               xorwf	((___fladd@aexp))&0ffh,w
  6213  0006B8  1997               	btfsc	status,2
  6214  0006BA  B4D8               	goto	u3841
  6215  0006BC  EF62  F003         	goto	u3840
  6216  0006C0  EF64  F003         
  6217                           u3841:
  6218  0006C4                     	goto	l3529
  6219  0006C4  EF67  F003         u3840:
  6220  0006C8                     	line	47
  6221                           	
  6222                           l3527:; BSR set to: 0
  6223  0006C8                     
  6224                           	bsf	(0+(6/8)+(___fladd@signs))&0ffh,(6)&7
  6225  0006C8  8D96               	goto	l3529
  6226  0006CA  EF67  F003         	line	48
  6227                           	
  6228                           l853:; BSR set to: 0
  6229  0006CE                     
  6230                           	line	49
  6231                           	
  6232                           l3529:; BSR set to: 0
  6233  0006CE                     
  6234                           	movf	(0+(___fladd@a+03h))&0ffh,w
  6235  0006CE  518D               	addwf	(0+(___fladd@a+03h))&0ffh,w
  6236  0006D0  258D               	movwf	((___fladd@aexp))&0ffh
  6237  0006D2  6F97               	line	50
  6238                           	
  6239                           l3531:; BSR set to: 0
  6240  0006D4                     
  6241                           	
  6242                           	btfss	(0+(___fladd@a+02h))&0ffh,(7)&7
  6243  0006D4  AF8C               	goto	u3851
  6244  0006D6  EF6F  F003         	goto	u3850
  6245  0006DA  EF71  F003         u3851:
  6246  0006DE                     	goto	l3535
  6247  0006DE  EF74  F003         u3850:
  6248  0006E2                     	line	51
  6249                           	
  6250                           l3533:; BSR set to: 0
  6251  0006E2                     
  6252                           	bsf	(0+(0/8)+(___fladd@aexp))&0ffh,(0)&7
  6253  0006E2  8197               	goto	l3535
  6254  0006E4  EF74  F003         	line	52
  6255                           	
  6256                           l854:; BSR set to: 0
  6257  0006E8                     
  6258                           	line	55
  6259                           	
  6260                           l3535:; BSR set to: 0
  6261  0006E8                     
  6262                           	movf	((___fladd@aexp))&0ffh,w
  6263  0006E8  5197               	btfsc	status,2
  6264  0006EA  B4D8               	goto	u3861
  6265  0006EC  EF7A  F003         	goto	u3860
  6266  0006F0  EF7C  F003         u3861:
  6267  0006F4                     	goto	l3545
  6268  0006F4  EF93  F003         u3860:
  6269  0006F8                     	line	57
  6270                           	
  6271                           l3537:; BSR set to: 0
  6272  0006F8                     
  6273                           		incf	((___fladd@aexp))&0ffh,w
  6274  0006F8  2997               	btfss	status,2
  6275  0006FA  A4D8               	goto	u3871
  6276  0006FC  EF82  F003         	goto	u3870
  6277  000700  EF84  F003         
  6278                           u3871:
  6279  000704                     	goto	l3541
  6280  000704  EF8E  F003         u3870:
  6281  000708                     	line	59
  6282                           	
  6283                           l3539:; BSR set to: 0
  6284  000708                     
  6285                           	movlw	low(normalize32(0x0))
  6286  000708  0E00               	movwf	((___fladd@a))&0ffh
  6287  00070A  6F8A               	movlw	high(normalize32(0x0))
  6288  00070C  0E00               	movwf	((___fladd@a+1))&0ffh
  6289  00070E  6F8B               	movlw	low highword(normalize32(0x0))
  6290  000710  0E00               	movwf	((___fladd@a+2))&0ffh
  6291  000712  6F8C               	movlw	high highword(normalize32(0x0))
  6292  000714  0E00               	movwf	((___fladd@a+3))&0ffh
  6293  000716  6F8D               	goto	l3541
  6294  000718  EF8E  F003         	line	60
  6295                           	
  6296                           l856:; BSR set to: 0
  6297  00071C                     
  6298                           	line	62
  6299                           	
  6300                           l3541:; BSR set to: 0
  6301  00071C                     
  6302                           	bsf	(0+(23/8)+(___fladd@a))&0ffh,(23)&7
  6303  00071C  8F8C               	line	64
  6304                           	
  6305                           l3543:; BSR set to: 0
  6306  00071E                     
  6307                           	movlw	low(0)
  6308  00071E  0E00               	movwf	(0+(___fladd@a+03h))&0ffh
  6309  000720  6F8D               	line	65
  6310                           	goto	l3547
  6311  000722  EF9D  F003         	line	66
  6312                           	
  6313                           l855:; BSR set to: 0
  6314  000726                     
  6315                           	line	68
  6316                           	
  6317                           l3545:; BSR set to: 0
  6318  000726                     
  6319                           	movlw	low(normalize32(0x0))
  6320  000726  0E00               	movwf	((___fladd@a))&0ffh
  6321  000728  6F8A               	movlw	high(normalize32(0x0))
  6322  00072A  0E00               	movwf	((___fladd@a+1))&0ffh
  6323  00072C  6F8B               	movlw	low highword(normalize32(0x0))
  6324  00072E  0E00               	movwf	((___fladd@a+2))&0ffh
  6325  000730  6F8C               	movlw	high highword(normalize32(0x0))
  6326  000732  0E00               	movwf	((___fladd@a+3))&0ffh
  6327  000734  6F8D               	goto	l3547
  6328  000736  EF9D  F003         	line	69
  6329                           	
  6330                           l857:; BSR set to: 0
  6331  00073A                     
  6332                           	line	75
  6333                           	
  6334                           l3547:; BSR set to: 0
  6335  00073A                     
  6336                           		movf	((___fladd@bexp))&0ffh,w
  6337  00073A  5198               	subwf	((___fladd@aexp))&0ffh,w
  6338  00073C  5D97               	btfsc	status,0
  6339  00073E  B0D8               	goto	u3881
  6340  000740  EFA4  F003         	goto	u3880
  6341  000744  EFA6  F003         
  6342                           u3881:
  6343  000748                     	goto	l3583
  6344  000748  EFD1  F003         u3880:
  6345  00074C                     	line	77
  6346                           	
  6347                           l3549:; BSR set to: 0
  6348  00074C                     
  6349                           	
  6350                           	btfss	((___fladd@signs))&0ffh,(6)&7
  6351  00074C  AD96               	goto	u3891
  6352  00074E  EFAB  F003         	goto	u3890
  6353  000752  EFAD  F003         u3891:
  6354  000756                     	goto	l3553
  6355  000756  EFB1  F003         u3890:
  6356  00075A                     	line	78
  6357                           	
  6358                           l3551:; BSR set to: 0
  6359  00075A                     
  6360                           	movlw	(080h)&0ffh
  6361  00075A  0E80               	xorwf	((___fladd@signs))&0ffh
  6362  00075C  1B96               	goto	l3553
  6363  00075E  EFB1  F003         	line	79
  6364                           	
  6365                           l859:; BSR set to: 0
  6366  000762                     
  6367                           	line	81
  6368                           	
  6369                           l3553:; BSR set to: 0
  6370  000762                     
  6371                           	movff	(___fladd@bexp),(___fladd@grs)
  6372  000762  C098  F099         	line	82
  6373                           	
  6374                           l3555:; BSR set to: 0
  6375  000766                     
  6376                           	movff	(___fladd@aexp),(___fladd@bexp)
  6377  000766  C097  F098         	line	83
  6378                           	
  6379                           l3557:; BSR set to: 0
  6380  00076A                     
  6381                           	movff	(___fladd@grs),(___fladd@aexp)
  6382  00076A  C099  F097         	line	84
  6383                           	
  6384                           l3559:; BSR set to: 0
  6385  00076E                     
  6386                           	movff	(___fladd@b),(___fladd@grs)
  6387  00076E  C086  F099         	line	85
  6388                           	
  6389                           l3561:; BSR set to: 0
  6390  000772                     
  6391                           	movff	(___fladd@a),(___fladd@b)
  6392  000772  C08A  F086         	line	86
  6393                           	
  6394                           l3563:; BSR set to: 0
  6395  000776                     
  6396                           	movff	(___fladd@grs),(___fladd@a)
  6397  000776  C099  F08A         	line	87
  6398                           	
  6399                           l3565:; BSR set to: 0
  6400  00077A                     
  6401                           	movff	0+(___fladd@b+01h),(___fladd@grs)
  6402  00077A  C087  F099         	line	88
  6403                           	
  6404                           l3567:; BSR set to: 0
  6405  00077E                     
  6406                           	movff	0+(___fladd@a+01h),0+(___fladd@b+01h)
  6407  00077E  C08B  F087         	line	89
  6408                           	
  6409                           l3569:; BSR set to: 0
  6410  000782                     
  6411                           	movff	(___fladd@grs),0+(___fladd@a+01h)
  6412  000782  C099  F08B         	line	90
  6413                           	
  6414                           l3571:; BSR set to: 0
  6415  000786                     
  6416                           	movff	0+(___fladd@b+02h),(___fladd@grs)
  6417  000786  C088  F099         	line	91
  6418                           	
  6419                           l3573:; BSR set to: 0
  6420  00078A                     
  6421                           	movff	0+(___fladd@a+02h),0+(___fladd@b+02h)
  6422  00078A  C08C  F088         	line	92
  6423                           	
  6424                           l3575:; BSR set to: 0
  6425  00078E                     
  6426                           	movff	(___fladd@grs),0+(___fladd@a+02h)
  6427  00078E  C099  F08C         	line	93
  6428                           	
  6429                           l3577:; BSR set to: 0
  6430  000792                     
  6431                           	movff	0+(___fladd@b+03h),(___fladd@grs)
  6432  000792  C089  F099         	line	94
  6433                           	
  6434                           l3579:; BSR set to: 0
  6435  000796                     
  6436                           	movff	0+(___fladd@a+03h),0+(___fladd@b+03h)
  6437  000796  C08D  F089         	line	95
  6438                           	
  6439                           l3581:; BSR set to: 0
  6440  00079A                     
  6441                           	movff	(___fladd@grs),0+(___fladd@a+03h)
  6442  00079A  C099  F08D         	goto	l3583
  6443  00079E  EFD1  F003         	line	96
  6444                           	
  6445                           l858:; BSR set to: 0
  6446  0007A2                     
  6447                           	line	98
  6448                           	
  6449                           l3583:; BSR set to: 0
  6450  0007A2                     
  6451                           	movlw	low(0)
  6452  0007A2  0E00               	movwf	((___fladd@grs))&0ffh
  6453  0007A4  6F99               	line	100
  6454                           	
  6455                           l3585:; BSR set to: 0
  6456  0007A6                     
  6457                           	movf	((___fladd@bexp))&0ffh,w
  6458  0007A6  5198               	movwf	(??___fladd+0+0)&0ffh
  6459  0007A8  6F8E               	clrf	(??___fladd+0+0+1)&0ffh
  6460  0007AA  6B8F               
  6461                           	comf	(??___fladd+0+0)&0ffh
  6462  0007AC  1F8E               	comf	(??___fladd+0+1)&0ffh
  6463  0007AE  1F8F               	infsnz	(??___fladd+0+0)&0ffh
  6464  0007B0  4B8E               	incf	(??___fladd+0+1)&0ffh
  6465  0007B2  2B8F               	movf	((___fladd@aexp))&0ffh,w
  6466  0007B4  5197               	movwf	(??___fladd+2+0)&0ffh
  6467  0007B6  6F90               	clrf	(??___fladd+2+0+1)&0ffh
  6468  0007B8  6B91               
  6469                           	movf	(??___fladd+0+0)&0ffh,w
  6470  0007BA  518E               	addwf	(??___fladd+2+0)&0ffh
  6471  0007BC  2790               	movf	(??___fladd+0+1)&0ffh,w
  6472  0007BE  518F               	addwfc	(??___fladd+2+1)&0ffh
  6473  0007C0  2391               	btfsc	(??___fladd+2+1)&0ffh,7
  6474  0007C2  BF91               	goto	u3901
  6475  0007C4  EFED  F003         	movf	(??___fladd+2+1)&0ffh,w
  6476  0007C8  5191               	bnz	u3900
  6477  0007CA  E109               	movlw	26
  6478  0007CC  0E1A               	subwf	 (??___fladd+2+0)&0ffh,w
  6479  0007CE  5D90               	btfss	status,0
  6480  0007D0  A0D8               	goto	u3901
  6481  0007D2  EFED  F003         	goto	u3900
  6482  0007D6  EFEF  F003         
  6483                           u3901:
  6484  0007DA                     	goto	l862
  6485  0007DA  EF2C  F004         u3900:
  6486  0007DE                     	line	101
  6487                           	
  6488                           l3587:; BSR set to: 0
  6489  0007DE                     
  6490                           	movf	((___fladd@b))&0ffh,w
  6491  0007DE  5186               iorwf	((___fladd@b+1))&0ffh,w
  6492  0007E0  1187               iorwf	((___fladd@b+2))&0ffh,w
  6493  0007E2  1188               iorwf	((___fladd@b+3))&0ffh,w
  6494  0007E4  1189               	btfss	status,2
  6495  0007E6  A4D8               	goto	u3911
  6496  0007E8  EFF8  F003         	goto	u3910
  6497  0007EC  EFFB  F003         
  6498                           u3911:
  6499  0007F0                     	movlw	1
  6500  0007F0  0E01               	goto	u3920
  6501  0007F2  EFFC  F003         u3910:
  6502  0007F6                     	movlw	0
  6503  0007F6  0E00               u3920:
  6504  0007F8                     	movwf	((___fladd@grs))&0ffh
  6505  0007F8  6F99               	line	102
  6506                           	
  6507                           l3589:; BSR set to: 0
  6508  0007FA                     
  6509                           	movlw	low(0)
  6510  0007FA  0E00               	movwf	((___fladd@b))&0ffh
  6511  0007FC  6F86               	movlw	high(0)
  6512  0007FE  0E00               	movwf	((___fladd@b+1))&0ffh
  6513  000800  6F87               	movlw	low highword(0)
  6514  000802  0E00               	movwf	((___fladd@b+2))&0ffh
  6515  000804  6F88               	movlw	high highword(0)
  6516  000806  0E00               	movwf	((___fladd@b+3))&0ffh
  6517  000808  6F89               	line	103
  6518                           	
  6519                           l3591:; BSR set to: 0
  6520  00080A                     
  6521                           	movff	(___fladd@aexp),(___fladd@bexp)
  6522  00080A  C097  F098         	line	104
  6523                           	goto	l861
  6524  00080E  EF37  F004         	line	105
  6525                           	
  6526                           l860:; BSR set to: 0
  6527  000812                     
  6528                           	line	106
  6529                           	goto	l862
  6530  000812  EF2C  F004         	
  6531                           l863:; BSR set to: 0
  6532  000816                     
  6533                           	line	109
  6534                           	
  6535                           	btfss	((___fladd@grs))&0ffh,(0)&7
  6536  000816  A199               	goto	u3931
  6537  000818  EF10  F004         	goto	u3930
  6538  00081C  EF12  F004         u3931:
  6539  000820                     	goto	l3595
  6540  000820  EF18  F004         u3930:
  6541  000824                     	line	110
  6542                           	
  6543                           l3593:; BSR set to: 0
  6544  000824                     
  6545                           	bcf	status,0
  6546  000824  90D8               	rrcf	((___fladd@grs))&0ffh,w
  6547  000826  3199               	iorlw	low(01h)
  6548  000828  0901               	movwf	((___fladd@grs))&0ffh
  6549  00082A  6F99               	line	111
  6550                           	goto	l3597
  6551  00082C  EF1C  F004         	line	112
  6552                           	
  6553                           l864:; BSR set to: 0
  6554  000830                     
  6555                           	line	113
  6556                           	
  6557                           l3595:; BSR set to: 0
  6558  000830                     
  6559                           	bcf status,0
  6560  000830  90D8               	rrcf	((___fladd@grs))&0ffh
  6561  000832  3399               
  6562                           	goto	l3597
  6563  000834  EF1C  F004         	line	114
  6564                           	
  6565                           l865:; BSR set to: 0
  6566  000838                     
  6567                           	line	115
  6568                           	
  6569                           l3597:; BSR set to: 0
  6570  000838                     
  6571                           	
  6572                           	btfss	((___fladd@b))&0ffh,(0)&7
  6573  000838  A186               	goto	u3941
  6574  00083A  EF21  F004         	goto	u3940
  6575  00083E  EF23  F004         u3941:
  6576  000842                     	goto	l3601
  6577  000842  EF26  F004         u3940:
  6578  000846                     	line	116
  6579                           	
  6580                           l3599:; BSR set to: 0
  6581  000846                     
  6582                           	bsf	(0+(7/8)+(___fladd@grs))&0ffh,(7)&7
  6583  000846  8F99               	goto	l3601
  6584  000848  EF26  F004         	line	117
  6585                           	
  6586                           l866:; BSR set to: 0
  6587  00084C                     
  6588                           	line	118
  6589                           	
  6590                           l3601:; BSR set to: 0
  6591  00084C                     
  6592                           	rlcf	((___fladd@b+3))&0ffh,w
  6593  00084C  3589               	rrcf	((___fladd@b+3))&0ffh
  6594  00084E  3389               	rrcf	((___fladd@b+2))&0ffh
  6595  000850  3388               	rrcf	((___fladd@b+1))&0ffh
  6596  000852  3387               	rrcf	((___fladd@b))&0ffh
  6597  000854  3386               	line	119
  6598                           	
  6599                           l3603:; BSR set to: 0
  6600  000856                     
  6601                           	incf	((___fladd@bexp))&0ffh
  6602  000856  2B98               	line	120
  6603                           	
  6604                           l862:; BSR set to: 0
  6605  000858                     
  6606                           	line	106
  6607                           		movf	((___fladd@aexp))&0ffh,w
  6608  000858  5197               	subwf	((___fladd@bexp))&0ffh,w
  6609  00085A  5D98               	btfss	status,0
  6610  00085C  A0D8               	goto	u3951
  6611  00085E  EF33  F004         	goto	u3950
  6612  000862  EF35  F004         
  6613                           u3951:
  6614  000866                     	goto	l863
  6615  000866  EF0B  F004         u3950:
  6616  00086A                     	goto	l861
  6617  00086A  EF37  F004         	
  6618                           l867:; BSR set to: 0
  6619  00086E                     
  6620                           	line	121
  6621                           	
  6622                           l861:; BSR set to: 0
  6623  00086E                     
  6624                           	line	124
  6625                           	
  6626                           	btfsc	((___fladd@signs))&0ffh,(6)&7
  6627  00086E  BD96               	goto	u3961
  6628  000870  EF3C  F004         	goto	u3960
  6629  000874  EF3E  F004         u3961:
  6630  000878                     	goto	l3629
  6631  000878  EF86  F004         u3960:
  6632  00087C                     	line	127
  6633                           	
  6634                           l3605:; BSR set to: 0
  6635  00087C                     
  6636                           	movf	((___fladd@bexp))&0ffh,w
  6637  00087C  5198               	btfss	status,2
  6638  00087E  A4D8               	goto	u3971
  6639  000880  EF44  F004         	goto	u3970
  6640  000884  EF46  F004         u3971:
  6641  000888                     	goto	l3611
  6642  000888  EF52  F004         u3970:
  6643  00088C                     	line	128
  6644                           	
  6645                           l3607:; BSR set to: 0
  6646  00088C                     
  6647                           	movlw	low(normalize32(0x0))
  6648  00088C  0E00               	movwf	((?___fladd))&0ffh
  6649  00088E  6F86               	movlw	high(normalize32(0x0))
  6650  000890  0E00               	movwf	((?___fladd+1))&0ffh
  6651  000892  6F87               	movlw	low highword(normalize32(0x0))
  6652  000894  0E00               	movwf	((?___fladd+2))&0ffh
  6653  000896  6F88               	movlw	high highword(normalize32(0x0))
  6654  000898  0E00               	movwf	((?___fladd+3))&0ffh
  6655  00089A  6F89               	goto	l870
  6656  00089C  EFE0  F005         	
  6657                           l3609:; BSR set to: 0
  6658  0008A0                     
  6659                           	goto	l870
  6660  0008A0  EFE0  F005         	line	129
  6661                           	
  6662                           l869:; BSR set to: 0
  6663  0008A4                     
  6664                           	line	132
  6665                           	
  6666                           l3611:; BSR set to: 0
  6667  0008A4                     
  6668                           	movf	((___fladd@a))&0ffh,w
  6669  0008A4  518A               	addwf	((___fladd@b))&0ffh
  6670  0008A6  2786               	movf	((___fladd@a+1))&0ffh,w
  6671  0008A8  518B               	addwfc	((___fladd@b+1))&0ffh
  6672  0008AA  2387               	movf	((___fladd@a+2))&0ffh,w
  6673  0008AC  518C               	addwfc	((___fladd@b+2))&0ffh
  6674  0008AE  2388               	movf	((___fladd@a+3))&0ffh,w
  6675  0008B0  518D               	addwfc	((___fladd@b+3))&0ffh
  6676  0008B2  2389               	line	134
  6677                           	
  6678                           l3613:; BSR set to: 0
  6679  0008B4                     
  6680                           	
  6681                           	btfss	((___fladd@b+3))&0ffh,(24)&7
  6682  0008B4  A189               	goto	u3981
  6683  0008B6  EF5F  F004         	goto	u3980
  6684  0008BA  EF61  F004         u3981:
  6685  0008BE                     	goto	l3665
  6686  0008BE  EF36  F005         u3980:
  6687  0008C2                     	line	135
  6688                           	
  6689                           l3615:; BSR set to: 0
  6690  0008C2                     
  6691                           	
  6692                           	btfss	((___fladd@grs))&0ffh,(0)&7
  6693  0008C2  A199               	goto	u3991
  6694  0008C4  EF66  F004         	goto	u3990
  6695  0008C8  EF68  F004         u3991:
  6696  0008CC                     	goto	l3619
  6697  0008CC  EF6E  F004         u3990:
  6698  0008D0                     	line	136
  6699                           	
  6700                           l3617:; BSR set to: 0
  6701  0008D0                     
  6702                           	bcf	status,0
  6703  0008D0  90D8               	rrcf	((___fladd@grs))&0ffh,w
  6704  0008D2  3199               	iorlw	low(01h)
  6705  0008D4  0901               	movwf	((___fladd@grs))&0ffh
  6706  0008D6  6F99               	line	137
  6707                           	goto	l3621
  6708  0008D8  EF72  F004         	line	138
  6709                           	
  6710                           l872:; BSR set to: 0
  6711  0008DC                     
  6712                           	line	139
  6713                           	
  6714                           l3619:; BSR set to: 0
  6715  0008DC                     
  6716                           	bcf status,0
  6717  0008DC  90D8               	rrcf	((___fladd@grs))&0ffh
  6718  0008DE  3399               
  6719                           	goto	l3621
  6720  0008E0  EF72  F004         	line	140
  6721                           	
  6722                           l873:; BSR set to: 0
  6723  0008E4                     
  6724                           	line	141
  6725                           	
  6726                           l3621:; BSR set to: 0
  6727  0008E4                     
  6728                           	
  6729                           	btfss	((___fladd@b))&0ffh,(0)&7
  6730  0008E4  A186               	goto	u4001
  6731  0008E6  EF77  F004         	goto	u4000
  6732  0008EA  EF79  F004         u4001:
  6733  0008EE                     	goto	l3625
  6734  0008EE  EF7C  F004         u4000:
  6735  0008F2                     	line	142
  6736                           	
  6737                           l3623:; BSR set to: 0
  6738  0008F2                     
  6739                           	bsf	(0+(7/8)+(___fladd@grs))&0ffh,(7)&7
  6740  0008F2  8F99               	goto	l3625
  6741  0008F4  EF7C  F004         	line	143
  6742                           	
  6743                           l874:; BSR set to: 0
  6744  0008F8                     
  6745                           	line	144
  6746                           	
  6747                           l3625:; BSR set to: 0
  6748  0008F8                     
  6749                           	rlcf	((___fladd@b+3))&0ffh,w
  6750  0008F8  3589               	rrcf	((___fladd@b+3))&0ffh
  6751  0008FA  3389               	rrcf	((___fladd@b+2))&0ffh
  6752  0008FC  3388               	rrcf	((___fladd@b+1))&0ffh
  6753  0008FE  3387               	rrcf	((___fladd@b))&0ffh
  6754  000900  3386               	line	145
  6755                           	
  6756                           l3627:; BSR set to: 0
  6757  000902                     
  6758                           	incf	((___fladd@bexp))&0ffh
  6759  000902  2B98               	goto	l3665
  6760  000904  EF36  F005         	line	146
  6761                           	
  6762                           l871:; BSR set to: 0
  6763  000908                     
  6764                           	line	148
  6765                           	goto	l3665
  6766  000908  EF36  F005         	line	149
  6767                           	
  6768                           l868:; BSR set to: 0
  6769  00090C                     
  6770                           	line	153
  6771                           	
  6772                           l3629:; BSR set to: 0
  6773  00090C                     
  6774                           		movf	((___fladd@a))&0ffh,w
  6775  00090C  518A               	subwf	((___fladd@b))&0ffh,w
  6776  00090E  5D86               	movf	((___fladd@a+1))&0ffh,w
  6777  000910  518B               	subwfb	((___fladd@b+1))&0ffh,w
  6778  000912  5987               	movf	((___fladd@a+2))&0ffh,w
  6779  000914  518C               	subwfb	((___fladd@b+2))&0ffh,w
  6780  000916  5988               	movf	((___fladd@b+3))&0ffh,w
  6781  000918  5189               	xorlw	80h
  6782  00091A  0A80               	movwf	(??___fladd+0+0)&0ffh
  6783  00091C  6F8E               	movf	((___fladd@a+3))&0ffh,w
  6784  00091E  518D               	xorlw	80h
  6785  000920  0A80               	subwfb	(??___fladd+0+0)&0ffh,w
  6786  000922  598E               	btfsc	status,0
  6787  000924  B0D8               	goto	u4011
  6788  000926  EF97  F004         	goto	u4010
  6789  00092A  EF99  F004         
  6790                           u4011:
  6791  00092E                     	goto	l3639
  6792  00092E  EFD7  F004         u4010:
  6793  000932                     	line	154
  6794                           	
  6795                           l3631:; BSR set to: 0
  6796  000932                     
  6797                           	movff	(___fladd@b),??___fladd+0+0
  6798  000932  C086  F08E         	movff	(___fladd@b+1),??___fladd+0+0+1
  6799  000936  C087  F08F         	movff	(___fladd@b+2),??___fladd+0+0+2
  6800  00093A  C088  F090         	movff	(___fladd@b+3),??___fladd+0+0+3
  6801  00093E  C089  F091         	comf	(??___fladd+0+0)&0ffh
  6802  000942  1F8E               	comf	(??___fladd+0+1)&0ffh
  6803  000944  1F8F               	comf	(??___fladd+0+2)&0ffh
  6804  000946  1F90               	comf	(??___fladd+0+3)&0ffh
  6805  000948  1F91               	incf	(??___fladd+0+0)&0ffh
  6806  00094A  2B8E               	movlw	0
  6807  00094C  0E00               	addwfc	(??___fladd+0+1)&0ffh
  6808  00094E  238F               	addwfc	(??___fladd+0+2)&0ffh
  6809  000950  2390               	addwfc	(??___fladd+0+3)&0ffh
  6810  000952  2391               	movf	((___fladd@a))&0ffh,w
  6811  000954  518A               	addwf	(??___fladd+0+0)&0ffh,w
  6812  000956  258E               	movwf	(??___fladd+4+0)&0ffh
  6813  000958  6F92               	movf	((___fladd@a+1))&0ffh,w
  6814  00095A  518B               	addwfc	(??___fladd+0+1)&0ffh,w
  6815  00095C  218F               	movwf	1+(??___fladd+4+0)&0ffh
  6816  00095E  6F93               	
  6817                           	movf	((___fladd@a+2))&0ffh,w
  6818  000960  518C               	addwfc	(??___fladd+0+2)&0ffh,w
  6819  000962  2190               	movwf	2+(??___fladd+4+0)&0ffh
  6820  000964  6F94               	
  6821                           	movf	((___fladd@a+3))&0ffh,w
  6822  000966  518D               	addwfc	(??___fladd+0+3)&0ffh,w
  6823  000968  2191               	movwf	3+(??___fladd+4+0)&0ffh
  6824  00096A  6F95               	movlw	0FFh
  6825  00096C  0EFF               	addwf	(??___fladd+4+0)&0ffh,w
  6826  00096E  2592               	movwf	((___fladd@b))&0ffh
  6827  000970  6F86               	movlw	0FFh
  6828  000972  0EFF               	addwfc	(??___fladd+4+1)&0ffh,w
  6829  000974  2193               	movwf	1+((___fladd@b))&0ffh
  6830  000976  6F87               	
  6831                           	movlw	0FFh
  6832  000978  0EFF               	addwfc	(??___fladd+4+2)&0ffh,w
  6833  00097A  2194               	movwf	2+((___fladd@b))&0ffh
  6834  00097C  6F88               	
  6835                           	movlw	0FFh
  6836  00097E  0EFF               	addwfc	(??___fladd+4+3)&0ffh,w
  6837  000980  2195               	movwf	3+((___fladd@b))&0ffh
  6838  000982  6F89               	line	155
  6839                           	movlw	(080h)&0ffh
  6840  000984  0E80               	xorwf	((___fladd@signs))&0ffh
  6841  000986  1B96               	line	156
  6842                           	
  6843                           l3633:; BSR set to: 0
  6844  000988                     
  6845                           	negf	((___fladd@grs))&0ffh
  6846  000988  6D99               	line	157
  6847                           	
  6848                           l3635:; BSR set to: 0
  6849  00098A                     
  6850                           	movf	((___fladd@grs))&0ffh,w
  6851  00098A  5199               	btfss	status,2
  6852  00098C  A4D8               	goto	u4021
  6853  00098E  EFCB  F004         	goto	u4020
  6854  000992  EFCD  F004         u4021:
  6855  000996                     	goto	l878
  6856  000996  EFDF  F004         u4020:
  6857  00099A                     	line	158
  6858                           	
  6859                           l3637:; BSR set to: 0
  6860  00099A                     
  6861                           	movlw	low(01h)
  6862  00099A  0E01               	addwf	((___fladd@b))&0ffh
  6863  00099C  2786               	movlw	0
  6864  00099E  0E00               	addwfc	((___fladd@b+1))&0ffh
  6865  0009A0  2387               	addwfc	((___fladd@b+2))&0ffh
  6866  0009A2  2388               	addwfc	((___fladd@b+3))&0ffh
  6867  0009A4  2389               	goto	l878
  6868  0009A6  EFDF  F004         	line	159
  6869                           	
  6870                           l877:; BSR set to: 0
  6871  0009AA                     
  6872                           	line	160
  6873                           	goto	l878
  6874  0009AA  EFDF  F004         	line	161
  6875                           	
  6876                           l876:; BSR set to: 0
  6877  0009AE                     
  6878                           	line	162
  6879                           	
  6880                           l3639:; BSR set to: 0
  6881  0009AE                     
  6882                           	movf	((___fladd@a))&0ffh,w
  6883  0009AE  518A               	subwf	((___fladd@b))&0ffh
  6884  0009B0  5F86               	movf	((___fladd@a+1))&0ffh,w
  6885  0009B2  518B               	subwfb	((___fladd@b+1))&0ffh
  6886  0009B4  5B87               	movf	((___fladd@a+2))&0ffh,w
  6887  0009B6  518C               	subwfb	((___fladd@b+2))&0ffh
  6888  0009B8  5B88               	movf	((___fladd@a+3))&0ffh,w
  6889  0009BA  518D               	subwfb	((___fladd@b+3))&0ffh
  6890  0009BC  5B89               	line	163
  6891                           	
  6892                           l878:; BSR set to: 0
  6893  0009BE                     
  6894                           	line	166
  6895                           	movf	((___fladd@b))&0ffh,w
  6896  0009BE  5186               iorwf	((___fladd@b+1))&0ffh,w
  6897  0009C0  1187               iorwf	((___fladd@b+2))&0ffh,w
  6898  0009C2  1188               iorwf	((___fladd@b+3))&0ffh,w
  6899  0009C4  1189               	btfss	status,2
  6900  0009C6  A4D8               	goto	u4031
  6901  0009C8  EFE8  F004         	goto	u4030
  6902  0009CC  EFEA  F004         
  6903                           u4031:
  6904  0009D0                     	goto	l3663
  6905  0009D0  EF2B  F005         u4030:
  6906  0009D4                     	
  6907                           l3641:; BSR set to: 0
  6908  0009D4                     
  6909                           	movf	((___fladd@grs))&0ffh,w
  6910  0009D4  5199               	btfss	status,2
  6911  0009D6  A4D8               	goto	u4041
  6912  0009D8  EFF0  F004         	goto	u4040
  6913  0009DC  EFF2  F004         u4041:
  6914  0009E0                     	goto	l3663
  6915  0009E0  EF2B  F005         u4040:
  6916  0009E4                     	line	167
  6917                           	
  6918                           l3643:; BSR set to: 0
  6919  0009E4                     
  6920                           	movlw	low(normalize32(0x0))
  6921  0009E4  0E00               	movwf	((?___fladd))&0ffh
  6922  0009E6  6F86               	movlw	high(normalize32(0x0))
  6923  0009E8  0E00               	movwf	((?___fladd+1))&0ffh
  6924  0009EA  6F87               	movlw	low highword(normalize32(0x0))
  6925  0009EC  0E00               	movwf	((?___fladd+2))&0ffh
  6926  0009EE  6F88               	movlw	high highword(normalize32(0x0))
  6927  0009F0  0E00               	movwf	((?___fladd+3))&0ffh
  6928  0009F2  6F89               	goto	l870
  6929  0009F4  EFE0  F005         	
  6930                           l3645:; BSR set to: 0
  6931  0009F8                     
  6932                           	goto	l870
  6933  0009F8  EFE0  F005         	line	168
  6934                           	
  6935                           l879:; BSR set to: 0
  6936  0009FC                     
  6937                           	line	171
  6938                           	goto	l3663
  6939  0009FC  EF2B  F005         	
  6940                           l881:; BSR set to: 0
  6941  000A00                     
  6942                           	line	172
  6943                           	
  6944                           l3647:; BSR set to: 0
  6945  000A00                     
  6946                           	bcf	status,0
  6947  000A00  90D8               	rlcf	((___fladd@b))&0ffh
  6948  000A02  3786               	rlcf	((___fladd@b+1))&0ffh
  6949  000A04  3787               	rlcf	((___fladd@b+2))&0ffh
  6950  000A06  3788               	rlcf	((___fladd@b+3))&0ffh
  6951  000A08  3789               	line	173
  6952                           	
  6953                           l3649:; BSR set to: 0
  6954  000A0A                     
  6955                           	
  6956                           	btfss	((___fladd@grs))&0ffh,(7)&7
  6957  000A0A  AF99               	goto	u4051
  6958  000A0C  EF0A  F005         	goto	u4050
  6959  000A10  EF0C  F005         u4051:
  6960  000A14                     	goto	l3653
  6961  000A14  EF0F  F005         u4050:
  6962  000A18                     	line	174
  6963                           	
  6964                           l3651:; BSR set to: 0
  6965  000A18                     
  6966                           	bsf	(0+(0/8)+(___fladd@b))&0ffh,(0)&7
  6967  000A18  8186               	goto	l3653
  6968  000A1A  EF0F  F005         	line	175
  6969                           	
  6970                           l882:; BSR set to: 0
  6971  000A1E                     
  6972                           	line	176
  6973                           	
  6974                           l3653:; BSR set to: 0
  6975  000A1E                     
  6976                           	
  6977                           	btfss	((___fladd@grs))&0ffh,(0)&7
  6978  000A1E  A199               	goto	u4061
  6979  000A20  EF14  F005         	goto	u4060
  6980  000A24  EF16  F005         u4061:
  6981  000A28                     	goto	l3657
  6982  000A28  EF1A  F005         u4060:
  6983  000A2C                     	line	177
  6984                           	
  6985                           l3655:; BSR set to: 0
  6986  000A2C                     
  6987                           	bsf	status,0
  6988  000A2C  80D8               	
  6989                           	rlcf	((___fladd@grs))&0ffh
  6990  000A2E  3799               	line	178
  6991                           	goto	l3659
  6992  000A30  EF1E  F005         	line	179
  6993                           	
  6994                           l883:; BSR set to: 0
  6995  000A34                     
  6996                           	line	180
  6997                           	
  6998                           l3657:; BSR set to: 0
  6999  000A34                     
  7000                           	bcf status,0
  7001  000A34  90D8               	rlcf	((___fladd@grs))&0ffh
  7002  000A36  3799               
  7003                           	goto	l3659
  7004  000A38  EF1E  F005         	line	181
  7005                           	
  7006                           l884:; BSR set to: 0
  7007  000A3C                     
  7008                           	line	182
  7009                           	
  7010                           l3659:; BSR set to: 0
  7011  000A3C                     
  7012                           	movf	((___fladd@bexp))&0ffh,w
  7013  000A3C  5198               	btfsc	status,2
  7014  000A3E  B4D8               	goto	u4071
  7015  000A40  EF24  F005         	goto	u4070
  7016  000A44  EF26  F005         u4071:
  7017  000A48                     	goto	l3663
  7018  000A48  EF2B  F005         u4070:
  7019  000A4C                     	line	183
  7020                           	
  7021                           l3661:; BSR set to: 0
  7022  000A4C                     
  7023                           	decf	((___fladd@bexp))&0ffh
  7024  000A4C  0798               	goto	l3663
  7025  000A4E  EF2B  F005         	line	184
  7026                           	
  7027                           l885:; BSR set to: 0
  7028  000A52                     
  7029                           	goto	l3663
  7030  000A52  EF2B  F005         	line	185
  7031                           	
  7032                           l880:; BSR set to: 0
  7033  000A56                     
  7034                           	line	171
  7035                           	
  7036                           l3663:; BSR set to: 0
  7037  000A56                     
  7038                           	
  7039                           	btfss	((___fladd@b+2))&0ffh,(23)&7
  7040  000A56  AF88               	goto	u4081
  7041  000A58  EF30  F005         	goto	u4080
  7042  000A5C  EF32  F005         u4081:
  7043  000A60                     	goto	l3647
  7044  000A60  EF00  F005         u4080:
  7045  000A64                     	goto	l3665
  7046  000A64  EF36  F005         	
  7047                           l886:; BSR set to: 0
  7048  000A68                     
  7049                           	goto	l3665
  7050  000A68  EF36  F005         	line	186
  7051                           	
  7052                           l875:; BSR set to: 0
  7053  000A6C                     
  7054                           	line	192
  7055                           	
  7056                           l3665:; BSR set to: 0
  7057  000A6C                     
  7058                           	movlw	low(0)
  7059  000A6C  0E00               	movwf	((___fladd@aexp))&0ffh
  7060  000A6E  6F97               	line	193
  7061                           	
  7062                           l3667:; BSR set to: 0
  7063  000A70                     
  7064                           	
  7065                           	btfss	((___fladd@grs))&0ffh,(7)&7
  7066  000A70  AF99               	goto	u4091
  7067  000A72  EF3D  F005         	goto	u4090
  7068  000A76  EF3F  F005         u4091:
  7069  000A7A                     	goto	l887
  7070  000A7A  EF5B  F005         u4090:
  7071  000A7E                     	line	194
  7072                           	
  7073                           l3669:; BSR set to: 0
  7074  000A7E                     
  7075                           	movff	(___fladd@grs),??___fladd+0+0
  7076  000A7E  C099  F08E         	movlw	07Fh
  7077  000A82  0E7F               	andwf	(??___fladd+0+0)&0ffh
  7078  000A84  178E               	btfsc	status,2
  7079  000A86  B4D8               	goto	u4101
  7080  000A88  EF48  F005         	goto	u4100
  7081  000A8C  EF4A  F005         u4101:
  7082  000A90                     	goto	l888
  7083  000A90  EF4E  F005         u4100:
  7084  000A94                     	line	195
  7085                           	
  7086                           l3671:; BSR set to: 0
  7087  000A94                     
  7088                           	movlw	low(01h)
  7089  000A94  0E01               	movwf	((___fladd@aexp))&0ffh
  7090  000A96  6F97               	line	196
  7091                           	goto	l887
  7092  000A98  EF5B  F005         	line	197
  7093                           	
  7094                           l888:; BSR set to: 0
  7095  000A9C                     
  7096                           	line	198
  7097                           	
  7098                           	btfss	((___fladd@b))&0ffh,(0)&7
  7099  000A9C  A186               	goto	u4111
  7100  000A9E  EF53  F005         	goto	u4110
  7101  000AA2  EF55  F005         u4111:
  7102  000AA6                     	goto	l887
  7103  000AA6  EF5B  F005         u4110:
  7104  000AAA                     	line	199
  7105                           	
  7106                           l3673:; BSR set to: 0
  7107  000AAA                     
  7108                           	movlw	low(01h)
  7109  000AAA  0E01               	movwf	((___fladd@aexp))&0ffh
  7110  000AAC  6F97               	goto	l887
  7111  000AAE  EF5B  F005         	line	200
  7112                           	
  7113                           l890:; BSR set to: 0
  7114  000AB2                     
  7115                           	goto	l887
  7116  000AB2  EF5B  F005         	line	201
  7117                           	
  7118                           l889:; BSR set to: 0
  7119  000AB6                     
  7120                           	line	202
  7121                           	
  7122                           l887:; BSR set to: 0
  7123  000AB6                     
  7124                           	line	203
  7125                           	movf	((___fladd@aexp))&0ffh,w
  7126  000AB6  5197               	btfsc	status,2
  7127  000AB8  B4D8               	goto	u4121
  7128  000ABA  EF61  F005         	goto	u4120
  7129  000ABE  EF63  F005         u4121:
  7130  000AC2                     	goto	l3683
  7131  000AC2  EF94  F005         u4120:
  7132  000AC6                     	line	204
  7133                           	
  7134                           l3675:; BSR set to: 0
  7135  000AC6                     
  7136                           	movlw	low(01h)
  7137  000AC6  0E01               	addwf	((___fladd@b))&0ffh
  7138  000AC8  2786               	movlw	0
  7139  000ACA  0E00               	addwfc	((___fladd@b+1))&0ffh
  7140  000ACC  2387               	addwfc	((___fladd@b+2))&0ffh
  7141  000ACE  2388               	addwfc	((___fladd@b+3))&0ffh
  7142  000AD0  2389               	line	205
  7143                           	
  7144                           l3677:; BSR set to: 0
  7145  000AD2                     
  7146                           	
  7147                           	btfss	((___fladd@b+3))&0ffh,(24)&7
  7148  000AD2  A189               	goto	u4131
  7149  000AD4  EF6E  F005         	goto	u4130
  7150  000AD8  EF70  F005         u4131:
  7151  000ADC                     	goto	l3683
  7152  000ADC  EF94  F005         u4130:
  7153  000AE0                     	line	206
  7154                           	
  7155                           l3679:; BSR set to: 0
  7156  000AE0                     
  7157                           	movff	(___fladd@b),??___fladd+0+0
  7158  000AE0  C086  F08E         	movff	(___fladd@b+1),??___fladd+0+0+1
  7159  000AE4  C087  F08F         	movff	(___fladd@b+2),??___fladd+0+0+2
  7160  000AE8  C088  F090         	movff	(___fladd@b+3),??___fladd+0+0+3
  7161  000AEC  C089  F091         	rlcf	(??___fladd+0+3)&0ffh,w
  7162  000AF0  3591               	rrcf	(??___fladd+0+3)&0ffh
  7163  000AF2  3391               	rrcf	(??___fladd+0+2)&0ffh
  7164  000AF4  3390               	rrcf	(??___fladd+0+1)&0ffh
  7165  000AF6  338F               	rrcf	(??___fladd+0+0)&0ffh
  7166  000AF8  338E               	movff	??___fladd+0+0,(___fladd@b)
  7167  000AFA  C08E  F086         	movff	??___fladd+0+1,(___fladd@b+1)
  7168  000AFE  C08F  F087         	movff	??___fladd+0+2,(___fladd@b+2)
  7169  000B02  C090  F088         	movff	??___fladd+0+3,(___fladd@b+3)
  7170  000B06  C091  F089         	line	207
  7171                           		incf	((___fladd@bexp))&0ffh,w
  7172  000B0A  2998               	btfsc	status,2
  7173  000B0C  B4D8               	goto	u4141
  7174  000B0E  EF8B  F005         	goto	u4140
  7175  000B12  EF8D  F005         
  7176                           u4141:
  7177  000B16                     	goto	l3683
  7178  000B16  EF94  F005         u4140:
  7179  000B1A                     	line	208
  7180                           	
  7181                           l3681:; BSR set to: 0
  7182  000B1A                     
  7183                           	incf	((___fladd@bexp))&0ffh
  7184  000B1A  2B98               	goto	l3683
  7185  000B1C  EF94  F005         	line	209
  7186                           	
  7187                           l893:; BSR set to: 0
  7188  000B20                     
  7189                           	goto	l3683
  7190  000B20  EF94  F005         	line	210
  7191                           	
  7192                           l892:; BSR set to: 0
  7193  000B24                     
  7194                           	goto	l3683
  7195  000B24  EF94  F005         	line	211
  7196                           	
  7197                           l891:; BSR set to: 0
  7198  000B28                     
  7199                           	line	215
  7200                           	
  7201                           l3683:; BSR set to: 0
  7202  000B28                     
  7203                           		incf	((___fladd@bexp))&0ffh,w
  7204  000B28  2998               	btfsc	status,2
  7205  000B2A  B4D8               	goto	u4151
  7206  000B2C  EF9A  F005         	goto	u4150
  7207  000B30  EF9C  F005         
  7208                           u4151:
  7209  000B34                     	goto	l3687
  7210  000B34  EFA6  F005         u4150:
  7211  000B38                     	
  7212                           l3685:; BSR set to: 0
  7213  000B38                     
  7214                           	movf	((___fladd@bexp))&0ffh,w
  7215  000B38  5198               	btfss	status,2
  7216  000B3A  A4D8               	goto	u4161
  7217  000B3C  EFA2  F005         	goto	u4160
  7218  000B40  EFA4  F005         u4161:
  7219  000B44                     	goto	l3691
  7220  000B44  EFBC  F005         u4160:
  7221  000B48                     	goto	l3687
  7222  000B48  EFA6  F005         	
  7223                           l896:; BSR set to: 0
  7224  000B4C                     
  7225                           	line	216
  7226                           	
  7227                           l3687:; BSR set to: 0
  7228  000B4C                     
  7229                           	movlw	low(0)
  7230  000B4C  0E00               	movwf	((___fladd@b))&0ffh
  7231  000B4E  6F86               	movlw	high(0)
  7232  000B50  0E00               	movwf	((___fladd@b+1))&0ffh
  7233  000B52  6F87               	movlw	low highword(0)
  7234  000B54  0E00               	movwf	((___fladd@b+2))&0ffh
  7235  000B56  6F88               	movlw	high highword(0)
  7236  000B58  0E00               	movwf	((___fladd@b+3))&0ffh
  7237  000B5A  6F89               	line	218
  7238                           	movf	((___fladd@bexp))&0ffh,w
  7239  000B5C  5198               	btfss	status,2
  7240  000B5E  A4D8               	goto	u4171
  7241  000B60  EFB4  F005         	goto	u4170
  7242  000B64  EFB6  F005         u4171:
  7243  000B68                     	goto	l3691
  7244  000B68  EFBC  F005         u4170:
  7245  000B6C                     	line	219
  7246                           	
  7247                           l3689:; BSR set to: 0
  7248  000B6C                     
  7249                           	movlw	low(0)
  7250  000B6C  0E00               	movwf	((___fladd@signs))&0ffh
  7251  000B6E  6F96               	goto	l3691
  7252  000B70  EFBC  F005         	line	220
  7253                           	
  7254                           l897:; BSR set to: 0
  7255  000B74                     
  7256                           	goto	l3691
  7257  000B74  EFBC  F005         	line	221
  7258                           	
  7259                           l894:; BSR set to: 0
  7260  000B78                     
  7261                           	line	225
  7262                           	
  7263                           l3691:; BSR set to: 0
  7264  000B78                     
  7265                           	
  7266                           	btfss	((___fladd@bexp))&0ffh,(0)&7
  7267  000B78  A198               	goto	u4181
  7268  000B7A  EFC1  F005         	goto	u4180
  7269  000B7E  EFC3  F005         u4181:
  7270  000B82                     	goto	l3695
  7271  000B82  EFC6  F005         u4180:
  7272  000B86                     	line	226
  7273                           	
  7274                           l3693:; BSR set to: 0
  7275  000B86                     
  7276                           	bsf	(0+(7/8)+0+(___fladd@b+02h))&0ffh,(7)&7
  7277  000B86  8F88               	line	227
  7278                           	goto	l3697
  7279  000B88  EFC9  F005         	line	229
  7280                           	
  7281                           l898:; BSR set to: 0
  7282  000B8C                     
  7283                           	line	230
  7284                           	
  7285                           l3695:; BSR set to: 0
  7286  000B8C                     
  7287                           	bcf	(0+(7/8)+0+(___fladd@b+02h))&0ffh,(7)&7
  7288  000B8C  9F88               	goto	l3697
  7289  000B8E  EFC9  F005         	line	231
  7290                           	
  7291                           l899:; BSR set to: 0
  7292  000B92                     
  7293                           	line	232
  7294                           	
  7295                           l3697:; BSR set to: 0
  7296  000B92                     
  7297                           	bcf	status,0
  7298  000B92  90D8               	rrcf	((___fladd@bexp))&0ffh,w
  7299  000B94  3198               	movwf	(0+(___fladd@b+03h))&0ffh
  7300  000B96  6F89               	line	233
  7301                           	
  7302                           l3699:; BSR set to: 0
  7303  000B98                     
  7304                           	
  7305                           	btfss	((___fladd@signs))&0ffh,(7)&7
  7306  000B98  AF96               	goto	u4191
  7307  000B9A  EFD1  F005         	goto	u4190
  7308  000B9E  EFD3  F005         u4191:
  7309  000BA2                     	goto	l3703
  7310  000BA2  EFD6  F005         u4190:
  7311  000BA6                     	line	234
  7312                           	
  7313                           l3701:; BSR set to: 0
  7314  000BA6                     
  7315                           	bsf	(0+(7/8)+0+(___fladd@b+03h))&0ffh,(7)&7
  7316  000BA6  8F89               	goto	l3703
  7317  000BA8  EFD6  F005         	line	235
  7318                           	
  7319                           l900:; BSR set to: 0
  7320  000BAC                     
  7321                           	line	236
  7322                           	
  7323                           l3703:; BSR set to: 0
  7324  000BAC                     
  7325                           	movff	(___fladd@b),(?___fladd)
  7326  000BAC  C086  F086         	movff	(___fladd@b+1),(?___fladd+1)
  7327  000BB0  C087  F087         	movff	(___fladd@b+2),(?___fladd+2)
  7328  000BB4  C088  F088         	movff	(___fladd@b+3),(?___fladd+3)
  7329  000BB8  C089  F089         	goto	l870
  7330  000BBC  EFE0  F005         	
  7331                           l3705:; BSR set to: 0
  7332  000BC0                     
  7333                           	line	237
  7334                           	
  7335                           l870:; BSR set to: 0
  7336  000BC0                     
  7337                           	return	;funcret
  7338  000BC0  0012               	opt stack 0
  7339                           GLOBAL	__end_of___fladd
  7340                           	__end_of___fladd:
  7341  000BC2                     	signat	___fladd,8316
  7342                           	global	___flmul
  7343                           
  7344 ;; *************** function ___flmul *****************
  7345 ;; Defined at:
  7346 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;  b               4    6[BANK0 ] unsigned char 
  7349 ;;  a               4   10[BANK0 ] unsigned char 
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;  prod            4   25[BANK0 ] struct .
  7352 ;;  grs             4   20[BANK0 ] unsigned long 
  7353 ;;  temp            2   29[BANK0 ] struct .
  7354 ;;  bexp            1   24[BANK0 ] unsigned char 
  7355 ;;  aexp            1   19[BANK0 ] unsigned char 
  7356 ;;  sign            1   18[BANK0 ] unsigned char 
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  4    6[BANK0 ] unsigned char 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0, prodl, prodh
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7366 ;;      Params:         0       8       0       0       0       0       0
  7367 ;;      Locals:         0      13       0       0       0       0       0
  7368 ;;      Temps:          0       4       0       0       0       0       0
  7369 ;;      Totals:         0      25       0       0       0       0       0
  7370 ;;Total ram usage:       25 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:    5
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_Mode2
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           psect	text16,class=CODE,space=0,reloc=2,group=1
  7380                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  7381                           	line	8
  7382                           global __ptext16
  7383                           __ptext16:
  7384  001052                     psect	text16
  7385                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  7386                           	line	8
  7387                           	global	__size_of___flmul
  7388                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  7389  0000                     	
  7390                           ___flmul:; BSR set to: 0
  7391  001052                     
  7392                           ;incstack = 0
  7393                           	opt	stack 24
  7394                           	line	17
  7395                           	
  7396                           l3769:
  7397  001052                     	movlb	0	; () banked
  7398  001052  0100               	movf	(0+(___flmul@b+03h))&0ffh,w
  7399  001054  5189               	andlw	low(080h)
  7400  001056  0B80               	movwf	((___flmul@sign))&0ffh
  7401  001058  6F92               	line	18
  7402                           	movf	(0+(___flmul@b+03h))&0ffh,w
  7403  00105A  5189               	addwf	(0+(___flmul@b+03h))&0ffh,w
  7404  00105C  2589               	movwf	((___flmul@bexp))&0ffh
  7405  00105E  6F98               	line	19
  7406                           	
  7407                           l3771:; BSR set to: 0
  7408  001060                     
  7409                           	
  7410                           	btfss	(0+(___flmul@b+02h))&0ffh,(7)&7
  7411  001060  AF88               	goto	u4321
  7412  001062  EF35  F008         	goto	u4320
  7413  001066  EF37  F008         u4321:
  7414  00106A                     	goto	l3775
  7415  00106A  EF3A  F008         u4320:
  7416  00106E                     	line	20
  7417                           	
  7418                           l3773:; BSR set to: 0
  7419  00106E                     
  7420                           	bsf	(0+(0/8)+(___flmul@bexp))&0ffh,(0)&7
  7421  00106E  8198               	goto	l3775
  7422  001070  EF3A  F008         	line	21
  7423                           	
  7424                           l940:; BSR set to: 0
  7425  001074                     
  7426                           	line	24
  7427                           	
  7428                           l3775:; BSR set to: 0
  7429  001074                     
  7430                           	movf	((___flmul@bexp))&0ffh,w
  7431  001074  5198               	btfsc	status,2
  7432  001076  B4D8               	goto	u4331
  7433  001078  EF40  F008         	goto	u4330
  7434  00107C  EF42  F008         u4331:
  7435  001080                     	goto	l3783
  7436  001080  EF57  F008         u4330:
  7437  001084                     	line	26
  7438                           	
  7439                           l3777:; BSR set to: 0
  7440  001084                     
  7441                           		incf	((___flmul@bexp))&0ffh,w
  7442  001084  2998               	btfss	status,2
  7443  001086  A4D8               	goto	u4341
  7444  001088  EF48  F008         	goto	u4340
  7445  00108C  EF4A  F008         
  7446                           u4341:
  7447  001090                     	goto	l3781
  7448  001090  EF54  F008         u4340:
  7449  001094                     	line	28
  7450                           	
  7451                           l3779:; BSR set to: 0
  7452  001094                     
  7453                           	movlw	low(normalize32(0x0))
  7454  001094  0E00               	movwf	((___flmul@b))&0ffh
  7455  001096  6F86               	movlw	high(normalize32(0x0))
  7456  001098  0E00               	movwf	((___flmul@b+1))&0ffh
  7457  00109A  6F87               	movlw	low highword(normalize32(0x0))
  7458  00109C  0E00               	movwf	((___flmul@b+2))&0ffh
  7459  00109E  6F88               	movlw	high highword(normalize32(0x0))
  7460  0010A0  0E00               	movwf	((___flmul@b+3))&0ffh
  7461  0010A2  6F89               	goto	l3781
  7462  0010A4  EF54  F008         	line	29
  7463                           	
  7464                           l942:; BSR set to: 0
  7465  0010A8                     
  7466                           	line	31
  7467                           	
  7468                           l3781:; BSR set to: 0
  7469  0010A8                     
  7470                           	bsf	(0+(23/8)+(___flmul@b))&0ffh,(23)&7
  7471  0010A8  8F88               	line	33
  7472                           	goto	l3785
  7473  0010AA  EF61  F008         	line	34
  7474                           	
  7475                           l941:; BSR set to: 0
  7476  0010AE                     
  7477                           	line	36
  7478                           	
  7479                           l3783:; BSR set to: 0
  7480  0010AE                     
  7481                           	movlw	low(normalize32(0x0))
  7482  0010AE  0E00               	movwf	((___flmul@b))&0ffh
  7483  0010B0  6F86               	movlw	high(normalize32(0x0))
  7484  0010B2  0E00               	movwf	((___flmul@b+1))&0ffh
  7485  0010B4  6F87               	movlw	low highword(normalize32(0x0))
  7486  0010B6  0E00               	movwf	((___flmul@b+2))&0ffh
  7487  0010B8  6F88               	movlw	high highword(normalize32(0x0))
  7488  0010BA  0E00               	movwf	((___flmul@b+3))&0ffh
  7489  0010BC  6F89               	goto	l3785
  7490  0010BE  EF61  F008         	line	37
  7491                           	
  7492                           l943:; BSR set to: 0
  7493  0010C2                     
  7494                           	line	39
  7495                           	
  7496                           l3785:; BSR set to: 0
  7497  0010C2                     
  7498                           	movf	(0+(___flmul@a+03h))&0ffh,w
  7499  0010C2  518D               	andlw	low(080h)
  7500  0010C4  0B80               	xorwf	((___flmul@sign))&0ffh
  7501  0010C6  1B92               	line	40
  7502                           	
  7503                           l3787:; BSR set to: 0
  7504  0010C8                     
  7505                           	movf	(0+(___flmul@a+03h))&0ffh,w
  7506  0010C8  518D               	addwf	(0+(___flmul@a+03h))&0ffh,w
  7507  0010CA  258D               	movwf	((___flmul@aexp))&0ffh
  7508  0010CC  6F93               	line	41
  7509                           	
  7510                           l3789:; BSR set to: 0
  7511  0010CE                     
  7512                           	
  7513                           	btfss	(0+(___flmul@a+02h))&0ffh,(7)&7
  7514  0010CE  AF8C               	goto	u4351
  7515  0010D0  EF6C  F008         	goto	u4350
  7516  0010D4  EF6E  F008         u4351:
  7517  0010D8                     	goto	l3793
  7518  0010D8  EF71  F008         u4350:
  7519  0010DC                     	line	42
  7520                           	
  7521                           l3791:; BSR set to: 0
  7522  0010DC                     
  7523                           	bsf	(0+(0/8)+(___flmul@aexp))&0ffh,(0)&7
  7524  0010DC  8193               	goto	l3793
  7525  0010DE  EF71  F008         	line	43
  7526                           	
  7527                           l944:; BSR set to: 0
  7528  0010E2                     
  7529                           	line	45
  7530                           	
  7531                           l3793:; BSR set to: 0
  7532  0010E2                     
  7533                           	movf	((___flmul@aexp))&0ffh,w
  7534  0010E2  5193               	btfsc	status,2
  7535  0010E4  B4D8               	goto	u4361
  7536  0010E6  EF77  F008         	goto	u4360
  7537  0010EA  EF79  F008         u4361:
  7538  0010EE                     	goto	l3801
  7539  0010EE  EF8E  F008         u4360:
  7540  0010F2                     	line	48
  7541                           	
  7542                           l3795:; BSR set to: 0
  7543  0010F2                     
  7544                           		incf	((___flmul@aexp))&0ffh,w
  7545  0010F2  2993               	btfss	status,2
  7546  0010F4  A4D8               	goto	u4371
  7547  0010F6  EF7F  F008         	goto	u4370
  7548  0010FA  EF81  F008         
  7549                           u4371:
  7550  0010FE                     	goto	l3799
  7551  0010FE  EF8B  F008         u4370:
  7552  001102                     	line	50
  7553                           	
  7554                           l3797:; BSR set to: 0
  7555  001102                     
  7556                           	movlw	low(normalize32(0x0))
  7557  001102  0E00               	movwf	((___flmul@a))&0ffh
  7558  001104  6F8A               	movlw	high(normalize32(0x0))
  7559  001106  0E00               	movwf	((___flmul@a+1))&0ffh
  7560  001108  6F8B               	movlw	low highword(normalize32(0x0))
  7561  00110A  0E00               	movwf	((___flmul@a+2))&0ffh
  7562  00110C  6F8C               	movlw	high highword(normalize32(0x0))
  7563  00110E  0E00               	movwf	((___flmul@a+3))&0ffh
  7564  001110  6F8D               	goto	l3799
  7565  001112  EF8B  F008         	line	51
  7566                           	
  7567                           l946:; BSR set to: 0
  7568  001116                     
  7569                           	line	53
  7570                           	
  7571                           l3799:; BSR set to: 0
  7572  001116                     
  7573                           	bsf	(0+(23/8)+(___flmul@a))&0ffh,(23)&7
  7574  001116  8F8C               	line	54
  7575                           	goto	l947
  7576  001118  EF96  F008         	line	55
  7577                           	
  7578                           l945:; BSR set to: 0
  7579  00111C                     
  7580                           	line	57
  7581                           	
  7582                           l3801:; BSR set to: 0
  7583  00111C                     
  7584                           	movlw	low(normalize32(0x0))
  7585  00111C  0E00               	movwf	((___flmul@a))&0ffh
  7586  00111E  6F8A               	movlw	high(normalize32(0x0))
  7587  001120  0E00               	movwf	((___flmul@a+1))&0ffh
  7588  001122  6F8B               	movlw	low highword(normalize32(0x0))
  7589  001124  0E00               	movwf	((___flmul@a+2))&0ffh
  7590  001126  6F8C               	movlw	high highword(normalize32(0x0))
  7591  001128  0E00               	movwf	((___flmul@a+3))&0ffh
  7592  00112A  6F8D               	line	58
  7593                           	
  7594                           l947:; BSR set to: 0
  7595  00112C                     
  7596                           	line	65
  7597                           	movf	((___flmul@aexp))&0ffh,w
  7598  00112C  5193               	btfsc	status,2
  7599  00112E  B4D8               	goto	u4381
  7600  001130  EF9C  F008         	goto	u4380
  7601  001134  EF9E  F008         u4381:
  7602  001138                     	goto	l3805
  7603  001138  EFA8  F008         u4380:
  7604  00113C                     	
  7605                           l3803:; BSR set to: 0
  7606  00113C                     
  7607                           	movf	((___flmul@bexp))&0ffh,w
  7608  00113C  5198               	btfss	status,2
  7609  00113E  A4D8               	goto	u4391
  7610  001140  EFA4  F008         	goto	u4390
  7611  001144  EFA6  F008         u4391:
  7612  001148                     	goto	l3809
  7613  001148  EFB4  F008         u4390:
  7614  00114C                     	goto	l3805
  7615  00114C  EFA8  F008         	
  7616                           l950:; BSR set to: 0
  7617  001150                     
  7618                           	line	66
  7619                           	
  7620                           l3805:; BSR set to: 0
  7621  001150                     
  7622                           	movlw	low(normalize32(0x0))
  7623  001150  0E00               	movwf	((?___flmul))&0ffh
  7624  001152  6F86               	movlw	high(normalize32(0x0))
  7625  001154  0E00               	movwf	((?___flmul+1))&0ffh
  7626  001156  6F87               	movlw	low highword(normalize32(0x0))
  7627  001158  0E00               	movwf	((?___flmul+2))&0ffh
  7628  00115A  6F88               	movlw	high highword(normalize32(0x0))
  7629  00115C  0E00               	movwf	((?___flmul+3))&0ffh
  7630  00115E  6F89               	goto	l951
  7631  001160  EF60  F00A         	
  7632                           l3807:; BSR set to: 0
  7633  001164                     
  7634                           	goto	l951
  7635  001164  EF60  F00A         	line	67
  7636                           	
  7637                           l948:; BSR set to: 0
  7638  001168                     
  7639                           	line	95
  7640                           	
  7641                           l3809:; BSR set to: 0
  7642  001168                     
  7643                           	movf	(0+(___flmul@a+02h))&0ffh,w
  7644  001168  518C               	mulwf	((___flmul@b))&0ffh
  7645  00116A  0386               	movff	prodl,(___flmul@temp)
  7646  00116C  CFF3 F09D          	movff	prodh,(___flmul@temp+1)
  7647  001170  CFF4 F09E          	line	96
  7648                           	
  7649                           l3811:; BSR set to: 0
  7650  001174                     
  7651                           	movf	((___flmul@temp))&0ffh,w
  7652  001174  519D               	movwf	((___flmul@grs))&0ffh
  7653  001176  6F94               	clrf	((___flmul@grs+1))&0ffh
  7654  001178  6B95               	clrf	((___flmul@grs+2))&0ffh
  7655  00117A  6B96               	clrf	((___flmul@grs+3))&0ffh
  7656  00117C  6B97               
  7657                           	line	97
  7658                           	
  7659                           l3813:; BSR set to: 0
  7660  00117E                     
  7661                           	movf	(0+(___flmul@temp+01h))&0ffh,w
  7662  00117E  519E               	movwf	((___flmul@prod))&0ffh
  7663  001180  6F99               	clrf	((___flmul@prod+1))&0ffh
  7664  001182  6B9A               	clrf	((___flmul@prod+2))&0ffh
  7665  001184  6B9B               	clrf	((___flmul@prod+3))&0ffh
  7666  001186  6B9C               
  7667                           	line	98
  7668                           	movf	(0+(___flmul@a+01h))&0ffh,w
  7669  001188  518B               	mulwf	(0+(___flmul@b+01h))&0ffh
  7670  00118A  0387               	movff	prodl,(___flmul@temp)
  7671  00118C  CFF3 F09D          	movff	prodh,(___flmul@temp+1)
  7672  001190  CFF4 F09E          	line	99
  7673                           	
  7674                           l3815:; BSR set to: 0
  7675  001194                     
  7676                           	movf	((___flmul@temp))&0ffh,w
  7677  001194  519D               	addwf	((___flmul@grs))&0ffh
  7678  001196  2794               	movlw	0
  7679  001198  0E00               	addwfc	((___flmul@grs+1))&0ffh
  7680  00119A  2395               	addwfc	((___flmul@grs+2))&0ffh
  7681  00119C  2396               	addwfc	((___flmul@grs+3))&0ffh
  7682  00119E  2397               	line	100
  7683                           	
  7684                           l3817:; BSR set to: 0
  7685  0011A0                     
  7686                           	movf	(0+(___flmul@temp+01h))&0ffh,w
  7687  0011A0  519E               	addwf	((___flmul@prod))&0ffh
  7688  0011A2  2799               	movlw	0
  7689  0011A4  0E00               	addwfc	((___flmul@prod+1))&0ffh
  7690  0011A6  239A               	addwfc	((___flmul@prod+2))&0ffh
  7691  0011A8  239B               	addwfc	((___flmul@prod+3))&0ffh
  7692  0011AA  239C               	line	101
  7693                           	movf	((___flmul@a))&0ffh,w
  7694  0011AC  518A               	mulwf	(0+(___flmul@b+02h))&0ffh
  7695  0011AE  0388               	movff	prodl,(___flmul@temp)
  7696  0011B0  CFF3 F09D          	movff	prodh,(___flmul@temp+1)
  7697  0011B4  CFF4 F09E          	line	102
  7698                           	
  7699                           l3819:; BSR set to: 0
  7700  0011B8                     
  7701                           	movf	((___flmul@temp))&0ffh,w
  7702  0011B8  519D               	addwf	((___flmul@grs))&0ffh
  7703  0011BA  2794               	movlw	0
  7704  0011BC  0E00               	addwfc	((___flmul@grs+1))&0ffh
  7705  0011BE  2395               	addwfc	((___flmul@grs+2))&0ffh
  7706  0011C0  2396               	addwfc	((___flmul@grs+3))&0ffh
  7707  0011C2  2397               	line	103
  7708                           	
  7709                           l3821:; BSR set to: 0
  7710  0011C4                     
  7711                           	movf	(0+(___flmul@temp+01h))&0ffh,w
  7712  0011C4  519E               	addwf	((___flmul@prod))&0ffh
  7713  0011C6  2799               	movlw	0
  7714  0011C8  0E00               	addwfc	((___flmul@prod+1))&0ffh
  7715  0011CA  239A               	addwfc	((___flmul@prod+2))&0ffh
  7716  0011CC  239B               	addwfc	((___flmul@prod+3))&0ffh
  7717  0011CE  239C               	line	104
  7718                           	
  7719                           l3823:; BSR set to: 0
  7720  0011D0                     
  7721                           	movff	(___flmul@grs+2),(___flmul@grs+3)
  7722  0011D0  C096  F097         	movff	(___flmul@grs+1),(___flmul@grs+2)
  7723  0011D4  C095  F096         	movff	(___flmul@grs),(___flmul@grs+1)
  7724  0011D8  C094  F095         	clrf	((___flmul@grs))&0ffh
  7725  0011DC  6B94               	line	105
  7726                           	
  7727                           l3825:; BSR set to: 0
  7728  0011DE                     
  7729                           	movf	((___flmul@a))&0ffh,w
  7730  0011DE  518A               	mulwf	(0+(___flmul@b+01h))&0ffh
  7731  0011E0  0387               	movff	prodl,(___flmul@temp)
  7732  0011E2  CFF3 F09D          	movff	prodh,(___flmul@temp+1)
  7733  0011E6  CFF4 F09E          	line	106
  7734                           	
  7735                           l3827:; BSR set to: 0
  7736  0011EA                     
  7737                           	movf	((___flmul@temp))&0ffh,w
  7738  0011EA  519D               	addwf	((___flmul@grs))&0ffh
  7739  0011EC  2794               	movf	((___flmul@temp+1))&0ffh,w
  7740  0011EE  519E               	addwfc	((___flmul@grs+1))&0ffh
  7741  0011F0  2395               	movlw	0
  7742  0011F2  0E00               	addwfc	((___flmul@grs+2))&0ffh
  7743  0011F4  2396               	movlw	0
  7744  0011F6  0E00               	addwfc	((___flmul@grs+3))&0ffh
  7745  0011F8  2397               
  7746                           	line	107
  7747                           	
  7748                           l3829:; BSR set to: 0
  7749  0011FA                     
  7750                           	movf	(0+(___flmul@a+01h))&0ffh,w
  7751  0011FA  518B               	mulwf	((___flmul@b))&0ffh
  7752  0011FC  0386               	movff	prodl,(___flmul@temp)
  7753  0011FE  CFF3 F09D          	movff	prodh,(___flmul@temp+1)
  7754  001202  CFF4 F09E          	line	108
  7755                           	
  7756                           l3831:; BSR set to: 0
  7757  001206                     
  7758                           	movf	((___flmul@temp))&0ffh,w
  7759  001206  519D               	addwf	((___flmul@grs))&0ffh
  7760  001208  2794               	movf	((___flmul@temp+1))&0ffh,w
  7761  00120A  519E               	addwfc	((___flmul@grs+1))&0ffh
  7762  00120C  2395               	movlw	0
  7763  00120E  0E00               	addwfc	((___flmul@grs+2))&0ffh
  7764  001210  2396               	movlw	0
  7765  001212  0E00               	addwfc	((___flmul@grs+3))&0ffh
  7766  001214  2397               
  7767                           	line	109
  7768                           	
  7769                           l3833:; BSR set to: 0
  7770  001216                     
  7771                           	movff	(___flmul@grs+2),(___flmul@grs+3)
  7772  001216  C096  F097         	movff	(___flmul@grs+1),(___flmul@grs+2)
  7773  00121A  C095  F096         	movff	(___flmul@grs),(___flmul@grs+1)
  7774  00121E  C094  F095         	clrf	((___flmul@grs))&0ffh
  7775  001222  6B94               	line	110
  7776                           	movf	((___flmul@a))&0ffh,w
  7777  001224  518A               	mulwf	((___flmul@b))&0ffh
  7778  001226  0386               	movff	prodl,(___flmul@temp)
  7779  001228  CFF3 F09D          	movff	prodh,(___flmul@temp+1)
  7780  00122C  CFF4 F09E          	line	111
  7781                           	
  7782                           l3835:; BSR set to: 0
  7783  001230                     
  7784                           	movf	((___flmul@temp))&0ffh,w
  7785  001230  519D               	addwf	((___flmul@grs))&0ffh
  7786  001232  2794               	movf	((___flmul@temp+1))&0ffh,w
  7787  001234  519E               	addwfc	((___flmul@grs+1))&0ffh
  7788  001236  2395               	movlw	0
  7789  001238  0E00               	addwfc	((___flmul@grs+2))&0ffh
  7790  00123A  2396               	movlw	0
  7791  00123C  0E00               	addwfc	((___flmul@grs+3))&0ffh
  7792  00123E  2397               
  7793                           	line	112
  7794                           	
  7795                           l3837:; BSR set to: 0
  7796  001240                     
  7797                           	movf	(0+(___flmul@a+02h))&0ffh,w
  7798  001240  518C               	mulwf	(0+(___flmul@b+01h))&0ffh
  7799  001242  0387               	movff	prodl,(___flmul@temp)
  7800  001244  CFF3 F09D          	movff	prodh,(___flmul@temp+1)
  7801  001248  CFF4 F09E          	line	113
  7802                           	movf	((___flmul@temp))&0ffh,w
  7803  00124C  519D               	addwf	((___flmul@prod))&0ffh
  7804  00124E  2799               	movf	((___flmul@temp+1))&0ffh,w
  7805  001250  519E               	addwfc	((___flmul@prod+1))&0ffh
  7806  001252  239A               	movlw	0
  7807  001254  0E00               	addwfc	((___flmul@prod+2))&0ffh
  7808  001256  239B               	movlw	0
  7809  001258  0E00               	addwfc	((___flmul@prod+3))&0ffh
  7810  00125A  239C               
  7811                           	line	114
  7812                           	
  7813                           l3839:; BSR set to: 0
  7814  00125C                     
  7815                           	movf	(0+(___flmul@a+01h))&0ffh,w
  7816  00125C  518B               	mulwf	(0+(___flmul@b+02h))&0ffh
  7817  00125E  0388               	movff	prodl,(___flmul@temp)
  7818  001260  CFF3 F09D          	movff	prodh,(___flmul@temp+1)
  7819  001264  CFF4 F09E          	line	115
  7820                           	
  7821                           l3841:; BSR set to: 0
  7822  001268                     
  7823                           	movf	((___flmul@temp))&0ffh,w
  7824  001268  519D               	addwf	((___flmul@prod))&0ffh
  7825  00126A  2799               	movf	((___flmul@temp+1))&0ffh,w
  7826  00126C  519E               	addwfc	((___flmul@prod+1))&0ffh
  7827  00126E  239A               	movlw	0
  7828  001270  0E00               	addwfc	((___flmul@prod+2))&0ffh
  7829  001272  239B               	movlw	0
  7830  001274  0E00               	addwfc	((___flmul@prod+3))&0ffh
  7831  001276  239C               
  7832                           	line	116
  7833                           	movf	(0+(___flmul@a+02h))&0ffh,w
  7834  001278  518C               	mulwf	(0+(___flmul@b+02h))&0ffh
  7835  00127A  0388               	movff	prodl,(___flmul@temp)
  7836  00127C  CFF3 F09D          	movff	prodh,(___flmul@temp+1)
  7837  001280  CFF4 F09E          	line	117
  7838                           	
  7839                           l3843:; BSR set to: 0
  7840  001284                     
  7841                           	movf	((___flmul@temp))&0ffh,w
  7842  001284  519D               	movwf	(??___flmul+0+0)&0ffh
  7843  001286  6F8E               	movf	((___flmul@temp+1))&0ffh,w
  7844  001288  519E               	movwf	1+(??___flmul+0+0)&0ffh
  7845  00128A  6F8F               	
  7846                           	clrf	2+(??___flmul+0+0)&0ffh
  7847  00128C  6B90               	
  7848                           	clrf	3+(??___flmul+0+0)&0ffh
  7849  00128E  6B91               	movff	??___flmul+0+2,??___flmul+0+3
  7850  001290  C090  F091         	movff	??___flmul+0+1,??___flmul+0+2
  7851  001294  C08F  F090         	movff	??___flmul+0+0,??___flmul+0+1
  7852  001298  C08E  F08F         	clrf	(??___flmul+0+0)&0ffh
  7853  00129C  6B8E               	movf	(??___flmul+0+0)&0ffh,w
  7854  00129E  518E               	addwf	((___flmul@prod))&0ffh
  7855  0012A0  2799               	movf	(??___flmul+0+1)&0ffh,w
  7856  0012A2  518F               	addwfc	((___flmul@prod+1))&0ffh
  7857  0012A4  239A               	movf	(??___flmul+0+2)&0ffh,w
  7858  0012A6  5190               	addwfc	((___flmul@prod+2))&0ffh
  7859  0012A8  239B               	movf	(??___flmul+0+3)&0ffh,w
  7860  0012AA  5191               	addwfc	((___flmul@prod+3))&0ffh
  7861  0012AC  239C               
  7862                           	line	145
  7863                           	
  7864                           l3845:; BSR set to: 0
  7865  0012AE                     
  7866                           	movff	(___flmul@grs),??___flmul+0+0
  7867  0012AE  C094  F08E         	movff	(___flmul@grs+1),??___flmul+0+0+1
  7868  0012B2  C095  F08F         	movff	(___flmul@grs+2),??___flmul+0+0+2
  7869  0012B6  C096  F090         	movff	(___flmul@grs+3),??___flmul+0+0+3
  7870  0012BA  C097  F091         	movlw	018h+1
  7871  0012BE  0E19               	goto	u4400
  7872  0012C0  EF67  F009         u4405:
  7873  0012C4                     	bcf	status,0
  7874  0012C4  90D8               	rrcf	(??___flmul+0+3)&0ffh
  7875  0012C6  3391               	rrcf	(??___flmul+0+2)&0ffh
  7876  0012C8  3390               	rrcf	(??___flmul+0+1)&0ffh
  7877  0012CA  338F               	rrcf	(??___flmul+0+0)&0ffh
  7878  0012CC  338E               u4400:
  7879  0012CE                     	decfsz	wreg
  7880  0012CE  2EE8               	goto	u4405
  7881  0012D0  EF62  F009         	movf	(??___flmul+0+0)&0ffh,w
  7882  0012D4  518E               	addwf	((___flmul@prod))&0ffh
  7883  0012D6  2799               	movf	(??___flmul+0+1)&0ffh,w
  7884  0012D8  518F               	addwfc	((___flmul@prod+1))&0ffh
  7885  0012DA  239A               	movf	(??___flmul+0+2)&0ffh,w
  7886  0012DC  5190               	addwfc	((___flmul@prod+2))&0ffh
  7887  0012DE  239B               	movf	(??___flmul+0+3)&0ffh,w
  7888  0012E0  5191               	addwfc	((___flmul@prod+3))&0ffh
  7889  0012E2  239C               
  7890                           	line	146
  7891                           	
  7892                           l3847:; BSR set to: 0
  7893  0012E4                     
  7894                           	movff	(___flmul@grs+2),(___flmul@grs+3)
  7895  0012E4  C096  F097         	movff	(___flmul@grs+1),(___flmul@grs+2)
  7896  0012E8  C095  F096         	movff	(___flmul@grs),(___flmul@grs+1)
  7897  0012EC  C094  F095         	clrf	((___flmul@grs))&0ffh
  7898  0012F0  6B94               	line	149
  7899                           	
  7900                           l3849:; BSR set to: 0
  7901  0012F2                     
  7902                           	movf	((___flmul@aexp))&0ffh,w
  7903  0012F2  5193               	movff	(___flmul@bexp),??___flmul+0+0
  7904  0012F4  C098  F08E         	clrf	(??___flmul+0+0+1)&0ffh
  7905  0012F8  6B8F               	addwf	(??___flmul+0+0)&0ffh
  7906  0012FA  278E               	movlw	0
  7907  0012FC  0E00               	addwfc	(??___flmul+0+1)&0ffh
  7908  0012FE  238F               	movlw	low(-126)
  7909  001300  0E82               	addwf	(??___flmul+0+0)&0ffh,w
  7910  001302  258E               	movwf	((___flmul@temp))&0ffh
  7911  001304  6F9D               	movlw	high(-126)
  7912  001306  0EFF               	addwfc	(??___flmul+0+1)&0ffh,w
  7913  001308  218F               	movwf	1+((___flmul@temp))&0ffh
  7914  00130A  6F9E               	line	152
  7915                           	goto	l3857
  7916  00130C  EF9F  F009         	
  7917                           l953:; BSR set to: 0
  7918  001310                     
  7919                           	line	153
  7920                           	
  7921                           l3851:; BSR set to: 0
  7922  001310                     
  7923                           	bcf	status,0
  7924  001310  90D8               	rlcf	((___flmul@prod))&0ffh
  7925  001312  3799               	rlcf	((___flmul@prod+1))&0ffh
  7926  001314  379A               	rlcf	((___flmul@prod+2))&0ffh
  7927  001316  379B               	rlcf	((___flmul@prod+3))&0ffh
  7928  001318  379C               	line	154
  7929                           	
  7930                           l3853:; BSR set to: 0
  7931  00131A                     
  7932                           	
  7933                           	btfss	((___flmul@grs+3))&0ffh,(31)&7
  7934  00131A  AF97               	goto	u4411
  7935  00131C  EF92  F009         	goto	u4410
  7936  001320  EF94  F009         u4411:
  7937  001324                     	goto	l954
  7938  001324  EF95  F009         u4410:
  7939  001328                     	line	155
  7940                           	
  7941                           l3855:; BSR set to: 0
  7942  001328                     
  7943                           	bsf	(0+(0/8)+(___flmul@prod))&0ffh,(0)&7
  7944  001328  8199               	line	156
  7945                           	
  7946                           l954:; BSR set to: 0
  7947  00132A                     
  7948                           	line	157
  7949                           	bcf	status,0
  7950  00132A  90D8               	rlcf	((___flmul@grs))&0ffh
  7951  00132C  3794               	rlcf	((___flmul@grs+1))&0ffh
  7952  00132E  3795               	rlcf	((___flmul@grs+2))&0ffh
  7953  001330  3796               	rlcf	((___flmul@grs+3))&0ffh
  7954  001332  3797               	line	158
  7955                           	decf	((___flmul@temp))&0ffh
  7956  001334  079D               	btfss	status,0
  7957  001336  A0D8               	decf	((___flmul@temp+1))&0ffh
  7958  001338  079E               	goto	l3857
  7959  00133A  EF9F  F009         	line	159
  7960                           	
  7961                           l952:; BSR set to: 0
  7962  00133E                     
  7963                           	line	152
  7964                           	
  7965                           l3857:; BSR set to: 0
  7966  00133E                     
  7967                           	
  7968                           	btfss	((___flmul@prod+2))&0ffh,(23)&7
  7969  00133E  AF9B               	goto	u4421
  7970  001340  EFA4  F009         	goto	u4420
  7971  001344  EFA6  F009         u4421:
  7972  001348                     	goto	l3851
  7973  001348  EF88  F009         u4420:
  7974  00134C                     	goto	l3859
  7975  00134C  EFA8  F009         	
  7976                           l955:; BSR set to: 0
  7977  001350                     
  7978                           	line	163
  7979                           	
  7980                           l3859:; BSR set to: 0
  7981  001350                     
  7982                           	movlw	low(0)
  7983  001350  0E00               	movwf	((___flmul@aexp))&0ffh
  7984  001352  6F93               	line	164
  7985                           	
  7986                           l3861:; BSR set to: 0
  7987  001354                     
  7988                           	
  7989                           	btfss	((___flmul@grs+3))&0ffh,(31)&7
  7990  001354  AF97               	goto	u4431
  7991  001356  EFAF  F009         	goto	u4430
  7992  00135A  EFB1  F009         u4431:
  7993  00135E                     	goto	l956
  7994  00135E  EFD9  F009         u4430:
  7995  001362                     	line	165
  7996                           	
  7997                           l3863:; BSR set to: 0
  7998  001362                     
  7999                           	movlw	0FFh
  8000  001362  0EFF               	andwf	((___flmul@grs))&0ffh,w
  8001  001364  1594               	movwf	(??___flmul+0+0)&0ffh
  8002  001366  6F8E               	movlw	0FFh
  8003  001368  0EFF               	andwf	((___flmul@grs+1))&0ffh,w
  8004  00136A  1595               	movwf	1+(??___flmul+0+0)&0ffh
  8005  00136C  6F8F               	
  8006                           	movlw	0FFh
  8007  00136E  0EFF               	andwf	((___flmul@grs+2))&0ffh,w
  8008  001370  1596               	movwf	2+(??___flmul+0+0)&0ffh
  8009  001372  6F90               	
  8010                           	movlw	07Fh
  8011  001374  0E7F               	andwf	((___flmul@grs+3))&0ffh,w
  8012  001376  1597               	movwf	3+(??___flmul+0+0)&0ffh
  8013  001378  6F91               	movf	(??___flmul+0+0)&0ffh,w
  8014  00137A  518E               iorwf	(??___flmul+0+1)&0ffh,w
  8015  00137C  118F               iorwf	(??___flmul+0+2)&0ffh,w
  8016  00137E  1190               iorwf	(??___flmul+0+3)&0ffh,w
  8017  001380  1191               	btfsc	status,2
  8018  001382  B4D8               	goto	u4441
  8019  001384  EFC6  F009         	goto	u4440
  8020  001388  EFC8  F009         
  8021                           u4441:
  8022  00138C                     	goto	l957
  8023  00138C  EFCC  F009         u4440:
  8024  001390                     	line	166
  8025                           	
  8026                           l3865:; BSR set to: 0
  8027  001390                     
  8028                           	movlw	low(01h)
  8029  001390  0E01               	movwf	((___flmul@aexp))&0ffh
  8030  001392  6F93               	line	167
  8031                           	goto	l956
  8032  001394  EFD9  F009         	line	168
  8033                           	
  8034                           l957:; BSR set to: 0
  8035  001398                     
  8036                           	line	169
  8037                           	
  8038                           	btfss	((___flmul@prod))&0ffh,(0)&7
  8039  001398  A199               	goto	u4451
  8040  00139A  EFD1  F009         	goto	u4450
  8041  00139E  EFD3  F009         u4451:
  8042  0013A2                     	goto	l956
  8043  0013A2  EFD9  F009         u4450:
  8044  0013A6                     	line	170
  8045                           	
  8046                           l3867:; BSR set to: 0
  8047  0013A6                     
  8048                           	movlw	low(01h)
  8049  0013A6  0E01               	movwf	((___flmul@aexp))&0ffh
  8050  0013A8  6F93               	goto	l956
  8051  0013AA  EFD9  F009         	line	171
  8052                           	
  8053                           l959:; BSR set to: 0
  8054  0013AE                     
  8055                           	goto	l956
  8056  0013AE  EFD9  F009         	line	172
  8057                           	
  8058                           l958:; BSR set to: 0
  8059  0013B2                     
  8060                           	line	173
  8061                           	
  8062                           l956:; BSR set to: 0
  8063  0013B2                     
  8064                           	line	174
  8065                           	movf	((___flmul@aexp))&0ffh,w
  8066  0013B2  5193               	btfsc	status,2
  8067  0013B4  B4D8               	goto	u4461
  8068  0013B6  EFDF  F009         	goto	u4460
  8069  0013BA  EFE1  F009         u4461:
  8070  0013BE                     	goto	l3877
  8071  0013BE  EF09  F00A         u4460:
  8072  0013C2                     	line	175
  8073                           	
  8074                           l3869:; BSR set to: 0
  8075  0013C2                     
  8076                           	movlw	low(01h)
  8077  0013C2  0E01               	addwf	((___flmul@prod))&0ffh
  8078  0013C4  2799               	movlw	0
  8079  0013C6  0E00               	addwfc	((___flmul@prod+1))&0ffh
  8080  0013C8  239A               	addwfc	((___flmul@prod+2))&0ffh
  8081  0013CA  239B               	addwfc	((___flmul@prod+3))&0ffh
  8082  0013CC  239C               	line	176
  8083                           	
  8084                           l3871:; BSR set to: 0
  8085  0013CE                     
  8086                           	
  8087                           	btfss	((___flmul@prod+3))&0ffh,(24)&7
  8088  0013CE  A19C               	goto	u4471
  8089  0013D0  EFEC  F009         	goto	u4470
  8090  0013D4  EFEE  F009         u4471:
  8091  0013D8                     	goto	l3877
  8092  0013D8  EF09  F00A         u4470:
  8093  0013DC                     	line	177
  8094                           	
  8095                           l3873:; BSR set to: 0
  8096  0013DC                     
  8097                           	movff	(___flmul@prod),??___flmul+0+0
  8098  0013DC  C099  F08E         	movff	(___flmul@prod+1),??___flmul+0+0+1
  8099  0013E0  C09A  F08F         	movff	(___flmul@prod+2),??___flmul+0+0+2
  8100  0013E4  C09B  F090         	movff	(___flmul@prod+3),??___flmul+0+0+3
  8101  0013E8  C09C  F091         	rlcf	(??___flmul+0+3)&0ffh,w
  8102  0013EC  3591               	rrcf	(??___flmul+0+3)&0ffh
  8103  0013EE  3391               	rrcf	(??___flmul+0+2)&0ffh
  8104  0013F0  3390               	rrcf	(??___flmul+0+1)&0ffh
  8105  0013F2  338F               	rrcf	(??___flmul+0+0)&0ffh
  8106  0013F4  338E               	movff	??___flmul+0+0,(___flmul@prod)
  8107  0013F6  C08E  F099         	movff	??___flmul+0+1,(___flmul@prod+1)
  8108  0013FA  C08F  F09A         	movff	??___flmul+0+2,(___flmul@prod+2)
  8109  0013FE  C090  F09B         	movff	??___flmul+0+3,(___flmul@prod+3)
  8110  001402  C091  F09C         	line	178
  8111                           	
  8112                           l3875:; BSR set to: 0
  8113  001406                     
  8114                           	infsnz	((___flmul@temp))&0ffh
  8115  001406  4B9D               	incf	((___flmul@temp+1))&0ffh
  8116  001408  2B9E               	goto	l3877
  8117  00140A  EF09  F00A         	line	179
  8118                           	
  8119                           l961:; BSR set to: 0
  8120  00140E                     
  8121                           	goto	l3877
  8122  00140E  EF09  F00A         	line	180
  8123                           	
  8124                           l960:; BSR set to: 0
  8125  001412                     
  8126                           	line	183
  8127                           	
  8128                           l3877:; BSR set to: 0
  8129  001412                     
  8130                           	btfsc	((___flmul@temp+1))&0ffh,7
  8131  001412  BF9E               	goto	u4481
  8132  001414  EF14  F00A         	movf	((___flmul@temp+1))&0ffh,w
  8133  001418  519E               	bnz	u4480
  8134  00141A  E108               	incf	((___flmul@temp))&0ffh,w
  8135  00141C  299D               	btfss	status,0
  8136  00141E  A0D8               	goto	u4481
  8137  001420  EF14  F00A         	goto	u4480
  8138  001424  EF16  F00A         
  8139                           u4481:
  8140  001428                     	goto	l3881
  8141  001428  EF20  F00A         u4480:
  8142  00142C                     	line	184
  8143                           	
  8144                           l3879:; BSR set to: 0
  8145  00142C                     
  8146                           	movlw	low(07F800000h)
  8147  00142C  0E00               	movwf	((___flmul@prod))&0ffh
  8148  00142E  6F99               	movlw	high(07F800000h)
  8149  001430  0E00               	movwf	((___flmul@prod+1))&0ffh
  8150  001432  6F9A               	movlw	low highword(07F800000h)
  8151  001434  0E80               	movwf	((___flmul@prod+2))&0ffh
  8152  001436  6F9B               	movlw	high highword(07F800000h)
  8153  001438  0E7F               	movwf	((___flmul@prod+3))&0ffh
  8154  00143A  6F9C               	line	185
  8155                           	goto	l3893
  8156  00143C  EF54  F00A         	line	187
  8157                           	
  8158                           l962:; BSR set to: 0
  8159  001440                     
  8160                           	
  8161                           l3881:; BSR set to: 0
  8162  001440                     
  8163                           	btfsc	((___flmul@temp+1))&0ffh,7
  8164  001440  BF9E               	goto	u4490
  8165  001442  EF2D  F00A         	movf	((___flmul@temp+1))&0ffh,w
  8166  001446  519E               	bnz	u4491
  8167  001448  E106               	decf	((___flmul@temp))&0ffh,w
  8168  00144A  059D               	btfsc	status,0
  8169  00144C  B0D8               	goto	u4491
  8170  00144E  EF2B  F00A         	goto	u4490
  8171  001452  EF2D  F00A         
  8172                           u4491:
  8173  001456                     	goto	l964
  8174  001456  EF39  F00A         u4490:
  8175  00145A                     	line	188
  8176                           	
  8177                           l3883:; BSR set to: 0
  8178  00145A                     
  8179                           	movlw	low(0)
  8180  00145A  0E00               	movwf	((___flmul@prod))&0ffh
  8181  00145C  6F99               	movlw	high(0)
  8182  00145E  0E00               	movwf	((___flmul@prod+1))&0ffh
  8183  001460  6F9A               	movlw	low highword(0)
  8184  001462  0E00               	movwf	((___flmul@prod+2))&0ffh
  8185  001464  6F9B               	movlw	high highword(0)
  8186  001466  0E00               	movwf	((___flmul@prod+3))&0ffh
  8187  001468  6F9C               	line	190
  8188                           	movlw	low(0)
  8189  00146A  0E00               	movwf	((___flmul@sign))&0ffh
  8190  00146C  6F92               	line	191
  8191                           	goto	l3893
  8192  00146E  EF54  F00A         	line	192
  8193                           	
  8194                           l964:; BSR set to: 0
  8195  001472                     
  8196                           	line	194
  8197                           	movff	(___flmul@temp),(___flmul@bexp)
  8198  001472  C09D  F098         	line	195
  8199                           	
  8200                           l3885:; BSR set to: 0
  8201  001476                     
  8202                           	movlw	0FFh
  8203  001476  0EFF               	andwf	((___flmul@prod))&0ffh
  8204  001478  1799               	movlw	0FFh
  8205  00147A  0EFF               	andwf	((___flmul@prod+1))&0ffh
  8206  00147C  179A               	movlw	07Fh
  8207  00147E  0E7F               	andwf	((___flmul@prod+2))&0ffh
  8208  001480  179B               	movlw	0
  8209  001482  0E00               	andwf	((___flmul@prod+3))&0ffh
  8210  001484  179C               	line	196
  8211                           	
  8212                           l3887:; BSR set to: 0
  8213  001486                     
  8214                           	
  8215                           	btfss	((___flmul@bexp))&0ffh,(0)&7
  8216  001486  A198               	goto	u4501
  8217  001488  EF48  F00A         	goto	u4500
  8218  00148C  EF4A  F00A         u4501:
  8219  001490                     	goto	l3891
  8220  001490  EF4D  F00A         u4500:
  8221  001494                     	line	197
  8222                           	
  8223                           l3889:; BSR set to: 0
  8224  001494                     
  8225                           	bsf	(0+(7/8)+0+(___flmul@prod+02h))&0ffh,(7)&7
  8226  001494  8F9B               	goto	l3891
  8227  001496  EF4D  F00A         	line	198
  8228                           	
  8229                           l966:; BSR set to: 0
  8230  00149A                     
  8231                           	line	199
  8232                           	
  8233                           l3891:; BSR set to: 0
  8234  00149A                     
  8235                           	bcf	status,0
  8236  00149A  90D8               	rrcf	((___flmul@bexp))&0ffh,w
  8237  00149C  3198               	movwf	(0+(___flmul@prod+03h))&0ffh
  8238  00149E  6F9C               	goto	l3893
  8239  0014A0  EF54  F00A         	line	200
  8240                           	
  8241                           l965:; BSR set to: 0
  8242  0014A4                     
  8243                           	goto	l3893
  8244  0014A4  EF54  F00A         	
  8245                           l963:; BSR set to: 0
  8246  0014A8                     
  8247                           	line	201
  8248                           	
  8249                           l3893:; BSR set to: 0
  8250  0014A8                     
  8251                           	movf	((___flmul@sign))&0ffh,w
  8252  0014A8  5192               	iorwf	(0+(___flmul@prod+03h))&0ffh
  8253  0014AA  139C               	line	203
  8254                           	
  8255                           l3895:; BSR set to: 0
  8256  0014AC                     
  8257                           	movff	(___flmul@prod),(?___flmul)
  8258  0014AC  C099  F086         	movff	(___flmul@prod+1),(?___flmul+1)
  8259  0014B0  C09A  F087         	movff	(___flmul@prod+2),(?___flmul+2)
  8260  0014B4  C09B  F088         	movff	(___flmul@prod+3),(?___flmul+3)
  8261  0014B8  C09C  F089         	goto	l951
  8262  0014BC  EF60  F00A         	
  8263                           l3897:; BSR set to: 0
  8264  0014C0                     
  8265                           	line	205
  8266                           	
  8267                           l951:; BSR set to: 0
  8268  0014C0                     
  8269                           	return	;funcret
  8270  0014C0  0012               	opt stack 0
  8271                           GLOBAL	__end_of___flmul
  8272                           	__end_of___flmul:
  8273  0014C2                     	signat	___flmul,8316
  8274                           	global	___awdiv
  8275                           
  8276 ;; *************** function ___awdiv *****************
  8277 ;; Defined at:
  8278 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  dividend        2   39[COMRAM] int 
  8281 ;;  divisor         2   41[COMRAM] int 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  quotient        2   45[COMRAM] int 
  8284 ;;  sign            1   44[COMRAM] unsigned char 
  8285 ;;  counter         1   43[COMRAM] unsigned char 
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  2   39[COMRAM] int 
  8288 ;; Registers used:
  8289 ;;		wreg, status,2, status,0
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8295 ;;      Params:         4       0       0       0       0       0       0
  8296 ;;      Locals:         4       0       0       0       0       0       0
  8297 ;;      Temps:          0       0       0       0       0       0       0
  8298 ;;      Totals:         8       0       0       0       0       0       0
  8299 ;;Total ram usage:        8 bytes
  8300 ;; Hardware stack levels used:    1
  8301 ;; Hardware stack levels required when called:    5
  8302 ;; This function calls:
  8303 ;;		Nothing
  8304 ;; This function is called by:
  8305 ;;		_Mode2
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           psect	text17,class=CODE,space=0,reloc=2,group=1
  8309                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  8310                           	line	7
  8311                           global __ptext17
  8312                           __ptext17:
  8313  00245C                     psect	text17
  8314                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  8315                           	line	7
  8316                           	global	__size_of___awdiv
  8317                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  8318  0000                     	
  8319                           ___awdiv:; BSR set to: 0
  8320  00245C                     
  8321                           ;incstack = 0
  8322                           	opt	stack 24
  8323                           	line	13
  8324                           	
  8325                           l2737:
  8326  00245C                     	movlw	low(0)
  8327  00245C  0E00               	movwf	((c:___awdiv@sign)),c
  8328  00245E  6E2D               	line	14
  8329                           	
  8330                           l2739:
  8331  002460                     	btfsc	((c:___awdiv@divisor+1)),c,7
  8332  002460  BE2B               	goto	u2660
  8333  002462  EF37  F012         	goto	u2661
  8334  002466  EF35  F012         
  8335                           u2661:
  8336  00246A                     	goto	l2745
  8337  00246A  EF3F  F012         u2660:
  8338  00246E                     	line	15
  8339                           	
  8340                           l2741:
  8341  00246E                     	negf	((c:___awdiv@divisor)),c
  8342  00246E  6C2A               	comf	((c:___awdiv@divisor+1)),c
  8343  002470  1E2B               	btfsc	status,0
  8344  002472  B0D8               	incf	((c:___awdiv@divisor+1)),c
  8345  002474  2A2B               	line	16
  8346                           	
  8347                           l2743:
  8348  002476                     	movlw	low(01h)
  8349  002476  0E01               	movwf	((c:___awdiv@sign)),c
  8350  002478  6E2D               	goto	l2745
  8351  00247A  EF3F  F012         	line	17
  8352                           	
  8353                           l554:
  8354  00247E                     	line	18
  8355                           	
  8356                           l2745:
  8357  00247E                     	btfsc	((c:___awdiv@dividend+1)),c,7
  8358  00247E  BE29               	goto	u2670
  8359  002480  EF46  F012         	goto	u2671
  8360  002484  EF44  F012         
  8361                           u2671:
  8362  002488                     	goto	l2751
  8363  002488  EF4E  F012         u2670:
  8364  00248C                     	line	19
  8365                           	
  8366                           l2747:
  8367  00248C                     	negf	((c:___awdiv@dividend)),c
  8368  00248C  6C28               	comf	((c:___awdiv@dividend+1)),c
  8369  00248E  1E29               	btfsc	status,0
  8370  002490  B0D8               	incf	((c:___awdiv@dividend+1)),c
  8371  002492  2A29               	line	20
  8372                           	
  8373                           l2749:
  8374  002494                     	movlw	(01h)&0ffh
  8375  002494  0E01               	xorwf	((c:___awdiv@sign)),c
  8376  002496  1A2D               	goto	l2751
  8377  002498  EF4E  F012         	line	21
  8378                           	
  8379                           l555:
  8380  00249C                     	line	22
  8381                           	
  8382                           l2751:
  8383  00249C                     	movlw	high(0)
  8384  00249C  0E00               	movwf	((c:___awdiv@quotient+1)),c
  8385  00249E  6E2F               	movlw	low(0)
  8386  0024A0  0E00               	movwf	((c:___awdiv@quotient)),c
  8387  0024A2  6E2E               	line	23
  8388                           	
  8389                           l2753:
  8390  0024A4                     	movf	((c:___awdiv@divisor)),c,w
  8391  0024A4  502A               iorwf	((c:___awdiv@divisor+1)),c,w
  8392  0024A6  102B               	btfsc	status,2
  8393  0024A8  B4D8               	goto	u2681
  8394  0024AA  EF59  F012         	goto	u2680
  8395  0024AE  EF5B  F012         
  8396                           u2681:
  8397  0024B2                     	goto	l2773
  8398  0024B2  EF8F  F012         u2680:
  8399  0024B6                     	line	24
  8400                           	
  8401                           l2755:
  8402  0024B6                     	movlw	low(01h)
  8403  0024B6  0E01               	movwf	((c:___awdiv@counter)),c
  8404  0024B8  6E2C               	line	25
  8405                           	goto	l2759
  8406  0024BA  EF65  F012         	
  8407                           l558:
  8408  0024BE                     	line	26
  8409                           	
  8410                           l2757:
  8411  0024BE                     	bcf	status,0
  8412  0024BE  90D8               	rlcf	((c:___awdiv@divisor)),c
  8413  0024C0  362A               	rlcf	((c:___awdiv@divisor+1)),c
  8414  0024C2  362B               	line	27
  8415                           	incf	((c:___awdiv@counter)),c
  8416  0024C4  2A2C               	goto	l2759
  8417  0024C6  EF65  F012         	line	28
  8418                           	
  8419                           l557:
  8420  0024CA                     	line	25
  8421                           	
  8422                           l2759:
  8423  0024CA                     	
  8424                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
  8425  0024CA  AE2B               	goto	u2691
  8426  0024CC  EF6A  F012         	goto	u2690
  8427  0024D0  EF6C  F012         u2691:
  8428  0024D4                     	goto	l2757
  8429  0024D4  EF5F  F012         u2690:
  8430  0024D8                     	goto	l2761
  8431  0024D8  EF70  F012         	
  8432                           l559:
  8433  0024DC                     	goto	l2761
  8434  0024DC  EF70  F012         	line	29
  8435                           	
  8436                           l560:
  8437  0024E0                     	line	30
  8438                           	
  8439                           l2761:
  8440  0024E0                     	bcf	status,0
  8441  0024E0  90D8               	rlcf	((c:___awdiv@quotient)),c
  8442  0024E2  362E               	rlcf	((c:___awdiv@quotient+1)),c
  8443  0024E4  362F               	line	31
  8444                           	
  8445                           l2763:
  8446  0024E6                     		movf	((c:___awdiv@divisor)),c,w
  8447  0024E6  502A               	subwf	((c:___awdiv@dividend)),c,w
  8448  0024E8  5C28               	movf	((c:___awdiv@divisor+1)),c,w
  8449  0024EA  502B               	subwfb	((c:___awdiv@dividend+1)),c,w
  8450  0024EC  5829               	btfss	status,0
  8451  0024EE  A0D8               	goto	u2701
  8452  0024F0  EF7C  F012         	goto	u2700
  8453  0024F4  EF7E  F012         
  8454                           u2701:
  8455  0024F8                     	goto	l2769
  8456  0024F8  EF85  F012         u2700:
  8457  0024FC                     	line	32
  8458                           	
  8459                           l2765:
  8460  0024FC                     	movf	((c:___awdiv@divisor)),c,w
  8461  0024FC  502A               	subwf	((c:___awdiv@dividend)),c
  8462  0024FE  5E28               	movf	((c:___awdiv@divisor+1)),c,w
  8463  002500  502B               	subwfb	((c:___awdiv@dividend+1)),c
  8464  002502  5A29               
  8465                           	line	33
  8466                           	
  8467                           l2767:
  8468  002504                     	bsf	(0+(0/8)+(c:___awdiv@quotient)),c,(0)&7
  8469  002504  802E               	goto	l2769
  8470  002506  EF85  F012         	line	34
  8471                           	
  8472                           l561:
  8473  00250A                     	line	35
  8474                           	
  8475                           l2769:
  8476  00250A                     	bcf	status,0
  8477  00250A  90D8               	rrcf	((c:___awdiv@divisor+1)),c
  8478  00250C  322B               	rrcf	((c:___awdiv@divisor)),c
  8479  00250E  322A               	line	36
  8480                           	
  8481                           l2771:
  8482  002510                     	decfsz	((c:___awdiv@counter)),c
  8483  002510  2E2C               	
  8484                           	goto	l2761
  8485  002512  EF70  F012         	goto	l2773
  8486  002516  EF8F  F012         	
  8487                           l562:
  8488  00251A                     	goto	l2773
  8489  00251A  EF8F  F012         	line	37
  8490                           	
  8491                           l556:
  8492  00251E                     	line	38
  8493                           	
  8494                           l2773:
  8495  00251E                     	movf	((c:___awdiv@sign)),c,w
  8496  00251E  502D               	btfsc	status,2
  8497  002520  B4D8               	goto	u2711
  8498  002522  EF95  F012         	goto	u2710
  8499  002526  EF97  F012         u2711:
  8500  00252A                     	goto	l2777
  8501  00252A  EF9D  F012         u2710:
  8502  00252E                     	line	39
  8503                           	
  8504                           l2775:
  8505  00252E                     	negf	((c:___awdiv@quotient)),c
  8506  00252E  6C2E               	comf	((c:___awdiv@quotient+1)),c
  8507  002530  1E2F               	btfsc	status,0
  8508  002532  B0D8               	incf	((c:___awdiv@quotient+1)),c
  8509  002534  2A2F               	goto	l2777
  8510  002536  EF9D  F012         	
  8511                           l563:
  8512  00253A                     	line	40
  8513                           	
  8514                           l2777:
  8515  00253A                     	movff	(c:___awdiv@quotient),(c:?___awdiv)
  8516  00253A  C02E  F028         	movff	(c:___awdiv@quotient+1),(c:?___awdiv+1)
  8517  00253E  C02F  F029         	goto	l564
  8518  002542  EFA3  F012         	
  8519                           l2779:
  8520  002546                     	line	41
  8521                           	
  8522                           l564:
  8523  002546                     	return	;funcret
  8524  002546  0012               	opt stack 0
  8525                           GLOBAL	__end_of___awdiv
  8526                           	__end_of___awdiv:
  8527  002548                     	signat	___awdiv,8314
  8528                           	global	_ADC_Read
  8529                           
  8530 ;; *************** function _ADC_Read *****************
  8531 ;; Defined at:
  8532 ;;		line 13 in file "setting_hardaware/adc.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;  channel         2   39[COMRAM] int 
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;  digital         2   43[COMRAM] int 
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  2   39[COMRAM] int 
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8546 ;;      Params:         2       0       0       0       0       0       0
  8547 ;;      Locals:         2       0       0       0       0       0       0
  8548 ;;      Temps:          2       0       0       0       0       0       0
  8549 ;;      Totals:         6       0       0       0       0       0       0
  8550 ;;Total ram usage:        6 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    5
  8553 ;; This function calls:
  8554 ;;		Nothing
  8555 ;; This function is called by:
  8556 ;;		_Mode2
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           psect	text18,class=CODE,space=0,reloc=2,group=0
  8560                           	file	"setting_hardaware/adc.c"
  8561                           	line	13
  8562                           global __ptext18
  8563                           __ptext18:
  8564  002B4C                     psect	text18
  8565                           	file	"setting_hardaware/adc.c"
  8566                           	line	13
  8567                           	global	__size_of_ADC_Read
  8568                           	__size_of_ADC_Read	equ	__end_of_ADC_Read-_ADC_Read
  8569  0000                     	
  8570                           _ADC_Read:
  8571  002B4C                     ;incstack = 0
  8572                           	opt	stack 24
  8573                           	line	17
  8574                           	
  8575                           l2573:
  8576  002B4C                     ;setting_hardaware/adc.c: 13: int ADC_Read(int channel);setting_hardaware/adc.c: 14: {;s
                                 etting_hardaware/adc.c: 15:     int digital;;setting_hardaware/adc.c: 17:     ADCON0bits
                                 .CHS = 0 ;
  8577                           		
  8578                           	bcf	((c:4034)),c, 2+0	;volatile
  8579  002B4C  94C2               	bcf	((c:4034)),c, 2+1	;volatile
  8580  002B4E  96C2               	bcf	((c:4034)),c, 2+2	;volatile
  8581  002B50  98C2               	bcf	((c:4034)),c, 2+3	;volatile
  8582  002B52  9AC2               
  8583                           	line	18
  8584                           ;setting_hardaware/adc.c: 18:     ADCON0bits.GO = 1;
  8585                           	bsf	((c:4034)),c,1	;volatile
  8586  002B54  82C2               	line	19
  8587                           ;setting_hardaware/adc.c: 19:     ADCON0bits.ADON = 1;
  8588                           	bsf	((c:4034)),c,0	;volatile
  8589  002B56  80C2               	line	21
  8590                           ;setting_hardaware/adc.c: 21:     while(ADCON0bits.GO_nDONE==1);
  8591                           	goto	l111
  8592  002B58  EFAE  F015         	
  8593                           l112:
  8594  002B5C                     	
  8595                           l111:
  8596  002B5C                     	btfsc	((c:4034)),c,1	;volatile
  8597  002B5C  B2C2               	goto	u2421
  8598  002B5E  EFB3  F015         	goto	u2420
  8599  002B62  EFB5  F015         u2421:
  8600  002B66                     	goto	l111
  8601  002B66  EFAE  F015         u2420:
  8602  002B6A                     	goto	l2575
  8603  002B6A  EFB7  F015         	
  8604                           l113:
  8605  002B6E                     	line	23
  8606                           	
  8607                           l2575:
  8608  002B6E                     ;setting_hardaware/adc.c: 23:     digital = (ADRESH*256) | (ADRESL);
  8609                           	movf	((c:4035)),c,w	;volatile
  8610  002B6E  50C3               	movff	(c:4036),??_ADC_Read+0+0	;volatile
  8611  002B70  CFC4 F02A          	clrf	(??_ADC_Read+0+0+1)&0ffh,c
  8612  002B74  6A2B               	movff	??_ADC_Read+0+0,??_ADC_Read+0+1
  8613  002B76  C02A  F02B         	clrf	(??_ADC_Read+0+0),c
  8614  002B7A  6A2A               	iorwf	(??_ADC_Read+0+0),c,w
  8615  002B7C  102A               	movwf	((c:ADC_Read@digital)),c
  8616  002B7E  6E2C               	movf	(??_ADC_Read+0+1),c,w
  8617  002B80  502B               	movwf	1+((c:ADC_Read@digital)),c
  8618  002B82  6E2D               	line	24
  8619                           	
  8620                           l2577:
  8621  002B84                     ;setting_hardaware/adc.c: 24:     return(digital);
  8622                           	movff	(c:ADC_Read@digital),(c:?_ADC_Read)
  8623  002B84  C02C  F028         	movff	(c:ADC_Read@digital+1),(c:?_ADC_Read+1)
  8624  002B88  C02D  F029         	goto	l114
  8625  002B8C  EFC8  F015         	
  8626                           l2579:
  8627  002B90                     	line	25
  8628                           	
  8629                           l114:
  8630  002B90                     	return	;funcret
  8631  002B90  0012               	opt stack 0
  8632                           GLOBAL	__end_of_ADC_Read
  8633                           	__end_of_ADC_Read:
  8634  002B92                     	signat	_ADC_Read,4218
  8635                           	global	_Mode1
  8636                           
  8637 ;; *************** function _Mode1 *****************
  8638 ;; Defined at:
  8639 ;;		line 103 in file "main.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;		None
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;		None
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  1    wreg      void 
  8646 ;; Registers used:
  8647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8653 ;;      Params:         0       0       0       0       0       0       0
  8654 ;;      Locals:         0       0       0       0       0       0       0
  8655 ;;      Temps:          0       0       0       0       0       0       0
  8656 ;;      Totals:         0       0       0       0       0       0       0
  8657 ;;Total ram usage:        0 bytes
  8658 ;; Hardware stack levels used:    1
  8659 ;; Hardware stack levels required when called:    7
  8660 ;; This function calls:
  8661 ;;		_ClearBuffer
  8662 ;;		_GetString
  8663 ;;		_UART_Write_Text
  8664 ;;		_strstr
  8665 ;; This function is called by:
  8666 ;;		_main
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           psect	text19,class=CODE,space=0,reloc=2,group=0
  8670                           	file	"main.c"
  8671                           	line	103
  8672                           global __ptext19
  8673                           __ptext19:
  8674  000BC2                     psect	text19
  8675                           	file	"main.c"
  8676                           	line	103
  8677                           	global	__size_of_Mode1
  8678                           	__size_of_Mode1	equ	__end_of_Mode1-_Mode1
  8679  0000                     	
  8680                           _Mode1:
  8681  000BC2                     ;incstack = 0
  8682                           	opt	stack 23
  8683                           	line	105
  8684                           	
  8685                           l3951:
  8686  000BC2                     ;main.c: 105:     ClearBuffer();
  8687                           	call	_ClearBuffer	;wreg free
  8688  000BC2  EC71  F014         	line	106
  8689                           	
  8690                           l3953:
  8691  000BC6                     ;main.c: 106:     led_mode = 0;
  8692                           	movlw	high(0)
  8693  000BC6  0E00               	movwf	((c:_led_mode+1)),c
  8694  000BC8  6E37               	movlw	low(0)
  8695  000BCA  0E00               	movwf	((c:_led_mode)),c
  8696  000BCC  6E36               	line	107
  8697                           	
  8698                           l3955:
  8699  000BCE                     ;main.c: 107:     UART_Write_Text("Mode1 ");
  8700                           		movlw	low(STR_1)
  8701  000BCE  0E01               	movwf	((c:UART_Write_Text@text)),c
  8702  000BD0  6E29               	movlw	high(STR_1)
  8703  000BD2  0E06               	movwf	((c:UART_Write_Text@text+1)),c
  8704  000BD4  6E2A               
  8705                           	call	_UART_Write_Text	;wreg free
  8706  000BD6  ECD6  F014         	line	108
  8707                           	
  8708                           l3957:
  8709  000BDA                     ;main.c: 108:     T3CONbits.RD16 = 1;
  8710                           	bsf	((c:4017)),c,7	;volatile
  8711  000BDA  8EB1               	line	109
  8712                           	
  8713                           l3959:
  8714  000BDC                     ;main.c: 109:     T3CONbits.T3CKPS = 3;
  8715                           	movlw	(03h & ((1<<2)-1))<<4
  8716  000BDC  0E30               	iorwf	((c:4017)),c	;volatile
  8717  000BDE  12B1               	line	110
  8718                           	
  8719                           l3961:
  8720  000BE0                     ;main.c: 110:     T3CONbits.TMR3CS = 0;
  8721                           	bcf	((c:4017)),c,1	;volatile
  8722  000BE0  92B1               	line	111
  8723                           	
  8724                           l3963:
  8725  000BE2                     ;main.c: 111:     PIR2bits.TMR3IF = 0;
  8726                           	bcf	((c:4001)),c,1	;volatile
  8727  000BE2  92A1               	line	112
  8728                           	
  8729                           l3965:
  8730  000BE4                     ;main.c: 112:     PIE2bits.TMR3IE = 1;
  8731                           	bsf	((c:4000)),c,1	;volatile
  8732  000BE4  82A0               	line	113
  8733                           	
  8734                           l3967:
  8735  000BE6                     ;main.c: 113:     IPR2bits.TMR3IP = 1;
  8736                           	bsf	((c:4002)),c,1	;volatile
  8737  000BE6  82A2               	line	114
  8738                           	
  8739                           l3969:
  8740  000BE8                     ;main.c: 114:     TMR3 = 34285;
  8741                           	movlw	high(085EDh)
  8742  000BE8  0E85               	movwf	((c:4018+1)),c	;volatile
  8743  000BEA  6EB3               	movlw	low(085EDh)
  8744  000BEC  0EED               	movwf	((c:4018)),c	;volatile
  8745  000BEE  6EB2               	goto	l3971
  8746  000BF0  EFFA  F005         	line	115
  8747                           ;main.c: 115:     while(1){
  8748                           	
  8749                           l238:
  8750  000BF4                     	line	116
  8751                           	
  8752                           l3971:
  8753  000BF4                     ;main.c: 116:         if(strstr(GetString(), "1") != ((void*)0)) {
  8754                           	call	_GetString	;wreg free
  8755  000BF4  EC38  F016         	movff	0+?_GetString,(strstr@h)
  8756  000BF8  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  8757  000BFC  C029  F081         		movlw	low(STR_2)
  8758  000C00  0E27               	movlb	0	; () banked
  8759  000C02  0100               	movwf	((strstr@n))&0ffh
  8760  000C04  6F82               	movlw	high(STR_2)
  8761  000C06  0E06               	movwf	((strstr@n+1))&0ffh
  8762  000C08  6F83               
  8763                           	call	_strstr	;wreg free
  8764  000C0A  EC1A  F013         	movlb	0	; () banked
  8765  000C0E  0100               	movf	(0+?_strstr)&0ffh,w
  8766  000C10  5180               iorwf	(1+?_strstr)&0ffh,w
  8767  000C12  1181               	btfsc	status,2
  8768  000C14  B4D8               	goto	u4611
  8769  000C16  EF0F  F006         	goto	u4610
  8770  000C1A  EF11  F006         
  8771                           u4611:
  8772  000C1E                     	goto	l3983
  8773  000C1E  EF1D  F006         u4610:
  8774  000C22                     	line	117
  8775                           	
  8776                           l3973:; BSR set to: 0
  8777  000C22                     
  8778                           ;main.c: 117:             led_num = 1;
  8779                           	movlw	high(01h)
  8780  000C22  0E00               	movwf	((c:_led_num+1)),c
  8781  000C24  6E41               	movlw	low(01h)
  8782  000C26  0E01               	movwf	((c:_led_num)),c
  8783  000C28  6E40               	line	118
  8784                           	
  8785                           l3975:; BSR set to: 0
  8786  000C2A                     
  8787                           ;main.c: 118:             TRISCbits.RC2 = 0;
  8788                           	bcf	((c:3988)),c,2	;volatile
  8789  000C2A  9494               	line	119
  8790                           	
  8791                           l3977:; BSR set to: 0
  8792  000C2C                     
  8793                           ;main.c: 119:             RC2 = 0;
  8794                           	bcf	c:(31762/8),(31762)&7	;volatile
  8795  000C2C  9482               	line	120
  8796                           	
  8797                           l3979:; BSR set to: 0
  8798  000C2E                     
  8799                           ;main.c: 120:             ClearBuffer();
  8800                           	call	_ClearBuffer	;wreg free
  8801  000C2E  EC71  F014         	line	121
  8802                           ;main.c: 121:             break;
  8803                           	goto	l4041
  8804  000C32  EF9C  F006         	line	122
  8805                           	
  8806                           l3981:
  8807  000C36                     ;main.c: 122:         }
  8808                           	goto	l3971
  8809  000C36  EFFA  F005         	line	123
  8810                           ;main.c: 123:         else if(strstr(GetString(), "2") != ((void*)0)) {
  8811                           	
  8812                           l239:
  8813  000C3A                     	
  8814                           l3983:
  8815  000C3A                     	call	_GetString	;wreg free
  8816  000C3A  EC38  F016         	movff	0+?_GetString,(strstr@h)
  8817  000C3E  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  8818  000C42  C029  F081         		movlw	low(STR_3)
  8819  000C46  0E13               	movlb	0	; () banked
  8820  000C48  0100               	movwf	((strstr@n))&0ffh
  8821  000C4A  6F82               	movlw	high(STR_3)
  8822  000C4C  0E06               	movwf	((strstr@n+1))&0ffh
  8823  000C4E  6F83               
  8824                           	call	_strstr	;wreg free
  8825  000C50  EC1A  F013         	movlb	0	; () banked
  8826  000C54  0100               	movf	(0+?_strstr)&0ffh,w
  8827  000C56  5180               iorwf	(1+?_strstr)&0ffh,w
  8828  000C58  1181               	btfsc	status,2
  8829  000C5A  B4D8               	goto	u4621
  8830  000C5C  EF32  F006         	goto	u4620
  8831  000C60  EF34  F006         
  8832                           u4621:
  8833  000C64                     	goto	l3999
  8834  000C64  EF42  F006         u4620:
  8835  000C68                     	line	124
  8836                           	
  8837                           l3985:; BSR set to: 0
  8838  000C68                     
  8839                           ;main.c: 124:             led_num = 2;
  8840                           	movlw	high(02h)
  8841  000C68  0E00               	movwf	((c:_led_num+1)),c
  8842  000C6A  6E41               	movlw	low(02h)
  8843  000C6C  0E02               	movwf	((c:_led_num)),c
  8844  000C6E  6E40               	line	125
  8845                           	
  8846                           l3987:; BSR set to: 0
  8847  000C70                     
  8848                           ;main.c: 125:             TRISCbits.RC2 = 0;
  8849                           	bcf	((c:3988)),c,2	;volatile
  8850  000C70  9494               	line	126
  8851                           	
  8852                           l3989:; BSR set to: 0
  8853  000C72                     
  8854                           ;main.c: 126:             RC2 = 0;
  8855                           	bcf	c:(31762/8),(31762)&7	;volatile
  8856  000C72  9482               	line	127
  8857                           	
  8858                           l3991:; BSR set to: 0
  8859  000C74                     
  8860                           ;main.c: 127:             TRISDbits.RD5 = 0;
  8861                           	bcf	((c:3989)),c,5	;volatile
  8862  000C74  9A95               	line	128
  8863                           	
  8864                           l3993:; BSR set to: 0
  8865  000C76                     
  8866                           ;main.c: 128:             RD5 = 0;
  8867                           	bcf	c:(31773/8),(31773)&7	;volatile
  8868  000C76  9A83               	line	129
  8869                           	
  8870                           l3995:; BSR set to: 0
  8871  000C78                     
  8872                           ;main.c: 129:             ClearBuffer();
  8873                           	call	_ClearBuffer	;wreg free
  8874  000C78  EC71  F014         	line	130
  8875                           ;main.c: 130:             break;
  8876                           	goto	l4041
  8877  000C7C  EF9C  F006         	line	131
  8878                           	
  8879                           l3997:
  8880  000C80                     ;main.c: 131:         }
  8881                           	goto	l3971
  8882  000C80  EFFA  F005         	line	132
  8883                           ;main.c: 132:         else if(strstr(GetString(), "3") != ((void*)0)) {
  8884                           	
  8885                           l242:
  8886  000C84                     	
  8887                           l3999:
  8888  000C84                     	call	_GetString	;wreg free
  8889  000C84  EC38  F016         	movff	0+?_GetString,(strstr@h)
  8890  000C88  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  8891  000C8C  C029  F081         		movlw	low(STR_4)
  8892  000C90  0E29               	movlb	0	; () banked
  8893  000C92  0100               	movwf	((strstr@n))&0ffh
  8894  000C94  6F82               	movlw	high(STR_4)
  8895  000C96  0E06               	movwf	((strstr@n+1))&0ffh
  8896  000C98  6F83               
  8897                           	call	_strstr	;wreg free
  8898  000C9A  EC1A  F013         	movlb	0	; () banked
  8899  000C9E  0100               	movf	(0+?_strstr)&0ffh,w
  8900  000CA0  5180               iorwf	(1+?_strstr)&0ffh,w
  8901  000CA2  1181               	btfsc	status,2
  8902  000CA4  B4D8               	goto	u4631
  8903  000CA6  EF57  F006         	goto	u4630
  8904  000CAA  EF59  F006         
  8905                           u4631:
  8906  000CAE                     	goto	l4019
  8907  000CAE  EF69  F006         u4630:
  8908  000CB2                     	line	133
  8909                           	
  8910                           l4001:; BSR set to: 0
  8911  000CB2                     
  8912                           ;main.c: 133:             led_num = 3;
  8913                           	movlw	high(03h)
  8914  000CB2  0E00               	movwf	((c:_led_num+1)),c
  8915  000CB4  6E41               	movlw	low(03h)
  8916  000CB6  0E03               	movwf	((c:_led_num)),c
  8917  000CB8  6E40               	line	134
  8918                           	
  8919                           l4003:; BSR set to: 0
  8920  000CBA                     
  8921                           ;main.c: 134:             TRISCbits.RC2 = 0;
  8922                           	bcf	((c:3988)),c,2	;volatile
  8923  000CBA  9494               	line	135
  8924                           	
  8925                           l4005:; BSR set to: 0
  8926  000CBC                     
  8927                           ;main.c: 135:             RC2 = 0;
  8928                           	bcf	c:(31762/8),(31762)&7	;volatile
  8929  000CBC  9482               	line	136
  8930                           	
  8931                           l4007:; BSR set to: 0
  8932  000CBE                     
  8933                           ;main.c: 136:             TRISDbits.RD5 = 0;
  8934                           	bcf	((c:3989)),c,5	;volatile
  8935  000CBE  9A95               	line	137
  8936                           	
  8937                           l4009:; BSR set to: 0
  8938  000CC0                     
  8939                           ;main.c: 137:             RD5 = 0;
  8940                           	bcf	c:(31773/8),(31773)&7	;volatile
  8941  000CC0  9A83               	line	138
  8942                           	
  8943                           l4011:; BSR set to: 0
  8944  000CC2                     
  8945                           ;main.c: 138:             TRISDbits.RD6 = 0;
  8946                           	bcf	((c:3989)),c,6	;volatile
  8947  000CC2  9C95               	line	139
  8948                           	
  8949                           l4013:; BSR set to: 0
  8950  000CC4                     
  8951                           ;main.c: 139:             RD6 = 0;
  8952                           	bcf	c:(31774/8),(31774)&7	;volatile
  8953  000CC4  9C83               	line	140
  8954                           	
  8955                           l4015:; BSR set to: 0
  8956  000CC6                     
  8957                           ;main.c: 140:             ClearBuffer();
  8958                           	call	_ClearBuffer	;wreg free
  8959  000CC6  EC71  F014         	line	141
  8960                           ;main.c: 141:             break;
  8961                           	goto	l4041
  8962  000CCA  EF9C  F006         	line	142
  8963                           	
  8964                           l4017:
  8965  000CCE                     ;main.c: 142:         }
  8966                           	goto	l3971
  8967  000CCE  EFFA  F005         	line	143
  8968                           ;main.c: 143:         else if(strstr(GetString(), "4") != ((void*)0)) {
  8969                           	
  8970                           l244:
  8971  000CD2                     	
  8972                           l4019:
  8973  000CD2                     	call	_GetString	;wreg free
  8974  000CD2  EC38  F016         	movff	0+?_GetString,(strstr@h)
  8975  000CD6  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  8976  000CDA  C029  F081         		movlw	low(STR_5)
  8977  000CDE  0E2B               	movlb	0	; () banked
  8978  000CE0  0100               	movwf	((strstr@n))&0ffh
  8979  000CE2  6F82               	movlw	high(STR_5)
  8980  000CE4  0E06               	movwf	((strstr@n+1))&0ffh
  8981  000CE6  6F83               
  8982                           	call	_strstr	;wreg free
  8983  000CE8  EC1A  F013         	movlb	0	; () banked
  8984  000CEC  0100               	movf	(0+?_strstr)&0ffh,w
  8985  000CEE  5180               iorwf	(1+?_strstr)&0ffh,w
  8986  000CF0  1181               	btfsc	status,2
  8987  000CF2  B4D8               	goto	u4641
  8988  000CF4  EF7E  F006         	goto	u4640
  8989  000CF8  EF80  F006         
  8990                           u4641:
  8991  000CFC                     	goto	l3971
  8992  000CFC  EFFA  F005         u4640:
  8993  000D00                     	line	144
  8994                           	
  8995                           l4021:; BSR set to: 0
  8996  000D00                     
  8997                           ;main.c: 144:             led_num = 4;
  8998                           	movlw	high(04h)
  8999  000D00  0E00               	movwf	((c:_led_num+1)),c
  9000  000D02  6E41               	movlw	low(04h)
  9001  000D04  0E04               	movwf	((c:_led_num)),c
  9002  000D06  6E40               	line	145
  9003                           	
  9004                           l4023:; BSR set to: 0
  9005  000D08                     
  9006                           ;main.c: 145:             TRISCbits.RC2 = 0;
  9007                           	bcf	((c:3988)),c,2	;volatile
  9008  000D08  9494               	line	146
  9009                           	
  9010                           l4025:; BSR set to: 0
  9011  000D0A                     
  9012                           ;main.c: 146:             RC2 = 0;
  9013                           	bcf	c:(31762/8),(31762)&7	;volatile
  9014  000D0A  9482               	line	147
  9015                           	
  9016                           l4027:; BSR set to: 0
  9017  000D0C                     
  9018                           ;main.c: 147:             TRISDbits.RD5 = 0;
  9019                           	bcf	((c:3989)),c,5	;volatile
  9020  000D0C  9A95               	line	148
  9021                           	
  9022                           l4029:; BSR set to: 0
  9023  000D0E                     
  9024                           ;main.c: 148:             RD5 = 0;
  9025                           	bcf	c:(31773/8),(31773)&7	;volatile
  9026  000D0E  9A83               	line	149
  9027                           	
  9028                           l4031:; BSR set to: 0
  9029  000D10                     
  9030                           ;main.c: 149:             TRISDbits.RD6 = 0;
  9031                           	bcf	((c:3989)),c,6	;volatile
  9032  000D10  9C95               	line	150
  9033                           	
  9034                           l4033:; BSR set to: 0
  9035  000D12                     
  9036                           ;main.c: 150:             RD6 = 0;
  9037                           	bcf	c:(31774/8),(31774)&7	;volatile
  9038  000D12  9C83               	line	151
  9039                           	
  9040                           l4035:; BSR set to: 0
  9041  000D14                     
  9042                           ;main.c: 151:             TRISDbits.RD7 = 0;
  9043                           	bcf	((c:3989)),c,7	;volatile
  9044  000D14  9E95               	line	152
  9045                           	
  9046                           l4037:; BSR set to: 0
  9047  000D16                     
  9048                           ;main.c: 152:             RD7 = 0;
  9049                           	bcf	c:(31775/8),(31775)&7	;volatile
  9050  000D16  9E83               	line	153
  9051                           	
  9052                           l4039:; BSR set to: 0
  9053  000D18                     
  9054                           ;main.c: 153:             ClearBuffer();
  9055                           	call	_ClearBuffer	;wreg free
  9056  000D18  EC71  F014         	line	154
  9057                           ;main.c: 154:             break;
  9058                           	goto	l4041
  9059  000D1C  EF9C  F006         	line	155
  9060                           ;main.c: 155:         }
  9061                           	
  9062                           l246:
  9063  000D20                     	goto	l3971
  9064  000D20  EFFA  F005         	
  9065                           l245:
  9066  000D24                     	goto	l3971
  9067  000D24  EFFA  F005         	
  9068                           l243:
  9069  000D28                     	goto	l3971
  9070  000D28  EFFA  F005         	
  9071                           l241:
  9072  000D2C                     	goto	l3971
  9073  000D2C  EFFA  F005         	line	156
  9074                           ;main.c: 156:     }
  9075                           	
  9076                           l247:
  9077  000D30                     	goto	l3971
  9078  000D30  EFFA  F005         	
  9079                           l240:
  9080  000D34                     	goto	l4041
  9081  000D34  EF9C  F006         	line	157
  9082                           ;main.c: 157:     while(1){
  9083                           	
  9084                           l248:
  9085  000D38                     	line	158
  9086                           	
  9087                           l4041:
  9088  000D38                     ;main.c: 158:         if(strstr(GetString(), "1") != ((void*)0)){
  9089                           	call	_GetString	;wreg free
  9090  000D38  EC38  F016         	movff	0+?_GetString,(strstr@h)
  9091  000D3C  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  9092  000D40  C029  F081         		movlw	low(STR_6)
  9093  000D44  0E27               	movlb	0	; () banked
  9094  000D46  0100               	movwf	((strstr@n))&0ffh
  9095  000D48  6F82               	movlw	high(STR_6)
  9096  000D4A  0E06               	movwf	((strstr@n+1))&0ffh
  9097  000D4C  6F83               
  9098                           	call	_strstr	;wreg free
  9099  000D4E  EC1A  F013         	movlb	0	; () banked
  9100  000D52  0100               	movf	(0+?_strstr)&0ffh,w
  9101  000D54  5180               iorwf	(1+?_strstr)&0ffh,w
  9102  000D56  1181               	btfsc	status,2
  9103  000D58  B4D8               	goto	u4651
  9104  000D5A  EFB1  F006         	goto	u4650
  9105  000D5E  EFB3  F006         
  9106                           u4651:
  9107  000D62                     	goto	l4051
  9108  000D62  EFBE  F006         u4650:
  9109  000D66                     	line	159
  9110                           	
  9111                           l4043:; BSR set to: 0
  9112  000D66                     
  9113                           ;main.c: 159:             led_interval = 1;
  9114                           	movlw	high(01h)
  9115  000D66  0E00               	movwf	((c:_led_interval+1)),c
  9116  000D68  6E3F               	movlw	low(01h)
  9117  000D6A  0E01               	movwf	((c:_led_interval)),c
  9118  000D6C  6E3E               	line	160
  9119                           	
  9120                           l4045:; BSR set to: 0
  9121  000D6E                     
  9122                           ;main.c: 160:             T3CONbits.TMR3ON = 1;
  9123                           	bsf	((c:4017)),c,0	;volatile
  9124  000D6E  80B1               	line	161
  9125                           	
  9126                           l4047:; BSR set to: 0
  9127  000D70                     
  9128                           ;main.c: 161:             ClearBuffer();
  9129                           	call	_ClearBuffer	;wreg free
  9130  000D70  EC71  F014         	line	162
  9131                           ;main.c: 162:             break;
  9132                           	goto	l4119
  9133  000D74  EFBE  F007         	line	163
  9134                           	
  9135                           l4049:
  9136  000D78                     ;main.c: 163:         }
  9137                           	goto	l4041
  9138  000D78  EF9C  F006         	line	164
  9139                           ;main.c: 164:         else if(strstr(GetString(), "2") != ((void*)0)){
  9140                           	
  9141                           l249:
  9142  000D7C                     	
  9143                           l4051:
  9144  000D7C                     	call	_GetString	;wreg free
  9145  000D7C  EC38  F016         	movff	0+?_GetString,(strstr@h)
  9146  000D80  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  9147  000D84  C029  F081         		movlw	low(STR_7)
  9148  000D88  0E13               	movlb	0	; () banked
  9149  000D8A  0100               	movwf	((strstr@n))&0ffh
  9150  000D8C  6F82               	movlw	high(STR_7)
  9151  000D8E  0E06               	movwf	((strstr@n+1))&0ffh
  9152  000D90  6F83               
  9153                           	call	_strstr	;wreg free
  9154  000D92  EC1A  F013         	movlb	0	; () banked
  9155  000D96  0100               	movf	(0+?_strstr)&0ffh,w
  9156  000D98  5180               iorwf	(1+?_strstr)&0ffh,w
  9157  000D9A  1181               	btfsc	status,2
  9158  000D9C  B4D8               	goto	u4661
  9159  000D9E  EFD3  F006         	goto	u4660
  9160  000DA2  EFD5  F006         
  9161                           u4661:
  9162  000DA6                     	goto	l4061
  9163  000DA6  EFE0  F006         u4660:
  9164  000DAA                     	line	165
  9165                           	
  9166                           l4053:; BSR set to: 0
  9167  000DAA                     
  9168                           ;main.c: 165:             led_interval = 2;
  9169                           	movlw	high(02h)
  9170  000DAA  0E00               	movwf	((c:_led_interval+1)),c
  9171  000DAC  6E3F               	movlw	low(02h)
  9172  000DAE  0E02               	movwf	((c:_led_interval)),c
  9173  000DB0  6E3E               	line	166
  9174                           	
  9175                           l4055:; BSR set to: 0
  9176  000DB2                     
  9177                           ;main.c: 166:             T3CONbits.TMR3ON = 1;
  9178                           	bsf	((c:4017)),c,0	;volatile
  9179  000DB2  80B1               	line	167
  9180                           	
  9181                           l4057:; BSR set to: 0
  9182  000DB4                     
  9183                           ;main.c: 167:             ClearBuffer();
  9184                           	call	_ClearBuffer	;wreg free
  9185  000DB4  EC71  F014         	line	168
  9186                           ;main.c: 168:             break;
  9187                           	goto	l4119
  9188  000DB8  EFBE  F007         	line	169
  9189                           	
  9190                           l4059:
  9191  000DBC                     ;main.c: 169:         }
  9192                           	goto	l4041
  9193  000DBC  EF9C  F006         	line	170
  9194                           ;main.c: 170:         else if(strstr(GetString(), "3") != ((void*)0)){
  9195                           	
  9196                           l252:
  9197  000DC0                     	
  9198                           l4061:
  9199  000DC0                     	call	_GetString	;wreg free
  9200  000DC0  EC38  F016         	movff	0+?_GetString,(strstr@h)
  9201  000DC4  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  9202  000DC8  C029  F081         		movlw	low(STR_8)
  9203  000DCC  0E29               	movlb	0	; () banked
  9204  000DCE  0100               	movwf	((strstr@n))&0ffh
  9205  000DD0  6F82               	movlw	high(STR_8)
  9206  000DD2  0E06               	movwf	((strstr@n+1))&0ffh
  9207  000DD4  6F83               
  9208                           	call	_strstr	;wreg free
  9209  000DD6  EC1A  F013         	movlb	0	; () banked
  9210  000DDA  0100               	movf	(0+?_strstr)&0ffh,w
  9211  000DDC  5180               iorwf	(1+?_strstr)&0ffh,w
  9212  000DDE  1181               	btfsc	status,2
  9213  000DE0  B4D8               	goto	u4671
  9214  000DE2  EFF5  F006         	goto	u4670
  9215  000DE6  EFF7  F006         
  9216                           u4671:
  9217  000DEA                     	goto	l4071
  9218  000DEA  EF02  F007         u4670:
  9219  000DEE                     	line	171
  9220                           	
  9221                           l4063:; BSR set to: 0
  9222  000DEE                     
  9223                           ;main.c: 171:             led_interval = 3;
  9224                           	movlw	high(03h)
  9225  000DEE  0E00               	movwf	((c:_led_interval+1)),c
  9226  000DF0  6E3F               	movlw	low(03h)
  9227  000DF2  0E03               	movwf	((c:_led_interval)),c
  9228  000DF4  6E3E               	line	172
  9229                           	
  9230                           l4065:; BSR set to: 0
  9231  000DF6                     
  9232                           ;main.c: 172:             T3CONbits.TMR3ON = 1;
  9233                           	bsf	((c:4017)),c,0	;volatile
  9234  000DF6  80B1               	line	173
  9235                           	
  9236                           l4067:; BSR set to: 0
  9237  000DF8                     
  9238                           ;main.c: 173:             ClearBuffer();
  9239                           	call	_ClearBuffer	;wreg free
  9240  000DF8  EC71  F014         	line	174
  9241                           ;main.c: 174:             break;
  9242                           	goto	l4119
  9243  000DFC  EFBE  F007         	line	175
  9244                           	
  9245                           l4069:
  9246  000E00                     ;main.c: 175:         }
  9247                           	goto	l4041
  9248  000E00  EF9C  F006         	line	176
  9249                           ;main.c: 176:         else if(strstr(GetString(), "4") != ((void*)0)){
  9250                           	
  9251                           l254:
  9252  000E04                     	
  9253                           l4071:
  9254  000E04                     	call	_GetString	;wreg free
  9255  000E04  EC38  F016         	movff	0+?_GetString,(strstr@h)
  9256  000E08  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  9257  000E0C  C029  F081         		movlw	low(STR_9)
  9258  000E10  0E2B               	movlb	0	; () banked
  9259  000E12  0100               	movwf	((strstr@n))&0ffh
  9260  000E14  6F82               	movlw	high(STR_9)
  9261  000E16  0E06               	movwf	((strstr@n+1))&0ffh
  9262  000E18  6F83               
  9263                           	call	_strstr	;wreg free
  9264  000E1A  EC1A  F013         	movlb	0	; () banked
  9265  000E1E  0100               	movf	(0+?_strstr)&0ffh,w
  9266  000E20  5180               iorwf	(1+?_strstr)&0ffh,w
  9267  000E22  1181               	btfsc	status,2
  9268  000E24  B4D8               	goto	u4681
  9269  000E26  EF17  F007         	goto	u4680
  9270  000E2A  EF19  F007         
  9271                           u4681:
  9272  000E2E                     	goto	l4081
  9273  000E2E  EF24  F007         u4680:
  9274  000E32                     	line	177
  9275                           	
  9276                           l4073:; BSR set to: 0
  9277  000E32                     
  9278                           ;main.c: 177:             led_interval = 4;
  9279                           	movlw	high(04h)
  9280  000E32  0E00               	movwf	((c:_led_interval+1)),c
  9281  000E34  6E3F               	movlw	low(04h)
  9282  000E36  0E04               	movwf	((c:_led_interval)),c
  9283  000E38  6E3E               	line	178
  9284                           	
  9285                           l4075:; BSR set to: 0
  9286  000E3A                     
  9287                           ;main.c: 178:             T3CONbits.TMR3ON = 1;
  9288                           	bsf	((c:4017)),c,0	;volatile
  9289  000E3A  80B1               	line	179
  9290                           	
  9291                           l4077:; BSR set to: 0
  9292  000E3C                     
  9293                           ;main.c: 179:             ClearBuffer();
  9294                           	call	_ClearBuffer	;wreg free
  9295  000E3C  EC71  F014         	line	180
  9296                           ;main.c: 180:             break;
  9297                           	goto	l4119
  9298  000E40  EFBE  F007         	line	181
  9299                           	
  9300                           l4079:
  9301  000E44                     ;main.c: 181:         }
  9302                           	goto	l4041
  9303  000E44  EF9C  F006         	line	182
  9304                           ;main.c: 182:         else if(strstr(GetString(), "5") != ((void*)0)){
  9305                           	
  9306                           l256:
  9307  000E48                     	
  9308                           l4081:
  9309  000E48                     	call	_GetString	;wreg free
  9310  000E48  EC38  F016         	movff	0+?_GetString,(strstr@h)
  9311  000E4C  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  9312  000E50  C029  F081         		movlw	low(STR_10)
  9313  000E54  0E2D               	movlb	0	; () banked
  9314  000E56  0100               	movwf	((strstr@n))&0ffh
  9315  000E58  6F82               	movlw	high(STR_10)
  9316  000E5A  0E06               	movwf	((strstr@n+1))&0ffh
  9317  000E5C  6F83               
  9318                           	call	_strstr	;wreg free
  9319  000E5E  EC1A  F013         	movlb	0	; () banked
  9320  000E62  0100               	movf	(0+?_strstr)&0ffh,w
  9321  000E64  5180               iorwf	(1+?_strstr)&0ffh,w
  9322  000E66  1181               	btfsc	status,2
  9323  000E68  B4D8               	goto	u4691
  9324  000E6A  EF39  F007         	goto	u4690
  9325  000E6E  EF3B  F007         
  9326                           u4691:
  9327  000E72                     	goto	l4091
  9328  000E72  EF46  F007         u4690:
  9329  000E76                     	line	183
  9330                           	
  9331                           l4083:; BSR set to: 0
  9332  000E76                     
  9333                           ;main.c: 183:             led_interval = 5;
  9334                           	movlw	high(05h)
  9335  000E76  0E00               	movwf	((c:_led_interval+1)),c
  9336  000E78  6E3F               	movlw	low(05h)
  9337  000E7A  0E05               	movwf	((c:_led_interval)),c
  9338  000E7C  6E3E               	line	184
  9339                           	
  9340                           l4085:; BSR set to: 0
  9341  000E7E                     
  9342                           ;main.c: 184:             T3CONbits.TMR3ON = 1;
  9343                           	bsf	((c:4017)),c,0	;volatile
  9344  000E7E  80B1               	line	185
  9345                           	
  9346                           l4087:; BSR set to: 0
  9347  000E80                     
  9348                           ;main.c: 185:             ClearBuffer();
  9349                           	call	_ClearBuffer	;wreg free
  9350  000E80  EC71  F014         	line	186
  9351                           ;main.c: 186:             break;
  9352                           	goto	l4119
  9353  000E84  EFBE  F007         	line	187
  9354                           	
  9355                           l4089:
  9356  000E88                     ;main.c: 187:         }
  9357                           	goto	l4041
  9358  000E88  EF9C  F006         	line	188
  9359                           ;main.c: 188:         else if(strstr(GetString(), "6") != ((void*)0)){
  9360                           	
  9361                           l258:
  9362  000E8C                     	
  9363                           l4091:
  9364  000E8C                     	call	_GetString	;wreg free
  9365  000E8C  EC38  F016         	movff	0+?_GetString,(strstr@h)
  9366  000E90  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  9367  000E94  C029  F081         		movlw	low(STR_11)
  9368  000E98  0E2F               	movlb	0	; () banked
  9369  000E9A  0100               	movwf	((strstr@n))&0ffh
  9370  000E9C  6F82               	movlw	high(STR_11)
  9371  000E9E  0E06               	movwf	((strstr@n+1))&0ffh
  9372  000EA0  6F83               
  9373                           	call	_strstr	;wreg free
  9374  000EA2  EC1A  F013         	movlb	0	; () banked
  9375  000EA6  0100               	movf	(0+?_strstr)&0ffh,w
  9376  000EA8  5180               iorwf	(1+?_strstr)&0ffh,w
  9377  000EAA  1181               	btfsc	status,2
  9378  000EAC  B4D8               	goto	u4701
  9379  000EAE  EF5B  F007         	goto	u4700
  9380  000EB2  EF5D  F007         
  9381                           u4701:
  9382  000EB6                     	goto	l4101
  9383  000EB6  EF68  F007         u4700:
  9384  000EBA                     	line	189
  9385                           	
  9386                           l4093:; BSR set to: 0
  9387  000EBA                     
  9388                           ;main.c: 189:             led_interval = 6;
  9389                           	movlw	high(06h)
  9390  000EBA  0E00               	movwf	((c:_led_interval+1)),c
  9391  000EBC  6E3F               	movlw	low(06h)
  9392  000EBE  0E06               	movwf	((c:_led_interval)),c
  9393  000EC0  6E3E               	line	190
  9394                           	
  9395                           l4095:; BSR set to: 0
  9396  000EC2                     
  9397                           ;main.c: 190:             T3CONbits.TMR3ON = 1;
  9398                           	bsf	((c:4017)),c,0	;volatile
  9399  000EC2  80B1               	line	191
  9400                           	
  9401                           l4097:; BSR set to: 0
  9402  000EC4                     
  9403                           ;main.c: 191:             ClearBuffer();
  9404                           	call	_ClearBuffer	;wreg free
  9405  000EC4  EC71  F014         	line	192
  9406                           ;main.c: 192:             break;
  9407                           	goto	l4119
  9408  000EC8  EFBE  F007         	line	193
  9409                           	
  9410                           l4099:
  9411  000ECC                     ;main.c: 193:         }
  9412                           	goto	l4041
  9413  000ECC  EF9C  F006         	line	194
  9414                           ;main.c: 194:         else if(strstr(GetString(), "7") != ((void*)0)){
  9415                           	
  9416                           l260:
  9417  000ED0                     	
  9418                           l4101:
  9419  000ED0                     	call	_GetString	;wreg free
  9420  000ED0  EC38  F016         	movff	0+?_GetString,(strstr@h)
  9421  000ED4  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  9422  000ED8  C029  F081         		movlw	low(STR_12)
  9423  000EDC  0E31               	movlb	0	; () banked
  9424  000EDE  0100               	movwf	((strstr@n))&0ffh
  9425  000EE0  6F82               	movlw	high(STR_12)
  9426  000EE2  0E06               	movwf	((strstr@n+1))&0ffh
  9427  000EE4  6F83               
  9428                           	call	_strstr	;wreg free
  9429  000EE6  EC1A  F013         	movlb	0	; () banked
  9430  000EEA  0100               	movf	(0+?_strstr)&0ffh,w
  9431  000EEC  5180               iorwf	(1+?_strstr)&0ffh,w
  9432  000EEE  1181               	btfsc	status,2
  9433  000EF0  B4D8               	goto	u4711
  9434  000EF2  EF7D  F007         	goto	u4710
  9435  000EF6  EF7F  F007         
  9436                           u4711:
  9437  000EFA                     	goto	l4111
  9438  000EFA  EF8A  F007         u4710:
  9439  000EFE                     	line	195
  9440                           	
  9441                           l4103:; BSR set to: 0
  9442  000EFE                     
  9443                           ;main.c: 195:             led_interval = 7;
  9444                           	movlw	high(07h)
  9445  000EFE  0E00               	movwf	((c:_led_interval+1)),c
  9446  000F00  6E3F               	movlw	low(07h)
  9447  000F02  0E07               	movwf	((c:_led_interval)),c
  9448  000F04  6E3E               	line	196
  9449                           	
  9450                           l4105:; BSR set to: 0
  9451  000F06                     
  9452                           ;main.c: 196:             T3CONbits.TMR3ON = 1;
  9453                           	bsf	((c:4017)),c,0	;volatile
  9454  000F06  80B1               	line	197
  9455                           	
  9456                           l4107:; BSR set to: 0
  9457  000F08                     
  9458                           ;main.c: 197:             ClearBuffer();
  9459                           	call	_ClearBuffer	;wreg free
  9460  000F08  EC71  F014         	line	198
  9461                           ;main.c: 198:             break;
  9462                           	goto	l4119
  9463  000F0C  EFBE  F007         	line	199
  9464                           	
  9465                           l4109:
  9466  000F10                     ;main.c: 199:         }
  9467                           	goto	l4041
  9468  000F10  EF9C  F006         	line	200
  9469                           ;main.c: 200:         else if(strstr(GetString(), "8") != ((void*)0)){
  9470                           	
  9471                           l262:
  9472  000F14                     	
  9473                           l4111:
  9474  000F14                     	call	_GetString	;wreg free
  9475  000F14  EC38  F016         	movff	0+?_GetString,(strstr@h)
  9476  000F18  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  9477  000F1C  C029  F081         		movlw	low(STR_13)
  9478  000F20  0E33               	movlb	0	; () banked
  9479  000F22  0100               	movwf	((strstr@n))&0ffh
  9480  000F24  6F82               	movlw	high(STR_13)
  9481  000F26  0E06               	movwf	((strstr@n+1))&0ffh
  9482  000F28  6F83               
  9483                           	call	_strstr	;wreg free
  9484  000F2A  EC1A  F013         	movlb	0	; () banked
  9485  000F2E  0100               	movf	(0+?_strstr)&0ffh,w
  9486  000F30  5180               iorwf	(1+?_strstr)&0ffh,w
  9487  000F32  1181               	btfsc	status,2
  9488  000F34  B4D8               	goto	u4721
  9489  000F36  EF9F  F007         	goto	u4720
  9490  000F3A  EFA1  F007         
  9491                           u4721:
  9492  000F3E                     	goto	l4041
  9493  000F3E  EF9C  F006         u4720:
  9494  000F42                     	line	201
  9495                           	
  9496                           l4113:; BSR set to: 0
  9497  000F42                     
  9498                           ;main.c: 201:             led_interval = 8;
  9499                           	movlw	high(08h)
  9500  000F42  0E00               	movwf	((c:_led_interval+1)),c
  9501  000F44  6E3F               	movlw	low(08h)
  9502  000F46  0E08               	movwf	((c:_led_interval)),c
  9503  000F48  6E3E               	line	202
  9504                           	
  9505                           l4115:; BSR set to: 0
  9506  000F4A                     
  9507                           ;main.c: 202:             T3CONbits.TMR3ON = 1;
  9508                           	bsf	((c:4017)),c,0	;volatile
  9509  000F4A  80B1               	line	203
  9510                           	
  9511                           l4117:; BSR set to: 0
  9512  000F4C                     
  9513                           ;main.c: 203:             ClearBuffer();
  9514                           	call	_ClearBuffer	;wreg free
  9515  000F4C  EC71  F014         	line	204
  9516                           ;main.c: 204:             break;
  9517                           	goto	l4119
  9518  000F50  EFBE  F007         	line	205
  9519                           ;main.c: 205:         }
  9520                           	
  9521                           l264:
  9522  000F54                     	goto	l4041
  9523  000F54  EF9C  F006         	
  9524                           l263:
  9525  000F58                     	goto	l4041
  9526  000F58  EF9C  F006         	
  9527                           l261:
  9528  000F5C                     	goto	l4041
  9529  000F5C  EF9C  F006         	
  9530                           l259:
  9531  000F60                     	goto	l4041
  9532  000F60  EF9C  F006         	
  9533                           l257:
  9534  000F64                     	goto	l4041
  9535  000F64  EF9C  F006         	
  9536                           l255:
  9537  000F68                     	goto	l4041
  9538  000F68  EF9C  F006         	
  9539                           l253:
  9540  000F6C                     	goto	l4041
  9541  000F6C  EF9C  F006         	
  9542                           l251:
  9543  000F70                     	goto	l4041
  9544  000F70  EF9C  F006         	line	206
  9545                           ;main.c: 206:     }
  9546                           	
  9547                           l265:
  9548  000F74                     	goto	l4041
  9549  000F74  EF9C  F006         	
  9550                           l250:
  9551  000F78                     	goto	l4119
  9552  000F78  EFBE  F007         	line	207
  9553                           ;main.c: 207:     while(1){
  9554                           	
  9555                           l266:
  9556  000F7C                     	line	208
  9557                           	
  9558                           l4119:
  9559  000F7C                     ;main.c: 208:         if(strstr(GetString(), "q") != ((void*)0)) {
  9560                           	call	_GetString	;wreg free
  9561  000F7C  EC38  F016         	movff	0+?_GetString,(strstr@h)
  9562  000F80  C028  F080         	movff	1+?_GetString,(strstr@h+1)
  9563  000F84  C029  F081         		movlw	low(STR_14)
  9564  000F88  0E37               	movlb	0	; () banked
  9565  000F8A  0100               	movwf	((strstr@n))&0ffh
  9566  000F8C  6F82               	movlw	high(STR_14)
  9567  000F8E  0E06               	movwf	((strstr@n+1))&0ffh
  9568  000F90  6F83               
  9569                           	call	_strstr	;wreg free
  9570  000F92  EC1A  F013         	movlb	0	; () banked
  9571  000F96  0100               	movf	(0+?_strstr)&0ffh,w
  9572  000F98  5180               iorwf	(1+?_strstr)&0ffh,w
  9573  000F9A  1181               	btfsc	status,2
  9574  000F9C  B4D8               	goto	u4731
  9575  000F9E  EFD3  F007         	goto	u4730
  9576  000FA2  EFD5  F007         
  9577                           u4731:
  9578  000FA6                     	goto	l4119
  9579  000FA6  EFBE  F007         u4730:
  9580  000FAA                     	line	209
  9581                           	
  9582                           l4121:; BSR set to: 0
  9583  000FAA                     
  9584                           ;main.c: 209:             if(led_num == 1){
  9585                           		decf	((c:_led_num)),c,w
  9586  000FAA  0440               iorwf	((c:_led_num+1)),c,w
  9587  000FAC  1041               	btfss	status,2
  9588  000FAE  A4D8               	goto	u4741
  9589  000FB0  EFDC  F007         	goto	u4740
  9590  000FB4  EFDE  F007         
  9591                           u4741:
  9592  000FB8                     	goto	l4125
  9593  000FB8  EFE1  F007         u4740:
  9594  000FBC                     	line	210
  9595                           	
  9596                           l4123:; BSR set to: 0
  9597  000FBC                     
  9598                           ;main.c: 210:                 RC2 = 0;
  9599                           	bcf	c:(31762/8),(31762)&7	;volatile
  9600  000FBC  9482               	line	211
  9601                           ;main.c: 211:             }
  9602                           	goto	l269
  9603  000FBE  EF12  F008         	line	212
  9604                           ;main.c: 212:             else if(led_num == 2){
  9605                           	
  9606                           l268:; BSR set to: 0
  9607  000FC2                     
  9608                           	
  9609                           l4125:; BSR set to: 0
  9610  000FC2                     
  9611                           		movlw	2
  9612  000FC2  0E02               	xorwf	((c:_led_num)),c,w
  9613  000FC4  1840               iorwf	((c:_led_num+1)),c,w
  9614  000FC6  1041               	btfss	status,2
  9615  000FC8  A4D8               	goto	u4751
  9616  000FCA  EFE9  F007         	goto	u4750
  9617  000FCE  EFEB  F007         
  9618                           u4751:
  9619  000FD2                     	goto	l4129
  9620  000FD2  EFEF  F007         u4750:
  9621  000FD6                     	line	213
  9622                           	
  9623                           l4127:; BSR set to: 0
  9624  000FD6                     
  9625                           ;main.c: 213:                 RC2 = 0;
  9626                           	bcf	c:(31762/8),(31762)&7	;volatile
  9627  000FD6  9482               	line	214
  9628                           ;main.c: 214:                 RD5 = 0;
  9629                           	bcf	c:(31773/8),(31773)&7	;volatile
  9630  000FD8  9A83               	line	215
  9631                           ;main.c: 215:             }
  9632                           	goto	l269
  9633  000FDA  EF12  F008         	line	216
  9634                           ;main.c: 216:             else if(led_num == 3){
  9635                           	
  9636                           l270:; BSR set to: 0
  9637  000FDE                     
  9638                           	
  9639                           l4129:; BSR set to: 0
  9640  000FDE                     
  9641                           		movlw	3
  9642  000FDE  0E03               	xorwf	((c:_led_num)),c,w
  9643  000FE0  1840               iorwf	((c:_led_num+1)),c,w
  9644  000FE2  1041               	btfss	status,2
  9645  000FE4  A4D8               	goto	u4761
  9646  000FE6  EFF7  F007         	goto	u4760
  9647  000FEA  EFF9  F007         
  9648                           u4761:
  9649  000FEE                     	goto	l4133
  9650  000FEE  EFFE  F007         u4760:
  9651  000FF2                     	line	217
  9652                           	
  9653                           l4131:; BSR set to: 0
  9654  000FF2                     
  9655                           ;main.c: 217:                 RC2 = 0;
  9656                           	bcf	c:(31762/8),(31762)&7	;volatile
  9657  000FF2  9482               	line	218
  9658                           ;main.c: 218:                 RD5 = 0;
  9659                           	bcf	c:(31773/8),(31773)&7	;volatile
  9660  000FF4  9A83               	line	219
  9661                           ;main.c: 219:                 RD6 = 0;
  9662                           	bcf	c:(31774/8),(31774)&7	;volatile
  9663  000FF6  9C83               	line	220
  9664                           ;main.c: 220:             }
  9665                           	goto	l269
  9666  000FF8  EF12  F008         	line	221
  9667                           ;main.c: 221:             else if(led_num == 4){
  9668                           	
  9669                           l272:; BSR set to: 0
  9670  000FFC                     
  9671                           	
  9672                           l4133:; BSR set to: 0
  9673  000FFC                     
  9674                           		movlw	4
  9675  000FFC  0E04               	xorwf	((c:_led_num)),c,w
  9676  000FFE  1840               iorwf	((c:_led_num+1)),c,w
  9677  001000  1041               	btfss	status,2
  9678  001002  A4D8               	goto	u4771
  9679  001004  EF06  F008         	goto	u4770
  9680  001008  EF08  F008         
  9681                           u4771:
  9682  00100C                     	goto	l269
  9683  00100C  EF12  F008         u4770:
  9684  001010                     	line	222
  9685                           	
  9686                           l4135:; BSR set to: 0
  9687  001010                     
  9688                           ;main.c: 222:                 RC2 = 0;
  9689                           	bcf	c:(31762/8),(31762)&7	;volatile
  9690  001010  9482               	line	223
  9691                           ;main.c: 223:                 RD5 = 0;
  9692                           	bcf	c:(31773/8),(31773)&7	;volatile
  9693  001012  9A83               	line	224
  9694                           ;main.c: 224:                 RD6 = 0;
  9695                           	bcf	c:(31774/8),(31774)&7	;volatile
  9696  001014  9C83               	line	225
  9697                           ;main.c: 225:                 RD7 = 0;
  9698                           	bcf	c:(31775/8),(31775)&7	;volatile
  9699  001016  9E83               	goto	l269
  9700  001018  EF12  F008         	line	226
  9701                           ;main.c: 226:             }
  9702                           	
  9703                           l274:; BSR set to: 0
  9704  00101C                     
  9705                           	goto	l269
  9706  00101C  EF12  F008         	
  9707                           l273:; BSR set to: 0
  9708  001020                     
  9709                           	goto	l269
  9710  001020  EF12  F008         	
  9711                           l271:; BSR set to: 0
  9712  001024                     
  9713                           	
  9714                           l269:; BSR set to: 0
  9715  001024                     
  9716                           	line	227
  9717                           ;main.c: 227:             T3CONbits.TMR3ON = 0;
  9718                           	bcf	((c:4017)),c,0	;volatile
  9719  001024  90B1               	line	228
  9720                           ;main.c: 228:             PIR2bits.TMR3IF = 0;
  9721                           	bcf	((c:4001)),c,1	;volatile
  9722  001026  92A1               	line	229
  9723                           ;main.c: 229:             PIE2bits.TMR3IE = 0;
  9724                           	bcf	((c:4000)),c,1	;volatile
  9725  001028  92A0               	line	230
  9726                           ;main.c: 230:             IPR2bits.TMR3IP = 0;
  9727                           	bcf	((c:4002)),c,1	;volatile
  9728  00102A  92A2               	line	231
  9729                           	
  9730                           l4137:; BSR set to: 0
  9731  00102C                     
  9732                           ;main.c: 231:             led_num = 0;
  9733                           	movlw	high(0)
  9734  00102C  0E00               	movwf	((c:_led_num+1)),c
  9735  00102E  6E41               	movlw	low(0)
  9736  001030  0E00               	movwf	((c:_led_num)),c
  9737  001032  6E40               	line	232
  9738                           ;main.c: 232:             led_interval = 0;
  9739                           	movlw	high(0)
  9740  001034  0E00               	movwf	((c:_led_interval+1)),c
  9741  001036  6E3F               	movlw	low(0)
  9742  001038  0E00               	movwf	((c:_led_interval)),c
  9743  00103A  6E3E               	line	233
  9744                           	
  9745                           l4139:; BSR set to: 0
  9746  00103C                     
  9747                           ;main.c: 233:             ClearBuffer();
  9748                           	call	_ClearBuffer	;wreg free
  9749  00103C  EC71  F014         	line	234
  9750                           ;main.c: 234:             break;
  9751                           	goto	l4141
  9752  001040  EF26  F008         	line	235
  9753                           ;main.c: 235:         }
  9754                           	
  9755                           l267:
  9756  001044                     	goto	l4119
  9757  001044  EFBE  F007         	line	236
  9758                           ;main.c: 236:     }
  9759                           	
  9760                           l276:
  9761  001048                     	goto	l4119
  9762  001048  EFBE  F007         	
  9763                           l275:
  9764  00104C                     	line	237
  9765                           	
  9766                           l4141:
  9767  00104C                     ;main.c: 237:     ClearBuffer();
  9768                           	call	_ClearBuffer	;wreg free
  9769  00104C  EC71  F014         	line	238
  9770                           	
  9771                           l277:
  9772  001050                     	return	;funcret
  9773  001050  0012               	opt stack 0
  9774                           GLOBAL	__end_of_Mode1
  9775                           	__end_of_Mode1:
  9776  001052                     	signat	_Mode1,89
  9777                           	global	_strstr
  9778                           
  9779 ;; *************** function _strstr *****************
  9780 ;; Defined at:
  9781 ;;		line 143 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;  h               2    0[BANK0 ] PTR const unsigned char 
  9784 ;;		 -> NULL(0), mystring(10), 
  9785 ;;  n               2    2[BANK0 ] PTR const unsigned char 
  9786 ;;		 -> STR_20(6), STR_19(2), STR_18(2), STR_17(2), 
  9787 ;;		 -> STR_16(2), STR_14(2), STR_13(2), STR_12(2), 
  9788 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  9789 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  9790 ;;		 -> STR_3(2), STR_2(2), 
  9791 ;; Auto vars:     Size  Location     Type
  9792 ;;  nl              2    4[BANK0 ] unsigned int 
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  2    0[BANK0 ] PTR unsigned char 
  9795 ;; Registers used:
  9796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9797 ;; Tracked objects:
  9798 ;;		On entry : 0/0
  9799 ;;		On exit  : 0/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9802 ;;      Params:         0       4       0       0       0       0       0
  9803 ;;      Locals:         0       2       0       0       0       0       0
  9804 ;;      Temps:          0       0       0       0       0       0       0
  9805 ;;      Totals:         0       6       0       0       0       0       0
  9806 ;;Total ram usage:        6 bytes
  9807 ;; Hardware stack levels used:    1
  9808 ;; Hardware stack levels required when called:    6
  9809 ;; This function calls:
  9810 ;;		_strchr
  9811 ;;		_strlen
  9812 ;;		_strncmp
  9813 ;; This function is called by:
  9814 ;;		_Mode1
  9815 ;;		_Mode2
  9816 ;;		_Mode3
  9817 ;;		_main
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           psect	text20,class=CODE,space=0,reloc=2,group=2
  9821                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  9822                           	line	143
  9823                           global __ptext20
  9824                           __ptext20:
  9825  002634                     psect	text20
  9826                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  9827                           	line	143
  9828                           	global	__size_of_strstr
  9829                           	__size_of_strstr	equ	__end_of_strstr-_strstr
  9830  0000                     	
  9831                           _strstr:
  9832  002634                     ;incstack = 0
  9833                           	opt	stack 24
  9834                           	line	146
  9835                           	
  9836                           l3749:
  9837  002634                     	movlb	0	; () banked
  9838  002634  0100               	movf	((strstr@n))&0ffh,w
  9839  002636  5182               iorwf	((strstr@n+1))&0ffh,w
  9840  002638  1183               	btfsc	status,2
  9841  00263A  B4D8               	goto	u4281
  9842  00263C  EF22  F013         	goto	u4280
  9843  002640  EF24  F013         
  9844                           u4281:
  9845  002644                     	goto	l3765
  9846  002644  EF82  F013         u4280:
  9847  002648                     	line	147
  9848                           	
  9849                           l3751:; BSR set to: 0
  9850  002648                     
  9851                           		movff	(strstr@n),(c:strlen@s)
  9852  002648  C082  F028         	movff	(strstr@n+1),(c:strlen@s+1)
  9853  00264C  C083  F029         
  9854                           	call	_strlen	;wreg free
  9855  002650  EC31  F015         	movff	0+?_strlen,(strstr@nl)
  9856  002654  C028  F084         	movff	1+?_strlen,(strstr@nl+1)
  9857  002658  C029  F085         	line	148
  9858                           	goto	l3761
  9859  00265C  EF66  F013         	
  9860                           l1023:
  9861  002660                     	line	149
  9862                           	
  9863                           l3753:
  9864  002660                     		movff	(strstr@h),(c:strncmp@_l)
  9865  002660  C080  F028         	movff	(strstr@h+1),(c:strncmp@_l+1)
  9866  002664  C081  F029         
  9867                           		movff	(strstr@n),(c:strncmp@_r)
  9868  002668  C082  F02A         	movff	(strstr@n+1),(c:strncmp@_r+1)
  9869  00266C  C083  F02B         
  9870                           	movff	(strstr@nl),(c:strncmp@n)
  9871  002670  C084  F02C         	movff	(strstr@nl+1),(c:strncmp@n+1)
  9872  002674  C085  F02D         	call	_strncmp	;wreg free
  9873  002678  EC38  F011         	movf	(0+?_strncmp),c,w
  9874  00267C  5028               iorwf	(1+?_strncmp),c,w
  9875  00267E  1029               	btfss	status,2
  9876  002680  A4D8               	goto	u4291
  9877  002682  EF45  F013         	goto	u4290
  9878  002686  EF47  F013         
  9879                           u4291:
  9880  00268A                     	goto	l3759
  9881  00268A  EF4F  F013         u4290:
  9882  00268E                     	line	150
  9883                           	
  9884                           l3755:
  9885  00268E                     		movff	(strstr@h),(?_strstr)
  9886  00268E  C080  F080         	movff	(strstr@h+1),(?_strstr+1)
  9887  002692  C081  F081         
  9888                           	goto	l1025
  9889  002696  EF88  F013         	
  9890                           l3757:
  9891  00269A                     	goto	l1025
  9892  00269A  EF88  F013         	
  9893                           l1024:
  9894  00269E                     	line	151
  9895                           	
  9896                           l3759:
  9897  00269E                     	movlw	low(01h)
  9898  00269E  0E01               	movlb	0	; () banked
  9899  0026A0  0100               	addwf	((strstr@h))&0ffh,w
  9900  0026A2  2580               	movwf	((c:strchr@s)),c
  9901  0026A4  6E28               	movlw	high(01h)
  9902  0026A6  0E00               	addwfc	((strstr@h+1))&0ffh,w
  9903  0026A8  2181               	movwf	1+((c:strchr@s)),c
  9904  0026AA  6E29               	movff	(strstr@n),tblptrl
  9905  0026AC  C082  FFF6         	movff	(strstr@n+1),tblptrh
  9906  0026B0  C083  FFF7         	if	0	;tblptru may be non-zero
  9907  0026B4                     	clrf	tblptru
  9909  0026B4                     	if	0	;tblptru may be non-zero
  9910  0026B4                     	global __mediumconst
  9911                           movlw	low highword(__mediumconst)
  9914  0026B4                     	tblrd	*
  9915  0026B4  0008               	
  9916                           	movf	tablat,w
  9917  0026B6  50F5               
  9918                           	movwf	((c:strchr@c)),c
  9919  0026B8  6E2A               	clrf	((c:strchr@c+1)),c
  9920  0026BA  6A2B               	call	_strchr	;wreg free
  9921  0026BC  EC05  F015         	movff	0+?_strchr,(strstr@h)
  9922  0026C0  C028  F080         	movff	1+?_strchr,(strstr@h+1)
  9923  0026C4  C029  F081         	goto	l3761
  9924  0026C8  EF66  F013         	line	152
  9925                           	
  9926                           l1022:
  9927  0026CC                     	line	148
  9928                           	
  9929                           l3761:
  9930  0026CC                     	movlb	0	; () banked
  9931  0026CC  0100               	movf	((strstr@h))&0ffh,w
  9932  0026CE  5180               iorwf	((strstr@h+1))&0ffh,w
  9933  0026D0  1181               	btfsc	status,2
  9934  0026D2  B4D8               	goto	u4301
  9935  0026D4  EF6E  F013         	goto	u4300
  9936  0026D8  EF70  F013         
  9937                           u4301:
  9938  0026DC                     	goto	l3765
  9939  0026DC  EF82  F013         u4300:
  9940  0026E0                     	
  9941                           l3763:; BSR set to: 0
  9942  0026E0                     
  9943                           	movff	(strstr@h),fsr2l
  9944  0026E0  C080  FFD9         	movff	(strstr@h+1),fsr2h
  9945  0026E4  C081  FFDA         	movf	indf2,w
  9946  0026E8  50DF               	btfss	status,2
  9947  0026EA  A4D8               	goto	u4311
  9948  0026EC  EF7A  F013         	goto	u4310
  9949  0026F0  EF7C  F013         u4311:
  9950  0026F4                     	goto	l3753
  9951  0026F4  EF30  F013         u4310:
  9952  0026F8                     	goto	l3765
  9953  0026F8  EF82  F013         	
  9954                           l1027:; BSR set to: 0
  9955  0026FC                     
  9956                           	goto	l3765
  9957  0026FC  EF82  F013         	
  9958                           l1028:; BSR set to: 0
  9959  002700                     
  9960                           	goto	l3765
  9961  002700  EF82  F013         	line	153
  9962                           	
  9963                           l1021:; BSR set to: 0
  9964  002704                     
  9965                           	line	154
  9966                           	
  9967                           l3765:; BSR set to: 0
  9968  002704                     
  9969                           		movlw	low(0)
  9970  002704  0E00               	movwf	((?_strstr))&0ffh
  9971  002706  6F80               	movlw	high(0)
  9972  002708  0E00               	movwf	((?_strstr+1))&0ffh
  9973  00270A  6F81               
  9974                           	goto	l1025
  9975  00270C  EF88  F013         	
  9976                           l3767:; BSR set to: 0
  9977  002710                     
  9978                           	line	171
  9979                           	
  9980                           l1025:
  9981  002710                     	return	;funcret
  9982  002710  0012               	opt stack 0
  9983                           GLOBAL	__end_of_strstr
  9984                           	__end_of_strstr:
  9985  002712                     	signat	_strstr,8314
  9986                           	global	_strncmp
  9987                           
  9988 ;; *************** function _strncmp *****************
  9989 ;; Defined at:
  9990 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  _l              2   39[COMRAM] PTR const unsigned char 
  9993 ;;		 -> NULL(0), mystring(10), 
  9994 ;;  _r              2   41[COMRAM] PTR const unsigned char 
  9995 ;;		 -> STR_20(6), STR_19(2), STR_18(2), STR_17(2), 
  9996 ;;		 -> STR_16(2), STR_14(2), STR_13(2), STR_12(2), 
  9997 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  9998 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  9999 ;;		 -> STR_3(2), STR_2(2), 
 10000 ;;  n               2   43[COMRAM] unsigned int 
 10001 ;; Auto vars:     Size  Location     Type
 10002 ;;  r               2   50[COMRAM] PTR const unsigned char 
 10003 ;;		 -> STR_20(6), STR_19(2), STR_18(2), STR_17(2), 
 10004 ;;		 -> STR_16(2), STR_14(2), STR_13(2), STR_12(2), 
 10005 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
 10006 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
 10007 ;;		 -> STR_3(2), STR_2(2), 
 10008 ;;  l               2   48[COMRAM] PTR const unsigned char 
 10009 ;;		 -> NULL(0), mystring(10), 
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  2   39[COMRAM] int 
 10012 ;; Registers used:
 10013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10019 ;;      Params:         6       0       0       0       0       0       0
 10020 ;;      Locals:         4       0       0       0       0       0       0
 10021 ;;      Temps:          3       0       0       0       0       0       0
 10022 ;;      Totals:        13       0       0       0       0       0       0
 10023 ;;Total ram usage:       13 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; Hardware stack levels required when called:    5
 10026 ;; This function calls:
 10027 ;;		Nothing
 10028 ;; This function is called by:
 10029 ;;		_strstr
 10030 ;; This function uses a non-reentrant model
 10031 ;;
 10032                           psect	text21,class=CODE,space=0,reloc=2,group=2
 10033                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
 10034                           	line	3
 10035                           global __ptext21
 10036                           __ptext21:
 10037  002270                     psect	text21
 10038                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
 10039                           	line	3
 10040                           	global	__size_of_strncmp
 10041                           	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
 10042  0000                     	
 10043                           _strncmp:
 10044  002270                     ;incstack = 0
 10045                           	opt	stack 24
 10046                           	line	5
 10047                           	
 10048                           l3717:
 10049  002270                     		movff	(c:strncmp@_l),(c:strncmp@l)
 10050  002270  C028  F031         	movff	(c:strncmp@_l+1),(c:strncmp@l+1)
 10051  002274  C029  F032         
 10052                           		movff	(c:strncmp@_r),(c:strncmp@r)
 10053  002278  C02A  F033         	movff	(c:strncmp@_r+1),(c:strncmp@r+1)
 10054  00227C  C02B  F034         
 10055                           	line	6
 10056                           	decf	((c:strncmp@n)),c
 10057  002280  062C               	btfss	status,0
 10058  002282  A0D8               	decf	((c:strncmp@n+1)),c
 10059  002284  062D               		incf	((c:strncmp@n)),c,w
 10060  002286  282C               	bnz	u4211
 10061  002288  E106               	incf	((c:strncmp@n+1)),c,w
 10062  00228A  282D               	btfss	status,2
 10063  00228C  A4D8               	goto	u4211
 10064  00228E  EF4B  F011         	goto	u4210
 10065  002292  EF4D  F011         
 10066                           u4211:
 10067  002296                     	goto	l3725
 10068  002296  EF60  F011         u4210:
 10069  00229A                     	
 10070                           l3719:
 10071  00229A                     	movlw	high(0)
 10072  00229A  0E00               	movwf	((c:?_strncmp+1)),c
 10073  00229C  6E29               	movlw	low(0)
 10074  00229E  0E00               	movwf	((c:?_strncmp)),c
 10075  0022A0  6E28               	goto	l1044
 10076  0022A2  EFB5  F011         	
 10077                           l3721:
 10078  0022A6                     	goto	l1044
 10079  0022A6  EFB5  F011         	
 10080                           l1043:
 10081  0022AA                     	line	7
 10082                           	goto	l3725
 10083  0022AA  EF60  F011         	
 10084                           l1046:
 10085  0022AE                     	
 10086                           l3723:
 10087  0022AE                     	infsnz	((c:strncmp@l)),c
 10088  0022AE  4A31               	incf	((c:strncmp@l+1)),c
 10089  0022B0  2A32               	infsnz	((c:strncmp@r)),c
 10090  0022B2  4A33               	incf	((c:strncmp@r+1)),c
 10091  0022B4  2A34               	decf	((c:strncmp@n)),c
 10092  0022B6  062C               	btfss	status,0
 10093  0022B8  A0D8               	decf	((c:strncmp@n+1)),c
 10094  0022BA  062D               	goto	l3725
 10095  0022BC  EF60  F011         	
 10096                           l1045:
 10097  0022C0                     	
 10098                           l3725:
 10099  0022C0                     	movff	(c:strncmp@l),fsr2l
 10100  0022C0  C031  FFD9         	movff	(c:strncmp@l+1),fsr2h
 10101  0022C4  C032  FFDA         	movf	indf2,w
 10102  0022C8  50DF               	btfsc	status,2
 10103  0022CA  B4D8               	goto	u4221
 10104  0022CC  EF6A  F011         	goto	u4220
 10105  0022D0  EF6C  F011         u4221:
 10106  0022D4                     	goto	l3733
 10107  0022D4  EF9B  F011         u4220:
 10108  0022D8                     	
 10109                           l3727:
 10110  0022D8                     	movff	(c:strncmp@r),tblptrl
 10111  0022D8  C033  FFF6         	movff	(c:strncmp@r+1),tblptrh
 10112  0022DC  C034  FFF7         	if	0	;tblptru may be non-zero
 10113  0022E0                     	clrf	tblptru
 10115  0022E0                     	if	0	;tblptru may be non-zero
 10116  0022E0                     	global __mediumconst
 10117                           movlw	low highword(__mediumconst)
 10120  0022E0                     	tblrd	*
 10121  0022E0  0008               	
 10122                           	movf	tablat,w
 10123  0022E2  50F5               	iorlw	0
 10124  0022E4  0900               	btfsc	status,2
 10125  0022E6  B4D8               	goto	u4231
 10126  0022E8  EF78  F011         	goto	u4230
 10127  0022EC  EF7A  F011         u4231:
 10128  0022F0                     	goto	l3733
 10129  0022F0  EF9B  F011         u4230:
 10130  0022F4                     	
 10131                           l3729:
 10132  0022F4                     	movf	((c:strncmp@n)),c,w
 10133  0022F4  502C               iorwf	((c:strncmp@n+1)),c,w
 10134  0022F6  102D               	btfsc	status,2
 10135  0022F8  B4D8               	goto	u4241
 10136  0022FA  EF81  F011         	goto	u4240
 10137  0022FE  EF83  F011         
 10138                           u4241:
 10139  002302                     	goto	l3733
 10140  002302  EF9B  F011         u4240:
 10141  002306                     	
 10142                           l3731:
 10143  002306                     	movff	(c:strncmp@l),fsr2l
 10144  002306  C031  FFD9         	movff	(c:strncmp@l+1),fsr2h
 10145  00230A  C032  FFDA         	movf	indf2,w
 10146  00230E  50DF               	movwf	(??_strncmp+0+0)&0ffh,c
 10147  002310  6E2E               	movff	(c:strncmp@r),tblptrl
 10148  002312  C033  FFF6         	movff	(c:strncmp@r+1),tblptrh
 10149  002316  C034  FFF7         	if	0	;tblptru may be non-zero
 10150  00231A                     	clrf	tblptru
 10152  00231A                     	if	0	;tblptru may be non-zero
 10153  00231A                     	global __mediumconst
 10154                           movlw	low highword(__mediumconst)
 10157  00231A                     	tblrd	*
 10158  00231A  0008               	
 10159                           	movf	tablat,w
 10160  00231C  50F5               	xorwf	((??_strncmp+0+0)),c,w
 10161  00231E  182E               
 10162                           	btfsc	status,2
 10163  002320  B4D8               	goto	u4251
 10164  002322  EF95  F011         	goto	u4250
 10165  002326  EF97  F011         u4251:
 10166  00232A                     	goto	l3723
 10167  00232A  EF57  F011         u4250:
 10168  00232E                     	goto	l3733
 10169  00232E  EF9B  F011         	
 10170                           l1048:
 10171  002332                     	goto	l3733
 10172  002332  EF9B  F011         	
 10173                           l1049:
 10174  002336                     	line	8
 10175                           	
 10176                           l3733:
 10177  002336                     	movff	(c:strncmp@r),tblptrl
 10178  002336  C033  FFF6         	movff	(c:strncmp@r+1),tblptrh
 10179  00233A  C034  FFF7         	if	0	;tblptru may be non-zero
 10180  00233E                     	clrf	tblptru
 10182  00233E                     	if	0	;tblptru may be non-zero
 10183  00233E                     	global __mediumconst
 10184                           movlw	low highword(__mediumconst)
 10187  00233E                     	tblrd	*
 10188  00233E  0008               	
 10189                           	movf	tablat,w
 10190  002340  50F5               	movwf	(??_strncmp+0+0)&0ffh,c
 10191  002342  6E2E               	clrf	(??_strncmp+0+0+1)&0ffh,c
 10192  002344  6A2F               
 10193                           	comf	(??_strncmp+0+0),c
 10194  002346  1E2E               	comf	(??_strncmp+0+1),c
 10195  002348  1E2F               	infsnz	(??_strncmp+0+0),c
 10196  00234A  4A2E               	incf	(??_strncmp+0+1),c
 10197  00234C  2A2F               	movff	(c:strncmp@l),fsr2l
 10198  00234E  C031  FFD9         	movff	(c:strncmp@l+1),fsr2h
 10199  002352  C032  FFDA         	movf	indf2,w
 10200  002356  50DF               	movwf	(??_strncmp+2+0)&0ffh,c
 10201  002358  6E30               	movf	((??_strncmp+2+0)),c,w
 10202  00235A  5030               	addwf	(??_strncmp+0+0),c,w
 10203  00235C  242E               	movwf	((c:?_strncmp)),c
 10204  00235E  6E28               	movlw	0
 10205  002360  0E00               	addwfc	(??_strncmp+0+1),c,w
 10206  002362  202F               	movwf	1+((c:?_strncmp)),c
 10207  002364  6E29               	goto	l1044
 10208  002366  EFB5  F011         	
 10209                           l3735:
 10210  00236A                     	line	9
 10211                           	
 10212                           l1044:
 10213  00236A                     	return	;funcret
 10214  00236A  0012               	opt stack 0
 10215                           GLOBAL	__end_of_strncmp
 10216                           	__end_of_strncmp:
 10217  00236C                     	signat	_strncmp,12410
 10218                           	global	_strlen
 10219                           
 10220 ;; *************** function _strlen *****************
 10221 ;; Defined at:
 10222 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;  s               2   39[COMRAM] PTR const unsigned char 
 10225 ;;		 -> STR_20(6), STR_19(2), STR_18(2), STR_17(2), 
 10226 ;;		 -> STR_16(2), STR_14(2), STR_13(2), STR_12(2), 
 10227 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
 10228 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
 10229 ;;		 -> STR_3(2), STR_2(2), 
 10230 ;; Auto vars:     Size  Location     Type
 10231 ;;  a               2   43[COMRAM] PTR const unsigned char 
 10232 ;;		 -> STR_20(6), STR_19(2), STR_18(2), STR_17(2), 
 10233 ;;		 -> STR_16(2), STR_14(2), STR_13(2), STR_12(2), 
 10234 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
 10235 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
 10236 ;;		 -> STR_3(2), STR_2(2), 
 10237 ;; Return value:  Size  Location     Type
 10238 ;;                  2   39[COMRAM] unsigned int 
 10239 ;; Registers used:
 10240 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10241 ;; Tracked objects:
 10242 ;;		On entry : 0/0
 10243 ;;		On exit  : 0/0
 10244 ;;		Unchanged: 0/0
 10245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10246 ;;      Params:         2       0       0       0       0       0       0
 10247 ;;      Locals:         2       0       0       0       0       0       0
 10248 ;;      Temps:          2       0       0       0       0       0       0
 10249 ;;      Totals:         6       0       0       0       0       0       0
 10250 ;;Total ram usage:        6 bytes
 10251 ;; Hardware stack levels used:    1
 10252 ;; Hardware stack levels required when called:    5
 10253 ;; This function calls:
 10254 ;;		Nothing
 10255 ;; This function is called by:
 10256 ;;		_strstr
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           psect	text22,class=CODE,space=0,reloc=2,group=2
 10260                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 10261                           	line	12
 10262                           global __ptext22
 10263                           __ptext22:
 10264  002A62                     psect	text22
 10265                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 10266                           	line	12
 10267                           	global	__size_of_strlen
 10268                           	__size_of_strlen	equ	__end_of_strlen-_strlen
 10269  0000                     	
 10270                           _strlen:
 10271  002A62                     ;incstack = 0
 10272                           	opt	stack 24
 10273                           	line	14
 10274                           	
 10275                           l3707:
 10276  002A62                     		movff	(c:strlen@s),(c:strlen@a)
 10277  002A62  C028  F02C         	movff	(c:strlen@s+1),(c:strlen@a+1)
 10278  002A66  C029  F02D         
 10279                           	line	16
 10280                           	goto	l3711
 10281  002A6A  EF3B  F015         	
 10282                           l1038:
 10283  002A6E                     	line	17
 10284                           	
 10285                           l3709:
 10286  002A6E                     	infsnz	((c:strlen@s)),c
 10287  002A6E  4A28               	incf	((c:strlen@s+1)),c
 10288  002A70  2A29               	goto	l3711
 10289  002A72  EF3B  F015         	line	18
 10290                           	
 10291                           l1037:
 10292  002A76                     	line	16
 10293                           	
 10294                           l3711:
 10295  002A76                     	movff	(c:strlen@s),tblptrl
 10296  002A76  C028  FFF6         	movff	(c:strlen@s+1),tblptrh
 10297  002A7A  C029  FFF7         	if	0	;tblptru may be non-zero
 10298  002A7E                     	clrf	tblptru
 10300  002A7E                     	if	0	;tblptru may be non-zero
 10301  002A7E                     	global __mediumconst
 10302                           movlw	low highword(__mediumconst)
 10305  002A7E                     	tblrd	*
 10306  002A7E  0008               	
 10307                           	movf	tablat,w
 10308  002A80  50F5               	iorlw	0
 10309  002A82  0900               	btfss	status,2
 10310  002A84  A4D8               	goto	u4201
 10311  002A86  EF47  F015         	goto	u4200
 10312  002A8A  EF49  F015         u4201:
 10313  002A8E                     	goto	l3709
 10314  002A8E  EF37  F015         u4200:
 10315  002A92                     	goto	l3713
 10316  002A92  EF4B  F015         	
 10317                           l1039:
 10318  002A96                     	line	25
 10319                           	
 10320                           l3713:
 10321  002A96                     	movff	(c:strlen@a),??_strlen+0+0
 10322  002A96  C02C  F02A         	movff	(c:strlen@a+1),??_strlen+0+0+1
 10323  002A9A  C02D  F02B         	comf	(??_strlen+0+0),c
 10324  002A9E  1E2A               	comf	(??_strlen+0+1),c
 10325  002AA0  1E2B               	infsnz	(??_strlen+0+0),c
 10326  002AA2  4A2A               	incf	(??_strlen+0+1),c
 10327  002AA4  2A2B               	movf	((c:strlen@s)),c,w
 10328  002AA6  5028               	addwf	(??_strlen+0+0),c,w
 10329  002AA8  242A               	movwf	((c:?_strlen)),c
 10330  002AAA  6E28               	movf	((c:strlen@s+1)),c,w
 10331  002AAC  5029               	addwfc	(??_strlen+0+1),c,w
 10332  002AAE  202B               	movwf	1+((c:?_strlen)),c
 10333  002AB0  6E29               	goto	l1040
 10334  002AB2  EF5B  F015         	
 10335                           l3715:
 10336  002AB6                     	line	26
 10337                           	
 10338                           l1040:
 10339  002AB6                     	return	;funcret
 10340  002AB6  0012               	opt stack 0
 10341                           GLOBAL	__end_of_strlen
 10342                           	__end_of_strlen:
 10343  002AB8                     	signat	_strlen,4218
 10344                           	global	_strchr
 10345                           
 10346 ;; *************** function _strchr *****************
 10347 ;; Defined at:
 10348 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;  s               2   39[COMRAM] PTR const unsigned char 
 10351 ;;		 -> NULL(0), mystring(10), 
 10352 ;;  c               2   41[COMRAM] int 
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;		None
 10355 ;; Return value:  Size  Location     Type
 10356 ;;                  2   39[COMRAM] PTR unsigned char 
 10357 ;; Registers used:
 10358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10359 ;; Tracked objects:
 10360 ;;		On entry : 0/0
 10361 ;;		On exit  : 0/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10364 ;;      Params:         4       0       0       0       0       0       0
 10365 ;;      Locals:         0       0       0       0       0       0       0
 10366 ;;      Temps:          1       0       0       0       0       0       0
 10367 ;;      Totals:         5       0       0       0       0       0       0
 10368 ;;Total ram usage:        5 bytes
 10369 ;; Hardware stack levels used:    1
 10370 ;; Hardware stack levels required when called:    5
 10371 ;; This function calls:
 10372 ;;		Nothing
 10373 ;; This function is called by:
 10374 ;;		_strstr
 10375 ;; This function uses a non-reentrant model
 10376 ;;
 10377                           psect	text23,class=CODE,space=0,reloc=2,group=2
 10378                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
 10379                           	line	7
 10380                           global __ptext23
 10381                           __ptext23:
 10382  002A0A                     psect	text23
 10383                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
 10384                           	line	7
 10385                           	global	__size_of_strchr
 10386                           	__size_of_strchr	equ	__end_of_strchr-_strchr
 10387  0000                     	
 10388                           _strchr:
 10389  002A0A                     ;incstack = 0
 10390                           	opt	stack 24
 10391                           	line	13
 10392                           	
 10393                           l1031:
 10394  002A0A                     	line	14
 10395                           	
 10396                           l3737:
 10397  002A0A                     	movff	(c:strchr@s),fsr2l
 10398  002A0A  C028  FFD9         	movff	(c:strchr@s+1),fsr2h
 10399  002A0E  C029  FFDA         	movf	((c:strchr@c)),c,w
 10400  002A12  502A               xorwf	postinc2,w
 10401  002A14  18DE               	btfss	status,2
 10402  002A16  A4D8               	goto	u4261
 10403  002A18  EF10  F015         	goto	u4260
 10404  002A1C  EF12  F015         
 10405                           u4261:
 10406  002A20                     	goto	l3743
 10407  002A20  EF1A  F015         u4260:
 10408  002A24                     	line	15
 10409                           	
 10410                           l3739:
 10411  002A24                     		movff	(c:strchr@s),(c:?_strchr)
 10412  002A24  C028  F028         	movff	(c:strchr@s+1),(c:?_strchr+1)
 10413  002A28  C029  F029         
 10414                           	goto	l1033
 10415  002A2C  EF30  F015         	
 10416                           l3741:
 10417  002A30                     	goto	l1033
 10418  002A30  EF30  F015         	line	16
 10419                           	
 10420                           l1032:
 10421  002A34                     	line	17
 10422                           	
 10423                           l3743:
 10424  002A34                     	movff	(c:strchr@s),fsr2l
 10425  002A34  C028  FFD9         	movff	(c:strchr@s+1),fsr2h
 10426  002A38  C029  FFDA         	infsnz	((c:strchr@s)),c
 10427  002A3C  4A28               	incf	((c:strchr@s+1)),c
 10428  002A3E  2A29               	movf	indf2,w
 10429  002A40  50DF               	btfss	status,2
 10430  002A42  A4D8               	goto	u4271
 10431  002A44  EF26  F015         	goto	u4270
 10432  002A48  EF28  F015         u4271:
 10433  002A4C                     	goto	l1031
 10434  002A4C  EF05  F015         u4270:
 10435  002A50                     	goto	l3745
 10436  002A50  EF2A  F015         	
 10437                           l1034:
 10438  002A54                     	line	18
 10439                           	
 10440                           l3745:
 10441  002A54                     		movlw	low(0)
 10442  002A54  0E00               	movwf	((c:?_strchr)),c
 10443  002A56  6E28               	movlw	high(0)
 10444  002A58  0E00               	movwf	((c:?_strchr+1)),c
 10445  002A5A  6E29               
 10446                           	goto	l1033
 10447  002A5C  EF30  F015         	
 10448                           l3747:
 10449  002A60                     	line	20
 10450                           	
 10451                           l1033:
 10452  002A60                     	return	;funcret
 10453  002A60  0012               	opt stack 0
 10454                           GLOBAL	__end_of_strchr
 10455                           	__end_of_strchr:
 10456  002A62                     	signat	_strchr,8314
 10457                           	global	_UART_Write_Text
 10458                           
 10459 ;; *************** function _UART_Write_Text *****************
 10460 ;; Defined at:
 10461 ;;		line 50 in file "setting_hardaware/uart.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;  text            2   40[COMRAM] PTR unsigned char 
 10464 ;;		 -> STR_15(6), STR_1(7), 
 10465 ;; Auto vars:     Size  Location     Type
 10466 ;;  i               2   44[COMRAM] int 
 10467 ;; Return value:  Size  Location     Type
 10468 ;;                  1    wreg      void 
 10469 ;; Registers used:
 10470 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10471 ;; Tracked objects:
 10472 ;;		On entry : 0/0
 10473 ;;		On exit  : 0/0
 10474 ;;		Unchanged: 0/0
 10475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10476 ;;      Params:         2       0       0       0       0       0       0
 10477 ;;      Locals:         2       0       0       0       0       0       0
 10478 ;;      Temps:          2       0       0       0       0       0       0
 10479 ;;      Totals:         6       0       0       0       0       0       0
 10480 ;;Total ram usage:        6 bytes
 10481 ;; Hardware stack levels used:    1
 10482 ;; Hardware stack levels required when called:    6
 10483 ;; This function calls:
 10484 ;;		_UART_Write
 10485 ;; This function is called by:
 10486 ;;		_Mode1
 10487 ;;		_Mode2
 10488 ;; This function uses a non-reentrant model
 10489 ;;
 10490                           psect	text24,class=CODE,space=0,reloc=2,group=0
 10491                           	file	"setting_hardaware/uart.c"
 10492                           	line	50
 10493                           global __ptext24
 10494                           __ptext24:
 10495  0029AC                     psect	text24
 10496                           	file	"setting_hardaware/uart.c"
 10497                           	line	50
 10498                           	global	__size_of_UART_Write_Text
 10499                           	__size_of_UART_Write_Text	equ	__end_of_UART_Write_Text-_UART_Write_Text
 10500  0000                     	
 10501                           _UART_Write_Text:
 10502  0029AC                     ;incstack = 0
 10503                           	opt	stack 23
 10504                           	line	51
 10505                           	
 10506                           l2551:
 10507  0029AC                     ;setting_hardaware/uart.c: 51:     for(int i=0;text[i]!='\0';i++)
 10508                           	movlw	high(0)
 10509  0029AC  0E00               	movwf	((c:UART_Write_Text@i+1)),c
 10510  0029AE  6E2E               	movlw	low(0)
 10511  0029B0  0E00               	movwf	((c:UART_Write_Text@i)),c
 10512  0029B2  6E2D               	goto	l2557
 10513  0029B4  EFEE  F014         	
 10514                           l64:
 10515  0029B8                     	line	52
 10516                           	
 10517                           l2553:
 10518  0029B8                     ;setting_hardaware/uart.c: 52:         UART_Write(text[i]);
 10519                           	movf	((c:UART_Write_Text@i)),c,w
 10520  0029B8  502D               	addwf	((c:UART_Write_Text@text)),c,w
 10521  0029BA  2429               	movwf	(??_UART_Write_Text+0+0)&0ffh,c
 10522  0029BC  6E2B               	movf	((c:UART_Write_Text@i+1)),c,w
 10523  0029BE  502E               	addwfc	((c:UART_Write_Text@text+1)),c,w
 10524  0029C0  202A               	movwf	(??_UART_Write_Text+0+0+1)&0ffh,c
 10525  0029C2  6E2C               	movff	??_UART_Write_Text+0+0,tblptrl
 10526  0029C4  C02B  FFF6         	movff	??_UART_Write_Text+0+1,tblptrh
 10527  0029C8  C02C  FFF7         	if	0	;tblptru may be non-zero
 10528  0029CC                     	clrf	tblptru
 10530  0029CC                     	if	0	;tblptru may be non-zero
 10531  0029CC                     	global __mediumconst
 10532                           movlw	low highword(__mediumconst)
 10535  0029CC                     	tblrd	*
 10536  0029CC  0008               	
 10537                           	movf	tablat,w
 10538  0029CE  50F5               	
 10539                           	call	_UART_Write
 10540  0029D0  EC03  F016         	
 10541                           l2555:
 10542  0029D4                     	infsnz	((c:UART_Write_Text@i)),c
 10543  0029D4  4A2D               	incf	((c:UART_Write_Text@i+1)),c
 10544  0029D6  2A2E               	goto	l2557
 10545  0029D8  EFEE  F014         	
 10546                           l63:
 10547  0029DC                     	
 10548                           l2557:
 10549  0029DC                     	movf	((c:UART_Write_Text@i)),c,w
 10550  0029DC  502D               	addwf	((c:UART_Write_Text@text)),c,w
 10551  0029DE  2429               	movwf	(??_UART_Write_Text+0+0)&0ffh,c
 10552  0029E0  6E2B               	movf	((c:UART_Write_Text@i+1)),c,w
 10553  0029E2  502E               	addwfc	((c:UART_Write_Text@text+1)),c,w
 10554  0029E4  202A               	movwf	(??_UART_Write_Text+0+0+1)&0ffh,c
 10555  0029E6  6E2C               	movff	??_UART_Write_Text+0+0,tblptrl
 10556  0029E8  C02B  FFF6         	movff	??_UART_Write_Text+0+1,tblptrh
 10557  0029EC  C02C  FFF7         	if	0	;tblptru may be non-zero
 10558  0029F0                     	clrf	tblptru
 10560  0029F0                     	if	0	;tblptru may be non-zero
 10561  0029F0                     	global __mediumconst
 10562                           movlw	low highword(__mediumconst)
 10565  0029F0                     	tblrd	*
 10566  0029F0  0008               	
 10567                           	movf	tablat,w
 10568  0029F2  50F5               	iorlw	0
 10569  0029F4  0900               	btfss	status,2
 10570  0029F6  A4D8               	goto	u2391
 10571  0029F8  EF00  F015         	goto	u2390
 10572  0029FC  EF02  F015         u2391:
 10573  002A00                     	goto	l2553
 10574  002A00  EFDC  F014         u2390:
 10575  002A04                     	goto	l66
 10576  002A04  EF04  F015         	
 10577                           l65:
 10578  002A08                     	line	53
 10579                           	
 10580                           l66:
 10581  002A08                     	return	;funcret
 10582  002A08  0012               	opt stack 0
 10583                           GLOBAL	__end_of_UART_Write_Text
 10584                           	__end_of_UART_Write_Text:
 10585  002A0A                     	signat	_UART_Write_Text,4217
 10586                           	global	_UART_Write
 10587                           
 10588 ;; *************** function _UART_Write *****************
 10589 ;; Defined at:
 10590 ;;		line 40 in file "setting_hardaware/uart.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;  data            1    wreg     unsigned char 
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;  data            1   39[COMRAM] unsigned char 
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  1    wreg      void 
 10597 ;; Registers used:
 10598 ;;		wreg
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10604 ;;      Params:         0       0       0       0       0       0       0
 10605 ;;      Locals:         1       0       0       0       0       0       0
 10606 ;;      Temps:          0       0       0       0       0       0       0
 10607 ;;      Totals:         1       0       0       0       0       0       0
 10608 ;;Total ram usage:        1 bytes
 10609 ;; Hardware stack levels used:    1
 10610 ;; Hardware stack levels required when called:    5
 10611 ;; This function calls:
 10612 ;;		Nothing
 10613 ;; This function is called by:
 10614 ;;		_UART_Write_Text
 10615 ;; This function uses a non-reentrant model
 10616 ;;
 10617                           psect	text25,class=CODE,space=0,reloc=2,group=0
 10618                           	line	40
 10619                           global __ptext25
 10620                           __ptext25:
 10621  002C06                     psect	text25
 10622                           	file	"setting_hardaware/uart.c"
 10623                           	line	40
 10624                           	global	__size_of_UART_Write
 10625                           	__size_of_UART_Write	equ	__end_of_UART_Write-_UART_Write
 10626  0000                     	
 10627                           _UART_Write:
 10628  002C06                     ;incstack = 0
 10629                           	opt	stack 23
 10630                           ;UART_Write@data stored from wreg
 10631                           	movwf	((c:UART_Write@data)),c
 10632  002C06  6E28               	line	42
 10633                           	
 10634                           l2299:
 10635  002C08                     ;setting_hardaware/uart.c: 40: void UART_Write(unsigned char data);setting_hardaware/uar
                                 t.c: 41: {;setting_hardaware/uart.c: 42:     while(!TXSTAbits.TRMT);
 10636                           	goto	l54
 10637  002C08  EF06  F016         	
 10638                           l55:
 10639  002C0C                     	
 10640                           l54:
 10641  002C0C                     	btfss	((c:4012)),c,1	;volatile
 10642  002C0C  A2AC               	goto	u1911
 10643  002C0E  EF0B  F016         	goto	u1910
 10644  002C12  EF0D  F016         u1911:
 10645  002C16                     	goto	l54
 10646  002C16  EF06  F016         u1910:
 10647  002C1A                     	goto	l2301
 10648  002C1A  EF0F  F016         	
 10649                           l56:
 10650  002C1E                     	line	43
 10651                           	
 10652                           l2301:
 10653  002C1E                     ;setting_hardaware/uart.c: 43:     TXREG = data;
 10654                           	movff	(c:UART_Write@data),(c:4013)	;volatile
 10655  002C1E  C028  FFAD         	line	44
 10656                           	
 10657                           l57:
 10658  002C22                     	return	;funcret
 10659  002C22  0012               	opt stack 0
 10660                           GLOBAL	__end_of_UART_Write
 10661                           	__end_of_UART_Write:
 10662  002C24                     	signat	_UART_Write,4217
 10663                           	global	_GetString
 10664                           
 10665 ;; *************** function _GetString *****************
 10666 ;; Defined at:
 10667 ;;		line 46 in file "setting_hardaware/uart.c"
 10668 ;; Parameters:    Size  Location     Type
 10669 ;;		None
 10670 ;; Auto vars:     Size  Location     Type
 10671 ;;		None
 10672 ;; Return value:  Size  Location     Type
 10673 ;;                  2   39[COMRAM] PTR unsigned char 
 10674 ;; Registers used:
 10675 ;;		wreg, status,2, status,0
 10676 ;; Tracked objects:
 10677 ;;		On entry : 0/0
 10678 ;;		On exit  : 0/0
 10679 ;;		Unchanged: 0/0
 10680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10681 ;;      Params:         2       0       0       0       0       0       0
 10682 ;;      Locals:         0       0       0       0       0       0       0
 10683 ;;      Temps:          0       0       0       0       0       0       0
 10684 ;;      Totals:         2       0       0       0       0       0       0
 10685 ;;Total ram usage:        2 bytes
 10686 ;; Hardware stack levels used:    1
 10687 ;; Hardware stack levels required when called:    5
 10688 ;; This function calls:
 10689 ;;		Nothing
 10690 ;; This function is called by:
 10691 ;;		_Mode1
 10692 ;;		_Mode2
 10693 ;;		_Mode3
 10694 ;;		_main
 10695 ;; This function uses a non-reentrant model
 10696 ;;
 10697                           psect	text26,class=CODE,space=0,reloc=2,group=0
 10698                           	line	46
 10699                           global __ptext26
 10700                           __ptext26:
 10701  002C70                     psect	text26
 10702                           	file	"setting_hardaware/uart.c"
 10703                           	line	46
 10704                           	global	__size_of_GetString
 10705                           	__size_of_GetString	equ	__end_of_GetString-_GetString
 10706  0000                     	
 10707                           _GetString:
 10708  002C70                     ;incstack = 0
 10709                           	opt	stack 24
 10710                           	line	47
 10711                           	
 10712                           l2547:
 10713  002C70                     ;setting_hardaware/uart.c: 47:     return mystring;
 10714                           		movlw	low(_mystring)
 10715  002C70  0E4A               	movwf	((c:?_GetString)),c
 10716  002C72  6E28               	movlw	high(_mystring)
 10717  002C74  0E00               	movwf	((c:?_GetString+1)),c
 10718  002C76  6E29               
 10719                           	goto	l60
 10720  002C78  EF3E  F016         	
 10721                           l2549:
 10722  002C7C                     	line	48
 10723                           	
 10724                           l60:
 10725  002C7C                     	return	;funcret
 10726  002C7C  0012               	opt stack 0
 10727                           GLOBAL	__end_of_GetString
 10728                           	__end_of_GetString:
 10729  002C7E                     	signat	_GetString,90
 10730                           	global	_ClearBuffer
 10731                           
 10732 ;; *************** function _ClearBuffer *****************
 10733 ;; Defined at:
 10734 ;;		line 55 in file "setting_hardaware/uart.c"
 10735 ;; Parameters:    Size  Location     Type
 10736 ;;		None
 10737 ;; Auto vars:     Size  Location     Type
 10738 ;;  i               2   39[COMRAM] int 
 10739 ;; Return value:  Size  Location     Type
 10740 ;;                  1    wreg      void 
 10741 ;; Registers used:
 10742 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10743 ;; Tracked objects:
 10744 ;;		On entry : 0/0
 10745 ;;		On exit  : 0/0
 10746 ;;		Unchanged: 0/0
 10747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10748 ;;      Params:         0       0       0       0       0       0       0
 10749 ;;      Locals:         2       0       0       0       0       0       0
 10750 ;;      Temps:          0       0       0       0       0       0       0
 10751 ;;      Totals:         2       0       0       0       0       0       0
 10752 ;;Total ram usage:        2 bytes
 10753 ;; Hardware stack levels used:    1
 10754 ;; Hardware stack levels required when called:    5
 10755 ;; This function calls:
 10756 ;;		Nothing
 10757 ;; This function is called by:
 10758 ;;		_Mode1
 10759 ;;		_Mode2
 10760 ;;		_Mode3
 10761 ;;		_Playmusic
 10762 ;;		_Stopmusic
 10763 ;;		_main
 10764 ;; This function uses a non-reentrant model
 10765 ;;
 10766                           psect	text27,class=CODE,space=0,reloc=2,group=0
 10767                           	line	55
 10768                           global __ptext27
 10769                           __ptext27:
 10770  0028E2                     psect	text27
 10771                           	file	"setting_hardaware/uart.c"
 10772                           	line	55
 10773                           	global	__size_of_ClearBuffer
 10774                           	__size_of_ClearBuffer	equ	__end_of_ClearBuffer-_ClearBuffer
 10775  0000                     	
 10776                           _ClearBuffer:
 10777  0028E2                     ;incstack = 0
 10778                           	opt	stack 24
 10779                           	line	56
 10780                           	
 10781                           l2559:
 10782  0028E2                     ;setting_hardaware/uart.c: 56:     for(int i = 0; i < 10 ; i++)
 10783                           	movlw	high(0)
 10784  0028E2  0E00               	movwf	((c:ClearBuffer@i+1)),c
 10785  0028E4  6E29               	movlw	low(0)
 10786  0028E6  0E00               	movwf	((c:ClearBuffer@i)),c
 10787  0028E8  6E28               	
 10788                           l2561:
 10789  0028EA                     	btfsc	((c:ClearBuffer@i+1)),c,7
 10790  0028EA  BE29               	goto	u2401
 10791  0028EC  EF81  F014         	movf	((c:ClearBuffer@i+1)),c,w
 10792  0028F0  5029               	bnz	u2400
 10793  0028F2  E109               	movlw	10
 10794  0028F4  0E0A               	subwf	 ((c:ClearBuffer@i)),c,w
 10795  0028F6  5C28               	btfss	status,0
 10796  0028F8  A0D8               	goto	u2401
 10797  0028FA  EF81  F014         	goto	u2400
 10798  0028FE  EF83  F014         
 10799                           u2401:
 10800  002902                     	goto	l2565
 10801  002902  EF87  F014         u2400:
 10802  002906                     	goto	l2571
 10803  002906  EFA1  F014         	
 10804                           l2563:
 10805  00290A                     	goto	l2571
 10806  00290A  EFA1  F014         	
 10807                           l69:
 10808  00290E                     	line	57
 10809                           	
 10810                           l2565:
 10811  00290E                     ;setting_hardaware/uart.c: 57:         mystring[i] = '\0';
 10812                           	movlw	low(_mystring)
 10813  00290E  0E4A               	addwf	((c:ClearBuffer@i)),c,w
 10814  002910  2428               	movwf	c:fsr2l
 10815  002912  6ED9               	movlw	high(_mystring)
 10816  002914  0E00               	addwfc	((c:ClearBuffer@i+1)),c,w
 10817  002916  2029               	movwf	1+c:fsr2l
 10818  002918  6EDA               	movlw	low(0)
 10819  00291A  0E00               	movwf	indf2
 10820  00291C  6EDF               	
 10821                           l2567:
 10822  00291E                     	infsnz	((c:ClearBuffer@i)),c
 10823  00291E  4A28               	incf	((c:ClearBuffer@i+1)),c
 10824  002920  2A29               	
 10825                           l2569:
 10826  002922                     	btfsc	((c:ClearBuffer@i+1)),c,7
 10827  002922  BE29               	goto	u2411
 10828  002924  EF9D  F014         	movf	((c:ClearBuffer@i+1)),c,w
 10829  002928  5029               	bnz	u2410
 10830  00292A  E109               	movlw	10
 10831  00292C  0E0A               	subwf	 ((c:ClearBuffer@i)),c,w
 10832  00292E  5C28               	btfss	status,0
 10833  002930  A0D8               	goto	u2411
 10834  002932  EF9D  F014         	goto	u2410
 10835  002936  EF9F  F014         
 10836                           u2411:
 10837  00293A                     	goto	l2565
 10838  00293A  EF87  F014         u2410:
 10839  00293E                     	goto	l2571
 10840  00293E  EFA1  F014         	
 10841                           l70:
 10842  002942                     	line	58
 10843                           	
 10844                           l2571:
 10845  002942                     ;setting_hardaware/uart.c: 58:     lenStr = 0;
 10846                           	movlw	high(0)
 10847  002942  0E00               	movwf	((c:_lenStr+1)),c
 10848  002944  6E49               	movlw	low(0)
 10849  002946  0E00               	movwf	((c:_lenStr)),c
 10850  002948  6E48               	line	59
 10851                           	
 10852                           l71:
 10853  00294A                     	return	;funcret
 10854  00294A  0012               	opt stack 0
 10855                           GLOBAL	__end_of_ClearBuffer
 10856                           	__end_of_ClearBuffer:
 10857  00294C                     	signat	_ClearBuffer,89
 10858                           	global	_Lo_ISR
 10859                           
 10860 ;; *************** function _Lo_ISR *****************
 10861 ;; Defined at:
 10862 ;;		line 75 in file "setting_hardaware/uart.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;		None
 10865 ;; Auto vars:     Size  Location     Type
 10866 ;;		None
 10867 ;; Return value:  Size  Location     Type
 10868 ;;                  1    wreg      void 
 10869 ;; Registers used:
 10870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10871 ;; Tracked objects:
 10872 ;;		On entry : 0/0
 10873 ;;		On exit  : 0/0
 10874 ;;		Unchanged: 0/0
 10875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10876 ;;      Params:         0       0       0       0       0       0       0
 10877 ;;      Locals:         0       0       0       0       0       0       0
 10878 ;;      Temps:          5       0       0       0       0       0       0
 10879 ;;      Totals:         5       0       0       0       0       0       0
 10880 ;;Total ram usage:        5 bytes
 10881 ;; Hardware stack levels used:    1
 10882 ;; Hardware stack levels required when called:    4
 10883 ;; This function calls:
 10884 ;;		_MyusartRead
 10885 ;; This function is called by:
 10886 ;;		Interrupt level 1
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889                           psect	intcodelo,class=CODE,space=0,reloc=2
 10890                           global __pintcodelo
 10891                           __pintcodelo:
 10892  000018                     psect	intcodelo
 10893                           	file	"setting_hardaware/uart.c"
 10894                           	line	75
 10895                           	global	__size_of_Lo_ISR
 10896                           	__size_of_Lo_ISR	equ	__end_of_Lo_ISR-_Lo_ISR
 10897  0000                     	
 10898                           _Lo_ISR:
 10899  000018                     ;incstack = 0
 10900                           	opt	stack 23
 10901                           	bsf int$flags,0,c ;set compiler interrupt flag (level 1)
 10902  000018  8058               	movff	status+0,??_Lo_ISR+0
 10903  00001A  CFD8 F023          	movff	wreg+0,??_Lo_ISR+1
 10904  00001E  CFE8 F024          	movff	bsr+0,??_Lo_ISR+2
 10905  000022  CFE0 F025          	movff	fsr2l+0,??_Lo_ISR+3
 10906  000026  CFD9 F026          	movff	fsr2h+0,??_Lo_ISR+4
 10907  00002A  CFDA F027          	line	77
 10908                           	
 10909                           i1l3389:
 10910  00002E                     ;setting_hardaware/uart.c: 77:     if(RCIF)
 10911                           	btfss	c:(31989/8),(31989)&7	;volatile
 10912  00002E  AA9E               	goto	i1u337_21
 10913  000030  EF1C  F000         	goto	i1u337_20
 10914  000034  EF1E  F000         i1u337_21:
 10915  000038                     	goto	i1l81
 10916  000038  EF30  F000         i1u337_20:
 10917  00003C                     	line	79
 10918                           	
 10919                           i1l3391:
 10920  00003C                     ;setting_hardaware/uart.c: 78:     {;setting_hardaware/uart.c: 79:         if(RCSTAbits.
                                 OERR)
 10921                           	btfss	((c:4011)),c,1	;volatile
 10922  00003C  A2AB               	goto	i1u338_21
 10923  00003E  EF23  F000         	goto	i1u338_20
 10924  000042  EF25  F000         i1u338_21:
 10925  000046                     	goto	i1l3395
 10926  000046  EF2A  F000         i1u338_20:
 10927  00004A                     	line	81
 10928                           	
 10929                           i1l3393:
 10930  00004A                     ;setting_hardaware/uart.c: 80:         {;setting_hardaware/uart.c: 81:             CREN 
                                 = 0;
 10931                           	bcf	c:(32092/8),(32092)&7	;volatile
 10932  00004A  98AB               	line	82
 10933                           ;setting_hardaware/uart.c: 82:             __nop();
 10934                           	opt	asmopt_push
 10935                           	opt	asmopt_off
 10936                           	nop
 10937  00004C  F000               	opt	asmopt_pop
 10938                           	line	83
 10939                           ;setting_hardaware/uart.c: 83:             CREN = 1;
 10940                           	bsf	c:(32092/8),(32092)&7	;volatile
 10941  00004E  88AB               	goto	i1l3395
 10942  000050  EF2A  F000         	line	84
 10943                           ;setting_hardaware/uart.c: 84:         }
 10944                           	
 10945                           i1l80:
 10946  000054                     	line	86
 10947                           	
 10948                           i1l3395:
 10949  000054                     ;setting_hardaware/uart.c: 86:         MyusartRead();
 10950                           	call	_MyusartRead	;wreg free
 10951  000054  EC82  F015         	goto	i1l81
 10952  000058  EF30  F000         	line	87
 10953                           ;setting_hardaware/uart.c: 87:     }
 10954                           	
 10955                           i1l79:
 10956  00005C                     	goto	i1l81
 10957  00005C  EF30  F000         	line	90
 10958                           	
 10959                           i1l3397:
 10960  000060                     	line	91
 10961                           ;setting_hardaware/uart.c: 90:     return;
 10962                           	
 10963                           i1l81:
 10964  000060                     	movff	??_Lo_ISR+4,fsr2h+0
 10965  000060  C027  FFDA         	movff	??_Lo_ISR+3,fsr2l+0
 10966  000064  C026  FFD9         	movff	??_Lo_ISR+2,bsr+0
 10967  000068  C025  FFE0         	movff	??_Lo_ISR+1,wreg+0
 10968  00006C  C024  FFE8         	movff	??_Lo_ISR+0,status+0
 10969  000070  C023  FFD8         	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
 10970  000074  9058               	retfie
 10971  000076  0010               	opt stack 0
 10972                           GLOBAL	__end_of_Lo_ISR
 10973                           	__end_of_Lo_ISR:
 10974  000078                     	signat	_Lo_ISR,89
 10975                           	global	_MyusartRead
 10976                           
 10977 ;; *************** function _MyusartRead *****************
 10978 ;; Defined at:
 10979 ;;		line 61 in file "setting_hardaware/uart.c"
 10980 ;; Parameters:    Size  Location     Type
 10981 ;;		None
 10982 ;; Auto vars:     Size  Location     Type
 10983 ;;		None
 10984 ;; Return value:  Size  Location     Type
 10985 ;;                  1    wreg      void 
 10986 ;; Registers used:
 10987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10988 ;; Tracked objects:
 10989 ;;		On entry : 0/0
 10990 ;;		On exit  : 0/0
 10991 ;;		Unchanged: 0/0
 10992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10993 ;;      Params:         0       0       0       0       0       0       0
 10994 ;;      Locals:         0       0       0       0       0       0       0
 10995 ;;      Temps:          0       0       0       0       0       0       0
 10996 ;;      Totals:         0       0       0       0       0       0       0
 10997 ;;Total ram usage:        0 bytes
 10998 ;; Hardware stack levels used:    1
 10999 ;; Hardware stack levels required when called:    3
 11000 ;; This function calls:
 11001 ;;		___awmod
 11002 ;;		i1_UART_Write
 11003 ;; This function is called by:
 11004 ;;		_Lo_ISR
 11005 ;; This function uses a non-reentrant model
 11006 ;;
 11007                           psect	text29,class=CODE,space=0,reloc=2,group=0
 11008                           	line	61
 11009                           global __ptext29
 11010                           __ptext29:
 11011  002B04                     psect	text29
 11012                           	file	"setting_hardaware/uart.c"
 11013                           	line	61
 11014                           	global	__size_of_MyusartRead
 11015                           	__size_of_MyusartRead	equ	__end_of_MyusartRead-_MyusartRead
 11016  0000                     	
 11017                           _MyusartRead:
 11018  002B04                     ;incstack = 0
 11019                           	opt	stack 23
 11020                           	line	63
 11021                           	
 11022                           i1l2911:
 11023  002B04                     ;setting_hardaware/uart.c: 63:     mystring[lenStr] = RCREG;
 11024                           	movlw	low(_mystring)
 11025  002B04  0E4A               	addwf	((c:_lenStr)),c,w
 11026  002B06  2448               	movwf	c:fsr2l
 11027  002B08  6ED9               	movlw	high(_mystring)
 11028  002B0A  0E00               	addwfc	((c:_lenStr+1)),c,w
 11029  002B0C  2049               	movwf	1+c:fsr2l
 11030  002B0E  6EDA               	movff	(c:4014),indf2	;volatile
 11031  002B10  CFAE FFDF          
 11032                           	line	64
 11033                           	
 11034                           i1l2913:
 11035  002B14                     ;setting_hardaware/uart.c: 64:     UART_Write(mystring[lenStr]);
 11036                           	movlw	low(_mystring)
 11037  002B14  0E4A               	addwf	((c:_lenStr)),c,w
 11038  002B16  2448               	movwf	c:fsr2l
 11039  002B18  6ED9               	movlw	high(_mystring)
 11040  002B1A  0E00               	addwfc	((c:_lenStr+1)),c,w
 11041  002B1C  2049               	movwf	1+c:fsr2l
 11042  002B1E  6EDA               	movf	indf2,w
 11043  002B20  50DF               	
 11044                           	call	i1_UART_Write
 11045  002B22  EC12  F016         	line	65
 11046                           	
 11047                           i1l2915:
 11048  002B26                     ;setting_hardaware/uart.c: 65:     lenStr++;
 11049                           	infsnz	((c:_lenStr)),c
 11050  002B26  4A48               	incf	((c:_lenStr+1)),c
 11051  002B28  2A49               	line	66
 11052                           	
 11053                           i1l2917:
 11054  002B2A                     ;setting_hardaware/uart.c: 66:     lenStr %= 10;
 11055                           	movff	(c:_lenStr),(c:___awmod@dividend)
 11056  002B2A  C048  F01D         	movff	(c:_lenStr+1),(c:___awmod@dividend+1)
 11057  002B2E  C049  F01E         	movlw	high(0Ah)
 11058  002B32  0E00               	movwf	((c:___awmod@divisor+1)),c
 11059  002B34  6E20               	movlw	low(0Ah)
 11060  002B36  0E0A               	movwf	((c:___awmod@divisor)),c
 11061  002B38  6E1F               	call	___awmod	;wreg free
 11062  002B3A  EC89  F013         	movff	0+?___awmod,(c:_lenStr)
 11063  002B3E  C01D  F048         	movff	1+?___awmod,(c:_lenStr+1)
 11064  002B42  C01E  F049         	goto	i1l74
 11065  002B46  EFA5  F015         	line	69
 11066                           	
 11067                           i1l2919:
 11068  002B4A                     	line	70
 11069                           ;setting_hardaware/uart.c: 69:     return ;
 11070                           	
 11071                           i1l74:
 11072  002B4A                     	return	;funcret
 11073  002B4A  0012               	opt stack 0
 11074                           GLOBAL	__end_of_MyusartRead
 11075                           	__end_of_MyusartRead:
 11076  002B4C                     	signat	_MyusartRead,89
 11077                           	global	i1_UART_Write
 11078                           
 11079 ;; *************** function i1_UART_Write *****************
 11080 ;; Defined at:
 11081 ;;		line 40 in file "setting_hardaware/uart.c"
 11082 ;; Parameters:    Size  Location     Type
 11083 ;;  data            1    wreg     unsigned char 
 11084 ;; Auto vars:     Size  Location     Type
 11085 ;;  data            1   28[COMRAM] unsigned char 
 11086 ;; Return value:  Size  Location     Type
 11087 ;;                  1    wreg      void 
 11088 ;; Registers used:
 11089 ;;		wreg
 11090 ;; Tracked objects:
 11091 ;;		On entry : 0/0
 11092 ;;		On exit  : 0/0
 11093 ;;		Unchanged: 0/0
 11094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11095 ;;      Params:         0       0       0       0       0       0       0
 11096 ;;      Locals:         1       0       0       0       0       0       0
 11097 ;;      Temps:          0       0       0       0       0       0       0
 11098 ;;      Totals:         1       0       0       0       0       0       0
 11099 ;;Total ram usage:        1 bytes
 11100 ;; Hardware stack levels used:    1
 11101 ;; Hardware stack levels required when called:    2
 11102 ;; This function calls:
 11103 ;;		Nothing
 11104 ;; This function is called by:
 11105 ;;		_MyusartRead
 11106 ;; This function uses a non-reentrant model
 11107 ;;
 11108                           psect	text30,class=CODE,space=0,reloc=2,group=0
 11109                           	line	40
 11110                           global __ptext30
 11111                           __ptext30:
 11112  002C24                     psect	text30
 11113                           	file	"setting_hardaware/uart.c"
 11114                           	line	40
 11115                           	global	__size_ofi1_UART_Write
 11116                           	__size_ofi1_UART_Write	equ	__end_ofi1_UART_Write-i1_UART_Write
 11117  0000                     	
 11118                           i1_UART_Write:
 11119  002C24                     ;incstack = 0
 11120                           	opt	stack 23
 11121                           ;i1UART_Write@data stored from wreg
 11122                           	movwf	((c:i1UART_Write@data)),c
 11123  002C24  6E1D               	line	42
 11124                           	
 11125                           i1l2907:
 11126  002C26                     ;setting_hardaware/uart.c: 40: void UART_Write(unsigned char data);setting_hardaware/uar
                                 t.c: 41: {;setting_hardaware/uart.c: 42:     while(!TXSTAbits.TRMT);
 11127                           	goto	i1l54
 11128  002C26  EF15  F016         	
 11129                           i1l55:
 11130  002C2A                     	
 11131                           i1l54:
 11132  002C2A                     	btfss	((c:4012)),c,1	;volatile
 11133  002C2A  A2AC               	goto	i1u295_21
 11134  002C2C  EF1A  F016         	goto	i1u295_20
 11135  002C30  EF1C  F016         i1u295_21:
 11136  002C34                     	goto	i1l54
 11137  002C34  EF15  F016         i1u295_20:
 11138  002C38                     	goto	i1l2909
 11139  002C38  EF1E  F016         	
 11140                           i1l56:
 11141  002C3C                     	line	43
 11142                           	
 11143                           i1l2909:
 11144  002C3C                     ;setting_hardaware/uart.c: 43:     TXREG = data;
 11145                           	movff	(c:i1UART_Write@data),(c:4013)	;volatile
 11146  002C3C  C01D  FFAD         	line	44
 11147                           	
 11148                           i1l57:
 11149  002C40                     	return	;funcret
 11150  002C40  0012               	opt stack 0
 11151                           GLOBAL	__end_ofi1_UART_Write
 11152                           	__end_ofi1_UART_Write:
 11153  002C42                     	signat	i1_UART_Write,89
 11154                           	global	___awmod
 11155                           
 11156 ;; *************** function ___awmod *****************
 11157 ;; Defined at:
 11158 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;  dividend        2   28[COMRAM] int 
 11161 ;;  divisor         2   30[COMRAM] int 
 11162 ;; Auto vars:     Size  Location     Type
 11163 ;;  sign            1   33[COMRAM] unsigned char 
 11164 ;;  counter         1   32[COMRAM] unsigned char 
 11165 ;; Return value:  Size  Location     Type
 11166 ;;                  2   28[COMRAM] int 
 11167 ;; Registers used:
 11168 ;;		wreg, status,2, status,0
 11169 ;; Tracked objects:
 11170 ;;		On entry : 0/0
 11171 ;;		On exit  : 0/0
 11172 ;;		Unchanged: 0/0
 11173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11174 ;;      Params:         4       0       0       0       0       0       0
 11175 ;;      Locals:         2       0       0       0       0       0       0
 11176 ;;      Temps:          0       0       0       0       0       0       0
 11177 ;;      Totals:         6       0       0       0       0       0       0
 11178 ;;Total ram usage:        6 bytes
 11179 ;; Hardware stack levels used:    1
 11180 ;; Hardware stack levels required when called:    2
 11181 ;; This function calls:
 11182 ;;		Nothing
 11183 ;; This function is called by:
 11184 ;;		_MyusartRead
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           psect	text31,class=CODE,space=0,reloc=2,group=1
 11188                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 11189                           	line	7
 11190                           global __ptext31
 11191                           __ptext31:
 11192  002712                     psect	text31
 11193                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 11194                           	line	7
 11195                           	global	__size_of___awmod
 11196                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 11197  0000                     	
 11198                           ___awmod:
 11199  002712                     ;incstack = 0
 11200                           	opt	stack 23
 11201                           	line	12
 11202                           	
 11203                           i1l2781:
 11204  002712                     	movlw	low(0)
 11205  002712  0E00               	movwf	((c:___awmod@sign)),c
 11206  002714  6E22               	line	13
 11207                           	
 11208                           i1l2783:
 11209  002716                     	btfsc	((c:___awmod@dividend+1)),c,7
 11210  002716  BE1E               	goto	i1u272_20
 11211  002718  EF92  F013         	goto	i1u272_21
 11212  00271C  EF90  F013         
 11213                           i1u272_21:
 11214  002720                     	goto	i1l2789
 11215  002720  EF9A  F013         i1u272_20:
 11216  002724                     	line	14
 11217                           	
 11218                           i1l2785:
 11219  002724                     	negf	((c:___awmod@dividend)),c
 11220  002724  6C1D               	comf	((c:___awmod@dividend+1)),c
 11221  002726  1E1E               	btfsc	status,0
 11222  002728  B0D8               	incf	((c:___awmod@dividend+1)),c
 11223  00272A  2A1E               	line	15
 11224                           	
 11225                           i1l2787:
 11226  00272C                     	movlw	low(01h)
 11227  00272C  0E01               	movwf	((c:___awmod@sign)),c
 11228  00272E  6E22               	goto	i1l2789
 11229  002730  EF9A  F013         	line	16
 11230                           	
 11231                           i1l567:
 11232  002734                     	line	17
 11233                           	
 11234                           i1l2789:
 11235  002734                     	btfsc	((c:___awmod@divisor+1)),c,7
 11236  002734  BE20               	goto	i1u273_20
 11237  002736  EFA1  F013         	goto	i1u273_21
 11238  00273A  EF9F  F013         
 11239                           i1u273_21:
 11240  00273E                     	goto	i1l2793
 11241  00273E  EFA7  F013         i1u273_20:
 11242  002742                     	line	18
 11243                           	
 11244                           i1l2791:
 11245  002742                     	negf	((c:___awmod@divisor)),c
 11246  002742  6C1F               	comf	((c:___awmod@divisor+1)),c
 11247  002744  1E20               	btfsc	status,0
 11248  002746  B0D8               	incf	((c:___awmod@divisor+1)),c
 11249  002748  2A20               	goto	i1l2793
 11250  00274A  EFA7  F013         	
 11251                           i1l568:
 11252  00274E                     	line	19
 11253                           	
 11254                           i1l2793:
 11255  00274E                     	movf	((c:___awmod@divisor)),c,w
 11256  00274E  501F               iorwf	((c:___awmod@divisor+1)),c,w
 11257  002750  1020               	btfsc	status,2
 11258  002752  B4D8               	goto	i1u274_21
 11259  002754  EFAE  F013         	goto	i1u274_20
 11260  002758  EFB0  F013         
 11261                           i1u274_21:
 11262  00275C                     	goto	i1l2809
 11263  00275C  EFE0  F013         i1u274_20:
 11264  002760                     	line	20
 11265                           	
 11266                           i1l2795:
 11267  002760                     	movlw	low(01h)
 11268  002760  0E01               	movwf	((c:___awmod@counter)),c
 11269  002762  6E21               	line	21
 11270                           	goto	i1l2799
 11271  002764  EFBA  F013         	
 11272                           i1l571:
 11273  002768                     	line	22
 11274                           	
 11275                           i1l2797:
 11276  002768                     	bcf	status,0
 11277  002768  90D8               	rlcf	((c:___awmod@divisor)),c
 11278  00276A  361F               	rlcf	((c:___awmod@divisor+1)),c
 11279  00276C  3620               	line	23
 11280                           	incf	((c:___awmod@counter)),c
 11281  00276E  2A21               	goto	i1l2799
 11282  002770  EFBA  F013         	line	24
 11283                           	
 11284                           i1l570:
 11285  002774                     	line	21
 11286                           	
 11287                           i1l2799:
 11288  002774                     	
 11289                           	btfss	((c:___awmod@divisor+1)),c,(15)&7
 11290  002774  AE20               	goto	i1u275_21
 11291  002776  EFBF  F013         	goto	i1u275_20
 11292  00277A  EFC1  F013         i1u275_21:
 11293  00277E                     	goto	i1l2797
 11294  00277E  EFB4  F013         i1u275_20:
 11295  002782                     	goto	i1l2801
 11296  002782  EFC5  F013         	
 11297                           i1l572:
 11298  002786                     	goto	i1l2801
 11299  002786  EFC5  F013         	line	25
 11300                           	
 11301                           i1l573:
 11302  00278A                     	line	26
 11303                           	
 11304                           i1l2801:
 11305  00278A                     		movf	((c:___awmod@divisor)),c,w
 11306  00278A  501F               	subwf	((c:___awmod@dividend)),c,w
 11307  00278C  5C1D               	movf	((c:___awmod@divisor+1)),c,w
 11308  00278E  5020               	subwfb	((c:___awmod@dividend+1)),c,w
 11309  002790  581E               	btfss	status,0
 11310  002792  A0D8               	goto	i1u276_21
 11311  002794  EFCE  F013         	goto	i1u276_20
 11312  002798  EFD0  F013         
 11313                           i1u276_21:
 11314  00279C                     	goto	i1l2805
 11315  00279C  EFD6  F013         i1u276_20:
 11316  0027A0                     	line	27
 11317                           	
 11318                           i1l2803:
 11319  0027A0                     	movf	((c:___awmod@divisor)),c,w
 11320  0027A0  501F               	subwf	((c:___awmod@dividend)),c
 11321  0027A2  5E1D               	movf	((c:___awmod@divisor+1)),c,w
 11322  0027A4  5020               	subwfb	((c:___awmod@dividend+1)),c
 11323  0027A6  5A1E               
 11324                           	goto	i1l2805
 11325  0027A8  EFD6  F013         	
 11326                           i1l574:
 11327  0027AC                     	line	28
 11328                           	
 11329                           i1l2805:
 11330  0027AC                     	bcf	status,0
 11331  0027AC  90D8               	rrcf	((c:___awmod@divisor+1)),c
 11332  0027AE  3220               	rrcf	((c:___awmod@divisor)),c
 11333  0027B0  321F               	line	29
 11334                           	
 11335                           i1l2807:
 11336  0027B2                     	decfsz	((c:___awmod@counter)),c
 11337  0027B2  2E21               	
 11338                           	goto	i1l2801
 11339  0027B4  EFC5  F013         	goto	i1l2809
 11340  0027B8  EFE0  F013         	
 11341                           i1l575:
 11342  0027BC                     	goto	i1l2809
 11343  0027BC  EFE0  F013         	line	30
 11344                           	
 11345                           i1l569:
 11346  0027C0                     	line	31
 11347                           	
 11348                           i1l2809:
 11349  0027C0                     	movf	((c:___awmod@sign)),c,w
 11350  0027C0  5022               	btfsc	status,2
 11351  0027C2  B4D8               	goto	i1u277_21
 11352  0027C4  EFE6  F013         	goto	i1u277_20
 11353  0027C8  EFE8  F013         i1u277_21:
 11354  0027CC                     	goto	i1l2813
 11355  0027CC  EFEE  F013         i1u277_20:
 11356  0027D0                     	line	32
 11357                           	
 11358                           i1l2811:
 11359  0027D0                     	negf	((c:___awmod@dividend)),c
 11360  0027D0  6C1D               	comf	((c:___awmod@dividend+1)),c
 11361  0027D2  1E1E               	btfsc	status,0
 11362  0027D4  B0D8               	incf	((c:___awmod@dividend+1)),c
 11363  0027D6  2A1E               	goto	i1l2813
 11364  0027D8  EFEE  F013         	
 11365                           i1l576:
 11366  0027DC                     	line	33
 11367                           	
 11368                           i1l2813:
 11369  0027DC                     	movff	(c:___awmod@dividend),(c:?___awmod)
 11370  0027DC  C01D  F01D         	movff	(c:___awmod@dividend+1),(c:?___awmod+1)
 11371  0027E0  C01E  F01E         	goto	i1l577
 11372  0027E4  EFF4  F013         	
 11373                           i1l2815:
 11374  0027E8                     	line	34
 11375                           	
 11376                           i1l577:
 11377  0027E8                     	return	;funcret
 11378  0027E8  0012               	opt stack 0
 11379                           GLOBAL	__end_of___awmod
 11380                           	__end_of___awmod:
 11381  0027EA                     	signat	___awmod,8314
 11382                           	global	_tc_int
 11383                           
 11384 ;; *************** function _tc_int *****************
 11385 ;; Defined at:
 11386 ;;		line 36 in file "main.c"
 11387 ;; Parameters:    Size  Location     Type
 11388 ;;		None
 11389 ;; Auto vars:     Size  Location     Type
 11390 ;;		None
 11391 ;; Return value:  Size  Location     Type
 11392 ;;                  1    wreg      void 
 11393 ;; Registers used:
 11394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11395 ;; Tracked objects:
 11396 ;;		On entry : 0/0
 11397 ;;		On exit  : 0/0
 11398 ;;		Unchanged: 0/0
 11399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11400 ;;      Params:         0       0       0       0       0       0       0
 11401 ;;      Locals:         0       0       0       0       0       0       0
 11402 ;;      Temps:          8       0       0       0       0       0       0
 11403 ;;      Totals:         8       0       0       0       0       0       0
 11404 ;;Total ram usage:        8 bytes
 11405 ;; Hardware stack levels used:    1
 11406 ;; Hardware stack levels required when called:    1
 11407 ;; This function calls:
 11408 ;;		___aldiv
 11409 ;;		___wmul
 11410 ;;		i2___awdiv
 11411 ;; This function is called by:
 11412 ;;		Interrupt level 2
 11413 ;; This function uses a non-reentrant model
 11414 ;;
 11415                           psect	intcode,class=CODE,space=0,reloc=2
 11416                           global __pintcode
 11417                           __pintcode:
 11418  000008                     psect	intcode
 11419                           	file	"main.c"
 11420                           	line	36
 11421                           	global	__size_of_tc_int
 11422                           	__size_of_tc_int	equ	__end_of_tc_int-_tc_int
 11423  0000                     	
 11424                           _tc_int:
 11425  000008                     ;incstack = 0
 11426                           	opt	stack 23
 11427                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
 11428  000008  8258               	global	int_func
 11429                           	call	int_func,f	;refresh shadow registers
 11430  00000A  ED61  F00A         psect	intcode_body,class=CODE,space=0,reloc=2
 11431                           global __pintcode_body
 11432                           __pintcode_body:
 11433  0014C2                     int_func:
 11434  0014C2                     
 11435                           	pop	; remove dummy address from shadow register refresh
 11436  0014C2  0006               	movff	fsr2l+0,??_tc_int+4
 11437  0014C4  CFD9 F019          	movff	fsr2h+0,??_tc_int+5
 11438  0014C8  CFDA F01A          	movff	prodl+0,??_tc_int+6
 11439  0014CC  CFF3 F01B          	movff	prodh+0,??_tc_int+7
 11440  0014D0  CFF4 F01C          	line	38
 11441                           	
 11442                           i2l3399:
 11443  0014D4                     ;main.c: 38:     if(PIR1bits.TMR1IF){
 11444                           	btfss	((c:3998)),c,0	;volatile
 11445  0014D4  A09E               	goto	i2u339_41
 11446  0014D6  EF6F  F00A         	goto	i2u339_40
 11447  0014DA  EF71  F00A         i2u339_41:
 11448  0014DE                     	goto	i2l211
 11449  0014DE  EF38  F00B         i2u339_40:
 11450  0014E2                     	line	39
 11451                           	
 11452                           i2l3401:
 11453  0014E2                     ;main.c: 39:         if(music_count==tempo[music_choose][music_index]){
 11454                           	movff	(c:_music_choose),(c:___wmul@multiplier)
 11455  0014E2  C042  F001         	movff	(c:_music_choose+1),(c:___wmul@multiplier+1)
 11456  0014E6  C043  F002         	movlw	high(03Ch)
 11457  0014EA  0E00               	movwf	((c:___wmul@multiplicand+1)),c
 11458  0014EC  6E04               	movlw	low(03Ch)
 11459  0014EE  0E3C               	movwf	((c:___wmul@multiplicand)),c
 11460  0014F0  6E03               	call	___wmul	;wreg free
 11461  0014F2  ECC9  F015         	movlw	low((_tempo))
 11462  0014F6  0E00               	movwf	(??_tc_int+0+0)&0ffh,c
 11463  0014F8  6E15               	movlw	high((_tempo))
 11464  0014FA  0E01               	movwf	1+(??_tc_int+0+0)&0ffh,c
 11465  0014FC  6E16               	movf	(0+?___wmul),c,w
 11466  0014FE  5001               	addwf	(??_tc_int+0+0),c
 11467  001500  2615               	movf	(1+?___wmul),c,w
 11468  001502  5002               	addwfc	(??_tc_int+0+1),c
 11469  001504  2216               	bcf	status,0
 11470  001506  90D8               	rlcf	((c:_music_index)),c,w
 11471  001508  3444               	movwf	fsr2l
 11472  00150A  6ED9               	rlcf	((c:_music_index+1)),c,w
 11473  00150C  3445               	movwf	fsr2h
 11474  00150E  6EDA               	movf	(??_tc_int+0+0),c,w
 11475  001510  5015               	addwf	fsr2l
 11476  001512  26D9               	movf	(??_tc_int+0+1),c,w
 11477  001514  5016               	addwfc	fsr2h
 11478  001516  22DA               
 11479                           	movf	((c:_music_count)),c,w
 11480  001518  5046               xorwf	postinc2,w
 11481  00151A  18DE               	bnz	i2u340_41
 11482  00151C  E107               movf	((c:_music_count+1)),c,w
 11483  00151E  5047               xorwf	postinc2,w
 11484  001520  18DE               	btfss	status,2
 11485  001522  A4D8               	goto	i2u340_41
 11486  001524  EF96  F00A         	goto	i2u340_40
 11487  001528  EF98  F00A         
 11488                           i2u340_41:
 11489  00152C                     	goto	i2l3417
 11490  00152C  EF14  F00B         i2u340_40:
 11491  001530                     	line	40
 11492                           	
 11493                           i2l3403:
 11494  001530                     ;main.c: 40:             music_count=0;
 11495                           	movlw	high(0)
 11496  001530  0E00               	movwf	((c:_music_count+1)),c
 11497  001532  6E47               	movlw	low(0)
 11498  001534  0E00               	movwf	((c:_music_count)),c
 11499  001536  6E46               	line	41
 11500                           	
 11501                           i2l3405:
 11502  001538                     ;main.c: 41:             music_index++;
 11503                           	infsnz	((c:_music_index)),c
 11504  001538  4A44               	incf	((c:_music_index+1)),c
 11505  00153A  2A45               	line	42
 11506                           	
 11507                           i2l3407:
 11508  00153C                     ;main.c: 42:             if(tone[music_choose][music_index] == 0)
 11509                           	movff	(c:_music_choose),(c:___wmul@multiplier)
 11510  00153C  C042  F001         	movff	(c:_music_choose+1),(c:___wmul@multiplier+1)
 11511  001540  C043  F002         	movlw	high(03Ch)
 11512  001544  0E00               	movwf	((c:___wmul@multiplicand+1)),c
 11513  001546  6E04               	movlw	low(03Ch)
 11514  001548  0E3C               	movwf	((c:___wmul@multiplicand)),c
 11515  00154A  6E03               	call	___wmul	;wreg free
 11516  00154C  ECC9  F015         	movlw	low((_tone))
 11517  001550  0E78               	movwf	(??_tc_int+0+0)&0ffh,c
 11518  001552  6E15               	movlw	high((_tone))
 11519  001554  0E01               	movwf	1+(??_tc_int+0+0)&0ffh,c
 11520  001556  6E16               	movf	(0+?___wmul),c,w
 11521  001558  5001               	addwf	(??_tc_int+0+0),c
 11522  00155A  2615               	movf	(1+?___wmul),c,w
 11523  00155C  5002               	addwfc	(??_tc_int+0+1),c
 11524  00155E  2216               	bcf	status,0
 11525  001560  90D8               	rlcf	((c:_music_index)),c,w
 11526  001562  3444               	movwf	fsr2l
 11527  001564  6ED9               	rlcf	((c:_music_index+1)),c,w
 11528  001566  3445               	movwf	fsr2h
 11529  001568  6EDA               	movf	(??_tc_int+0+0),c,w
 11530  00156A  5015               	addwf	fsr2l
 11531  00156C  26D9               	movf	(??_tc_int+0+1),c,w
 11532  00156E  5016               	addwfc	fsr2h
 11533  001570  22DA               
 11534                           	movf	postinc2,w
 11535  001572  50DE               iorwf	postinc2,w
 11536  001574  10DE               	btfss	status,2
 11537  001576  A4D8               	goto	i2u341_41
 11538  001578  EFC0  F00A         	goto	i2u341_40
 11539  00157C  EFC2  F00A         
 11540                           i2u341_41:
 11541  001580                     	goto	i2l213
 11542  001580  EFC5  F00A         i2u341_40:
 11543  001584                     	line	43
 11544                           	
 11545                           i2l3409:
 11546  001584                     ;main.c: 43:                 T2CONbits.TMR2ON = 0;
 11547                           	bcf	((c:4042)),c,2	;volatile
 11548  001584  94CA               	goto	i2l3417
 11549  001586  EF14  F00B         	line	44
 11550                           ;main.c: 44:             else{
 11551                           	
 11552                           i2l213:
 11553  00158A                     	line	45
 11554                           ;main.c: 45:                 T2CONbits.TMR2ON = 1;
 11555                           	bsf	((c:4042)),c,2	;volatile
 11556  00158A  84CA               	line	46
 11557                           	
 11558                           i2l3411:
 11559  00158C                     ;main.c: 46:                 PR2 = 62500/tone[music_choose][music_index];
 11560                           	movlw	low(0F424h)
 11561  00158C  0E24               	movwf	((c:___aldiv@dividend)),c
 11562  00158E  6E07               	movlw	high(0F424h)
 11563  001590  0EF4               	movwf	((c:___aldiv@dividend+1)),c
 11564  001592  6E08               	movlw	low highword(0F424h)
 11565  001594  0E00               	movwf	((c:___aldiv@dividend+2)),c
 11566  001596  6E09               	movlw	high highword(0F424h)
 11567  001598  0E00               	movwf	((c:___aldiv@dividend+3)),c
 11568  00159A  6E0A               	movff	(c:_music_choose),(c:___wmul@multiplier)
 11569  00159C  C042  F001         	movff	(c:_music_choose+1),(c:___wmul@multiplier+1)
 11570  0015A0  C043  F002         	movlw	high(03Ch)
 11571  0015A4  0E00               	movwf	((c:___wmul@multiplicand+1)),c
 11572  0015A6  6E04               	movlw	low(03Ch)
 11573  0015A8  0E3C               	movwf	((c:___wmul@multiplicand)),c
 11574  0015AA  6E03               	call	___wmul	;wreg free
 11575  0015AC  ECC9  F015         	movlw	low((_tone))
 11576  0015B0  0E78               	movwf	(??_tc_int+0+0)&0ffh,c
 11577  0015B2  6E15               	movlw	high((_tone))
 11578  0015B4  0E01               	movwf	1+(??_tc_int+0+0)&0ffh,c
 11579  0015B6  6E16               	movf	(0+?___wmul),c,w
 11580  0015B8  5001               	addwf	(??_tc_int+0+0),c
 11581  0015BA  2615               	movf	(1+?___wmul),c,w
 11582  0015BC  5002               	addwfc	(??_tc_int+0+1),c
 11583  0015BE  2216               	bcf	status,0
 11584  0015C0  90D8               	rlcf	((c:_music_index)),c,w
 11585  0015C2  3444               	movwf	fsr2l
 11586  0015C4  6ED9               	rlcf	((c:_music_index+1)),c,w
 11587  0015C6  3445               	movwf	fsr2h
 11588  0015C8  6EDA               	movf	(??_tc_int+0+0),c,w
 11589  0015CA  5015               	addwf	fsr2l
 11590  0015CC  26D9               	movf	(??_tc_int+0+1),c,w
 11591  0015CE  5016               	addwfc	fsr2h
 11592  0015D0  22DA               
 11593                           	movff	postinc2,(c:___aldiv@divisor)
 11594  0015D2  CFDE F00B          	movff	postdec2,(c:___aldiv@divisor+1)
 11595  0015D6  CFDD F00C          	movlw	0
 11596  0015DA  0E00               	btfsc	((c:___aldiv@divisor+1)),c,7
 11597  0015DC  BE0C               	movlw	-1
 11598  0015DE  0EFF               	movwf	((c:___aldiv@divisor+2)),c
 11599  0015E0  6E0D               	movwf	((c:___aldiv@divisor+3)),c
 11600  0015E2  6E0E               	call	___aldiv	;wreg free
 11601  0015E4  EC9E  F010         	movf	(0+?___aldiv),c,w
 11602  0015E8  5007               	movwf	((c:4043)),c	;volatile
 11603  0015EA  6ECB               	line	47
 11604                           	
 11605                           i2l3413:
 11606  0015EC                     ;main.c: 47:                 CCPR2L = PR2*2/4;
 11607                           	movf	((c:4043)),c,w	;volatile
 11608  0015EC  50CB               	mullw	02h
 11609  0015EE  0D02               	movff	prodl,(c:i2___awdiv@dividend)
 11610  0015F0  CFF3 F001          	movff	prodh,(c:i2___awdiv@dividend+1)
 11611  0015F4  CFF4 F002          	movlw	high(04h)
 11612  0015F8  0E00               	movwf	((c:i2___awdiv@divisor+1)),c
 11613  0015FA  6E04               	movlw	low(04h)
 11614  0015FC  0E04               	movwf	((c:i2___awdiv@divisor)),c
 11615  0015FE  6E03               	call	i2___awdiv	;wreg free
 11616  001600  ECA4  F012         	movf	(0+?i2___awdiv),c,w
 11617  001604  5001               	movwf	((c:4027)),c	;volatile
 11618  001606  6EBB               	line	48
 11619                           	
 11620                           i2l3415:
 11621  001608                     ;main.c: 48:                 CCP2CONbits.DC2B = PR2*2%4;
 11622                           	movf	((c:4043)),c,w	;volatile
 11623  001608  50CB               	mullw	02h
 11624  00160A  0D02               	movff	prodl,??_tc_int+0+0
 11625  00160C  CFF3 F015          	movlw	03h
 11626  001610  0E03               	andwf	(??_tc_int+0+0),c
 11627  001612  1615               	swapf	(??_tc_int+0+0),c
 11628  001614  3A15               	movf	((c:4026)),c,w	;volatile
 11629  001616  50BA               	xorwf	(??_tc_int+0+0),c,w
 11630  001618  1815               	andlw	not (((1<<2)-1)<<4)
 11631  00161A  0BCF               	xorwf	(??_tc_int+0+0),c,w
 11632  00161C  1815               	movwf	((c:4026)),c	;volatile
 11633  00161E  6EBA               	goto	i2l3417
 11634  001620  EF14  F00B         	line	49
 11635                           ;main.c: 49:             }
 11636                           	
 11637                           i2l214:
 11638  001624                     	goto	i2l3417
 11639  001624  EF14  F00B         	line	50
 11640                           ;main.c: 50:         }
 11641                           	
 11642                           i2l212:
 11643  001628                     	line	51
 11644                           	
 11645                           i2l3417:
 11646  001628                     ;main.c: 51:         if(music_index == length[music_choose])
 11647                           	bcf	status,0
 11648  001628  90D8               	rlcf	((c:_music_choose)),c,w
 11649  00162A  3442               	movwf	fsr2l
 11650  00162C  6ED9               	rlcf	((c:_music_choose+1)),c,w
 11651  00162E  3443               	movwf	fsr2h
 11652  001630  6EDA               	movlw	low(_length)
 11653  001632  0E54               	addwf	fsr2l
 11654  001634  26D9               	movlw	high(_length)
 11655  001636  0E00               	addwfc	fsr2h
 11656  001638  22DA               	movf	((c:_music_index)),c,w
 11657  00163A  5044               xorwf	postinc2,w
 11658  00163C  18DE               	bnz	i2u342_41
 11659  00163E  E107               movf	((c:_music_index+1)),c,w
 11660  001640  5045               xorwf	postinc2,w
 11661  001642  18DE               	btfss	status,2
 11662  001644  A4D8               	goto	i2u342_41
 11663  001646  EF27  F00B         	goto	i2u342_40
 11664  00164A  EF29  F00B         
 11665                           i2u342_41:
 11666  00164E                     	goto	i2l3421
 11667  00164E  EF2F  F00B         i2u342_40:
 11668  001652                     	line	52
 11669                           	
 11670                           i2l3419:
 11671  001652                     ;main.c: 52:             music_index = 0;
 11672                           	movlw	high(0)
 11673  001652  0E00               	movwf	((c:_music_index+1)),c
 11674  001654  6E45               	movlw	low(0)
 11675  001656  0E00               	movwf	((c:_music_index)),c
 11676  001658  6E44               	goto	i2l3421
 11677  00165A  EF2F  F00B         	
 11678                           i2l215:
 11679  00165E                     	line	53
 11680                           	
 11681                           i2l3421:
 11682  00165E                     ;main.c: 53:         music_count++;
 11683                           	infsnz	((c:_music_count)),c
 11684  00165E  4A46               	incf	((c:_music_count+1)),c
 11685  001660  2A47               	line	54
 11686                           	
 11687                           i2l3423:
 11688  001662                     ;main.c: 54:         TMR1 = 34285;
 11689                           	movlw	high(085EDh)
 11690  001662  0E85               	movwf	((c:4046+1)),c	;volatile
 11691  001664  6ECF               	movlw	low(085EDh)
 11692  001666  0EED               	movwf	((c:4046)),c	;volatile
 11693  001668  6ECE               	line	55
 11694                           	
 11695                           i2l3425:
 11696  00166A                     ;main.c: 55:         PIR1bits.TMR1IF =0;
 11697                           	bcf	((c:3998)),c,0	;volatile
 11698  00166A  909E               	line	56
 11699                           ;main.c: 56:     }
 11700                           	goto	i2l235
 11701  00166C  EF5F  F00C         	line	57
 11702                           ;main.c: 57:     else if(PIR2bits.TMR3IF) {
 11703                           	
 11704                           i2l211:
 11705  001670                     	btfss	((c:4001)),c,1	;volatile
 11706  001670  A2A1               	goto	i2u343_41
 11707  001672  EF3D  F00B         	goto	i2u343_40
 11708  001676  EF3F  F00B         i2u343_41:
 11709  00167A                     	goto	i2l235
 11710  00167A  EF5F  F00C         i2u343_40:
 11711  00167E                     	line	58
 11712                           	
 11713                           i2l3427:
 11714  00167E                     ;main.c: 58:         if(led_mode == 0){
 11715                           	movf	((c:_led_mode)),c,w
 11716  00167E  5036               iorwf	((c:_led_mode+1)),c,w
 11717  001680  1037               	btfss	status,2
 11718  001682  A4D8               	goto	i2u344_41
 11719  001684  EF46  F00B         	goto	i2u344_40
 11720  001688  EF48  F00B         
 11721                           i2u344_41:
 11722  00168C                     	goto	i2l3453
 11723  00168C  EFEE  F00B         i2u344_40:
 11724  001690                     	line	59
 11725                           	
 11726                           i2l3429:
 11727  001690                     ;main.c: 59:             if(led_loop == 0) {
 11728                           	movf	((c:_led_loop)),c,w
 11729  001690  503C               iorwf	((c:_led_loop+1)),c,w
 11730  001692  103D               	btfss	status,2
 11731  001694  A4D8               	goto	i2u345_41
 11732  001696  EF4F  F00B         	goto	i2u345_40
 11733  00169A  EF51  F00B         
 11734                           i2u345_41:
 11735  00169E                     	goto	i2l3447
 11736  00169E  EFE4  F00B         i2u345_40:
 11737  0016A2                     	line	60
 11738                           	
 11739                           i2l3431:
 11740  0016A2                     ;main.c: 60:                 if(led_num == 1){
 11741                           		decf	((c:_led_num)),c,w
 11742  0016A2  0440               iorwf	((c:_led_num+1)),c,w
 11743  0016A4  1041               	btfss	status,2
 11744  0016A6  A4D8               	goto	i2u346_41
 11745  0016A8  EF58  F00B         	goto	i2u346_40
 11746  0016AC  EF5A  F00B         
 11747                           i2u346_41:
 11748  0016B0                     	goto	i2l3435
 11749  0016B0  EF65  F00B         i2u346_40:
 11750  0016B4                     	line	61
 11751                           	
 11752                           i2l3433:
 11753  0016B4                     ;main.c: 61:                     RC2 = !RC2;
 11754                           	btfss	c:(31762/8),(31762)&7	;volatile
 11755  0016B4  A482               	goto	i2u347_41
 11756  0016B6  EF5F  F00B         	goto	i2u347_40
 11757  0016BA  EF62  F00B         i2u347_41:
 11758  0016BE                     	bsf	c:(31762/8),(31762)&7	;volatile
 11759  0016BE  8482               	goto	i2u348_45
 11760  0016C0  EF63  F00B         i2u347_40:
 11761  0016C4                     	bcf	c:(31762/8),(31762)&7	;volatile
 11762  0016C4  9482               i2u348_45:
 11763  0016C6                     	line	62
 11764                           ;main.c: 62:                 }
 11765                           	goto	i2l221
 11766  0016C6  EFDE  F00B         	line	63
 11767                           ;main.c: 63:                 else if(led_num == 2){
 11768                           	
 11769                           i2l220:
 11770  0016CA                     	
 11771                           i2l3435:
 11772  0016CA                     		movlw	2
 11773  0016CA  0E02               	xorwf	((c:_led_num)),c,w
 11774  0016CC  1840               iorwf	((c:_led_num+1)),c,w
 11775  0016CE  1041               	btfss	status,2
 11776  0016D0  A4D8               	goto	i2u349_41
 11777  0016D2  EF6D  F00B         	goto	i2u349_40
 11778  0016D6  EF6F  F00B         
 11779                           i2u349_41:
 11780  0016DA                     	goto	i2l3439
 11781  0016DA  EF83  F00B         i2u349_40:
 11782  0016DE                     	line	64
 11783                           	
 11784                           i2l3437:
 11785  0016DE                     ;main.c: 64:                     RC2 = !RC2;
 11786                           	btfss	c:(31762/8),(31762)&7	;volatile
 11787  0016DE  A482               	goto	i2u350_41
 11788  0016E0  EF74  F00B         	goto	i2u350_40
 11789  0016E4  EF77  F00B         i2u350_41:
 11790  0016E8                     	bsf	c:(31762/8),(31762)&7	;volatile
 11791  0016E8  8482               	goto	i2u351_45
 11792  0016EA  EF78  F00B         i2u350_40:
 11793  0016EE                     	bcf	c:(31762/8),(31762)&7	;volatile
 11794  0016EE  9482               i2u351_45:
 11795  0016F0                     	line	65
 11796                           ;main.c: 65:                     RD5 = !RD5;
 11797                           	btfss	c:(31773/8),(31773)&7	;volatile
 11798  0016F0  AA83               	goto	i2u352_41
 11799  0016F2  EF7D  F00B         	goto	i2u352_40
 11800  0016F6  EF80  F00B         i2u352_41:
 11801  0016FA                     	bsf	c:(31773/8),(31773)&7	;volatile
 11802  0016FA  8A83               	goto	i2u353_45
 11803  0016FC  EF81  F00B         i2u352_40:
 11804  001700                     	bcf	c:(31773/8),(31773)&7	;volatile
 11805  001700  9A83               i2u353_45:
 11806  001702                     	line	66
 11807                           ;main.c: 66:                 }
 11808                           	goto	i2l221
 11809  001702  EFDE  F00B         	line	67
 11810                           ;main.c: 67:                 else if(led_num == 3){
 11811                           	
 11812                           i2l222:
 11813  001706                     	
 11814                           i2l3439:
 11815  001706                     		movlw	3
 11816  001706  0E03               	xorwf	((c:_led_num)),c,w
 11817  001708  1840               iorwf	((c:_led_num+1)),c,w
 11818  00170A  1041               	btfss	status,2
 11819  00170C  A4D8               	goto	i2u354_41
 11820  00170E  EF8B  F00B         	goto	i2u354_40
 11821  001712  EF8D  F00B         
 11822                           i2u354_41:
 11823  001716                     	goto	i2l3443
 11824  001716  EFAA  F00B         i2u354_40:
 11825  00171A                     	line	68
 11826                           	
 11827                           i2l3441:
 11828  00171A                     ;main.c: 68:                     RC2 = !RC2;
 11829                           	btfss	c:(31762/8),(31762)&7	;volatile
 11830  00171A  A482               	goto	i2u355_41
 11831  00171C  EF92  F00B         	goto	i2u355_40
 11832  001720  EF95  F00B         i2u355_41:
 11833  001724                     	bsf	c:(31762/8),(31762)&7	;volatile
 11834  001724  8482               	goto	i2u356_45
 11835  001726  EF96  F00B         i2u355_40:
 11836  00172A                     	bcf	c:(31762/8),(31762)&7	;volatile
 11837  00172A  9482               i2u356_45:
 11838  00172C                     	line	69
 11839                           ;main.c: 69:                     RD5 = !RD5;
 11840                           	btfss	c:(31773/8),(31773)&7	;volatile
 11841  00172C  AA83               	goto	i2u357_41
 11842  00172E  EF9B  F00B         	goto	i2u357_40
 11843  001732  EF9E  F00B         i2u357_41:
 11844  001736                     	bsf	c:(31773/8),(31773)&7	;volatile
 11845  001736  8A83               	goto	i2u358_45
 11846  001738  EF9F  F00B         i2u357_40:
 11847  00173C                     	bcf	c:(31773/8),(31773)&7	;volatile
 11848  00173C  9A83               i2u358_45:
 11849  00173E                     	line	70
 11850                           ;main.c: 70:                     RD6 = !RD6;
 11851                           	btfss	c:(31774/8),(31774)&7	;volatile
 11852  00173E  AC83               	goto	i2u359_41
 11853  001740  EFA4  F00B         	goto	i2u359_40
 11854  001744  EFA7  F00B         i2u359_41:
 11855  001748                     	bsf	c:(31774/8),(31774)&7	;volatile
 11856  001748  8C83               	goto	i2u360_45
 11857  00174A  EFA8  F00B         i2u359_40:
 11858  00174E                     	bcf	c:(31774/8),(31774)&7	;volatile
 11859  00174E  9C83               i2u360_45:
 11860  001750                     	line	71
 11861                           ;main.c: 71:                 }
 11862                           	goto	i2l221
 11863  001750  EFDE  F00B         	line	72
 11864                           ;main.c: 72:                 else if(led_num == 4){
 11865                           	
 11866                           i2l224:
 11867  001754                     	
 11868                           i2l3443:
 11869  001754                     		movlw	4
 11870  001754  0E04               	xorwf	((c:_led_num)),c,w
 11871  001756  1840               iorwf	((c:_led_num+1)),c,w
 11872  001758  1041               	btfss	status,2
 11873  00175A  A4D8               	goto	i2u361_41
 11874  00175C  EFB2  F00B         	goto	i2u361_40
 11875  001760  EFB4  F00B         
 11876                           i2u361_41:
 11877  001764                     	goto	i2l221
 11878  001764  EFDE  F00B         i2u361_40:
 11879  001768                     	line	73
 11880                           	
 11881                           i2l3445:
 11882  001768                     ;main.c: 73:                     RC2 = !RC2;
 11883                           	btfss	c:(31762/8),(31762)&7	;volatile
 11884  001768  A482               	goto	i2u362_41
 11885  00176A  EFB9  F00B         	goto	i2u362_40
 11886  00176E  EFBC  F00B         i2u362_41:
 11887  001772                     	bsf	c:(31762/8),(31762)&7	;volatile
 11888  001772  8482               	goto	i2u363_45
 11889  001774  EFBD  F00B         i2u362_40:
 11890  001778                     	bcf	c:(31762/8),(31762)&7	;volatile
 11891  001778  9482               i2u363_45:
 11892  00177A                     	line	74
 11893                           ;main.c: 74:                     RD5 = !RD5;
 11894                           	btfss	c:(31773/8),(31773)&7	;volatile
 11895  00177A  AA83               	goto	i2u364_41
 11896  00177C  EFC2  F00B         	goto	i2u364_40
 11897  001780  EFC5  F00B         i2u364_41:
 11898  001784                     	bsf	c:(31773/8),(31773)&7	;volatile
 11899  001784  8A83               	goto	i2u365_45
 11900  001786  EFC6  F00B         i2u364_40:
 11901  00178A                     	bcf	c:(31773/8),(31773)&7	;volatile
 11902  00178A  9A83               i2u365_45:
 11903  00178C                     	line	75
 11904                           ;main.c: 75:                     RD6 = !RD6;
 11905                           	btfss	c:(31774/8),(31774)&7	;volatile
 11906  00178C  AC83               	goto	i2u366_41
 11907  00178E  EFCB  F00B         	goto	i2u366_40
 11908  001792  EFCE  F00B         i2u366_41:
 11909  001796                     	bsf	c:(31774/8),(31774)&7	;volatile
 11910  001796  8C83               	goto	i2u367_45
 11911  001798  EFCF  F00B         i2u366_40:
 11912  00179C                     	bcf	c:(31774/8),(31774)&7	;volatile
 11913  00179C  9C83               i2u367_45:
 11914  00179E                     	line	76
 11915                           ;main.c: 76:                     RD7 = !RD7;
 11916                           	btfss	c:(31775/8),(31775)&7	;volatile
 11917  00179E  AE83               	goto	i2u368_41
 11918  0017A0  EFD4  F00B         	goto	i2u368_40
 11919  0017A4  EFD7  F00B         i2u368_41:
 11920  0017A8                     	bsf	c:(31775/8),(31775)&7	;volatile
 11921  0017A8  8E83               	goto	i2u369_45
 11922  0017AA  EFD8  F00B         i2u368_40:
 11923  0017AE                     	bcf	c:(31775/8),(31775)&7	;volatile
 11924  0017AE  9E83               i2u369_45:
 11925  0017B0                     	goto	i2l221
 11926  0017B0  EFDE  F00B         	line	77
 11927                           ;main.c: 77:                 }
 11928                           	
 11929                           i2l226:
 11930  0017B4                     	goto	i2l221
 11931  0017B4  EFDE  F00B         	
 11932                           i2l225:
 11933  0017B8                     	goto	i2l221
 11934  0017B8  EFDE  F00B         	
 11935                           i2l223:
 11936  0017BC                     	
 11937                           i2l221:
 11938  0017BC                     	line	78
 11939                           ;main.c: 78:                 led_loop = led_interval;
 11940                           	movff	(c:_led_interval),(c:_led_loop)
 11941  0017BC  C03E  F03C         	movff	(c:_led_interval+1),(c:_led_loop+1)
 11942  0017C0  C03F  F03D         	goto	i2l3447
 11943  0017C4  EFE4  F00B         	line	79
 11944                           ;main.c: 79:             }
 11945                           	
 11946                           i2l219:
 11947  0017C8                     	line	80
 11948                           	
 11949                           i2l3447:
 11950  0017C8                     ;main.c: 80:             --led_loop;
 11951                           	decf	((c:_led_loop)),c
 11952  0017C8  063C               	btfss	status,0
 11953  0017CA  A0D8               	decf	((c:_led_loop+1)),c
 11954  0017CC  063D               	line	81
 11955                           	
 11956                           i2l3449:
 11957  0017CE                     ;main.c: 81:             PIR2bits.TMR3IF = 0;
 11958                           	bcf	((c:4001)),c,1	;volatile
 11959  0017CE  92A1               	line	82
 11960                           	
 11961                           i2l3451:
 11962  0017D0                     ;main.c: 82:             TMR3 = 34285;
 11963                           	movlw	high(085EDh)
 11964  0017D0  0E85               	movwf	((c:4018+1)),c	;volatile
 11965  0017D2  6EB3               	movlw	low(085EDh)
 11966  0017D4  0EED               	movwf	((c:4018)),c	;volatile
 11967  0017D6  6EB2               	line	83
 11968                           ;main.c: 83:         }
 11969                           	goto	i2l235
 11970  0017D8  EF5F  F00C         	line	84
 11971                           ;main.c: 84:         else if(led_mode){
 11972                           	
 11973                           i2l218:
 11974  0017DC                     	
 11975                           i2l3453:
 11976  0017DC                     	movf	((c:_led_mode)),c,w
 11977  0017DC  5036               iorwf	((c:_led_mode+1)),c,w
 11978  0017DE  1037               	btfsc	status,2
 11979  0017E0  B4D8               	goto	i2u370_41
 11980  0017E2  EFF5  F00B         	goto	i2u370_40
 11981  0017E6  EFF7  F00B         
 11982                           i2u370_41:
 11983  0017EA                     	goto	i2l235
 11984  0017EA  EF5F  F00C         i2u370_40:
 11985  0017EE                     	line	85
 11986                           	
 11987                           i2l3455:
 11988  0017EE                     ;main.c: 85:             if(led_breath == 0)
 11989                           	movf	((c:_led_breath)),c,w
 11990  0017EE  503A               iorwf	((c:_led_breath+1)),c,w
 11991  0017F0  103B               	btfss	status,2
 11992  0017F2  A4D8               	goto	i2u371_41
 11993  0017F4  EFFE  F00B         	goto	i2u371_40
 11994  0017F8  EF00  F00C         
 11995                           i2u371_41:
 11996  0017FC                     	goto	i2l3459
 11997  0017FC  EF06  F00C         i2u371_40:
 11998  001800                     	line	86
 11999                           	
 12000                           i2l3457:
 12001  001800                     ;main.c: 86:                 updown = 0;
 12002                           	movlw	high(0)
 12003  001800  0E00               	movwf	((c:_updown+1)),c
 12004  001802  6E39               	movlw	low(0)
 12005  001804  0E00               	movwf	((c:_updown)),c
 12006  001806  6E38               	goto	i2l3463
 12007  001808  EF1D  F00C         	line	87
 12008                           ;main.c: 87:             else if (led_breath == PR2){
 12009                           	
 12010                           i2l229:
 12011  00180C                     	
 12012                           i2l3459:
 12013  00180C                     	movf	((c:4043)),c,w	;volatile
 12014  00180C  50CB               	movwf	(??_tc_int+0+0)&0ffh,c
 12015  00180E  6E15               	clrf	(??_tc_int+0+0+1)&0ffh,c
 12016  001810  6A16               
 12017                           	movf	((c:_led_breath)),c,w
 12018  001812  503A               xorwf	(??_tc_int+0+0),c,w
 12019  001814  1815               	bnz	i2u372_41
 12020  001816  E107               movf	((c:_led_breath+1)),c,w
 12021  001818  503B               xorwf	(??_tc_int+0+1),c,w
 12022  00181A  1816               	btfss	status,2
 12023  00181C  A4D8               	goto	i2u372_41
 12024  00181E  EF13  F00C         	goto	i2u372_40
 12025  001822  EF15  F00C         
 12026                           i2u372_41:
 12027  001826                     	goto	i2l3463
 12028  001826  EF1D  F00C         i2u372_40:
 12029  00182A                     	line	88
 12030                           	
 12031                           i2l3461:
 12032  00182A                     ;main.c: 88:                 updown = 1;
 12033                           	movlw	high(01h)
 12034  00182A  0E00               	movwf	((c:_updown+1)),c
 12035  00182C  6E39               	movlw	low(01h)
 12036  00182E  0E01               	movwf	((c:_updown)),c
 12037  001830  6E38               	goto	i2l3463
 12038  001832  EF1D  F00C         	line	89
 12039                           ;main.c: 89:             }
 12040                           	
 12041                           i2l231:
 12042  001836                     	goto	i2l3463
 12043  001836  EF1D  F00C         	
 12044                           i2l230:
 12045  00183A                     	line	90
 12046                           	
 12047                           i2l3463:
 12048  00183A                     ;main.c: 90:             if(updown == 0)
 12049                           	movf	((c:_updown)),c,w
 12050  00183A  5038               iorwf	((c:_updown+1)),c,w
 12051  00183C  1039               	btfss	status,2
 12052  00183E  A4D8               	goto	i2u373_41
 12053  001840  EF24  F00C         	goto	i2u373_40
 12054  001844  EF26  F00C         
 12055                           i2u373_41:
 12056  001848                     	goto	i2l3467
 12057  001848  EF2A  F00C         i2u373_40:
 12058  00184C                     	line	91
 12059                           	
 12060                           i2l3465:
 12061  00184C                     ;main.c: 91:                 ++led_breath;
 12062                           	infsnz	((c:_led_breath)),c
 12063  00184C  4A3A               	incf	((c:_led_breath+1)),c
 12064  00184E  2A3B               	goto	i2l3471
 12065  001850  EF3A  F00C         	line	92
 12066                           ;main.c: 92:             else if(updown == 1)
 12067                           	
 12068                           i2l232:
 12069  001854                     	
 12070                           i2l3467:
 12071  001854                     		decf	((c:_updown)),c,w
 12072  001854  0438               iorwf	((c:_updown+1)),c,w
 12073  001856  1039               	btfss	status,2
 12074  001858  A4D8               	goto	i2u374_41
 12075  00185A  EF31  F00C         	goto	i2u374_40
 12076  00185E  EF33  F00C         
 12077                           i2u374_41:
 12078  001862                     	goto	i2l3471
 12079  001862  EF3A  F00C         i2u374_40:
 12080  001866                     	line	93
 12081                           	
 12082                           i2l3469:
 12083  001866                     ;main.c: 93:                 --led_breath;
 12084                           	decf	((c:_led_breath)),c
 12085  001866  063A               	btfss	status,0
 12086  001868  A0D8               	decf	((c:_led_breath+1)),c
 12087  00186A  063B               	goto	i2l3471
 12088  00186C  EF3A  F00C         	
 12089                           i2l234:
 12090  001870                     	goto	i2l3471
 12091  001870  EF3A  F00C         	
 12092                           i2l233:
 12093  001874                     	line	94
 12094                           	
 12095                           i2l3471:
 12096  001874                     ;main.c: 94:             CCPR1L = led_breath*2/4;
 12097                           	bcf	status,0
 12098  001874  90D8               	rlcf	((c:_led_breath)),c,w
 12099  001876  343A               	movwf	((c:i2___awdiv@dividend)),c
 12100  001878  6E01               	rlcf	((c:_led_breath+1)),c,w
 12101  00187A  343B               	movwf	1+((c:i2___awdiv@dividend)),c
 12102  00187C  6E02               	movlw	high(04h)
 12103  00187E  0E00               	movwf	((c:i2___awdiv@divisor+1)),c
 12104  001880  6E04               	movlw	low(04h)
 12105  001882  0E04               	movwf	((c:i2___awdiv@divisor)),c
 12106  001884  6E03               	call	i2___awdiv	;wreg free
 12107  001886  ECA4  F012         	movf	(0+?i2___awdiv),c,w
 12108  00188A  5001               	movwf	((c:4030)),c	;volatile
 12109  00188C  6EBE               	line	95
 12110                           	
 12111                           i2l3473:
 12112  00188E                     ;main.c: 95:             CCP1CONbits.DC1B = led_breath*2%4;
 12113                           	bcf	status,0
 12114  00188E  90D8               	rlcf	((c:_led_breath)),c,w
 12115  001890  343A               	movwf	(??_tc_int+0+0)&0ffh,c
 12116  001892  6E15               	movlw	03h
 12117  001894  0E03               	andwf	(??_tc_int+0+0),c
 12118  001896  1615               	swapf	(??_tc_int+0+0),c
 12119  001898  3A15               	movf	((c:4029)),c,w	;volatile
 12120  00189A  50BD               	xorwf	(??_tc_int+0+0),c,w
 12121  00189C  1815               	andlw	not (((1<<2)-1)<<4)
 12122  00189E  0BCF               	xorwf	(??_tc_int+0+0),c,w
 12123  0018A0  1815               	movwf	((c:4029)),c	;volatile
 12124  0018A2  6EBD               	line	96
 12125                           	
 12126                           i2l3475:
 12127  0018A4                     ;main.c: 96:             PIR2bits.TMR3IF = 0;
 12128                           	bcf	((c:4001)),c,1	;volatile
 12129  0018A4  92A1               	line	97
 12130                           	
 12131                           i2l3477:
 12132  0018A6                     ;main.c: 97:             TMR3 = 1000;
 12133                           	movlw	high(03E8h)
 12134  0018A6  0E03               	movwf	((c:4018+1)),c	;volatile
 12135  0018A8  6EB3               	movlw	low(03E8h)
 12136  0018AA  0EE8               	movwf	((c:4018)),c	;volatile
 12137  0018AC  6EB2               	goto	i2l235
 12138  0018AE  EF5F  F00C         	line	98
 12139                           ;main.c: 98:         }
 12140                           	
 12141                           i2l228:
 12142  0018B2                     	goto	i2l235
 12143  0018B2  EF5F  F00C         	
 12144                           i2l227:
 12145  0018B6                     	goto	i2l235
 12146  0018B6  EF5F  F00C         	line	99
 12147                           ;main.c: 99:     }
 12148                           	
 12149                           i2l217:
 12150  0018BA                     	goto	i2l235
 12151  0018BA  EF5F  F00C         	
 12152                           i2l216:
 12153  0018BE                     	line	100
 12154                           	
 12155                           i2l235:
 12156  0018BE                     	movff	??_tc_int+7,prodh+0
 12157  0018BE  C01C  FFF4         	movff	??_tc_int+6,prodl+0
 12158  0018C2  C01B  FFF3         	movff	??_tc_int+5,fsr2h+0
 12159  0018C6  C01A  FFDA         	movff	??_tc_int+4,fsr2l+0
 12160  0018CA  C019  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
 12161  0018CE  9258               	retfie f
 12162  0018D0  0011               	opt stack 0
 12163                           GLOBAL	__end_of_tc_int
 12164                           	__end_of_tc_int:
 12165  0018D2                     	signat	_tc_int,89
 12166                           	global	i2___awdiv
 12167                           
 12168 ;; *************** function i2___awdiv *****************
 12169 ;; Defined at:
 12170 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 12171 ;; Parameters:    Size  Location     Type
 12172 ;;  dividend        2    0[COMRAM] int 
 12173 ;;  divisor         2    2[COMRAM] int 
 12174 ;; Auto vars:     Size  Location     Type
 12175 ;;  __awdiv         2    6[COMRAM] int 
 12176 ;;  __awdiv         1    5[COMRAM] unsigned char 
 12177 ;;  __awdiv         1    4[COMRAM] unsigned char 
 12178 ;; Return value:  Size  Location     Type
 12179 ;;                  2    0[COMRAM] int 
 12180 ;; Registers used:
 12181 ;;		wreg, status,2, status,0
 12182 ;; Tracked objects:
 12183 ;;		On entry : 0/0
 12184 ;;		On exit  : 0/0
 12185 ;;		Unchanged: 0/0
 12186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12187 ;;      Params:         4       0       0       0       0       0       0
 12188 ;;      Locals:         4       0       0       0       0       0       0
 12189 ;;      Temps:          0       0       0       0       0       0       0
 12190 ;;      Totals:         8       0       0       0       0       0       0
 12191 ;;Total ram usage:        8 bytes
 12192 ;; Hardware stack levels used:    1
 12193 ;; This function calls:
 12194 ;;		Nothing
 12195 ;; This function is called by:
 12196 ;;		_tc_int
 12197 ;; This function uses a non-reentrant model
 12198 ;;
 12199                           psect	text33,class=CODE,space=0,reloc=2,group=0
 12200                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 12201                           	line	7
 12202                           global __ptext33
 12203                           __ptext33:
 12204  002548                     psect	text33
 12205                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 12206                           	line	7
 12207                           	global	__size_ofi2___awdiv
 12208                           	__size_ofi2___awdiv	equ	__end_ofi2___awdiv-i2___awdiv
 12209  0000                     	
 12210                           i2___awdiv:
 12211  002548                     ;incstack = 0
 12212                           	opt	stack 23
 12213                           	line	13
 12214                           	
 12215                           i2l3345:
 12216  002548                     	movlw	low(0)
 12217  002548  0E00               	movwf	((c:i2___awdiv@sign)),c
 12218  00254A  6E06               	line	14
 12219                           	
 12220                           i2l3347:
 12221  00254C                     	btfsc	((c:i2___awdiv@divisor+1)),c,7
 12222  00254C  BE04               	goto	i2u331_40
 12223  00254E  EFAD  F012         	goto	i2u331_41
 12224  002552  EFAB  F012         
 12225                           i2u331_41:
 12226  002556                     	goto	i2l3353
 12227  002556  EFB5  F012         i2u331_40:
 12228  00255A                     	line	15
 12229                           	
 12230                           i2l3349:
 12231  00255A                     	negf	((c:i2___awdiv@divisor)),c
 12232  00255A  6C03               	comf	((c:i2___awdiv@divisor+1)),c
 12233  00255C  1E04               	btfsc	status,0
 12234  00255E  B0D8               	incf	((c:i2___awdiv@divisor+1)),c
 12235  002560  2A04               	line	16
 12236                           	
 12237                           i2l3351:
 12238  002562                     	movlw	low(01h)
 12239  002562  0E01               	movwf	((c:i2___awdiv@sign)),c
 12240  002564  6E06               	goto	i2l3353
 12241  002566  EFB5  F012         	line	17
 12242                           	
 12243                           i2l554:
 12244  00256A                     	line	18
 12245                           	
 12246                           i2l3353:
 12247  00256A                     	btfsc	((c:i2___awdiv@dividend+1)),c,7
 12248  00256A  BE02               	goto	i2u332_40
 12249  00256C  EFBC  F012         	goto	i2u332_41
 12250  002570  EFBA  F012         
 12251                           i2u332_41:
 12252  002574                     	goto	i2l3359
 12253  002574  EFC4  F012         i2u332_40:
 12254  002578                     	line	19
 12255                           	
 12256                           i2l3355:
 12257  002578                     	negf	((c:i2___awdiv@dividend)),c
 12258  002578  6C01               	comf	((c:i2___awdiv@dividend+1)),c
 12259  00257A  1E02               	btfsc	status,0
 12260  00257C  B0D8               	incf	((c:i2___awdiv@dividend+1)),c
 12261  00257E  2A02               	line	20
 12262                           	
 12263                           i2l3357:
 12264  002580                     	movlw	(01h)&0ffh
 12265  002580  0E01               	xorwf	((c:i2___awdiv@sign)),c
 12266  002582  1A06               	goto	i2l3359
 12267  002584  EFC4  F012         	line	21
 12268                           	
 12269                           i2l555:
 12270  002588                     	line	22
 12271                           	
 12272                           i2l3359:
 12273  002588                     	movlw	high(0)
 12274  002588  0E00               	movwf	((c:i2___awdiv@quotient+1)),c
 12275  00258A  6E08               	movlw	low(0)
 12276  00258C  0E00               	movwf	((c:i2___awdiv@quotient)),c
 12277  00258E  6E07               	line	23
 12278                           	
 12279                           i2l3361:
 12280  002590                     	movf	((c:i2___awdiv@divisor)),c,w
 12281  002590  5003               iorwf	((c:i2___awdiv@divisor+1)),c,w
 12282  002592  1004               	btfsc	status,2
 12283  002594  B4D8               	goto	i2u333_41
 12284  002596  EFCF  F012         	goto	i2u333_40
 12285  00259A  EFD1  F012         
 12286                           i2u333_41:
 12287  00259E                     	goto	i2l3381
 12288  00259E  EF05  F013         i2u333_40:
 12289  0025A2                     	line	24
 12290                           	
 12291                           i2l3363:
 12292  0025A2                     	movlw	low(01h)
 12293  0025A2  0E01               	movwf	((c:i2___awdiv@counter)),c
 12294  0025A4  6E05               	line	25
 12295                           	goto	i2l3367
 12296  0025A6  EFDB  F012         	
 12297                           i2l558:
 12298  0025AA                     	line	26
 12299                           	
 12300                           i2l3365:
 12301  0025AA                     	bcf	status,0
 12302  0025AA  90D8               	rlcf	((c:i2___awdiv@divisor)),c
 12303  0025AC  3603               	rlcf	((c:i2___awdiv@divisor+1)),c
 12304  0025AE  3604               	line	27
 12305                           	incf	((c:i2___awdiv@counter)),c
 12306  0025B0  2A05               	goto	i2l3367
 12307  0025B2  EFDB  F012         	line	28
 12308                           	
 12309                           i2l557:
 12310  0025B6                     	line	25
 12311                           	
 12312                           i2l3367:
 12313  0025B6                     	
 12314                           	btfss	((c:i2___awdiv@divisor+1)),c,(15)&7
 12315  0025B6  AE04               	goto	i2u334_41
 12316  0025B8  EFE0  F012         	goto	i2u334_40
 12317  0025BC  EFE2  F012         i2u334_41:
 12318  0025C0                     	goto	i2l3365
 12319  0025C0  EFD5  F012         i2u334_40:
 12320  0025C4                     	goto	i2l3369
 12321  0025C4  EFE6  F012         	
 12322                           i2l559:
 12323  0025C8                     	goto	i2l3369
 12324  0025C8  EFE6  F012         	line	29
 12325                           	
 12326                           i2l560:
 12327  0025CC                     	line	30
 12328                           	
 12329                           i2l3369:
 12330  0025CC                     	bcf	status,0
 12331  0025CC  90D8               	rlcf	((c:i2___awdiv@quotient)),c
 12332  0025CE  3607               	rlcf	((c:i2___awdiv@quotient+1)),c
 12333  0025D0  3608               	line	31
 12334                           	
 12335                           i2l3371:
 12336  0025D2                     		movf	((c:i2___awdiv@divisor)),c,w
 12337  0025D2  5003               	subwf	((c:i2___awdiv@dividend)),c,w
 12338  0025D4  5C01               	movf	((c:i2___awdiv@divisor+1)),c,w
 12339  0025D6  5004               	subwfb	((c:i2___awdiv@dividend+1)),c,w
 12340  0025D8  5802               	btfss	status,0
 12341  0025DA  A0D8               	goto	i2u335_41
 12342  0025DC  EFF2  F012         	goto	i2u335_40
 12343  0025E0  EFF4  F012         
 12344                           i2u335_41:
 12345  0025E4                     	goto	i2l3377
 12346  0025E4  EFFB  F012         i2u335_40:
 12347  0025E8                     	line	32
 12348                           	
 12349                           i2l3373:
 12350  0025E8                     	movf	((c:i2___awdiv@divisor)),c,w
 12351  0025E8  5003               	subwf	((c:i2___awdiv@dividend)),c
 12352  0025EA  5E01               	movf	((c:i2___awdiv@divisor+1)),c,w
 12353  0025EC  5004               	subwfb	((c:i2___awdiv@dividend+1)),c
 12354  0025EE  5A02               
 12355                           	line	33
 12356                           	
 12357                           i2l3375:
 12358  0025F0                     	bsf	(0+(0/8)+(c:i2___awdiv@quotient)),c,(0)&7
 12359  0025F0  8007               	goto	i2l3377
 12360  0025F2  EFFB  F012         	line	34
 12361                           	
 12362                           i2l561:
 12363  0025F6                     	line	35
 12364                           	
 12365                           i2l3377:
 12366  0025F6                     	bcf	status,0
 12367  0025F6  90D8               	rrcf	((c:i2___awdiv@divisor+1)),c
 12368  0025F8  3204               	rrcf	((c:i2___awdiv@divisor)),c
 12369  0025FA  3203               	line	36
 12370                           	
 12371                           i2l3379:
 12372  0025FC                     	decfsz	((c:i2___awdiv@counter)),c
 12373  0025FC  2E05               	
 12374                           	goto	i2l3369
 12375  0025FE  EFE6  F012         	goto	i2l3381
 12376  002602  EF05  F013         	
 12377                           i2l562:
 12378  002606                     	goto	i2l3381
 12379  002606  EF05  F013         	line	37
 12380                           	
 12381                           i2l556:
 12382  00260A                     	line	38
 12383                           	
 12384                           i2l3381:
 12385  00260A                     	movf	((c:i2___awdiv@sign)),c,w
 12386  00260A  5006               	btfsc	status,2
 12387  00260C  B4D8               	goto	i2u336_41
 12388  00260E  EF0B  F013         	goto	i2u336_40
 12389  002612  EF0D  F013         i2u336_41:
 12390  002616                     	goto	i2l3385
 12391  002616  EF13  F013         i2u336_40:
 12392  00261A                     	line	39
 12393                           	
 12394                           i2l3383:
 12395  00261A                     	negf	((c:i2___awdiv@quotient)),c
 12396  00261A  6C07               	comf	((c:i2___awdiv@quotient+1)),c
 12397  00261C  1E08               	btfsc	status,0
 12398  00261E  B0D8               	incf	((c:i2___awdiv@quotient+1)),c
 12399  002620  2A08               	goto	i2l3385
 12400  002622  EF13  F013         	
 12401                           i2l563:
 12402  002626                     	line	40
 12403                           	
 12404                           i2l3385:
 12405  002626                     	movff	(c:i2___awdiv@quotient),(c:?i2___awdiv)
 12406  002626  C007  F001         	movff	(c:i2___awdiv@quotient+1),(c:?i2___awdiv+1)
 12407  00262A  C008  F002         	goto	i2l564
 12408  00262E  EF19  F013         	
 12409                           i2l3387:
 12410  002632                     	line	41
 12411                           	
 12412                           i2l564:
 12413  002632                     	return	;funcret
 12414  002632  0012               	opt stack 0
 12415                           GLOBAL	__end_ofi2___awdiv
 12416                           	__end_ofi2___awdiv:
 12417  002634                     	signat	i2___awdiv,90
 12418                           	global	___wmul
 12419                           
 12420 ;; *************** function ___wmul *****************
 12421 ;; Defined at:
 12422 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 12423 ;; Parameters:    Size  Location     Type
 12424 ;;  multiplier      2    0[COMRAM] unsigned int 
 12425 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;  product         2    4[COMRAM] unsigned int 
 12428 ;; Return value:  Size  Location     Type
 12429 ;;                  2    0[COMRAM] unsigned int 
 12430 ;; Registers used:
 12431 ;;		wreg, status,2, status,0, prodl, prodh
 12432 ;; Tracked objects:
 12433 ;;		On entry : 0/0
 12434 ;;		On exit  : 0/0
 12435 ;;		Unchanged: 0/0
 12436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12437 ;;      Params:         4       0       0       0       0       0       0
 12438 ;;      Locals:         2       0       0       0       0       0       0
 12439 ;;      Temps:          0       0       0       0       0       0       0
 12440 ;;      Totals:         6       0       0       0       0       0       0
 12441 ;;Total ram usage:        6 bytes
 12442 ;; Hardware stack levels used:    1
 12443 ;; This function calls:
 12444 ;;		Nothing
 12445 ;; This function is called by:
 12446 ;;		_tc_int
 12447 ;; This function uses a non-reentrant model
 12448 ;;
 12449                           psect	text34,class=CODE,space=0,reloc=2,group=1
 12450                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 12451                           	line	15
 12452                           global __ptext34
 12453                           __ptext34:
 12454  002B92                     psect	text34
 12455                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
 12456                           	line	15
 12457                           	global	__size_of___wmul
 12458                           	__size_of___wmul	equ	__end_of___wmul-___wmul
 12459  0000                     	
 12460                           ___wmul:
 12461  002B92                     ;incstack = 0
 12462                           	opt	stack 23
 12463                           	line	37
 12464                           	
 12465                           i2l3295:
 12466  002B92                     	movf	((c:___wmul@multiplier)),c,w
 12467  002B92  5001               	mulwf	((c:___wmul@multiplicand)),c
 12468  002B94  0203               	movff	prodl,(c:___wmul@product)
 12469  002B96  CFF3 F005          	movff	prodh,(c:___wmul@product+1)
 12470  002B9A  CFF4 F006          	line	38
 12471                           	movf	((c:___wmul@multiplier)),c,w
 12472  002B9E  5001               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
 12473  002BA0  0204               	movf	(prodl),c,w
 12474  002BA2  50F3               	addwf	((c:___wmul@product+1)),c
 12475  002BA4  2606               
 12476                           	line	39
 12477                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
 12478  002BA6  5002               	mulwf	((c:___wmul@multiplicand)),c
 12479  002BA8  0203               	movf	(prodl),c,w
 12480  002BAA  50F3               	addwf	((c:___wmul@product+1)),c
 12481  002BAC  2606               
 12482                           	line	52
 12483                           	
 12484                           i2l3297:
 12485  002BAE                     	movff	(c:___wmul@product),(c:?___wmul)
 12486  002BAE  C005  F001         	movff	(c:___wmul@product+1),(c:?___wmul+1)
 12487  002BB2  C006  F002         	goto	i2l333
 12488  002BB6  EFDD  F015         	
 12489                           i2l3299:
 12490  002BBA                     	line	53
 12491                           	
 12492                           i2l333:
 12493  002BBA                     	return	;funcret
 12494  002BBA  0012               	opt stack 0
 12495                           GLOBAL	__end_of___wmul
 12496                           	__end_of___wmul:
 12497  002BBC                     	signat	___wmul,8314
 12498                           	global	___aldiv
 12499                           
 12500 ;; *************** function ___aldiv *****************
 12501 ;; Defined at:
 12502 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
 12503 ;; Parameters:    Size  Location     Type
 12504 ;;  dividend        4    6[COMRAM] long 
 12505 ;;  divisor         4   10[COMRAM] long 
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;  quotient        4   16[COMRAM] long 
 12508 ;;  sign            1   15[COMRAM] unsigned char 
 12509 ;;  counter         1   14[COMRAM] unsigned char 
 12510 ;; Return value:  Size  Location     Type
 12511 ;;                  4    6[COMRAM] long 
 12512 ;; Registers used:
 12513 ;;		wreg, status,2, status,0
 12514 ;; Tracked objects:
 12515 ;;		On entry : 0/0
 12516 ;;		On exit  : 0/0
 12517 ;;		Unchanged: 0/0
 12518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12519 ;;      Params:         8       0       0       0       0       0       0
 12520 ;;      Locals:         6       0       0       0       0       0       0
 12521 ;;      Temps:          0       0       0       0       0       0       0
 12522 ;;      Totals:        14       0       0       0       0       0       0
 12523 ;;Total ram usage:       14 bytes
 12524 ;; Hardware stack levels used:    1
 12525 ;; This function calls:
 12526 ;;		Nothing
 12527 ;; This function is called by:
 12528 ;;		_tc_int
 12529 ;; This function uses a non-reentrant model
 12530 ;;
 12531                           psect	text35,class=CODE,space=0,reloc=2,group=1
 12532                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
 12533                           	line	7
 12534                           global __ptext35
 12535                           __ptext35:
 12536  00213C                     psect	text35
 12537                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
 12538                           	line	7
 12539                           	global	__size_of___aldiv
 12540                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
 12541  0000                     	
 12542                           ___aldiv:
 12543  00213C                     ;incstack = 0
 12544                           	opt	stack 23
 12545                           	line	13
 12546                           	
 12547                           i2l3301:
 12548  00213C                     	movlw	low(0)
 12549  00213C  0E00               	movwf	((c:___aldiv@sign)),c
 12550  00213E  6E10               	line	14
 12551                           	
 12552                           i2l3303:
 12553  002140                     	btfsc	((c:___aldiv@divisor+3)),c,7
 12554  002140  BE0E               	goto	i2u325_40
 12555  002142  EFA7  F010         	goto	i2u325_41
 12556  002146  EFA5  F010         
 12557                           i2u325_41:
 12558  00214A                     	goto	i2l3309
 12559  00214A  EFB3  F010         i2u325_40:
 12560  00214E                     	line	15
 12561                           	
 12562                           i2l3305:
 12563  00214E                     	comf	((c:___aldiv@divisor+3)),c
 12564  00214E  1E0E               	comf	((c:___aldiv@divisor+2)),c
 12565  002150  1E0D               	comf	((c:___aldiv@divisor+1)),c
 12566  002152  1E0C               	negf	((c:___aldiv@divisor)),c
 12567  002154  6C0B               	movlw	0
 12568  002156  0E00               	addwfc	((c:___aldiv@divisor+1)),c
 12569  002158  220C               	addwfc	((c:___aldiv@divisor+2)),c
 12570  00215A  220D               	addwfc	((c:___aldiv@divisor+3)),c
 12571  00215C  220E               	line	16
 12572                           	
 12573                           i2l3307:
 12574  00215E                     	movlw	low(01h)
 12575  00215E  0E01               	movwf	((c:___aldiv@sign)),c
 12576  002160  6E10               	goto	i2l3309
 12577  002162  EFB3  F010         	line	17
 12578                           	
 12579                           i2l402:
 12580  002166                     	line	18
 12581                           	
 12582                           i2l3309:
 12583  002166                     	btfsc	((c:___aldiv@dividend+3)),c,7
 12584  002166  BE0A               	goto	i2u326_40
 12585  002168  EFBA  F010         	goto	i2u326_41
 12586  00216C  EFB8  F010         
 12587                           i2u326_41:
 12588  002170                     	goto	i2l3315
 12589  002170  EFC6  F010         i2u326_40:
 12590  002174                     	line	19
 12591                           	
 12592                           i2l3311:
 12593  002174                     	comf	((c:___aldiv@dividend+3)),c
 12594  002174  1E0A               	comf	((c:___aldiv@dividend+2)),c
 12595  002176  1E09               	comf	((c:___aldiv@dividend+1)),c
 12596  002178  1E08               	negf	((c:___aldiv@dividend)),c
 12597  00217A  6C07               	movlw	0
 12598  00217C  0E00               	addwfc	((c:___aldiv@dividend+1)),c
 12599  00217E  2208               	addwfc	((c:___aldiv@dividend+2)),c
 12600  002180  2209               	addwfc	((c:___aldiv@dividend+3)),c
 12601  002182  220A               	line	20
 12602                           	
 12603                           i2l3313:
 12604  002184                     	movlw	(01h)&0ffh
 12605  002184  0E01               	xorwf	((c:___aldiv@sign)),c
 12606  002186  1A10               	goto	i2l3315
 12607  002188  EFC6  F010         	line	21
 12608                           	
 12609                           i2l403:
 12610  00218C                     	line	22
 12611                           	
 12612                           i2l3315:
 12613  00218C                     	movlw	low(0)
 12614  00218C  0E00               	movwf	((c:___aldiv@quotient)),c
 12615  00218E  6E11               	movlw	high(0)
 12616  002190  0E00               	movwf	((c:___aldiv@quotient+1)),c
 12617  002192  6E12               	movlw	low highword(0)
 12618  002194  0E00               	movwf	((c:___aldiv@quotient+2)),c
 12619  002196  6E13               	movlw	high highword(0)
 12620  002198  0E00               	movwf	((c:___aldiv@quotient+3)),c
 12621  00219A  6E14               	line	23
 12622                           	
 12623                           i2l3317:
 12624  00219C                     	movf	((c:___aldiv@divisor)),c,w
 12625  00219C  500B               iorwf	((c:___aldiv@divisor+1)),c,w
 12626  00219E  100C               iorwf	((c:___aldiv@divisor+2)),c,w
 12627  0021A0  100D               iorwf	((c:___aldiv@divisor+3)),c,w
 12628  0021A2  100E               	btfsc	status,2
 12629  0021A4  B4D8               	goto	i2u327_41
 12630  0021A6  EFD7  F010         	goto	i2u327_40
 12631  0021AA  EFD9  F010         
 12632                           i2u327_41:
 12633  0021AE                     	goto	i2l3337
 12634  0021AE  EF1B  F011         i2u327_40:
 12635  0021B2                     	line	24
 12636                           	
 12637                           i2l3319:
 12638  0021B2                     	movlw	low(01h)
 12639  0021B2  0E01               	movwf	((c:___aldiv@counter)),c
 12640  0021B4  6E0F               	line	25
 12641                           	goto	i2l3323
 12642  0021B6  EFE5  F010         	
 12643                           i2l406:
 12644  0021BA                     	line	26
 12645                           	
 12646                           i2l3321:
 12647  0021BA                     	bcf	status,0
 12648  0021BA  90D8               	rlcf	((c:___aldiv@divisor)),c
 12649  0021BC  360B               	rlcf	((c:___aldiv@divisor+1)),c
 12650  0021BE  360C               	rlcf	((c:___aldiv@divisor+2)),c
 12651  0021C0  360D               	rlcf	((c:___aldiv@divisor+3)),c
 12652  0021C2  360E               	line	27
 12653                           	incf	((c:___aldiv@counter)),c
 12654  0021C4  2A0F               	goto	i2l3323
 12655  0021C6  EFE5  F010         	line	28
 12656                           	
 12657                           i2l405:
 12658  0021CA                     	line	25
 12659                           	
 12660                           i2l3323:
 12661  0021CA                     	
 12662                           	btfss	((c:___aldiv@divisor+3)),c,(31)&7
 12663  0021CA  AE0E               	goto	i2u328_41
 12664  0021CC  EFEA  F010         	goto	i2u328_40
 12665  0021D0  EFEC  F010         i2u328_41:
 12666  0021D4                     	goto	i2l3321
 12667  0021D4  EFDD  F010         i2u328_40:
 12668  0021D8                     	goto	i2l3325
 12669  0021D8  EFF0  F010         	
 12670                           i2l407:
 12671  0021DC                     	goto	i2l3325
 12672  0021DC  EFF0  F010         	line	29
 12673                           	
 12674                           i2l408:
 12675  0021E0                     	line	30
 12676                           	
 12677                           i2l3325:
 12678  0021E0                     	bcf	status,0
 12679  0021E0  90D8               	rlcf	((c:___aldiv@quotient)),c
 12680  0021E2  3611               	rlcf	((c:___aldiv@quotient+1)),c
 12681  0021E4  3612               	rlcf	((c:___aldiv@quotient+2)),c
 12682  0021E6  3613               	rlcf	((c:___aldiv@quotient+3)),c
 12683  0021E8  3614               	line	31
 12684                           	
 12685                           i2l3327:
 12686  0021EA                     		movf	((c:___aldiv@divisor)),c,w
 12687  0021EA  500B               	subwf	((c:___aldiv@dividend)),c,w
 12688  0021EC  5C07               	movf	((c:___aldiv@divisor+1)),c,w
 12689  0021EE  500C               	subwfb	((c:___aldiv@dividend+1)),c,w
 12690  0021F0  5808               	movf	((c:___aldiv@divisor+2)),c,w
 12691  0021F2  500D               	subwfb	((c:___aldiv@dividend+2)),c,w
 12692  0021F4  5809               	movf	((c:___aldiv@divisor+3)),c,w
 12693  0021F6  500E               	subwfb	((c:___aldiv@dividend+3)),c,w
 12694  0021F8  580A               	btfss	status,0
 12695  0021FA  A0D8               	goto	i2u329_41
 12696  0021FC  EF02  F011         	goto	i2u329_40
 12697  002200  EF04  F011         
 12698                           i2u329_41:
 12699  002204                     	goto	i2l3333
 12700  002204  EF0F  F011         i2u329_40:
 12701  002208                     	line	32
 12702                           	
 12703                           i2l3329:
 12704  002208                     	movf	((c:___aldiv@divisor)),c,w
 12705  002208  500B               	subwf	((c:___aldiv@dividend)),c
 12706  00220A  5E07               	movf	((c:___aldiv@divisor+1)),c,w
 12707  00220C  500C               	subwfb	((c:___aldiv@dividend+1)),c
 12708  00220E  5A08               	movf	((c:___aldiv@divisor+2)),c,w
 12709  002210  500D               	subwfb	((c:___aldiv@dividend+2)),c
 12710  002212  5A09               	movf	((c:___aldiv@divisor+3)),c,w
 12711  002214  500E               	subwfb	((c:___aldiv@dividend+3)),c
 12712  002216  5A0A               	line	33
 12713                           	
 12714                           i2l3331:
 12715  002218                     	bsf	(0+(0/8)+(c:___aldiv@quotient)),c,(0)&7
 12716  002218  8011               	goto	i2l3333
 12717  00221A  EF0F  F011         	line	34
 12718                           	
 12719                           i2l409:
 12720  00221E                     	line	35
 12721                           	
 12722                           i2l3333:
 12723  00221E                     	bcf	status,0
 12724  00221E  90D8               	rrcf	((c:___aldiv@divisor+3)),c
 12725  002220  320E               	rrcf	((c:___aldiv@divisor+2)),c
 12726  002222  320D               	rrcf	((c:___aldiv@divisor+1)),c
 12727  002224  320C               	rrcf	((c:___aldiv@divisor)),c
 12728  002226  320B               	line	36
 12729                           	
 12730                           i2l3335:
 12731  002228                     	decfsz	((c:___aldiv@counter)),c
 12732  002228  2E0F               	
 12733                           	goto	i2l3325
 12734  00222A  EFF0  F010         	goto	i2l3337
 12735  00222E  EF1B  F011         	
 12736                           i2l410:
 12737  002232                     	goto	i2l3337
 12738  002232  EF1B  F011         	line	37
 12739                           	
 12740                           i2l404:
 12741  002236                     	line	38
 12742                           	
 12743                           i2l3337:
 12744  002236                     	movf	((c:___aldiv@sign)),c,w
 12745  002236  5010               	btfsc	status,2
 12746  002238  B4D8               	goto	i2u330_41
 12747  00223A  EF21  F011         	goto	i2u330_40
 12748  00223E  EF23  F011         i2u330_41:
 12749  002242                     	goto	i2l3341
 12750  002242  EF2D  F011         i2u330_40:
 12751  002246                     	line	39
 12752                           	
 12753                           i2l3339:
 12754  002246                     	comf	((c:___aldiv@quotient+3)),c
 12755  002246  1E14               	comf	((c:___aldiv@quotient+2)),c
 12756  002248  1E13               	comf	((c:___aldiv@quotient+1)),c
 12757  00224A  1E12               	negf	((c:___aldiv@quotient)),c
 12758  00224C  6C11               	movlw	0
 12759  00224E  0E00               	addwfc	((c:___aldiv@quotient+1)),c
 12760  002250  2212               	addwfc	((c:___aldiv@quotient+2)),c
 12761  002252  2213               	addwfc	((c:___aldiv@quotient+3)),c
 12762  002254  2214               	goto	i2l3341
 12763  002256  EF2D  F011         	
 12764                           i2l411:
 12765  00225A                     	line	40
 12766                           	
 12767                           i2l3341:
 12768  00225A                     	movff	(c:___aldiv@quotient),(c:?___aldiv)
 12769  00225A  C011  F007         	movff	(c:___aldiv@quotient+1),(c:?___aldiv+1)
 12770  00225E  C012  F008         	movff	(c:___aldiv@quotient+2),(c:?___aldiv+2)
 12771  002262  C013  F009         	movff	(c:___aldiv@quotient+3),(c:?___aldiv+3)
 12772  002266  C014  F00A         	goto	i2l412
 12773  00226A  EF37  F011         	
 12774                           i2l3343:
 12775  00226E                     	line	41
 12776                           	
 12777                           i2l412:
 12778  00226E                     	return	;funcret
 12779  00226E  0012               	opt stack 0
 12780                           GLOBAL	__end_of___aldiv
 12781                           	__end_of___aldiv:
 12782  002270                     	signat	___aldiv,8316
 12783                           psect	smallconst
 12784                           	db 0	; dummy byte at the end
 12785  00063B  00                 	global	__smallconst
 12786                           	global	__mediumconst
 12787                           	GLOBAL	__activetblptr
 12788                           __activetblptr	EQU	1
 12789  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
 12790                           	PSECT	rparam,class=COMRAM,space=1,noexec
 12791                           	GLOBAL	__Lrparam
 12792                           	FNCONF	rparam,??,?
 12793                           	GLOBAL	___rparam_used
 12794                           	___rparam_used EQU 1
 12795  0000                     	GLOBAL	___param_bank
 12796                           	___param_bank EQU 0
 12797  0000                     GLOBAL	__Lparam, __Hparam
 12798                           GLOBAL	__Lrparam, __Hrparam
 12799                           __Lparam	EQU	__Lrparam
 12800  0000                     __Hparam	EQU	__Hrparam
 12801  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
 12802                           	global	btemp
 12803                           btemp:
 12804  000058                     	ds	1
 12805  000058                     	global	int$flags
 12806                           	int$flags	set btemp
 12807  0000                     	global	wtemp8
 12808                           	wtemp8 set btemp+1
 12809  0000                     	global	ttemp5
 12810                           	ttemp5 set btemp+1
 12811  0000                     	global	ttemp6
 12812                           	ttemp6 set btemp+4
 12813  0000                     	global	ttemp7
 12814                           	ttemp7 set btemp+8
 12815  0000                     	end


Data Sizes:
    Strings     58
    Constant    0
    Data        244
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     53      87
    BANK0           128     51      63
    BANK1           256      0     240
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(COMRAM[10]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(COMRAM[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(COMRAM[10]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(COMRAM[10]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(COMRAM[10]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_30(CODE[2]), STR_28(CODE[2]), STR_26(CODE[6]), STR_24(CODE[7]), 
		 -> STR_22(CODE[6]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> mystring(COMRAM[10]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(COMRAM[10]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[6]), STR_1(CODE[7]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _strcmp->_GetString
    _Stopmusic->_ClearBuffer
    _Playmusic->_ClearBuffer
    _Mode2->___xxtofl
    ___xxtofl->_ADC_Read
    ___fltol->___xxtofl
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    ___flmul->___xxtofl
    _strstr->_strncmp
    _UART_Write_Text->_UART_Write

Critical Paths under _Lo_ISR in COMRAM

    _MyusartRead->___awmod

Critical Paths under _tc_int in COMRAM

    _tc_int->___aldiv
    ___aldiv->___wmul

Critical Paths under _main in BANK0

    _main->_Mode2
    _Mode3->_strstr
    _Mode2->___fltol
    ___fltol->___flsub
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flmul->___xxtofl
    _Mode1->_strstr

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _tc_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _tc_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   32233
                        _ClearBuffer
                          _GetString
                              _Mode1
                              _Mode2
                              _Mode3
                          _Playmusic
                  _SYSTEM_Initialize
                          _Stopmusic
                             _strcmp
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               7     3      4     872
                                             41 COMRAM     7     3      4
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (1) _Stopmusic                                            0     0      0      68
                        _ClearBuffer
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Playmusic                                            0     0      0      68
                        _ClearBuffer
 ---------------------------------------------------------------------------------
 (1) _Mode3                                                0     0      0    4743
                        _ClearBuffer
                          _GetString
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _Mode2                                                7     7      0   16732
                                             44 BANK0      7     7      0
                           _ADC_Read
                        _ClearBuffer
                          _GetString
                    _UART_Write_Text
                            ___awdiv
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                             _strstr
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                             45 COMRAM     8     4      4
                                              0 BANK0      6     6      0
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             34 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3827
                                             26 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3442
                                              6 BANK0     20    12      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2513
                                              6 BANK0     25    17      8
                           _ADC_Read (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     652
                                             39 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             6     4      2      99
                                             39 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Mode1                                                0     0      0    5007
                        _ClearBuffer
                          _GetString
                    _UART_Write_Text
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               6     2      4    4675
                                              0 BANK0      6     2      4
                          _GetString (ARG)
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                             13     7      6     595
                                             39 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     220
                                             39 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               5     1      4     304
                                             39 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      6     4      2     264
                                             40 COMRAM     6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetString                                            2     0      2       0
                                             39 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      68
                                             39 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Lo_ISR                                               5     5      0     470
                                             34 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (5) _MyusartRead                                          0     0      0     470
                            ___awmod
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (6) i1_UART_Write                                         1     1      0      22
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                             28 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _tc_int                                               8     8      0    1471
                                             20 COMRAM     8     8      0
                            ___aldiv
                             ___wmul
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (8) i2___awdiv                                            8     4      4     404
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___aldiv                                             14     6      8     452
                                              6 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _GetString
   _Mode1
     _ClearBuffer
     _GetString
     _UART_Write_Text
       _UART_Write
     _strstr
       _GetString (ARG)
       _strchr (ARG)
       _strlen (ARG)
       _strncmp (ARG)
   _Mode2
     _ADC_Read
     _ClearBuffer
     _GetString
     _UART_Write_Text
       _UART_Write
     ___awdiv
     ___fladd
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___flmul
       _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___flsub
       ___fladd
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___fltol
       ___fladd (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___flsub (ARG)
         ___fladd
           ___xxtofl (ARG)
             _ADC_Read (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___xxtofl
       _ADC_Read (ARG)
     _strstr
       _GetString (ARG)
       _strchr (ARG)
       _strlen (ARG)
       _strncmp (ARG)
   _Mode3
     _ClearBuffer
     _GetString
     _strstr
       _GetString (ARG)
       _strchr (ARG)
       _strlen (ARG)
       _strncmp (ARG)
   _Playmusic
     _ClearBuffer
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _Stopmusic
     _ClearBuffer
   _strcmp
     _GetString (ARG)
   _strstr
     _GetString (ARG)
     _strchr (ARG)
     _strlen (ARG)
     _strncmp (ARG)

 _Lo_ISR (ROOT)
   _MyusartRead
     ___awmod
     i1_UART_Write

 _tc_int (ROOT)
   ___aldiv
     ___wmul (ARG)
   ___wmul
   i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      F0       6       93.8%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     33      3F       4       49.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     35      57       1       69.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     186      14        0.0%
DATA                 0      0     186      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Dec 22 16:54:55 2018

                            l15 2C6E                              l18 2C86                              l51 2C04  
                            l60 2C7C                              l70 2942                              l54 2C0C  
                            l71 294A                              l55 2C0C                              l63 29DC  
                            l56 2C1E                              l64 29B8                              l57 2C22  
                            l65 2A08                              l66 2A08                              l91 2C94  
                            l69 290E                              l88 2C8E                    ___awdiv@sign 002D  
                            bsr 000FE0             ___wmul@multiplicand 0003                     __CFG_BORV$3 000000  
                  __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000         __end_of_CCP1_Initialize 2C96  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                             l111 2B5C  
                           l112 2B5C                             l113 2B6E                             l114 2B90  
                           l300 20DC                             l108 2C58                             l301 20E8  
                           l302 2132                             l303 213A                             l311 2BE2  
                           l240 0D34                             l304 2136                             l320 1E98  
                           l241 0D2C                             l305 213A                             l321 1DF2  
                           l250 0F78                             l242 0C84                             l330 1EA4  
                           l322 1E94                             l251 0F70                             l243 0D28  
                           l323 1E24                             l260 0ED0                             l252 0DC0  
                           l244 0CD2                             l308 29AA                             l324 1E90  
                           l316 1D58                             l253 0F6C                             l261 0F5C  
                           l245 0D24                             l325 1E56                             l317 1D8E  
                           l270 0FDE                             l262 0F14                             l254 0E04  
                           l246 0D20                             l238 0BF4                             l318 1E9C  
                           l326 1E8C                             l271 1024                             l255 0F68  
                           l263 0F58                             l247 0D30                             l239 0C3A  
                           l327 1E88                             l319 1DC0                             l272 0FFC  
                           l264 0F54                             l256 0E48                             l248 0D38  
                           l280 192C                             l328 1EA0                             l273 1020  
                           l265 0F74                             l257 0F64                             l249 0D7C  
                           l281 1936                             l329 1EA4                             l274 101C  
                           l266 0F7C                             l258 0E8C                             l290 1B6A  
                           l282 19FE                             l275 104C                             l267 1044  
                           l259 0F60                             l291 1B66                             l283 1A70  
                           l276 1048                             l268 0FC2                             l292 1B6E  
                           l284 1A6C                             l277 1050                             l269 1024  
                           l285 1A9E                             l630 1FFA                             l286 1ADA  
                           l631 1F6E                             l287 1AD6                             l295 202C  
                           l560 24E0                             l640 1FE6                             l632 1F52  
                           l288 1B62                             l296 2082                             l561 250A  
                           l633 1F56                             l289 1B52                             l297 20E0  
                           l562 251A                             l554 247E                             l634 1F6A  
                           l298 20D8                             l563 253A                             l555 249C  
                           l635 1FC2                             l299 20D4                             l564 2546  
                           l556 251E                             l900 0BAC                             l636 1F96  
                           l557 24CA                             l637 1FAA                             l629 1ED8  
                           l558 24BE                             l638 1F9A                             l559 24DC  
                           l903 2B02                             l639 1FBE                             l850 069C  
                           l851 0692                             l940 1074                             l860 0812  
                           l852 06B0                             l941 10AE                             l861 086E  
                           l853 06CE                             l950 1150                             l942 10A8  
                           l870 0BC0                             l862 0858                             l854 06E8  
                           l951 14C0                             l943 10C2                             l871 0908  
                           l863 0816                             l855 0726                             l960 1412  
                           l952 133E                             l944 10E2                             l880 0A56  
                           l872 08DC                             l864 0830                             l856 071C  
                           l961 140E                             l953 1310                             l945 111C  
                           l881 0A00                             l873 08E4                             l865 0838  
                           l857 073A                             l849 065E                             l962 1440  
                           l954 132A                             l946 1116                             l890 0AB2  
                           l882 0A1E                             l874 08F8                             l866 084C  
                           l858 07A2                             l963 14A8                             l955 1350  
                           l947 112C                             l891 0B28                             l875 0A6C  
                           l883 0A34                             l867 086E                             l859 0762  
                           l964 1472                             l956 13B2                             l948 1168  
                           l892 0B24                             l884 0A3C                             l876 09AE  
                           l868 090C                             l965 14A4                             l957 1398  
                           l893 0B20                             l885 0A52                             l877 09AA  
                           l869 08A4                             l966 149A                             l958 13B2  
                           l894 0B78                             l886 0A68                             l878 09BE  
                           l990 1C0C                             l959 13AE                             l887 0AB6  
                           l879 09FC                             l991 1D4E                             l896 0B4C  
                           l888 0A9C                             l992 1C24                             l897 0B74  
                           l889 0AB6                             l993 1C14                             l898 0B8C  
                           l994 1C56                             l899 0B92                             l995 1C72  
                           l996 1C5A                             l988 1BCA                             l997 1CA4  
                           l989 1BDE                             l998 1CB8                             l999 1CA8  
                  __CFG_CPB$OFF 000000                             _RC2 007C12                             _RD5 007C1D  
                           _RD6 007C1E                             _RD7 007C1F                             _PR2 000FCB  
                  __CFG_CPD$OFF 000000                             _str 00B3                    ___awmod@sign 0022  
                           wreg 000FE8                    __CFG_IESO$ON 000000                    ___flmul@aexp 0093  
                  ___flmul@bexp 0098                    ___flmul@sign 0092                    ___flmul@temp 009D  
                  ___flmul@prod 0099                    __CFG_LVP$OFF 000000                    ___fltol@exp1 00AB  
                  __CFG_WDT$OFF 000000                            l1001 1CDA                            l1002 1CDA  
                          l1010 283E                            l1003 1CEE                            l1011 2842  
                          l1004 1D3A                            l1012 2876                            l1021 2704  
                          l1022 26CC                            l1031 2A0A                            l1023 2660  
                          l1007 27FA                            l1032 2A34                            l1040 2AB6  
                          l1024 269E                            l1008 27EE                            l1033 2A60  
                          l1025 2710                            l1034 2A54                            l1043 22AA  
                          l1027 26FC                            l1044 236A                            l1028 2700  
                          l1037 2A76                            l1045 22C0                            l1301 2C88  
                          l1038 2A6E                            l1046 22AE                            l1039 2A96  
                          l1311 2BF6                            l1303 2BE4                            l1048 2332  
                          l1049 2336                            l1321 2C00                            l1313 2BF8  
                          l1305 2BEE                            l1331 2C4A                            l1323 2C02  
                          l1315 2BFA                            l1307 2BF2                            l2301 2C1E  
                          l1325 2C42                            l1317 2BFC                            l1309 2BF4  
                          l1327 2C44                            l1319 2BFE                            l4001 0CB2  
                          l1329 2C48                            l4011 0CC2                            l4003 0CBA  
                          l4101 0ED0                            l4021 0D00                            l4013 0CC4  
                          l4005 0CBC                            l1701 2C62                            l4103 0EFE  
                          l4111 0F14                            l4031 0D10                            l4023 0D08  
                          l4015 0CC6                            l4007 0CBE                            l3231 2952  
                          l1703 2C6A                            l4121 0FAA                            l4113 0F42  
                          l4105 0F06                            l4033 0D12                            l4025 0D0A  
                          l4017 0CCE                            l4009 0CC0                            l4041 0D38  
                          l4201 1B52                            l3241 296A                            l3233 2956  
                          l4131 0FF2                            l4123 0FBC                            l4115 0F4A  
                          l4107 0F08                            l4043 0D66                            l4051 0D7C  
                          l4035 0D14                            l4027 0D0C                            l4019 0CD2  
                          l4203 1B5A                            l4211 2002                            l3251 2976  
                          l3243 296C                            l3235 295E                            l3227 294C  
                          l1299 2C7E                            l4141 104C                            l4133 0FFC  
                          l4125 0FC2                            l4117 0F4C                            l4109 0F10  
                          l4053 0DAA                            l4061 0DC0                            l4045 0D6E  
                          l4037 0D16                            l4029 0D0E                            l4205 1B6A  
                          l4221 2014                            l4213 2006                            l3261 298C  
                          l3253 2978                            l3245 296E                            l3237 2966  
                          l3229 2950                            l2551 29AC                            l4135 1010  
                          l4127 0FD6                            l4063 0DEE                            l4071 0E04  
                          l4055 0DB2                            l4119 0F7C                            l4047 0D70  
                          l4039 0D18                            l3511 065E                            l4151 18EE  
                          l4143 18D2                            l4231 205A                            l4223 2016  
                          l4215 200E                            l4207 1FFC                            l3263 2994  
                          l3255 297A                            l3247 2970                            l3239 2968  
                          l3271 2BC0                            l2561 28EA                            l2553 29B8  
                          l4137 102C                            l4129 0FDE                            l4073 0E32  
                          l4081 0E48                            l4065 0DF6                            l4057 0DB4  
                          l4049 0D78                            l3601 084C                            l3513 066E  
                          l3521 069C                            l3505 063C                            l4161 1900  
                          l4153 18F6                            l4145 18D6                            l4241 20B0  
                          l4233 205E                            l4225 201A                            l4217 2010  
                          l4209 2000                            l3265 299E                            l3257 297C  
                          l3249 2972                            l3281 2BDE                            l3273 2BC2  
                          l2563 290A                            l2571 2942                            l2547 2C70  
                          l2299 2C08                            l2555 29D4                            l4139 103C  
                          l4083 0E76                            l4091 0E8C                            l4075 0E3A  
                          l4067 0DF8                            l4059 0DBC                            l3611 08A4  
                          l3603 0856                            l3531 06D4                            l3523 06B0  
                          l3515 067E                            l3507 064A                            l4171 1936  
                          l4163 1902                            l4155 18FA                            l4147 18DE  
                          l4251 2116                            l4243 20B4                            l4235 2076  
                          l4227 201C                            l4219 2012                            l3267 29A6  
                          l3259 2984                            l3275 2BC4                            l3291 2842  
                          l3283 27EA                            l2565 290E                            l2549 2C7C  
                          l2557 29DC                            l4093 0EBA                            l4085 0E7E  
                          l4077 0E3C                            l4069 0E00                            l2573 2B4C  
                          l2741 246E                            l3701 0BA6                            l3621 08E4  
                          l3613 08B4                            l3605 087C                            l3541 071C  
                          l3533 06E2                            l3525 06B6                            l3517 0692  
                          l3509 0658                            l2821 1ED4                            l4181 1A70  
                          l4173 1990                            l4165 1916                            l4157 18FC  
                          l4149 18EA                            l4253 211A                            l4245 20CC  
                          l4237 207E                            l4229 202C                            l3277 2BCC  
                          l3269 2BBC                            l3293 2876                            l3285 27EE  
                          l4261 1D86                            l2567 291E                            l2559 28E2  
                          l3711 2A76                            l4095 0EC2                            l4087 0E80  
                          l4079 0E44                            l2575 2B6E                            l2751 249C  
                          l2743 2476                            l3703 0BAC                            l3631 0932  
                          l3623 08F2                            l3615 08C2                            l3607 088C  
                          l3551 075A                            l3543 071E                            l3535 06E8  
                          l3527 06C8                            l3519 0694                            l2831 1F18  
                          l2823 1ED8                            l4191 1ADA                            l4183 1A8A  
                          l4175 19A2                            l4167 1918                            l4159 18FE  
                          l4255 212A                            l4247 20E0                            l4239 2082  
                          l3279 2BD4                            l3287 27FA                            l4271 1DF2  
                          l4263 1D8E                            l2569 2922                            l3713 2A96  
                          l3721 22A6                            l4097 0EC4                            l4089 0E88  
                          l2577 2B84                            l2761 24E0                            l2753 24A4  
                          l2745 247E                            l2737 245C                            l3801 111C  
                          l3705 0BC0                            l3641 09D4                            l3633 0988  
                          l3625 08F8                            l3617 08D0                            l3609 08A0  
                          l3561 0772                            l3553 0762                            l3537 06F8  
                          l3545 0726                            l3529 06CE                            l2841 1F60  
                          l2833 1F26                            l2825 1F02                            l2817 1EA8  
                          l4193 1AF4                            l4185 1A9E                            l4177 19FE  
                          l4169 192C                            l4249 20E8                            l1697 2C5A  
                          l3289 2822                            l4281 1E80                            l4273 1E1C  
                          l4265 1DB8                            l4257 1D50                            l3715 2AB6  
                          l3707 2A62                            l3731 2306                            l3723 22AE  
                          l4099 0ECC                            l2579 2B90                            l2771 2510  
                          l2763 24E6                            l2755 24B6                            l2747 248C  
                          l2739 2460                            l3811 1174                            l3803 113C  
                          l3651 0A18                            l3643 09E4                            l3635 098A  
                          l3627 0902                            l3619 08DC                            l3571 0786  
                          l3563 0776                            l3555 0766                            l3547 073A  
                          l3539 0708                            l2851 1FAA                            l2835 1F3A  
                          l2843 1F6E                            l2827 1F04                            l2819 1EC0  
                          l4195 1B0C                            l4187 1AC4                            l4179 1A10  
                          l1699 2C5E                            l4275 1E24                            l4267 1DC0  
                          l4259 1D58                            l3741 2A30                            l3709 2A6E  
                          l3733 2336                            l3725 22C0                            l3717 2270  
                          l2765 24FC                            l2757 24BE                            l2773 251E  
                          l2749 2494                            l3821 11C4                            l3813 117E  
                          l3805 1150                            l3661 0A4C                            l3653 0A1E  
                          l3645 09F8                            l3637 099A                            l3629 090C  
                          l3581 079A                            l3573 078A                            l3565 077A  
                          l3557 076A                            l3549 074C                            l3901 2ACA  
                          l2845 1F7E                            l2853 1FC2                            l2837 1F4E  
                          l2829 1F14                            l4197 1B3A                            l4189 1ACC  
                          l4277 1E4E                            l4269 1DEA                            l3743 2A34  
                          l3735 236A                            l3727 22D8                            l3719 229A  
                          l3751 2648                            l2775 252E                            l2767 2504  
                          l2759 24CA                            l3831 1206                            l3823 11D0  
                          l3815 1194                            l3807 1164                            l3671 0A94  
                          l3655 0A2C                            l3647 0A00                            l3663 0A56  
                          l3639 09AE                            l3591 080A                            l3575 078E  
                          l3567 077E                            l3559 076E                            l3583 07A2  
                          l3903 2B02                            l2855 1FD2                            l2847 1F92  
                          l2839 1F56                            l3911 1BDE                            l4199 1B4C  
                          l4279 1E56                            l3745 2A54                            l3737 2A0A  
                          l3729 22F4                            l3753 2660                            l3761 26CC  
                          l2777 253A                            l2769 250A                            l3841 1268  
                          l3833 1216                            l3825 11DE                            l3817 11A0  
                          l3809 1168                            l3681 0B1A                            l3673 0AAA  
                          l3657 0A34                            l3649 0A0A                            l3665 0A6C  
                          l3593 0824                            l3585 07A6                            l3577 0792  
                          l3569 0782                            l2857 1FE6                            l2849 1F9A  
                          l3921 1C24                            l3913 1BF4                            l3905 1B74  
                          l3747 2A60                            l3739 2A24                            l3763 26E0  
                          l3755 268E                            l2779 2546                            l3851 1310  
                          l3843 1284                            l3835 1230                            l3827 11EA  
                          l3819 11B8                            l3771 1060                            l3691 0B78  
                          l3675 0AC6                            l3683 0B28                            l3667 0A70  
                          l3659 0A3C                            l3595 0830                            l3587 07DE  
                          l3579 0796                            l2859 1FFA                            l3931 1CB8  
                          l3923 1C5A                            l3915 1C08                            l3907 1B86  
                          l3757 269A                            l3765 2704                            l3749 2634  
                          l3861 1354                            l3853 131A                            l3845 12AE  
                          l3837 1240                            l3829 11FA                            l3781 10A8  
                          l3773 106E                            l3693 0B86                            l3685 0B38  
                          l3677 0AD2                            l3669 0A7E                            l3597 0838  
                          l3589 07FA                            l3941 1D16                            l3933 1CC6  
                          l3925 1C5C                            l3917 1C0C                            l3909 1B94  
                          l3767 2710                            l3759 269E                            l3951 0BC2  
                          l3871 13CE                            l3863 1362                            l3855 1328  
                          l3847 12E4                            l3839 125C                            l3791 10DC  
                          l3783 10AE                            l3775 1074                            l3695 0B8C  
                          l3687 0B4C                            l3679 0AE0                            l3599 0846  
                          l3943 1D26                            l3935 1CE8                            l3927 1C68  
                          l3919 1C14                            l3961 0BE0                            l3953 0BC6  
                          l3881 1440                            l3873 13DC                            l3865 1390  
                          l3857 133E                            l3849 12F2                            l3793 10E2  
                          l3785 10C2                            l3777 1084                            l3769 1052  
                          l3697 0B92                            l3689 0B6C                            l3945 1D34  
                          l3937 1CEE                            l3929 1CA8                            l3971 0BF4  
                          l3963 0BE2                            l3955 0BCE                            l3891 149A  
                          l3883 145A                            l3875 1406                            l3867 13A6  
                          l3859 1350                            l3795 10F2                            l3787 10C8  
                          l3779 1094                            l3699 0B98                            l3947 1D3A  
                          l3939 1CF2                            l3981 0C36                            l3973 0C22  
                          l3965 0BE4                            l3957 0BDA                            l3885 1476  
                          l3893 14A8                            l3869 13C2                            l3877 1412  
                          l3797 1102                            l3789 10CE                            l3949 1D4E  
                          l3991 0C74                            l3975 0C2A                            l3983 0C3A  
                          l3967 0BE6                            l3959 0BDC                            l3895 14AC  
                          l3887 1486                            l3879 142C                            l3799 1116  
                          l3993 0C76                            l3985 0C68                            l3977 0C2C  
                          l3969 0BE8                            l3897 14C0                            l3889 1494  
                          _ADFM 007E07                            l3995 0C78                            l3987 0C70  
                          l3979 0C2E                            l3899 2AB8                            l3997 0C80  
                          l3989 0C72                            l3999 0C84                            STR_1 0601  
                          STR_2 0627                            STR_3 0613                            STR_4 0629  
                          STR_5 062B                            STR_6 0627                            STR_7 0613  
                          STR_8 0629                            STR_9 062B                            _CREN 007D5C  
                          u2400 2906                            u4000 08F2                            u2401 2902  
                          u4001 08EE                            u2410 293E                            u4010 0932  
                          u2411 293A                            u4011 092E                            u2420 2B6A  
                          u4100 0A94                            u4020 099A                            u2421 2B66  
                          u4101 0A90                            u4021 0996                            u4110 0AAA  
                          u4030 09D4                            u3230 2822                            u4111 0AA6  
                          u4031 09D0                            u3231 281E                            u4200 2A92  
                          u4120 0AC6                            u4040 09E4                            u3240 283A  
                          u4201 2A8E                            u4121 0AC2                            u4041 09E0  
                          u3241 2836                            u4210 229A                            u4130 0AE0  
                          u4050 0A18                            u4211 2296                            u4131 0ADC  
                          u4051 0A14                            u4220 22D8                            u4300 26E0  
                          u2700 24FC                            u4140 0B1A                            u4060 0A2C  
                          u4221 22D4                            u4301 26DC                            u2701 24F8  
                          u4141 0B16                            u4061 0A28                            u1910 2C1A  
                          u2390 2A04                            u4230 22F4                            u4310 26F8  
                          u2710 252E                            u4150 0B38                            u4070 0A4C  
                          u1911 2C16                            u2391 2A00                            u4231 22F0  
                          u4311 26F4                            u2711 252A                            u4151 0B34  
                          u4071 0A48                            u4240 2306                            u4400 12CE  
                          u4320 106E                            u4160 0B48                            u4080 0A64  
                          u2800 1F26                            u4241 2302                            u4321 106A  
                          u4161 0B44                            u4081 0A60                            u2801 1F22  
                          u4250 232E                            u4410 1328                            u4330 1084  
                          u4170 0B6C                            u4090 0A7E                            u2810 1F3A  
                          u4251 232A                            u4411 1324                            u4331 1080  
                          u4171 0B68                            u4091 0A7A                            u2811 1F36  
                          u4260 2A24                            u2660 246E                            u4500 1494  
                          u4420 134C                            u4340 1094                            u4180 0B86  
                          u2820 1F7E                            u4261 2A20                            u2661 246A  
                          u4501 1490                            u4421 1348                            u4405 12C4  
                          u4341 1090                            u4181 0B82                            u2821 1F7A  
                          u4270 2A50                            u2670 248C                            u4430 1362  
                          u4350 10DC                            u4190 0BA6                            u2830 1FBA  
                          u4510 1B86                            u4271 2A4C                            u2671 2488  
                          u4431 135E                            u4351 10D8                            u4191 0BA2  
                          u2831 1FB6                            u4511 1B82                            u4280 2648  
                          u2680 24B6                            u4440 1390                            u4360 10F2  
                          u2840 1FD2                            u4600 1D34                            u4520 1B94  
                          u4281 2644                            u2681 24B2                            u4441 138C  
                          u4361 10EE                            u2841 1FCE                            u4601 1D30  
                          u4521 1B90                            u4290 268E                            u4610 0C22  
                          u2690 24D8                            u4450 13A6                            u4370 1102  
                          u3810 0658                            u4530 1BF4                            u4291 268A  
                          u4611 0C1E                            u2691 24D4                            u4451 13A2  
                          u4371 10FE                            u3811 0654                            u4531 1BF0  
                          u4700 0EBA                            u4620 0C68                            u4460 13C2  
                          u4380 113C                            u3900 07DE                            u3820 066E  
                          u2780 1EC0                            u4540 1C52                            u4701 0EB6  
                          u4621 0C64                            u4461 13BE                            u4381 1138  
                          u3901 07DA                            u3821 066A                            u2781 1EBC  
                          u4541 1C4E                            u4710 0EFE                            u4630 0CB2  
                          u4470 13DC                            u4390 114C                            u3910 07F6  
                          u3830 067E                            u2790 1EF8                            u4550 1CA0  
                          u4711 0EFA                            u4631 0CAE                            u4471 13D8  
                          u4391 1148                            u3911 07F0                            u3831 067A  
                          u4551 1C9C                            u4720 0F42                            u4640 0D00  
                          u4480 142C                            u3920 07F8                            u3840 06C8  
                          u4560 1CC6                            u4800 1A10                            u4721 0F3E  
                          u4641 0CFC                            u4481 1428                            u3841 06C4  
                          u4561 1CC2                            u4801 1A0C                            u4730 0FAA  
                          u4650 0D66                            u4490 145A                            u3930 0824  
                          u3850 06E2                            u4570 1CD6                            u4810 1A8A  
                          u4731 0FA6                            u4651 0D62                            u4491 1456  
                          u3931 0820                            u3851 06DE                            u2795 1EEE  
                          u4571 1CD2                            u4811 1A86                            u4740 0FBC  
                          u4660 0DAA                            u3940 0846                            u3860 06F8  
                          u4580 1CE8                            u4820 1AC4                            u4900 1DEA  
                          _RCIF 007CF5                            u4741 0FB8                            u4661 0DA6  
                          u3941 0842                            u3861 06F4                            u4581 1CE4  
                          u4821 1AC0                            u4901 1DE6                            i1l54 2C2A  
                          u4750 0FD6                            u4670 0DEE                            u3950 086A  
                          u3870 0708                            u4590 1D26                            u4830 1B3A  
                          u4910 1E1C                            i1l55 2C2A                            u4751 0FD2  
                          u4671 0DEA                            u3951 0866                            u3871 0704  
                          u4591 1D22                            u4831 1B36                            u4911 1E18  
                          i1l56 2C3C                            i1l80 0054                            u4760 0FF2  
                          u4680 0E32                            u3960 087C                            u3880 074C  
                          u4840 1B4C                            u4920 1E4E                            i1l57 2C40  
                          i1l81 0060                            u4761 0FEE                            u4681 0E2E  
                          u3961 0878                            u3881 0748                            u4841 1B48  
                          u4921 1E4A                            i1l74 2B4A                            u4770 1010  
                          u4690 0E76                            u3970 088C                            u3890 075A  
                          u4850 205A                            u4930 1E80                            u4771 100C  
                          u4691 0E72                            u3971 0888                            u3891 0756  
                          u4851 2056                            u4931 1E7C                            u3980 08C2  
                          u4780 1916                            u4860 20B0                            u3981 08BE  
                          u4781 1912                            u4861 20AC                            u3990 08D0  
                          u4790 19A2                            u4870 2116                            i1l79 005C  
                          u3991 08CC                            u4791 199E                            u4871 2112  
                          u4880 1D86                            u4881 1D82                            u4890 1DB8  
                          u4891 1DB4                            _TMR1 000FCE                            _TMR3 000FB2  
                  __CFG_WDTPS$1 000000                            _main 1D50                            fsr2h 000FDA  
                          _tone 0178                            indf2 000FDF                            fsr1l 000FE1  
                          fsr2l 000FD9                            btemp 0058                __end_of_ADC_Read 2B92  
                          prodh 000FF4                            prodl 000FF3                            start 0078  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000000         __end_of_UART_Write_Text 2A0A  
              ?_UART_Initialize 0001  __size_of_OSCILLATOR_Initialize 000A   __end_of_OSCILLATOR_Initialize 2C88  
                 ___fltol@sign1 00AA                 __end_of___aldiv 2270                 __end_of___fladd 0BC2  
                         ?_main 0001                 __end_of___awdiv 2548                           STR_10 062D  
                         STR_11 062F                           STR_12 0631                           STR_20 0621  
                         STR_13 0633                           STR_21 061B                           STR_22 061B  
                         STR_30 0639                           STR_14 0637                           STR_15 060F  
                         STR_23 0608                           STR_24 0608                           STR_16 0637  
                         STR_17 0627                           STR_25 0615                           STR_18 0613  
                         STR_26 0615                           STR_19 0637                           STR_27 0635  
                         STR_28 0635                 __end_of___awmod 27EA                           STR_29 0639  
               __end_of___flmul 14C2                 __end_of___flsub 2B04                 __end_of___fltol 1FFC  
               ___awdiv@divisor 002A                           i2l211 1670                           i2l220 16CA  
                         i2l212 1628                           i2l221 17BC                           i2l213 158A  
                         i2l230 183A                           i2l222 1706                           i2l214 1624  
                         i2l231 1836                           i2l223 17BC                           i2l215 165E  
                         i2l216 18BE                           i2l232 1854                           i2l224 1754  
                         i2l217 18BA                           i2l233 1874                           i2l225 17B8  
                         i2l410 2232                           i2l402 2166                           i2l234 1870  
                         i2l218 17DC                           i2l226 17B4                           i1l570 2774  
                         i2l411 225A                           i2l403 218C                           i2l227 18B6  
                         i2l219 17C8                           i2l235 18BE                           i1l571 2768  
                         i2l412 226E                           i2l404 2236                           i2l228 18B2  
                         i1l572 2786                           i2l405 21CA                           i2l333 2BBA  
                         i2l229 180C                           i1l573 278A                           i2l406 21BA  
                         i1l574 27AC                           i2l407 21DC                           i1l575 27BC  
                         i1l567 2734                           i2l408 21E0                           i1l576 27DC  
                         i1l568 274E                           i2l409 221E                           i1l577 27E8  
                         i1l569 27C0                           i2l560 25CC                           i2l561 25F6  
                         i2l562 2606                           i2l554 256A                           i2l563 2626  
                         i2l555 2588                           i2l564 2632                           i2l556 260A  
                         i2l557 25B6                           i2l558 25AA                           i2l559 25C8  
               ___awdiv@counter 002C                           _RCREG 000FAE                           _SPBRG 000FAF  
                         _TRISA 000F92                           _TXREG 000FAD                   __CFG_PWRT$OFF 000000  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000  
                 __CFG_WRT3$OFF 000000                           _Mode1 0BC2                           _Mode2 18D2  
                         _Mode3 1FFC                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000  
                   ?_UART_Write 0001                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000                           _tempo 0100  
                   _ClearBuffer 28E2                           tablat 000FF5                           ttemp5 0059  
                         ttemp6 005C                           ttemp7 0060                           status 000FD8  
                         wtemp8 0059                 __end_of_strncmp 236C              __size_ofi2___awdiv 00EC  
                __CFG_PBADEN$ON 000000                 __initialization 2878                    __end_of_main 1EA8  
                        ??_main 0036                ?_CCP1_Initialize 0001                   __activetblptr 000001  
            __size_of_GetString 000E                          ?_Mode1 0001                          ?_Mode2 0001  
                        ?_Mode3 0001                          _ADCON1 000FC1                          _ADRESH 000FC4  
                        _ADRESL 000FC3                          _CCPR1L 000FBE                          _CCPR2L 000FBB  
              ___awdiv@dividend 0028                          i1l2801 278A                          i1l2811 27D0  
                        i1l2803 27A0                          i1l2813 27DC                          i1l2805 27AC  
                        i1l2815 27E8                          i1l2807 27B2                          i1l2911 2B04  
                        i1l3391 003C                          i1l2809 27C0                          i1l2913 2B14  
                        i1l3393 004A                          i1l2907 2C26                          i1l2915 2B26  
                        i1l3395 0054                          i1l2781 2712                          i1l2909 2C3C  
                        i1l2917 2B2A                          i1l3397 0060                          i1l3389 002E  
                        i1l2791 2742                          i1l2783 2716                          i1l2919 2B4A  
                        i1l2793 274E                          i1l2785 2724                          i1l2795 2760  
                        i1l2787 272C                          i2l3301 213C                          i1l2797 2768  
                        i1l2789 2734                          i2l3311 2174                          i2l3303 2140  
                        i1l2799 2774                          i2l3321 21BA                          i2l3313 2184  
                        i2l3305 214E                          i2l3401 14E2                          i2l3331 2218  
                        i2l3323 21CA                          i2l3315 218C                          i2l3307 215E  
                        i2l3411 158C                          i2l3403 1530                          i2l3341 225A  
                        i2l3333 221E                          i2l3325 21E0                          i2l3317 219C  
                        i2l3309 2166                          i2l3421 165E                          i2l3413 15EC  
                        i2l3405 1538                          i2l3343 226E                          i2l3335 2228  
                        i2l3327 21EA                          i2l3319 21B2                          i2l3351 2562  
                        i2l3431 16A2                          i2l3423 1662                          i2l3415 1608  
                        i2l3407 153C                          i2l3329 2208                          i2l3337 2236  
                        i2l3361 2590                          i2l3353 256A                          i2l3345 2548  
                        i2l3441 171A                          i2l3433 16B4                          i2l3425 166A  
                        i2l3409 1584                          i2l3417 1628                          i2l3339 2246  
                        i2l3371 25D2                          i2l3363 25A2                          i2l3355 2578  
                        i2l3347 254C                          i2l3451 17D0                          i2l3443 1754  
                        i2l3435 16CA                          i2l3427 167E                          i2l3419 1652  
                        i2l3373 25E8                          i2l3365 25AA                          i2l3381 260A  
                        i2l3357 2580                          i2l3349 255A                          i2l3461 182A  
                        i2l3445 1768                          i2l3437 16DE                          i2l3429 1690  
                        i2l3453 17DC                          i2l3295 2B92                          i2l3383 261A  
                        i2l3375 25F0                          i2l3367 25B6                          i2l3359 2588  
                        i2l3471 1874                          i2l3463 183A                          i2l3455 17EE  
                        i2l3439 1706                          i2l3447 17C8                          i2l3297 2BAE  
                        i2l3385 2626                          i2l3377 25F6                          i2l3369 25CC  
                        i2l3473 188E                          i2l3465 184C                          i2l3457 1800  
                        i2l3449 17CE                          i2l3299 2BBA                          i2l3387 2632  
                        i2l3379 25FC                          i2l3475 18A4                          i2l3467 1854  
                        i2l3459 180C                          i2l3477 18A6                          i2l3469 1866  
                        i2l3399 14D4                __end_of___xxtofl 1D50                   Mode2@interval 00AF  
                        _Lo_ISR 0018                  __CFG_XINST$OFF 000000             __size_of_UART_Write 001E  
                     ??___aldiv 000F                       ??___fladd 008E                          ___wmul 2B92  
                     ??___awdiv 002C                  __CFG_STVREN$ON 000000                       ??___awmod 0021  
                     ??___flmul 008E                ?_UART_Write_Text 0029                       ??___flsub 0036  
                     ??___fltol 00A6                 ADC_Read@channel 0028                          _lenStr 0048  
                        _length 0054                 ADC_Read@digital 002C                          clear_0 28BE  
                        clear_1 28CA                          _tc_int 0008              __size_of_Playmusic 0060  
              ___awdiv@quotient 002E                 ___awmod@divisor 001F                 ___awmod@counter 0021  
                        _updown 0038                          _strchr 2A0A                          _strcmp 27EA  
                        _strlen 2A62                  i2___awdiv@sign 0006                          _strstr 2634  
                  __pdataCOMRAM 0054               __end_ofi2___awdiv 2634                       ?_ADC_Read 0028  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                       ??_strncmp 002E   __size_of_INTERRUPT_Initialize 0008  
                  ___xxtofl@arg 0082                    ___xxtofl@exp 0081               _SYSTEM_Initialize 2C5A  
                  ___xxtofl@val 002E                      __accesstop 0080         __end_of__initialization 28D0  
            __size_of_Stopmusic 0028              ?_SYSTEM_Initialize 0001                   ___rparam_used 000001  
                    ___fltol@f1 00A2               __end_of_GetString 2C7E                   ?i1_UART_Write 0001  
                 __end_of_Mode1 1052                   __end_of_Mode2 1B70                   __end_of_Mode3 213C  
                __pcstackCOMRAM 0001                    __pidataBANK1 236C             ??_SYSTEM_Initialize 0028  
                    ??_ADC_Read 002A                   ??_MyusartRead 0023                         ??_Mode1 0035  
                       ??_Mode2 00AC                         ??_Mode3 0035       __end_of_SYSTEM_Initialize 2C70  
                    __pbssBANK0 00B3               __end_of_Playmusic 29AC                         ?_Lo_ISR 0001  
                ??i1_UART_Write 001D                         ?___wmul 0001                         ?_tc_int 0001  
       __size_of_ADC_Initialize 0018                         ?_strchr 0028                         ?_strcmp 002A  
                       ?_strlen 0028                         ?_strstr 0080               __end_of_Stopmusic 2BE4  
                     ?___xxtofl 002E                    ??_UART_Write 0028                      _led_breath 003A  
                  ?_ClearBuffer 0001             __end_of_MyusartRead 2B4C                 __size_of_Lo_ISR 0060  
                       __Hparam 0000                         __Lparam 0000                         ___aldiv 213C  
                       ___fladd 063C                         ___awdiv 245C                         ___awmod 2712  
                       ___flmul 1052                         ___flsub 2AB8                         ___fltol 1EA8  
               __size_of___wmul 002A              __end_of_UART_Write 2C24                    __psmallconst 0600  
                       __pcinit 2878                         __ramtop 0600                 __size_of_tc_int 18CA  
                       __ptext0 1D50                         __ptext1 27EA                         __ptext2 2BBC  
                       __ptext3 2C5A                         __ptext4 2BE4                         __ptext5 2C7E  
                       __ptext6 2C88                         __ptext7 2C94                         __ptext8 2C42  
                       __ptext9 294C                         _led_num 0040                 __size_of_strchr 0058  
               __size_of_strcmp 008E                 __size_of_strlen 0056                       _T1CONbits 000FCD  
               __size_of_strstr 00DE           _OSCILLATOR_Initialize 2C7E                       _T2CONbits 000FCA  
                    ??___xxtofl 0032                       _T3CONbits 000FB1                ___awmod@dividend 001D  
              ___aldiv@dividend 0007        __size_of_UART_Initialize 0022      __size_of_SYSTEM_Initialize 0016  
                       _strncmp 2270                  __pintcode_body 14C2            end_of_initialization 28D0  
                       int_func 14C2                       _RCSTAbits 000FAB                ___aldiv@quotient 0011  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE                         strchr@c 002A                         strchr@s 0028  
                       strcmp@l 002A                         strcmp@r 002C                         strlen@a 002C  
                       strlen@s 0028                         strstr@h 0080                         strstr@n 0082  
                UART_Write@data 0028                     ___fladd@grs 0099                   ___xxtofl@sign 0080  
                     _TRISCbits 000F94                       _TRISDbits 000F95                     _MyusartRead 2B04  
          __end_ofi1_UART_Write 2C42                    _led_interval 003E               __size_of_ADC_Read 0046  
      __size_of_CCP1_Initialize 0002                       i2___awdiv 2548                     ___flmul@grs 0094  
                   _CCP1CONbits 000FBD                     _CCP2CONbits 000FBA                       _TXSTAbits 000FAC  
            i2___awdiv@dividend 0001                  __end_of_Lo_ISR 0078    __end_of_INTERRUPT_Initialize 2C90  
                     _GetString 2C70                  __end_of___wmul 2BBC                     _BAUDCONbits 000FB8  
                 __pidataCOMRAM 2C90                  _ADC_Initialize 2C42          ?_OSCILLATOR_Initialize 0001  
                __end_of_tc_int 18D2        __size_of_UART_Write_Text 005E                  __end_of_strchr 2A62  
                __end_of_strcmp 2878                  __end_of_strlen 2AB8                  __end_of_strstr 2712  
           start_initialization 2878              i2___awdiv@quotient 0007                      ?i2___awdiv 0001  
                  ClearBuffer@i 0028               ??_UART_Initialize 0028            __size_of_ClearBuffer 006A  
              __CFG_OSC$INTIO67 000000                        ??_Lo_ISR 0023                       _Playmusic 294C  
                      ??___wmul 0005          __end_of_ADC_Initialize 2C5A                     __pdataBANK1 0100  
                    ?_GetString 0028                __CFG_LPT1OSC$OFF 000000                        ??_tc_int 0015  
                      ??_strchr 002C                        ??_strcmp 002E                        ??_strlen 002A  
                      ??_strstr 0035                       ___fladd@a 008A                       ___fladd@b 0086  
                     ___flmul@a 008A                       ___flmul@b 0086                     __pbssCOMRAM 0036  
                     ___flsub@a 009E                       ___flsub@b 009A                   __pcstackBANK0 0080  
                     _Stopmusic 2BBC               __size_of___xxtofl 01E0               ??_CCP1_Initialize 0028  
                    ?_Playmusic 0001               __CFG_CCP2MX$PORTC 000000                       __pintcode 0008  
                      ?___aldiv 0007                        ?___fladd 0086                        ?___awdiv 0028  
                      ?___awmod 001D                        ?___flmul 0086                        ?___flsub 009A  
                      ?___fltol 00A2                 ?_ADC_Initialize 0001                     __pintcodelo 0018  
         __size_ofi1_UART_Write 001E                     __smallconst 0600                        _ADC_Read 2B4C  
                __size_of_Mode1 0490                  __size_of_Mode2 029E                  __size_of_Mode3 0140  
                    ?_Stopmusic 0001                     ??i2___awdiv 0005                        ?_strncmp 0028  
             ??_UART_Write_Text 002B            _INTERRUPT_Initialize 2C88                 ___aldiv@divisor 000B  
               ___aldiv@counter 000F                  ___wmul@product 0005                        _IPR1bits 000F9F  
                      _IPR2bits 000FA2                        _PIE1bits 000F9D                        _PIE2bits 000FA0  
                      i1u272_20 2724                        i1u272_21 2720                        i1u273_20 2742  
                      i1u337_20 003C                        i1u273_21 273E                        i1u337_21 0038  
                      i1u274_20 2760                        i1u338_20 004A                        i1u274_21 275C  
                      i1u338_21 0046                        i1u275_20 2782                        i1u275_21 277E  
                      i1u276_20 27A0                        i1u276_21 279C                        i1u277_20 27D0  
                      i1u277_21 27CC                        i1u295_20 2C38                        i1u295_21 2C34  
                      i2u330_40 2246                        i2u330_41 2242                        i2u331_40 255A  
                      i2u331_41 2556                        i2u332_40 2578                        i2u340_40 1530  
                      i2u332_41 2574                        i2u340_41 152C                        i2u325_40 214E  
                      i2u333_40 25A2                        i2u341_40 1584                        i2u325_41 214A  
                      i2u333_41 259E                        i2u341_41 1580                        i2u326_40 2174  
                      i2u334_40 25C4                        i2u350_40 16EE                        i2u342_40 1652  
                      i2u326_41 2170                        i2u334_41 25C0                        i2u350_41 16E8  
                      i2u342_41 164E                        i2u327_40 21B2                        i2u335_40 25E8  
                      i2u343_40 167E                        i2u327_41 21AE                        i2u335_41 25E4  
                      i2u343_41 167A                        i2u351_45 16F0                        i2u328_40 21D8  
                      i2u336_40 261A                        i2u352_40 1700                        i2u344_40 1690  
                      i2u328_41 21D4                        i2u336_41 2616                        i2u352_41 16FA  
                      i2u344_41 168C                        i2u360_45 1750                        i2u329_40 2208  
                      i2u361_40 1768                        i2u345_40 16A2                        i2u329_41 2204  
                      i2u361_41 1764                        i2u345_41 169E                        _PIR1bits 000F9E  
                      i2u353_45 1702                        i2u370_40 17EE                        i2u362_40 1778  
                      i2u354_40 171A                        i2u346_40 16B4                        i2u370_41 17EA  
                      i2u362_41 1772                        i2u354_41 1716                        i2u346_41 16B0  
                      i2u371_40 1800                        i2u355_40 172A                        i2u347_40 16C4  
                      i2u339_40 14E2                        i2u371_41 17FC                        i2u355_41 1724  
                      i2u347_41 16BE                        i2u339_41 14DE                        _PIR2bits 000FA1  
                      i2u363_45 177A                        i2u372_40 182A                        i2u364_40 178A  
                      i2u372_41 1826                        i2u364_41 1784                        i2u356_45 172C  
                      i2u348_45 16C6                        i2u373_40 184C                        i2u357_40 173C  
                      i2u349_40 16DE                        i2u373_41 1848                        i2u357_41 1736  
                      i2u349_41 16DA                        i2u365_45 178C                        i2u374_40 1866  
                      i2u366_40 179C                        i2u374_41 1862                        i2u366_41 1796  
                      i2u358_45 173E                        i2u359_40 174E                        i2u359_41 1748  
                      i2u367_45 179E                        i2u368_40 17AE                        i2u368_41 17A8  
                      i2u369_45 17B0                    i1_UART_Write 2C24                        _RCONbits 000FD0  
                   ??_GetString 002A                      _ADCON0bits 000FC2                      _ADCON2bits 000FC0  
             ___wmul@multiplier 0001               i2___awdiv@divisor 0003                    ?_MyusartRead 0001  
             i2___awdiv@counter 0005                       copy_data0 288C                       copy_data1 28AC  
         ?_INTERRUPT_Initialize 0001                i1UART_Write@data 001D                     ??_Playmusic 002A  
                      __Hrparam 0000                        __Lrparam 0000                    __Lsmallconst 0600  
            __CFG_BOREN$SBORDIS 000000         ??_OSCILLATOR_Initialize 0028                __size_of___aldiv 0134  
              __size_of___fladd 0586                __size_of___awdiv 00EC                __size_of___awmod 00D8  
              __size_of___flmul 0470                __size_of___flsub 004C                __size_of___fltol 0154  
               _UART_Initialize 2BE4                        ___xxtofl 1B70                     ??_Stopmusic 002A  
                      __ptext10 1FFC                        __ptext11 18D2                        __ptext20 2634  
                      __ptext12 1B70                        __ptext21 2270                        __ptext13 1EA8  
                      __ptext30 2C24                        __ptext22 2A62                        __ptext14 2AB8  
                      __ptext31 2712                        __ptext23 2A0A                        __ptext15 063C  
                      __ptext24 29AC                        __ptext16 1052                        __ptext33 2548  
                      __ptext25 2C06                        __ptext17 245C                        __ptext34 2B92  
                      __ptext26 2C70                        __ptext18 2B4C                        __ptext35 213C  
                      __ptext27 28E2                        __ptext19 0BC2                        __ptext29 2B04  
                      _led_mode 0036                        _led_loop 003C                __size_of_strncmp 00FC  
           UART_Write_Text@text 0029                   __size_of_main 0158                        int$flags 0058  
                      _mystring 004A                   _music_playing 00BD                      _INTCONbits 000FF2  
               _CCP1_Initialize 2C94          ??_INTERRUPT_Initialize 0028                   ??_ClearBuffer 0028  
                      intlevel1 0000                        intlevel2 0000                       strncmp@_l 0028  
                     strncmp@_r 002A                ??_ADC_Initialize 0028                      _OSCCONbits 000FD3  
                  _music_choose 0042         __end_of_UART_Initialize 2C06                 _UART_Write_Text 29AC  
                      strncmp@l 0031                        strncmp@n 002C                        strncmp@r 0033  
                  ___aldiv@sign 0010                      _UART_Write 2C06                        strstr@nl 0084  
                   _music_count 0046                     _music_index 0044                   ___fladd@signs 0096  
          __size_of_MyusartRead 0048                UART_Write_Text@i 002D                    ___fladd@aexp 0097  
                  ___fladd@bexp 0098             __end_of_ClearBuffer 294C  
