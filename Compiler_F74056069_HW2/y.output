Nonterminals useless in grammar

   declaration_list
   parameter_declaration
   identifier_list


Terminals unused in grammar

   AND
   OR
   NOT
   LSB
   RSB
   FOR


Rules useless in grammar

   94 declaration_list: declaration
   95                 | declaration_list declaration

   96 parameter_declaration: type declarator

   97 identifier_list: ID
   98                | identifier_list COMMA ID


State 0 conflicts: 5 shift/reduce
State 142 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: external_declaration
    2        | program external_declaration
    3        | %empty

    4 external_declaration: declaration
    5                     | function_definition

    6 function_definition: function_definition_declarator compound_statement

    7 function_definition_declarator: type declarator scope_start

    8 compound_statement: scope_end
    9                   | block_item_list scope_end

   10 scope_start: LCB

   11 scope_end: RCB

   12 block_item_list: block_item
   13                | block_item_list block_item

   14 block_item: declaration
   15           | statement

   16 statement: scope_start compound_statement
   17          | expression_statement
   18          | selection_statement
   19          | iteration_statement
   20          | jump_statement
   21          | print_statement

   22 expression_statement: SEMICOLON
   23                     | expression SEMICOLON

   24 selection_statement: IF LB expression RB statement ELSE statement
   25                    | IF LB expression RB statement

   26 iteration_statement: WHILE LB expression RB statement

   27 jump_statement: RET SEMICOLON
   28               | RET expression SEMICOLON

   29 print_statement: PRINT LB expression RB SEMICOLON

   30 declaration: type init_declarator SEMICOLON

   31 type: INT
   32     | FLOAT
   33     | BOOL
   34     | STRING
   35     | VOID

   36 init_declarator: declarator ASGN initializer
   37                | declarator

   38 declarator: ID
   39           | declarator LB parameter_list RB
   40           | declarator LB RB

   41 initializer: assignment_expression

   42 assignment_expression: relational_expression
   43                      | unary_expression assignment_operator assignment_expression

   44 relational_expression: additive_expression
   45                      | relational_expression MT additive_expression
   46                      | relational_expression LT additive_expression
   47                      | relational_expression MTE additive_expression
   48                      | relational_expression LTE additive_expression
   49                      | relational_expression EQ additive_expression
   50                      | relational_expression NE additive_expression

   51 additive_expression: multiplicative_expression
   52                    | additive_expression ADD multiplicative_expression
   53                    | additive_expression SUB multiplicative_expression

   54 multiplicative_expression: cast_expression
   55                          | multiplicative_expression MUL cast_expression
   56                          | multiplicative_expression DIV cast_expression
   57                          | multiplicative_expression MOD cast_expression

   58 cast_expression: unary_expression
   59                | LB specifier_qualifier_list RB cast_expression

   60 unary_expression: postfix_expression
   61                 | INC unary_expression
   62                 | DEC unary_expression
   63                 | unary_operator cast_expression

   64 unary_operator: ADD
   65               | SUB

   66 postfix_expression: primary_expression
   67                   | postfix_expression LB RB
   68                   | postfix_expression LB argument_expression_list RB
   69                   | postfix_expression INC
   70                   | postfix_expression DEC

   71 primary_expression: ID
   72                   | constant
   73                   | boolean
   74                   | LB expression RB

   75 constant: I_CONST
   76         | F_CONST
   77         | STR_CONST

   78 boolean: TRUE
   79        | FALSE

   80 parameter_list: type declarator
   81               | parameter_list COMMA type declarator

   82 assignment_operator: ASGN
   83                    | MULASGN
   84                    | DIVASGN
   85                    | MODASGN
   86                    | ADDASGN
   87                    | SUBASGN

   88 specifier_qualifier_list: type specifier_qualifier_list
   89                         | type

   90 argument_expression_list: assignment_expression
   91                         | argument_expression_list COMMA assignment_expression

   92 expression: assignment_expression
   93           | expression COMMA assignment_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 52 64
SUB (259) 53 65
MUL (260) 55
DIV (261) 56
MOD (262) 57
INC (263) 61 69
DEC (264) 62 70
MT (265) 45
LT (266) 46
MTE (267) 47
LTE (268) 48
EQ (269) 49
NE (270) 50
ASGN (271) 36 82
ADDASGN (272) 86
SUBASGN (273) 87
MULASGN (274) 83
DIVASGN (275) 84
MODASGN (276) 85
AND (277)
OR (278)
NOT (279)
LB (280) 24 25 26 29 39 40 59 67 68 74
RB (281) 24 25 26 29 39 40 59 67 68 74
LCB (282) 10
RCB (283) 11
LSB (284)
RSB (285)
COMMA (286) 81 91 93
PRINT (287) 29
IF (288) 24 25
ELSE (289) 24
FOR (290)
WHILE (291) 26
VOID (292) 35
INT (293) 31
FLOAT (294) 32
STRING (295) 34
BOOL (296) 33
TRUE (297) 78
FALSE (298) 79
RET (299) 27 28
SEMICOLON (300) 22 23 27 28 29 30
I_CONST (301) 75
F_CONST (302) 76
STR_CONST (303) 77
ID (304) 38 71


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1 2 3, on right: 0 2
external_declaration (52)
    on left: 4 5, on right: 1 2
function_definition (53)
    on left: 6, on right: 5
function_definition_declarator (54)
    on left: 7, on right: 6
compound_statement (55)
    on left: 8 9, on right: 6 16
scope_start (56)
    on left: 10, on right: 7 16
scope_end (57)
    on left: 11, on right: 8 9
block_item_list (58)
    on left: 12 13, on right: 9 13
block_item (59)
    on left: 14 15, on right: 12 13
statement (60)
    on left: 16 17 18 19 20 21, on right: 15 24 25 26
expression_statement (61)
    on left: 22 23, on right: 17
selection_statement (62)
    on left: 24 25, on right: 18
iteration_statement (63)
    on left: 26, on right: 19
jump_statement (64)
    on left: 27 28, on right: 20
print_statement (65)
    on left: 29, on right: 21
declaration (66)
    on left: 30, on right: 4 14
type (67)
    on left: 31 32 33 34 35, on right: 7 30 80 81 88 89
init_declarator (68)
    on left: 36 37, on right: 30
declarator (69)
    on left: 38 39 40, on right: 7 36 37 39 40 80 81
initializer (70)
    on left: 41, on right: 36
assignment_expression (71)
    on left: 42 43, on right: 41 43 90 91 92 93
relational_expression (72)
    on left: 44 45 46 47 48 49 50, on right: 42 45 46 47 48 49 50
additive_expression (73)
    on left: 51 52 53, on right: 44 45 46 47 48 49 50 52 53
multiplicative_expression (74)
    on left: 54 55 56 57, on right: 51 52 53 55 56 57
cast_expression (75)
    on left: 58 59, on right: 54 55 56 57 59 63
unary_expression (76)
    on left: 60 61 62 63, on right: 43 58 61 62
unary_operator (77)
    on left: 64 65, on right: 63
postfix_expression (78)
    on left: 66 67 68 69 70, on right: 60 67 68 69 70
primary_expression (79)
    on left: 71 72 73 74, on right: 66
constant (80)
    on left: 75 76 77, on right: 72
boolean (81)
    on left: 78 79, on right: 73
parameter_list (82)
    on left: 80 81, on right: 39 81
assignment_operator (83)
    on left: 82 83 84 85 86 87, on right: 43
specifier_qualifier_list (84)
    on left: 88 89, on right: 59 88
argument_expression_list (85)
    on left: 90 91, on right: 68 91
expression (86)
    on left: 92 93, on right: 23 24 25 26 28 29 74 93


State 0

    0 $accept: . program $end

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    VOID      [reduce using rule 3 (program)]
    INT       [reduce using rule 3 (program)]
    FLOAT     [reduce using rule 3 (program)]
    STRING    [reduce using rule 3 (program)]
    BOOL      [reduce using rule 3 (program)]
    $default  reduce using rule 3 (program)

    program                         go to state 6
    external_declaration            go to state 7
    function_definition             go to state 8
    function_definition_declarator  go to state 9
    declaration                     go to state 10
    type                            go to state 11


State 1

   35 type: VOID .

    $default  reduce using rule 35 (type)


State 2

   31 type: INT .

    $default  reduce using rule 31 (type)


State 3

   32 type: FLOAT .

    $default  reduce using rule 32 (type)


State 4

   34 type: STRING .

    $default  reduce using rule 34 (type)


State 5

   33 type: BOOL .

    $default  reduce using rule 33 (type)


State 6

    0 $accept: program . $end
    2 program: program . external_declaration

    $end    shift, and go to state 12
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    external_declaration            go to state 13
    function_definition             go to state 8
    function_definition_declarator  go to state 9
    declaration                     go to state 10
    type                            go to state 11


State 7

    1 program: external_declaration .

    $default  reduce using rule 1 (program)


State 8

    5 external_declaration: function_definition .

    $default  reduce using rule 5 (external_declaration)


State 9

    6 function_definition: function_definition_declarator . compound_statement

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    LCB        shift, and go to state 19
    RCB        shift, and go to state 20
    PRINT      shift, and go to state 21
    IF         shift, and go to state 22
    WHILE      shift, and go to state 23
    VOID       shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    STRING     shift, and go to state 4
    BOOL       shift, and go to state 5
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    RET        shift, and go to state 26
    SEMICOLON  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    compound_statement         go to state 32
    scope_start                go to state 33
    scope_end                  go to state 34
    block_item_list            go to state 35
    block_item                 go to state 36
    statement                  go to state 37
    expression_statement       go to state 38
    selection_statement        go to state 39
    iteration_statement        go to state 40
    jump_statement             go to state 41
    print_statement            go to state 42
    declaration                go to state 43
    type                       go to state 44
    assignment_expression      go to state 45
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55
    expression                 go to state 56


State 10

    4 external_declaration: declaration .

    $default  reduce using rule 4 (external_declaration)


State 11

    7 function_definition_declarator: type . declarator scope_start
   30 declaration: type . init_declarator SEMICOLON

    ID  shift, and go to state 57

    init_declarator  go to state 58
    declarator       go to state 59


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 program: program external_declaration .

    $default  reduce using rule 2 (program)


State 14

   64 unary_operator: ADD .

    $default  reduce using rule 64 (unary_operator)


State 15

   65 unary_operator: SUB .

    $default  reduce using rule 65 (unary_operator)


State 16

   61 unary_expression: INC . unary_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 60
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    unary_expression    go to state 61
    unary_operator      go to state 51
    postfix_expression  go to state 52
    primary_expression  go to state 53
    constant            go to state 54
    boolean             go to state 55


State 17

   62 unary_expression: DEC . unary_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 60
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    unary_expression    go to state 62
    unary_operator      go to state 51
    postfix_expression  go to state 52
    primary_expression  go to state 53
    constant            go to state 54
    boolean             go to state 55


State 18

   59 cast_expression: LB . specifier_qualifier_list RB cast_expression
   74 primary_expression: LB . expression RB

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    VOID       shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    STRING     shift, and go to state 4
    BOOL       shift, and go to state 5
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    type                       go to state 63
    assignment_expression      go to state 45
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55
    specifier_qualifier_list   go to state 64
    expression                 go to state 65


State 19

   10 scope_start: LCB .

    $default  reduce using rule 10 (scope_start)


State 20

   11 scope_end: RCB .

    $default  reduce using rule 11 (scope_end)


State 21

   29 print_statement: PRINT . LB expression RB SEMICOLON

    LB  shift, and go to state 66


State 22

   24 selection_statement: IF . LB expression RB statement ELSE statement
   25                    | IF . LB expression RB statement

    LB  shift, and go to state 67


State 23

   26 iteration_statement: WHILE . LB expression RB statement

    LB  shift, and go to state 68


State 24

   78 boolean: TRUE .

    $default  reduce using rule 78 (boolean)


State 25

   79 boolean: FALSE .

    $default  reduce using rule 79 (boolean)


State 26

   27 jump_statement: RET . SEMICOLON
   28               | RET . expression SEMICOLON

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    SEMICOLON  shift, and go to state 69
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    assignment_expression      go to state 45
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55
    expression                 go to state 70


State 27

   22 expression_statement: SEMICOLON .

    $default  reduce using rule 22 (expression_statement)


State 28

   75 constant: I_CONST .

    $default  reduce using rule 75 (constant)


State 29

   76 constant: F_CONST .

    $default  reduce using rule 76 (constant)


State 30

   77 constant: STR_CONST .

    $default  reduce using rule 77 (constant)


State 31

   71 primary_expression: ID .

    $default  reduce using rule 71 (primary_expression)


State 32

    6 function_definition: function_definition_declarator compound_statement .

    $default  reduce using rule 6 (function_definition)


State 33

   16 statement: scope_start . compound_statement

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    LCB        shift, and go to state 19
    RCB        shift, and go to state 20
    PRINT      shift, and go to state 21
    IF         shift, and go to state 22
    WHILE      shift, and go to state 23
    VOID       shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    STRING     shift, and go to state 4
    BOOL       shift, and go to state 5
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    RET        shift, and go to state 26
    SEMICOLON  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    compound_statement         go to state 71
    scope_start                go to state 33
    scope_end                  go to state 34
    block_item_list            go to state 35
    block_item                 go to state 36
    statement                  go to state 37
    expression_statement       go to state 38
    selection_statement        go to state 39
    iteration_statement        go to state 40
    jump_statement             go to state 41
    print_statement            go to state 42
    declaration                go to state 43
    type                       go to state 44
    assignment_expression      go to state 45
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55
    expression                 go to state 56


State 34

    8 compound_statement: scope_end .

    $default  reduce using rule 8 (compound_statement)


State 35

    9 compound_statement: block_item_list . scope_end
   13 block_item_list: block_item_list . block_item

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    LCB        shift, and go to state 19
    RCB        shift, and go to state 20
    PRINT      shift, and go to state 21
    IF         shift, and go to state 22
    WHILE      shift, and go to state 23
    VOID       shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    STRING     shift, and go to state 4
    BOOL       shift, and go to state 5
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    RET        shift, and go to state 26
    SEMICOLON  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    scope_start                go to state 33
    scope_end                  go to state 72
    block_item                 go to state 73
    statement                  go to state 37
    expression_statement       go to state 38
    selection_statement        go to state 39
    iteration_statement        go to state 40
    jump_statement             go to state 41
    print_statement            go to state 42
    declaration                go to state 43
    type                       go to state 44
    assignment_expression      go to state 45
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55
    expression                 go to state 56


State 36

   12 block_item_list: block_item .

    $default  reduce using rule 12 (block_item_list)


State 37

   15 block_item: statement .

    $default  reduce using rule 15 (block_item)


State 38

   17 statement: expression_statement .

    $default  reduce using rule 17 (statement)


State 39

   18 statement: selection_statement .

    $default  reduce using rule 18 (statement)


State 40

   19 statement: iteration_statement .

    $default  reduce using rule 19 (statement)


State 41

   20 statement: jump_statement .

    $default  reduce using rule 20 (statement)


State 42

   21 statement: print_statement .

    $default  reduce using rule 21 (statement)


State 43

   14 block_item: declaration .

    $default  reduce using rule 14 (block_item)


State 44

   30 declaration: type . init_declarator SEMICOLON

    ID  shift, and go to state 57

    init_declarator  go to state 58
    declarator       go to state 74


State 45

   92 expression: assignment_expression .

    $default  reduce using rule 92 (expression)


State 46

   42 assignment_expression: relational_expression .
   45 relational_expression: relational_expression . MT additive_expression
   46                      | relational_expression . LT additive_expression
   47                      | relational_expression . MTE additive_expression
   48                      | relational_expression . LTE additive_expression
   49                      | relational_expression . EQ additive_expression
   50                      | relational_expression . NE additive_expression

    MT   shift, and go to state 75
    LT   shift, and go to state 76
    MTE  shift, and go to state 77
    LTE  shift, and go to state 78
    EQ   shift, and go to state 79
    NE   shift, and go to state 80

    $default  reduce using rule 42 (assignment_expression)


State 47

   44 relational_expression: additive_expression .
   52 additive_expression: additive_expression . ADD multiplicative_expression
   53                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 44 (relational_expression)


State 48

   51 additive_expression: multiplicative_expression .
   55 multiplicative_expression: multiplicative_expression . MUL cast_expression
   56                          | multiplicative_expression . DIV cast_expression
   57                          | multiplicative_expression . MOD cast_expression

    MUL  shift, and go to state 83
    DIV  shift, and go to state 84
    MOD  shift, and go to state 85

    $default  reduce using rule 51 (additive_expression)


State 49

   54 multiplicative_expression: cast_expression .

    $default  reduce using rule 54 (multiplicative_expression)


State 50

   43 assignment_expression: unary_expression . assignment_operator assignment_expression
   58 cast_expression: unary_expression .

    ASGN     shift, and go to state 86
    ADDASGN  shift, and go to state 87
    SUBASGN  shift, and go to state 88
    MULASGN  shift, and go to state 89
    DIVASGN  shift, and go to state 90
    MODASGN  shift, and go to state 91

    $default  reduce using rule 58 (cast_expression)

    assignment_operator  go to state 92


State 51

   63 unary_expression: unary_operator . cast_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    cast_expression     go to state 93
    unary_expression    go to state 94
    unary_operator      go to state 51
    postfix_expression  go to state 52
    primary_expression  go to state 53
    constant            go to state 54
    boolean             go to state 55


State 52

   60 unary_expression: postfix_expression .
   67 postfix_expression: postfix_expression . LB RB
   68                   | postfix_expression . LB argument_expression_list RB
   69                   | postfix_expression . INC
   70                   | postfix_expression . DEC

    INC  shift, and go to state 95
    DEC  shift, and go to state 96
    LB   shift, and go to state 97

    $default  reduce using rule 60 (unary_expression)


State 53

   66 postfix_expression: primary_expression .

    $default  reduce using rule 66 (postfix_expression)


State 54

   72 primary_expression: constant .

    $default  reduce using rule 72 (primary_expression)


State 55

   73 primary_expression: boolean .

    $default  reduce using rule 73 (primary_expression)


State 56

   23 expression_statement: expression . SEMICOLON
   93 expression: expression . COMMA assignment_expression

    COMMA      shift, and go to state 98
    SEMICOLON  shift, and go to state 99


State 57

   38 declarator: ID .

    $default  reduce using rule 38 (declarator)


State 58

   30 declaration: type init_declarator . SEMICOLON

    SEMICOLON  shift, and go to state 100


State 59

    7 function_definition_declarator: type declarator . scope_start
   36 init_declarator: declarator . ASGN initializer
   37                | declarator .
   39 declarator: declarator . LB parameter_list RB
   40           | declarator . LB RB

    ASGN  shift, and go to state 101
    LB    shift, and go to state 102
    LCB   shift, and go to state 19

    $default  reduce using rule 37 (init_declarator)

    scope_start  go to state 103


State 60

   74 primary_expression: LB . expression RB

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    assignment_expression      go to state 45
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55
    expression                 go to state 65


State 61

   61 unary_expression: INC unary_expression .

    $default  reduce using rule 61 (unary_expression)


State 62

   62 unary_expression: DEC unary_expression .

    $default  reduce using rule 62 (unary_expression)


State 63

   88 specifier_qualifier_list: type . specifier_qualifier_list
   89                         | type .

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 89 (specifier_qualifier_list)

    type                      go to state 63
    specifier_qualifier_list  go to state 104


State 64

   59 cast_expression: LB specifier_qualifier_list . RB cast_expression

    RB  shift, and go to state 105


State 65

   74 primary_expression: LB expression . RB
   93 expression: expression . COMMA assignment_expression

    RB     shift, and go to state 106
    COMMA  shift, and go to state 98


State 66

   29 print_statement: PRINT LB . expression RB SEMICOLON

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    assignment_expression      go to state 45
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55
    expression                 go to state 107


State 67

   24 selection_statement: IF LB . expression RB statement ELSE statement
   25                    | IF LB . expression RB statement

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    assignment_expression      go to state 45
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55
    expression                 go to state 108


State 68

   26 iteration_statement: WHILE LB . expression RB statement

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    assignment_expression      go to state 45
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55
    expression                 go to state 109


State 69

   27 jump_statement: RET SEMICOLON .

    $default  reduce using rule 27 (jump_statement)


State 70

   28 jump_statement: RET expression . SEMICOLON
   93 expression: expression . COMMA assignment_expression

    COMMA      shift, and go to state 98
    SEMICOLON  shift, and go to state 110


State 71

   16 statement: scope_start compound_statement .

    $default  reduce using rule 16 (statement)


State 72

    9 compound_statement: block_item_list scope_end .

    $default  reduce using rule 9 (compound_statement)


State 73

   13 block_item_list: block_item_list block_item .

    $default  reduce using rule 13 (block_item_list)


State 74

   36 init_declarator: declarator . ASGN initializer
   37                | declarator .
   39 declarator: declarator . LB parameter_list RB
   40           | declarator . LB RB

    ASGN  shift, and go to state 101
    LB    shift, and go to state 102

    $default  reduce using rule 37 (init_declarator)


State 75

   45 relational_expression: relational_expression MT . additive_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    additive_expression        go to state 111
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 94
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55


State 76

   46 relational_expression: relational_expression LT . additive_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    additive_expression        go to state 112
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 94
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55


State 77

   47 relational_expression: relational_expression MTE . additive_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    additive_expression        go to state 113
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 94
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55


State 78

   48 relational_expression: relational_expression LTE . additive_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    additive_expression        go to state 114
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 94
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55


State 79

   49 relational_expression: relational_expression EQ . additive_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    additive_expression        go to state 115
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 94
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55


State 80

   50 relational_expression: relational_expression NE . additive_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    additive_expression        go to state 116
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 94
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55


State 81

   52 additive_expression: additive_expression ADD . multiplicative_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    multiplicative_expression  go to state 117
    cast_expression            go to state 49
    unary_expression           go to state 94
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55


State 82

   53 additive_expression: additive_expression SUB . multiplicative_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    multiplicative_expression  go to state 118
    cast_expression            go to state 49
    unary_expression           go to state 94
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55


State 83

   55 multiplicative_expression: multiplicative_expression MUL . cast_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    cast_expression     go to state 119
    unary_expression    go to state 94
    unary_operator      go to state 51
    postfix_expression  go to state 52
    primary_expression  go to state 53
    constant            go to state 54
    boolean             go to state 55


State 84

   56 multiplicative_expression: multiplicative_expression DIV . cast_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    cast_expression     go to state 120
    unary_expression    go to state 94
    unary_operator      go to state 51
    postfix_expression  go to state 52
    primary_expression  go to state 53
    constant            go to state 54
    boolean             go to state 55


State 85

   57 multiplicative_expression: multiplicative_expression MOD . cast_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    cast_expression     go to state 121
    unary_expression    go to state 94
    unary_operator      go to state 51
    postfix_expression  go to state 52
    primary_expression  go to state 53
    constant            go to state 54
    boolean             go to state 55


State 86

   82 assignment_operator: ASGN .

    $default  reduce using rule 82 (assignment_operator)


State 87

   86 assignment_operator: ADDASGN .

    $default  reduce using rule 86 (assignment_operator)


State 88

   87 assignment_operator: SUBASGN .

    $default  reduce using rule 87 (assignment_operator)


State 89

   83 assignment_operator: MULASGN .

    $default  reduce using rule 83 (assignment_operator)


State 90

   84 assignment_operator: DIVASGN .

    $default  reduce using rule 84 (assignment_operator)


State 91

   85 assignment_operator: MODASGN .

    $default  reduce using rule 85 (assignment_operator)


State 92

   43 assignment_expression: unary_expression assignment_operator . assignment_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    assignment_expression      go to state 122
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55


State 93

   63 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 63 (unary_expression)


State 94

   58 cast_expression: unary_expression .

    $default  reduce using rule 58 (cast_expression)


State 95

   69 postfix_expression: postfix_expression INC .

    $default  reduce using rule 69 (postfix_expression)


State 96

   70 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 70 (postfix_expression)


State 97

   67 postfix_expression: postfix_expression LB . RB
   68                   | postfix_expression LB . argument_expression_list RB

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    RB         shift, and go to state 123
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    assignment_expression      go to state 124
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55
    argument_expression_list   go to state 125


State 98

   93 expression: expression COMMA . assignment_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    assignment_expression      go to state 126
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55


State 99

   23 expression_statement: expression SEMICOLON .

    $default  reduce using rule 23 (expression_statement)


State 100

   30 declaration: type init_declarator SEMICOLON .

    $default  reduce using rule 30 (declaration)


State 101

   36 init_declarator: declarator ASGN . initializer

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    initializer                go to state 127
    assignment_expression      go to state 128
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55


State 102

   39 declarator: declarator LB . parameter_list RB
   40           | declarator LB . RB

    RB      shift, and go to state 129
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    type            go to state 130
    parameter_list  go to state 131


State 103

    7 function_definition_declarator: type declarator scope_start .

    $default  reduce using rule 7 (function_definition_declarator)


State 104

   88 specifier_qualifier_list: type specifier_qualifier_list .

    $default  reduce using rule 88 (specifier_qualifier_list)


State 105

   59 cast_expression: LB specifier_qualifier_list RB . cast_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    cast_expression     go to state 132
    unary_expression    go to state 94
    unary_operator      go to state 51
    postfix_expression  go to state 52
    primary_expression  go to state 53
    constant            go to state 54
    boolean             go to state 55


State 106

   74 primary_expression: LB expression RB .

    $default  reduce using rule 74 (primary_expression)


State 107

   29 print_statement: PRINT LB expression . RB SEMICOLON
   93 expression: expression . COMMA assignment_expression

    RB     shift, and go to state 133
    COMMA  shift, and go to state 98


State 108

   24 selection_statement: IF LB expression . RB statement ELSE statement
   25                    | IF LB expression . RB statement
   93 expression: expression . COMMA assignment_expression

    RB     shift, and go to state 134
    COMMA  shift, and go to state 98


State 109

   26 iteration_statement: WHILE LB expression . RB statement
   93 expression: expression . COMMA assignment_expression

    RB     shift, and go to state 135
    COMMA  shift, and go to state 98


State 110

   28 jump_statement: RET expression SEMICOLON .

    $default  reduce using rule 28 (jump_statement)


State 111

   45 relational_expression: relational_expression MT additive_expression .
   52 additive_expression: additive_expression . ADD multiplicative_expression
   53                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 45 (relational_expression)


State 112

   46 relational_expression: relational_expression LT additive_expression .
   52 additive_expression: additive_expression . ADD multiplicative_expression
   53                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 46 (relational_expression)


State 113

   47 relational_expression: relational_expression MTE additive_expression .
   52 additive_expression: additive_expression . ADD multiplicative_expression
   53                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 47 (relational_expression)


State 114

   48 relational_expression: relational_expression LTE additive_expression .
   52 additive_expression: additive_expression . ADD multiplicative_expression
   53                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 48 (relational_expression)


State 115

   49 relational_expression: relational_expression EQ additive_expression .
   52 additive_expression: additive_expression . ADD multiplicative_expression
   53                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 49 (relational_expression)


State 116

   50 relational_expression: relational_expression NE additive_expression .
   52 additive_expression: additive_expression . ADD multiplicative_expression
   53                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 50 (relational_expression)


State 117

   52 additive_expression: additive_expression ADD multiplicative_expression .
   55 multiplicative_expression: multiplicative_expression . MUL cast_expression
   56                          | multiplicative_expression . DIV cast_expression
   57                          | multiplicative_expression . MOD cast_expression

    MUL  shift, and go to state 83
    DIV  shift, and go to state 84
    MOD  shift, and go to state 85

    $default  reduce using rule 52 (additive_expression)


State 118

   53 additive_expression: additive_expression SUB multiplicative_expression .
   55 multiplicative_expression: multiplicative_expression . MUL cast_expression
   56                          | multiplicative_expression . DIV cast_expression
   57                          | multiplicative_expression . MOD cast_expression

    MUL  shift, and go to state 83
    DIV  shift, and go to state 84
    MOD  shift, and go to state 85

    $default  reduce using rule 53 (additive_expression)


State 119

   55 multiplicative_expression: multiplicative_expression MUL cast_expression .

    $default  reduce using rule 55 (multiplicative_expression)


State 120

   56 multiplicative_expression: multiplicative_expression DIV cast_expression .

    $default  reduce using rule 56 (multiplicative_expression)


State 121

   57 multiplicative_expression: multiplicative_expression MOD cast_expression .

    $default  reduce using rule 57 (multiplicative_expression)


State 122

   43 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 43 (assignment_expression)


State 123

   67 postfix_expression: postfix_expression LB RB .

    $default  reduce using rule 67 (postfix_expression)


State 124

   90 argument_expression_list: assignment_expression .

    $default  reduce using rule 90 (argument_expression_list)


State 125

   68 postfix_expression: postfix_expression LB argument_expression_list . RB
   91 argument_expression_list: argument_expression_list . COMMA assignment_expression

    RB     shift, and go to state 136
    COMMA  shift, and go to state 137


State 126

   93 expression: expression COMMA assignment_expression .

    $default  reduce using rule 93 (expression)


State 127

   36 init_declarator: declarator ASGN initializer .

    $default  reduce using rule 36 (init_declarator)


State 128

   41 initializer: assignment_expression .

    $default  reduce using rule 41 (initializer)


State 129

   40 declarator: declarator LB RB .

    $default  reduce using rule 40 (declarator)


State 130

   80 parameter_list: type . declarator

    ID  shift, and go to state 57

    declarator  go to state 138


State 131

   39 declarator: declarator LB parameter_list . RB
   81 parameter_list: parameter_list . COMMA type declarator

    RB     shift, and go to state 139
    COMMA  shift, and go to state 140


State 132

   59 cast_expression: LB specifier_qualifier_list RB cast_expression .

    $default  reduce using rule 59 (cast_expression)


State 133

   29 print_statement: PRINT LB expression RB . SEMICOLON

    SEMICOLON  shift, and go to state 141


State 134

   24 selection_statement: IF LB expression RB . statement ELSE statement
   25                    | IF LB expression RB . statement

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    LCB        shift, and go to state 19
    PRINT      shift, and go to state 21
    IF         shift, and go to state 22
    WHILE      shift, and go to state 23
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    RET        shift, and go to state 26
    SEMICOLON  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    scope_start                go to state 33
    statement                  go to state 142
    expression_statement       go to state 38
    selection_statement        go to state 39
    iteration_statement        go to state 40
    jump_statement             go to state 41
    print_statement            go to state 42
    assignment_expression      go to state 45
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55
    expression                 go to state 56


State 135

   26 iteration_statement: WHILE LB expression RB . statement

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    LCB        shift, and go to state 19
    PRINT      shift, and go to state 21
    IF         shift, and go to state 22
    WHILE      shift, and go to state 23
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    RET        shift, and go to state 26
    SEMICOLON  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    scope_start                go to state 33
    statement                  go to state 143
    expression_statement       go to state 38
    selection_statement        go to state 39
    iteration_statement        go to state 40
    jump_statement             go to state 41
    print_statement            go to state 42
    assignment_expression      go to state 45
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55
    expression                 go to state 56


State 136

   68 postfix_expression: postfix_expression LB argument_expression_list RB .

    $default  reduce using rule 68 (postfix_expression)


State 137

   91 argument_expression_list: argument_expression_list COMMA . assignment_expression

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    assignment_expression      go to state 144
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55


State 138

   39 declarator: declarator . LB parameter_list RB
   40           | declarator . LB RB
   80 parameter_list: type declarator .

    LB  shift, and go to state 102

    $default  reduce using rule 80 (parameter_list)


State 139

   39 declarator: declarator LB parameter_list RB .

    $default  reduce using rule 39 (declarator)


State 140

   81 parameter_list: parameter_list COMMA . type declarator

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    type  go to state 145


State 141

   29 print_statement: PRINT LB expression RB SEMICOLON .

    $default  reduce using rule 29 (print_statement)


State 142

   24 selection_statement: IF LB expression RB statement . ELSE statement
   25                    | IF LB expression RB statement .

    ELSE  shift, and go to state 146

    ELSE      [reduce using rule 25 (selection_statement)]
    $default  reduce using rule 25 (selection_statement)


State 143

   26 iteration_statement: WHILE LB expression RB statement .

    $default  reduce using rule 26 (iteration_statement)


State 144

   91 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 91 (argument_expression_list)


State 145

   81 parameter_list: parameter_list COMMA type . declarator

    ID  shift, and go to state 57

    declarator  go to state 147


State 146

   24 selection_statement: IF LB expression RB statement ELSE . statement

    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    INC        shift, and go to state 16
    DEC        shift, and go to state 17
    LB         shift, and go to state 18
    LCB        shift, and go to state 19
    PRINT      shift, and go to state 21
    IF         shift, and go to state 22
    WHILE      shift, and go to state 23
    TRUE       shift, and go to state 24
    FALSE      shift, and go to state 25
    RET        shift, and go to state 26
    SEMICOLON  shift, and go to state 27
    I_CONST    shift, and go to state 28
    F_CONST    shift, and go to state 29
    STR_CONST  shift, and go to state 30
    ID         shift, and go to state 31

    scope_start                go to state 33
    statement                  go to state 148
    expression_statement       go to state 38
    selection_statement        go to state 39
    iteration_statement        go to state 40
    jump_statement             go to state 41
    print_statement            go to state 42
    assignment_expression      go to state 45
    relational_expression      go to state 46
    additive_expression        go to state 47
    multiplicative_expression  go to state 48
    cast_expression            go to state 49
    unary_expression           go to state 50
    unary_operator             go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    constant                   go to state 54
    boolean                    go to state 55
    expression                 go to state 56


State 147

   39 declarator: declarator . LB parameter_list RB
   40           | declarator . LB RB
   81 parameter_list: parameter_list COMMA type declarator .

    LB  shift, and go to state 102

    $default  reduce using rule 81 (parameter_list)


State 148

   24 selection_statement: IF LB expression RB statement ELSE statement .

    $default  reduce using rule 24 (selection_statement)
