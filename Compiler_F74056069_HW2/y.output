Terminals unused in grammar

   LSB
   RSB
   FOR


State 0 conflicts: 5 shift/reduce
State 160 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: external_declaration
    2        | program external_declaration
    3        | %empty

    4 external_declaration: declaration
    5                     | function_definition

    6 function_definition: type declarator declaration_list compound_statement
    7                    | type declarator compound_statement

    8 declaration_list: declaration
    9                 | declaration_list declaration

   10 compound_statement: scope_start scope_end
   11                   | scope_start block_item_list scope_end

   12 scope_start: LCB

   13 scope_end: RCB

   14 block_item_list: block_item
   15                | block_item_list block_item

   16 block_item: declaration
   17           | statement

   18 statement: compound_statement
   19          | expression_statement
   20          | selection_statement
   21          | iteration_statement
   22          | jump_statement
   23          | print_statement

   24 expression_statement: SEMICOLON
   25                     | expression SEMICOLON

   26 selection_statement: IF LB expression RB statement ELSE statement
   27                    | IF LB expression RB statement

   28 iteration_statement: WHILE LB expression RB statement

   29 jump_statement: RET SEMICOLON
   30               | RET expression SEMICOLON

   31 print_statement: PRINT LB expression RB SEMICOLON

   32 declaration: type init_declarator SEMICOLON

   33 type: INT
   34     | FLOAT
   35     | BOOL
   36     | STRING
   37     | VOID

   38 init_declarator: declarator ASGN initializer
   39                | declarator

   40 declarator: ID
   41           | declarator LB parameter_list RB
   42           | declarator LB RB
   43           | declarator LB identifier_list RB

   44 initializer: assignment_expression

   45 assignment_expression: logical_or_expression
   46                      | unary_expression assignment_operator assignment_expression

   47 logical_or_expression: logical_and_expression
   48                      | logical_or_expression OR logical_and_expression

   49 logical_and_expression: equality_expression
   50                       | logical_and_expression AND equality_expression

   51 equality_expression: relational_expression
   52                    | equality_expression EQ relational_expression
   53                    | equality_expression NE relational_expression

   54 relational_expression: additive_expression
   55                      | relational_expression MT additive_expression
   56                      | relational_expression LT additive_expression
   57                      | relational_expression MTE additive_expression
   58                      | relational_expression LTE additive_expression

   59 additive_expression: multiplicative_expression
   60                    | additive_expression ADD multiplicative_expression
   61                    | additive_expression SUB multiplicative_expression

   62 multiplicative_expression: cast_expression
   63                          | multiplicative_expression MUL cast_expression
   64                          | multiplicative_expression DIV cast_expression
   65                          | multiplicative_expression MOD cast_expression

   66 cast_expression: unary_expression
   67                | LB specifier_qualifier_list RB cast_expression

   68 unary_expression: postfix_expression
   69                 | INC unary_expression
   70                 | DEC unary_expression
   71                 | unary_operator cast_expression

   72 unary_operator: ADD
   73               | SUB
   74               | NOT

   75 postfix_expression: primary_expression
   76                   | postfix_expression LB RB
   77                   | postfix_expression LB argument_expression_list RB
   78                   | postfix_expression INC
   79                   | postfix_expression DEC

   80 primary_expression: ID
   81                   | constant
   82                   | boolean
   83                   | LB expression RB

   84 constant: I_CONST
   85         | F_CONST
   86         | STR_CONST

   87 boolean: TRUE
   88        | FALSE

   89 parameter_list: parameter_declaration
   90               | parameter_list COMMA parameter_declaration

   91 parameter_declaration: type declarator
   92                      | type

   93 identifier_list: ID
   94                | identifier_list COMMA ID

   95 assignment_operator: ASGN
   96                    | MULASGN
   97                    | DIVASGN
   98                    | MODASGN
   99                    | ADDASGN
  100                    | SUBASGN

  101 specifier_qualifier_list: type specifier_qualifier_list
  102                         | type

  103 argument_expression_list: assignment_expression
  104                         | argument_expression_list COMMA assignment_expression

  105 expression: assignment_expression
  106           | expression COMMA assignment_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 60 72
SUB (259) 61 73
MUL (260) 63
DIV (261) 64
MOD (262) 65
INC (263) 69 78
DEC (264) 70 79
MT (265) 55
LT (266) 56
MTE (267) 57
LTE (268) 58
EQ (269) 52
NE (270) 53
ASGN (271) 38 95
ADDASGN (272) 99
SUBASGN (273) 100
MULASGN (274) 96
DIVASGN (275) 97
MODASGN (276) 98
AND (277) 50
OR (278) 48
NOT (279) 74
LB (280) 26 27 28 31 41 42 43 67 76 77 83
RB (281) 26 27 28 31 41 42 43 67 76 77 83
LCB (282) 12
RCB (283) 13
LSB (284)
RSB (285)
COMMA (286) 90 94 104 106
PRINT (287) 31
IF (288) 26 27
ELSE (289) 26
FOR (290)
WHILE (291) 28
VOID (292) 37
INT (293) 33
FLOAT (294) 34
STRING (295) 36
BOOL (296) 35
TRUE (297) 87
FALSE (298) 88
RET (299) 29 30
SEMICOLON (300) 24 25 29 30 31 32
I_CONST (301) 84
F_CONST (302) 85
STR_CONST (303) 86
ID (304) 40 80 93 94


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1 2 3, on right: 0 2
external_declaration (52)
    on left: 4 5, on right: 1 2
function_definition (53)
    on left: 6 7, on right: 5
declaration_list (54)
    on left: 8 9, on right: 6 9
compound_statement (55)
    on left: 10 11, on right: 6 7 18
scope_start (56)
    on left: 12, on right: 10 11
scope_end (57)
    on left: 13, on right: 10 11
block_item_list (58)
    on left: 14 15, on right: 11 15
block_item (59)
    on left: 16 17, on right: 14 15
statement (60)
    on left: 18 19 20 21 22 23, on right: 17 26 27 28
expression_statement (61)
    on left: 24 25, on right: 19
selection_statement (62)
    on left: 26 27, on right: 20
iteration_statement (63)
    on left: 28, on right: 21
jump_statement (64)
    on left: 29 30, on right: 22
print_statement (65)
    on left: 31, on right: 23
declaration (66)
    on left: 32, on right: 4 8 9 16
type (67)
    on left: 33 34 35 36 37, on right: 6 7 32 91 92 101 102
init_declarator (68)
    on left: 38 39, on right: 32
declarator (69)
    on left: 40 41 42 43, on right: 6 7 38 39 41 42 43 91
initializer (70)
    on left: 44, on right: 38
assignment_expression (71)
    on left: 45 46, on right: 44 46 103 104 105 106
logical_or_expression (72)
    on left: 47 48, on right: 45 48
logical_and_expression (73)
    on left: 49 50, on right: 47 48 50
equality_expression (74)
    on left: 51 52 53, on right: 49 50 52 53
relational_expression (75)
    on left: 54 55 56 57 58, on right: 51 52 53 55 56 57 58
additive_expression (76)
    on left: 59 60 61, on right: 54 55 56 57 58 60 61
multiplicative_expression (77)
    on left: 62 63 64 65, on right: 59 60 61 63 64 65
cast_expression (78)
    on left: 66 67, on right: 62 63 64 65 67 71
unary_expression (79)
    on left: 68 69 70 71, on right: 46 66 69 70
unary_operator (80)
    on left: 72 73 74, on right: 71
postfix_expression (81)
    on left: 75 76 77 78 79, on right: 68 76 77 78 79
primary_expression (82)
    on left: 80 81 82 83, on right: 75
constant (83)
    on left: 84 85 86, on right: 81
boolean (84)
    on left: 87 88, on right: 82
parameter_list (85)
    on left: 89 90, on right: 41 90
parameter_declaration (86)
    on left: 91 92, on right: 89 90
identifier_list (87)
    on left: 93 94, on right: 43 94
assignment_operator (88)
    on left: 95 96 97 98 99 100, on right: 46
specifier_qualifier_list (89)
    on left: 101 102, on right: 67 101
argument_expression_list (90)
    on left: 103 104, on right: 77 104
expression (91)
    on left: 105 106, on right: 25 26 27 28 30 31 83 106


State 0

    0 $accept: . program $end

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    VOID      [reduce using rule 3 (program)]
    INT       [reduce using rule 3 (program)]
    FLOAT     [reduce using rule 3 (program)]
    STRING    [reduce using rule 3 (program)]
    BOOL      [reduce using rule 3 (program)]
    $default  reduce using rule 3 (program)

    program               go to state 6
    external_declaration  go to state 7
    function_definition   go to state 8
    declaration           go to state 9
    type                  go to state 10


State 1

   37 type: VOID .

    $default  reduce using rule 37 (type)


State 2

   33 type: INT .

    $default  reduce using rule 33 (type)


State 3

   34 type: FLOAT .

    $default  reduce using rule 34 (type)


State 4

   36 type: STRING .

    $default  reduce using rule 36 (type)


State 5

   35 type: BOOL .

    $default  reduce using rule 35 (type)


State 6

    0 $accept: program . $end
    2 program: program . external_declaration

    $end    shift, and go to state 11
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    external_declaration  go to state 12
    function_definition   go to state 8
    declaration           go to state 9
    type                  go to state 10


State 7

    1 program: external_declaration .

    $default  reduce using rule 1 (program)


State 8

    5 external_declaration: function_definition .

    $default  reduce using rule 5 (external_declaration)


State 9

    4 external_declaration: declaration .

    $default  reduce using rule 4 (external_declaration)


State 10

    6 function_definition: type . declarator declaration_list compound_statement
    7                    | type . declarator compound_statement
   32 declaration: type . init_declarator SEMICOLON

    ID  shift, and go to state 13

    init_declarator  go to state 14
    declarator       go to state 15


State 11

    0 $accept: program $end .

    $default  accept


State 12

    2 program: program external_declaration .

    $default  reduce using rule 2 (program)


State 13

   40 declarator: ID .

    $default  reduce using rule 40 (declarator)


State 14

   32 declaration: type init_declarator . SEMICOLON

    SEMICOLON  shift, and go to state 16


State 15

    6 function_definition: type declarator . declaration_list compound_statement
    7                    | type declarator . compound_statement
   38 init_declarator: declarator . ASGN initializer
   39                | declarator .
   41 declarator: declarator . LB parameter_list RB
   42           | declarator . LB RB
   43           | declarator . LB identifier_list RB

    ASGN    shift, and go to state 17
    LB      shift, and go to state 18
    LCB     shift, and go to state 19
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 39 (init_declarator)

    declaration_list    go to state 20
    compound_statement  go to state 21
    scope_start         go to state 22
    declaration         go to state 23
    type                go to state 24


State 16

   32 declaration: type init_declarator SEMICOLON .

    $default  reduce using rule 32 (declaration)


State 17

   38 init_declarator: declarator ASGN . initializer

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    initializer                go to state 37
    assignment_expression      go to state 38
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51


State 18

   41 declarator: declarator LB . parameter_list RB
   42           | declarator LB . RB
   43           | declarator LB . identifier_list RB

    RB      shift, and go to state 52
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5
    ID      shift, and go to state 53

    type                   go to state 54
    parameter_list         go to state 55
    parameter_declaration  go to state 56
    identifier_list        go to state 57


State 19

   12 scope_start: LCB .

    $default  reduce using rule 12 (scope_start)


State 20

    6 function_definition: type declarator declaration_list . compound_statement
    9 declaration_list: declaration_list . declaration

    LCB     shift, and go to state 19
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    compound_statement  go to state 58
    scope_start         go to state 22
    declaration         go to state 59
    type                go to state 24


State 21

    7 function_definition: type declarator compound_statement .

    $default  reduce using rule 7 (function_definition)


State 22

   10 compound_statement: scope_start . scope_end
   11                   | scope_start . block_item_list scope_end

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    LCB        shift, and go to state 19
    RCB        shift, and go to state 60
    PRINT      shift, and go to state 61
    IF         shift, and go to state 62
    WHILE      shift, and go to state 63
    VOID       shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    STRING     shift, and go to state 4
    BOOL       shift, and go to state 5
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    RET        shift, and go to state 64
    SEMICOLON  shift, and go to state 65
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    compound_statement         go to state 66
    scope_start                go to state 22
    scope_end                  go to state 67
    block_item_list            go to state 68
    block_item                 go to state 69
    statement                  go to state 70
    expression_statement       go to state 71
    selection_statement        go to state 72
    iteration_statement        go to state 73
    jump_statement             go to state 74
    print_statement            go to state 75
    declaration                go to state 76
    type                       go to state 24
    assignment_expression      go to state 77
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51
    expression                 go to state 78


State 23

    8 declaration_list: declaration .

    $default  reduce using rule 8 (declaration_list)


State 24

   32 declaration: type . init_declarator SEMICOLON

    ID  shift, and go to state 13

    init_declarator  go to state 14
    declarator       go to state 79


State 25

   72 unary_operator: ADD .

    $default  reduce using rule 72 (unary_operator)


State 26

   73 unary_operator: SUB .

    $default  reduce using rule 73 (unary_operator)


State 27

   69 unary_expression: INC . unary_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 80
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    unary_expression    go to state 81
    unary_operator      go to state 47
    postfix_expression  go to state 48
    primary_expression  go to state 49
    constant            go to state 50
    boolean             go to state 51


State 28

   70 unary_expression: DEC . unary_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 80
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    unary_expression    go to state 82
    unary_operator      go to state 47
    postfix_expression  go to state 48
    primary_expression  go to state 49
    constant            go to state 50
    boolean             go to state 51


State 29

   74 unary_operator: NOT .

    $default  reduce using rule 74 (unary_operator)


State 30

   67 cast_expression: LB . specifier_qualifier_list RB cast_expression
   83 primary_expression: LB . expression RB

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    VOID       shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    STRING     shift, and go to state 4
    BOOL       shift, and go to state 5
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    type                       go to state 83
    assignment_expression      go to state 77
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51
    specifier_qualifier_list   go to state 84
    expression                 go to state 85


State 31

   87 boolean: TRUE .

    $default  reduce using rule 87 (boolean)


State 32

   88 boolean: FALSE .

    $default  reduce using rule 88 (boolean)


State 33

   84 constant: I_CONST .

    $default  reduce using rule 84 (constant)


State 34

   85 constant: F_CONST .

    $default  reduce using rule 85 (constant)


State 35

   86 constant: STR_CONST .

    $default  reduce using rule 86 (constant)


State 36

   80 primary_expression: ID .

    $default  reduce using rule 80 (primary_expression)


State 37

   38 init_declarator: declarator ASGN initializer .

    $default  reduce using rule 38 (init_declarator)


State 38

   44 initializer: assignment_expression .

    $default  reduce using rule 44 (initializer)


State 39

   45 assignment_expression: logical_or_expression .
   48 logical_or_expression: logical_or_expression . OR logical_and_expression

    OR  shift, and go to state 86

    $default  reduce using rule 45 (assignment_expression)


State 40

   47 logical_or_expression: logical_and_expression .
   50 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 87

    $default  reduce using rule 47 (logical_or_expression)


State 41

   49 logical_and_expression: equality_expression .
   52 equality_expression: equality_expression . EQ relational_expression
   53                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 88
    NE  shift, and go to state 89

    $default  reduce using rule 49 (logical_and_expression)


State 42

   51 equality_expression: relational_expression .
   55 relational_expression: relational_expression . MT additive_expression
   56                      | relational_expression . LT additive_expression
   57                      | relational_expression . MTE additive_expression
   58                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 90
    LT   shift, and go to state 91
    MTE  shift, and go to state 92
    LTE  shift, and go to state 93

    $default  reduce using rule 51 (equality_expression)


State 43

   54 relational_expression: additive_expression .
   60 additive_expression: additive_expression . ADD multiplicative_expression
   61                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95

    $default  reduce using rule 54 (relational_expression)


State 44

   59 additive_expression: multiplicative_expression .
   63 multiplicative_expression: multiplicative_expression . MUL cast_expression
   64                          | multiplicative_expression . DIV cast_expression
   65                          | multiplicative_expression . MOD cast_expression

    MUL  shift, and go to state 96
    DIV  shift, and go to state 97
    MOD  shift, and go to state 98

    $default  reduce using rule 59 (additive_expression)


State 45

   62 multiplicative_expression: cast_expression .

    $default  reduce using rule 62 (multiplicative_expression)


State 46

   46 assignment_expression: unary_expression . assignment_operator assignment_expression
   66 cast_expression: unary_expression .

    ASGN     shift, and go to state 99
    ADDASGN  shift, and go to state 100
    SUBASGN  shift, and go to state 101
    MULASGN  shift, and go to state 102
    DIVASGN  shift, and go to state 103
    MODASGN  shift, and go to state 104

    $default  reduce using rule 66 (cast_expression)

    assignment_operator  go to state 105


State 47

   71 unary_expression: unary_operator . cast_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    cast_expression     go to state 106
    unary_expression    go to state 107
    unary_operator      go to state 47
    postfix_expression  go to state 48
    primary_expression  go to state 49
    constant            go to state 50
    boolean             go to state 51


State 48

   68 unary_expression: postfix_expression .
   76 postfix_expression: postfix_expression . LB RB
   77                   | postfix_expression . LB argument_expression_list RB
   78                   | postfix_expression . INC
   79                   | postfix_expression . DEC

    INC  shift, and go to state 108
    DEC  shift, and go to state 109
    LB   shift, and go to state 110

    $default  reduce using rule 68 (unary_expression)


State 49

   75 postfix_expression: primary_expression .

    $default  reduce using rule 75 (postfix_expression)


State 50

   81 primary_expression: constant .

    $default  reduce using rule 81 (primary_expression)


State 51

   82 primary_expression: boolean .

    $default  reduce using rule 82 (primary_expression)


State 52

   42 declarator: declarator LB RB .

    $default  reduce using rule 42 (declarator)


State 53

   93 identifier_list: ID .

    $default  reduce using rule 93 (identifier_list)


State 54

   91 parameter_declaration: type . declarator
   92                      | type .

    ID  shift, and go to state 13

    $default  reduce using rule 92 (parameter_declaration)

    declarator  go to state 111


State 55

   41 declarator: declarator LB parameter_list . RB
   90 parameter_list: parameter_list . COMMA parameter_declaration

    RB     shift, and go to state 112
    COMMA  shift, and go to state 113


State 56

   89 parameter_list: parameter_declaration .

    $default  reduce using rule 89 (parameter_list)


State 57

   43 declarator: declarator LB identifier_list . RB
   94 identifier_list: identifier_list . COMMA ID

    RB     shift, and go to state 114
    COMMA  shift, and go to state 115


State 58

    6 function_definition: type declarator declaration_list compound_statement .

    $default  reduce using rule 6 (function_definition)


State 59

    9 declaration_list: declaration_list declaration .

    $default  reduce using rule 9 (declaration_list)


State 60

   13 scope_end: RCB .

    $default  reduce using rule 13 (scope_end)


State 61

   31 print_statement: PRINT . LB expression RB SEMICOLON

    LB  shift, and go to state 116


State 62

   26 selection_statement: IF . LB expression RB statement ELSE statement
   27                    | IF . LB expression RB statement

    LB  shift, and go to state 117


State 63

   28 iteration_statement: WHILE . LB expression RB statement

    LB  shift, and go to state 118


State 64

   29 jump_statement: RET . SEMICOLON
   30               | RET . expression SEMICOLON

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    SEMICOLON  shift, and go to state 119
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    assignment_expression      go to state 77
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51
    expression                 go to state 120


State 65

   24 expression_statement: SEMICOLON .

    $default  reduce using rule 24 (expression_statement)


State 66

   18 statement: compound_statement .

    $default  reduce using rule 18 (statement)


State 67

   10 compound_statement: scope_start scope_end .

    $default  reduce using rule 10 (compound_statement)


State 68

   11 compound_statement: scope_start block_item_list . scope_end
   15 block_item_list: block_item_list . block_item

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    LCB        shift, and go to state 19
    RCB        shift, and go to state 60
    PRINT      shift, and go to state 61
    IF         shift, and go to state 62
    WHILE      shift, and go to state 63
    VOID       shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    STRING     shift, and go to state 4
    BOOL       shift, and go to state 5
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    RET        shift, and go to state 64
    SEMICOLON  shift, and go to state 65
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    compound_statement         go to state 66
    scope_start                go to state 22
    scope_end                  go to state 121
    block_item                 go to state 122
    statement                  go to state 70
    expression_statement       go to state 71
    selection_statement        go to state 72
    iteration_statement        go to state 73
    jump_statement             go to state 74
    print_statement            go to state 75
    declaration                go to state 76
    type                       go to state 24
    assignment_expression      go to state 77
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51
    expression                 go to state 78


State 69

   14 block_item_list: block_item .

    $default  reduce using rule 14 (block_item_list)


State 70

   17 block_item: statement .

    $default  reduce using rule 17 (block_item)


State 71

   19 statement: expression_statement .

    $default  reduce using rule 19 (statement)


State 72

   20 statement: selection_statement .

    $default  reduce using rule 20 (statement)


State 73

   21 statement: iteration_statement .

    $default  reduce using rule 21 (statement)


State 74

   22 statement: jump_statement .

    $default  reduce using rule 22 (statement)


State 75

   23 statement: print_statement .

    $default  reduce using rule 23 (statement)


State 76

   16 block_item: declaration .

    $default  reduce using rule 16 (block_item)


State 77

  105 expression: assignment_expression .

    $default  reduce using rule 105 (expression)


State 78

   25 expression_statement: expression . SEMICOLON
  106 expression: expression . COMMA assignment_expression

    COMMA      shift, and go to state 123
    SEMICOLON  shift, and go to state 124


State 79

   38 init_declarator: declarator . ASGN initializer
   39                | declarator .
   41 declarator: declarator . LB parameter_list RB
   42           | declarator . LB RB
   43           | declarator . LB identifier_list RB

    ASGN  shift, and go to state 17
    LB    shift, and go to state 18

    $default  reduce using rule 39 (init_declarator)


State 80

   83 primary_expression: LB . expression RB

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    assignment_expression      go to state 77
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51
    expression                 go to state 85


State 81

   69 unary_expression: INC unary_expression .

    $default  reduce using rule 69 (unary_expression)


State 82

   70 unary_expression: DEC unary_expression .

    $default  reduce using rule 70 (unary_expression)


State 83

  101 specifier_qualifier_list: type . specifier_qualifier_list
  102                         | type .

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 102 (specifier_qualifier_list)

    type                      go to state 83
    specifier_qualifier_list  go to state 125


State 84

   67 cast_expression: LB specifier_qualifier_list . RB cast_expression

    RB  shift, and go to state 126


State 85

   83 primary_expression: LB expression . RB
  106 expression: expression . COMMA assignment_expression

    RB     shift, and go to state 127
    COMMA  shift, and go to state 123


State 86

   48 logical_or_expression: logical_or_expression OR . logical_and_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    logical_and_expression     go to state 128
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 107
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51


State 87

   50 logical_and_expression: logical_and_expression AND . equality_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    equality_expression        go to state 129
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 107
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51


State 88

   52 equality_expression: equality_expression EQ . relational_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    relational_expression      go to state 130
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 107
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51


State 89

   53 equality_expression: equality_expression NE . relational_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    relational_expression      go to state 131
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 107
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51


State 90

   55 relational_expression: relational_expression MT . additive_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    additive_expression        go to state 132
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 107
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51


State 91

   56 relational_expression: relational_expression LT . additive_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    additive_expression        go to state 133
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 107
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51


State 92

   57 relational_expression: relational_expression MTE . additive_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    additive_expression        go to state 134
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 107
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51


State 93

   58 relational_expression: relational_expression LTE . additive_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    additive_expression        go to state 135
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 107
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51


State 94

   60 additive_expression: additive_expression ADD . multiplicative_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    multiplicative_expression  go to state 136
    cast_expression            go to state 45
    unary_expression           go to state 107
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51


State 95

   61 additive_expression: additive_expression SUB . multiplicative_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    multiplicative_expression  go to state 137
    cast_expression            go to state 45
    unary_expression           go to state 107
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51


State 96

   63 multiplicative_expression: multiplicative_expression MUL . cast_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    cast_expression     go to state 138
    unary_expression    go to state 107
    unary_operator      go to state 47
    postfix_expression  go to state 48
    primary_expression  go to state 49
    constant            go to state 50
    boolean             go to state 51


State 97

   64 multiplicative_expression: multiplicative_expression DIV . cast_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    cast_expression     go to state 139
    unary_expression    go to state 107
    unary_operator      go to state 47
    postfix_expression  go to state 48
    primary_expression  go to state 49
    constant            go to state 50
    boolean             go to state 51


State 98

   65 multiplicative_expression: multiplicative_expression MOD . cast_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    cast_expression     go to state 140
    unary_expression    go to state 107
    unary_operator      go to state 47
    postfix_expression  go to state 48
    primary_expression  go to state 49
    constant            go to state 50
    boolean             go to state 51


State 99

   95 assignment_operator: ASGN .

    $default  reduce using rule 95 (assignment_operator)


State 100

   99 assignment_operator: ADDASGN .

    $default  reduce using rule 99 (assignment_operator)


State 101

  100 assignment_operator: SUBASGN .

    $default  reduce using rule 100 (assignment_operator)


State 102

   96 assignment_operator: MULASGN .

    $default  reduce using rule 96 (assignment_operator)


State 103

   97 assignment_operator: DIVASGN .

    $default  reduce using rule 97 (assignment_operator)


State 104

   98 assignment_operator: MODASGN .

    $default  reduce using rule 98 (assignment_operator)


State 105

   46 assignment_expression: unary_expression assignment_operator . assignment_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    assignment_expression      go to state 141
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51


State 106

   71 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 71 (unary_expression)


State 107

   66 cast_expression: unary_expression .

    $default  reduce using rule 66 (cast_expression)


State 108

   78 postfix_expression: postfix_expression INC .

    $default  reduce using rule 78 (postfix_expression)


State 109

   79 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 79 (postfix_expression)


State 110

   76 postfix_expression: postfix_expression LB . RB
   77                   | postfix_expression LB . argument_expression_list RB

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    RB         shift, and go to state 142
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    assignment_expression      go to state 143
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51
    argument_expression_list   go to state 144


State 111

   41 declarator: declarator . LB parameter_list RB
   42           | declarator . LB RB
   43           | declarator . LB identifier_list RB
   91 parameter_declaration: type declarator .

    LB  shift, and go to state 18

    $default  reduce using rule 91 (parameter_declaration)


State 112

   41 declarator: declarator LB parameter_list RB .

    $default  reduce using rule 41 (declarator)


State 113

   90 parameter_list: parameter_list COMMA . parameter_declaration

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    type                   go to state 54
    parameter_declaration  go to state 145


State 114

   43 declarator: declarator LB identifier_list RB .

    $default  reduce using rule 43 (declarator)


State 115

   94 identifier_list: identifier_list COMMA . ID

    ID  shift, and go to state 146


State 116

   31 print_statement: PRINT LB . expression RB SEMICOLON

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    assignment_expression      go to state 77
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51
    expression                 go to state 147


State 117

   26 selection_statement: IF LB . expression RB statement ELSE statement
   27                    | IF LB . expression RB statement

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    assignment_expression      go to state 77
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51
    expression                 go to state 148


State 118

   28 iteration_statement: WHILE LB . expression RB statement

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    assignment_expression      go to state 77
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51
    expression                 go to state 149


State 119

   29 jump_statement: RET SEMICOLON .

    $default  reduce using rule 29 (jump_statement)


State 120

   30 jump_statement: RET expression . SEMICOLON
  106 expression: expression . COMMA assignment_expression

    COMMA      shift, and go to state 123
    SEMICOLON  shift, and go to state 150


State 121

   11 compound_statement: scope_start block_item_list scope_end .

    $default  reduce using rule 11 (compound_statement)


State 122

   15 block_item_list: block_item_list block_item .

    $default  reduce using rule 15 (block_item_list)


State 123

  106 expression: expression COMMA . assignment_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    assignment_expression      go to state 151
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51


State 124

   25 expression_statement: expression SEMICOLON .

    $default  reduce using rule 25 (expression_statement)


State 125

  101 specifier_qualifier_list: type specifier_qualifier_list .

    $default  reduce using rule 101 (specifier_qualifier_list)


State 126

   67 cast_expression: LB specifier_qualifier_list RB . cast_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    cast_expression     go to state 152
    unary_expression    go to state 107
    unary_operator      go to state 47
    postfix_expression  go to state 48
    primary_expression  go to state 49
    constant            go to state 50
    boolean             go to state 51


State 127

   83 primary_expression: LB expression RB .

    $default  reduce using rule 83 (primary_expression)


State 128

   48 logical_or_expression: logical_or_expression OR logical_and_expression .
   50 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 87

    $default  reduce using rule 48 (logical_or_expression)


State 129

   50 logical_and_expression: logical_and_expression AND equality_expression .
   52 equality_expression: equality_expression . EQ relational_expression
   53                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 88
    NE  shift, and go to state 89

    $default  reduce using rule 50 (logical_and_expression)


State 130

   52 equality_expression: equality_expression EQ relational_expression .
   55 relational_expression: relational_expression . MT additive_expression
   56                      | relational_expression . LT additive_expression
   57                      | relational_expression . MTE additive_expression
   58                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 90
    LT   shift, and go to state 91
    MTE  shift, and go to state 92
    LTE  shift, and go to state 93

    $default  reduce using rule 52 (equality_expression)


State 131

   53 equality_expression: equality_expression NE relational_expression .
   55 relational_expression: relational_expression . MT additive_expression
   56                      | relational_expression . LT additive_expression
   57                      | relational_expression . MTE additive_expression
   58                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 90
    LT   shift, and go to state 91
    MTE  shift, and go to state 92
    LTE  shift, and go to state 93

    $default  reduce using rule 53 (equality_expression)


State 132

   55 relational_expression: relational_expression MT additive_expression .
   60 additive_expression: additive_expression . ADD multiplicative_expression
   61                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95

    $default  reduce using rule 55 (relational_expression)


State 133

   56 relational_expression: relational_expression LT additive_expression .
   60 additive_expression: additive_expression . ADD multiplicative_expression
   61                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95

    $default  reduce using rule 56 (relational_expression)


State 134

   57 relational_expression: relational_expression MTE additive_expression .
   60 additive_expression: additive_expression . ADD multiplicative_expression
   61                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95

    $default  reduce using rule 57 (relational_expression)


State 135

   58 relational_expression: relational_expression LTE additive_expression .
   60 additive_expression: additive_expression . ADD multiplicative_expression
   61                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95

    $default  reduce using rule 58 (relational_expression)


State 136

   60 additive_expression: additive_expression ADD multiplicative_expression .
   63 multiplicative_expression: multiplicative_expression . MUL cast_expression
   64                          | multiplicative_expression . DIV cast_expression
   65                          | multiplicative_expression . MOD cast_expression

    MUL  shift, and go to state 96
    DIV  shift, and go to state 97
    MOD  shift, and go to state 98

    $default  reduce using rule 60 (additive_expression)


State 137

   61 additive_expression: additive_expression SUB multiplicative_expression .
   63 multiplicative_expression: multiplicative_expression . MUL cast_expression
   64                          | multiplicative_expression . DIV cast_expression
   65                          | multiplicative_expression . MOD cast_expression

    MUL  shift, and go to state 96
    DIV  shift, and go to state 97
    MOD  shift, and go to state 98

    $default  reduce using rule 61 (additive_expression)


State 138

   63 multiplicative_expression: multiplicative_expression MUL cast_expression .

    $default  reduce using rule 63 (multiplicative_expression)


State 139

   64 multiplicative_expression: multiplicative_expression DIV cast_expression .

    $default  reduce using rule 64 (multiplicative_expression)


State 140

   65 multiplicative_expression: multiplicative_expression MOD cast_expression .

    $default  reduce using rule 65 (multiplicative_expression)


State 141

   46 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 46 (assignment_expression)


State 142

   76 postfix_expression: postfix_expression LB RB .

    $default  reduce using rule 76 (postfix_expression)


State 143

  103 argument_expression_list: assignment_expression .

    $default  reduce using rule 103 (argument_expression_list)


State 144

   77 postfix_expression: postfix_expression LB argument_expression_list . RB
  104 argument_expression_list: argument_expression_list . COMMA assignment_expression

    RB     shift, and go to state 153
    COMMA  shift, and go to state 154


State 145

   90 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 90 (parameter_list)


State 146

   94 identifier_list: identifier_list COMMA ID .

    $default  reduce using rule 94 (identifier_list)


State 147

   31 print_statement: PRINT LB expression . RB SEMICOLON
  106 expression: expression . COMMA assignment_expression

    RB     shift, and go to state 155
    COMMA  shift, and go to state 123


State 148

   26 selection_statement: IF LB expression . RB statement ELSE statement
   27                    | IF LB expression . RB statement
  106 expression: expression . COMMA assignment_expression

    RB     shift, and go to state 156
    COMMA  shift, and go to state 123


State 149

   28 iteration_statement: WHILE LB expression . RB statement
  106 expression: expression . COMMA assignment_expression

    RB     shift, and go to state 157
    COMMA  shift, and go to state 123


State 150

   30 jump_statement: RET expression SEMICOLON .

    $default  reduce using rule 30 (jump_statement)


State 151

  106 expression: expression COMMA assignment_expression .

    $default  reduce using rule 106 (expression)


State 152

   67 cast_expression: LB specifier_qualifier_list RB cast_expression .

    $default  reduce using rule 67 (cast_expression)


State 153

   77 postfix_expression: postfix_expression LB argument_expression_list RB .

    $default  reduce using rule 77 (postfix_expression)


State 154

  104 argument_expression_list: argument_expression_list COMMA . assignment_expression

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    assignment_expression      go to state 158
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51


State 155

   31 print_statement: PRINT LB expression RB . SEMICOLON

    SEMICOLON  shift, and go to state 159


State 156

   26 selection_statement: IF LB expression RB . statement ELSE statement
   27                    | IF LB expression RB . statement

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    LCB        shift, and go to state 19
    PRINT      shift, and go to state 61
    IF         shift, and go to state 62
    WHILE      shift, and go to state 63
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    RET        shift, and go to state 64
    SEMICOLON  shift, and go to state 65
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    compound_statement         go to state 66
    scope_start                go to state 22
    statement                  go to state 160
    expression_statement       go to state 71
    selection_statement        go to state 72
    iteration_statement        go to state 73
    jump_statement             go to state 74
    print_statement            go to state 75
    assignment_expression      go to state 77
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51
    expression                 go to state 78


State 157

   28 iteration_statement: WHILE LB expression RB . statement

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    LCB        shift, and go to state 19
    PRINT      shift, and go to state 61
    IF         shift, and go to state 62
    WHILE      shift, and go to state 63
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    RET        shift, and go to state 64
    SEMICOLON  shift, and go to state 65
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    compound_statement         go to state 66
    scope_start                go to state 22
    statement                  go to state 161
    expression_statement       go to state 71
    selection_statement        go to state 72
    iteration_statement        go to state 73
    jump_statement             go to state 74
    print_statement            go to state 75
    assignment_expression      go to state 77
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51
    expression                 go to state 78


State 158

  104 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 104 (argument_expression_list)


State 159

   31 print_statement: PRINT LB expression RB SEMICOLON .

    $default  reduce using rule 31 (print_statement)


State 160

   26 selection_statement: IF LB expression RB statement . ELSE statement
   27                    | IF LB expression RB statement .

    ELSE  shift, and go to state 162

    ELSE      [reduce using rule 27 (selection_statement)]
    $default  reduce using rule 27 (selection_statement)


State 161

   28 iteration_statement: WHILE LB expression RB statement .

    $default  reduce using rule 28 (iteration_statement)


State 162

   26 selection_statement: IF LB expression RB statement ELSE . statement

    ADD        shift, and go to state 25
    SUB        shift, and go to state 26
    INC        shift, and go to state 27
    DEC        shift, and go to state 28
    NOT        shift, and go to state 29
    LB         shift, and go to state 30
    LCB        shift, and go to state 19
    PRINT      shift, and go to state 61
    IF         shift, and go to state 62
    WHILE      shift, and go to state 63
    TRUE       shift, and go to state 31
    FALSE      shift, and go to state 32
    RET        shift, and go to state 64
    SEMICOLON  shift, and go to state 65
    I_CONST    shift, and go to state 33
    F_CONST    shift, and go to state 34
    STR_CONST  shift, and go to state 35
    ID         shift, and go to state 36

    compound_statement         go to state 66
    scope_start                go to state 22
    statement                  go to state 163
    expression_statement       go to state 71
    selection_statement        go to state 72
    iteration_statement        go to state 73
    jump_statement             go to state 74
    print_statement            go to state 75
    assignment_expression      go to state 77
    logical_or_expression      go to state 39
    logical_and_expression     go to state 40
    equality_expression        go to state 41
    relational_expression      go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    cast_expression            go to state 45
    unary_expression           go to state 46
    unary_operator             go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    constant                   go to state 50
    boolean                    go to state 51
    expression                 go to state 78


State 163

   26 selection_statement: IF LB expression RB statement ELSE statement .

    $default  reduce using rule 26 (selection_statement)
