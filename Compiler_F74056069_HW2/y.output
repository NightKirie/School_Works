Terminals unused in grammar

   LSB
   RSB
   PRINT
   IF
   ELSE
   FOR
   WHILE
   TRUE
   FALSE
   RET


State 0 conflicts: 6 shift/reduce


Grammar

    0 $accept: program $end

    1 program: external_declaration
    2        | program external_declaration
    3        | %empty

    4 external_declaration: declaration
    5                     | STR_COMMENT

    6 declaration: type init_declarator SEMICOLON

    7 type: INT
    8     | FLOAT
    9     | BOOL
   10     | STRING
   11     | VOID

   12 init_declarator: declarator ASGN initializer
   13                | declarator

   14 declarator: ID
   15           | declarator LB parameter_list RB
   16           | declarator LB RB
   17           | declarator LB identifier_list RB

   18 initializer: assignment_expression

   19 assignment_expression: logical_or_expression
   20                      | unary_expression assignment_operator assignment_expression

   21 logical_or_expression: logical_and_expression
   22                      | logical_or_expression OR logical_and_expression

   23 logical_and_expression: equality_expression
   24                       | logical_and_expression AND equality_expression

   25 equality_expression: relational_expression
   26                    | equality_expression EQ relational_expression
   27                    | equality_expression NE relational_expression

   28 relational_expression: additive_expression
   29                      | relational_expression MT additive_expression
   30                      | relational_expression LT additive_expression
   31                      | relational_expression MTE additive_expression
   32                      | relational_expression LTE additive_expression

   33 additive_expression: multiplicative_expression
   34                    | additive_expression ADD multiplicative_expression
   35                    | additive_expression SUB multiplicative_expression

   36 multiplicative_expression: cast_expression
   37                          | multiplicative_expression MUL cast_expression
   38                          | multiplicative_expression DIV cast_expression
   39                          | multiplicative_expression MOD cast_expression

   40 cast_expression: unary_expression
   41                | LB specifier_qualifier_list RB cast_expression

   42 unary_expression: postfix_expression
   43                 | INC unary_expression
   44                 | DEC unary_expression
   45                 | unary_operator cast_expression

   46 unary_operator: ADD
   47               | SUB
   48               | NOT

   49 postfix_expression: primary_expression
   50                   | postfix_expression LB RB
   51                   | postfix_expression LB argument_expression_list RB
   52                   | postfix_expression INC
   53                   | postfix_expression DEC
   54                   | LB specifier_qualifier_list RB LCB initializer_list RCB
   55                   | LB specifier_qualifier_list RB LCB initializer_list COMMA RCB

   56 primary_expression: ID
   57                   | constant
   58                   | STR_CONST
   59                   | LB expression RB

   60 constant: I_CONST
   61         | F_CONST

   62 parameter_list: parameter_declaration
   63               | parameter_list COMMA parameter_declaration

   64 parameter_declaration: type declarator
   65                      | type

   66 identifier_list: ID
   67                | identifier_list COMMA ID

   68 assignment_operator: ASGN
   69                    | MULASGN
   70                    | DIVASGN
   71                    | MODASGN
   72                    | ADDASGN
   73                    | SUBASGN

   74 specifier_qualifier_list: type specifier_qualifier_list
   75                         | type

   76 argument_expression_list: assignment_expression
   77                         | argument_expression_list COMMA assignment_expression

   78 initializer_list: initializer
   79                 | initializer_list COMMA initializer

   80 expression: assignment_expression
   81           | expression COMMA assignment_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 34 46
SUB (259) 35 47
MUL (260) 37
DIV (261) 38
MOD (262) 39
INC (263) 43 52
DEC (264) 44 53
MT (265) 29
LT (266) 30
MTE (267) 31
LTE (268) 32
EQ (269) 26
NE (270) 27
ASGN (271) 12 68
ADDASGN (272) 72
SUBASGN (273) 73
MULASGN (274) 69
DIVASGN (275) 70
MODASGN (276) 71
AND (277) 24
OR (278) 22
NOT (279) 48
LB (280) 15 16 17 41 50 51 54 55 59
RB (281) 15 16 17 41 50 51 54 55 59
LCB (282) 54 55
RCB (283) 54 55
LSB (284)
RSB (285)
COMMA (286) 55 63 67 77 79 81
PRINT (287)
IF (288)
ELSE (289)
FOR (290)
WHILE (291)
VOID (292) 11
INT (293) 7
FLOAT (294) 8
STRING (295) 10
BOOL (296) 9
TRUE (297)
FALSE (298)
RET (299)
SEMICOLON (300) 6
STR_COMMENT (301) 5
I_CONST (302) 60
F_CONST (303) 61
STR_CONST (304) 58
ID (305) 14 56 66 67


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2 3, on right: 0 2
external_declaration (53)
    on left: 4 5, on right: 1 2
declaration (54)
    on left: 6, on right: 4
type (55)
    on left: 7 8 9 10 11, on right: 6 64 65 74 75
init_declarator (56)
    on left: 12 13, on right: 6
declarator (57)
    on left: 14 15 16 17, on right: 12 13 15 16 17 64
initializer (58)
    on left: 18, on right: 12 78 79
assignment_expression (59)
    on left: 19 20, on right: 18 20 76 77 80 81
logical_or_expression (60)
    on left: 21 22, on right: 19 22
logical_and_expression (61)
    on left: 23 24, on right: 21 22 24
equality_expression (62)
    on left: 25 26 27, on right: 23 24 26 27
relational_expression (63)
    on left: 28 29 30 31 32, on right: 25 26 27 29 30 31 32
additive_expression (64)
    on left: 33 34 35, on right: 28 29 30 31 32 34 35
multiplicative_expression (65)
    on left: 36 37 38 39, on right: 33 34 35 37 38 39
cast_expression (66)
    on left: 40 41, on right: 36 37 38 39 41 45
unary_expression (67)
    on left: 42 43 44 45, on right: 20 40 43 44
unary_operator (68)
    on left: 46 47 48, on right: 45
postfix_expression (69)
    on left: 49 50 51 52 53 54 55, on right: 42 50 51 52 53
primary_expression (70)
    on left: 56 57 58 59, on right: 49
constant (71)
    on left: 60 61, on right: 57
parameter_list (72)
    on left: 62 63, on right: 15 63
parameter_declaration (73)
    on left: 64 65, on right: 62 63
identifier_list (74)
    on left: 66 67, on right: 17 67
assignment_operator (75)
    on left: 68 69 70 71 72 73, on right: 20
specifier_qualifier_list (76)
    on left: 74 75, on right: 41 54 55 74
argument_expression_list (77)
    on left: 76 77, on right: 51 77
initializer_list (78)
    on left: 78 79, on right: 54 55 79
expression (79)
    on left: 80 81, on right: 59 81


State 0

    0 $accept: . program $end

    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    STR_COMMENT  shift, and go to state 6

    VOID         [reduce using rule 3 (program)]
    INT          [reduce using rule 3 (program)]
    FLOAT        [reduce using rule 3 (program)]
    STRING       [reduce using rule 3 (program)]
    BOOL         [reduce using rule 3 (program)]
    STR_COMMENT  [reduce using rule 3 (program)]
    $default     reduce using rule 3 (program)

    program               go to state 7
    external_declaration  go to state 8
    declaration           go to state 9
    type                  go to state 10


State 1

   11 type: VOID .

    $default  reduce using rule 11 (type)


State 2

    7 type: INT .

    $default  reduce using rule 7 (type)


State 3

    8 type: FLOAT .

    $default  reduce using rule 8 (type)


State 4

   10 type: STRING .

    $default  reduce using rule 10 (type)


State 5

    9 type: BOOL .

    $default  reduce using rule 9 (type)


State 6

    5 external_declaration: STR_COMMENT .

    $default  reduce using rule 5 (external_declaration)


State 7

    0 $accept: program . $end
    2 program: program . external_declaration

    $end         shift, and go to state 11
    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    STRING       shift, and go to state 4
    BOOL         shift, and go to state 5
    STR_COMMENT  shift, and go to state 6

    external_declaration  go to state 12
    declaration           go to state 9
    type                  go to state 10


State 8

    1 program: external_declaration .

    $default  reduce using rule 1 (program)


State 9

    4 external_declaration: declaration .

    $default  reduce using rule 4 (external_declaration)


State 10

    6 declaration: type . init_declarator SEMICOLON

    ID  shift, and go to state 13

    init_declarator  go to state 14
    declarator       go to state 15


State 11

    0 $accept: program $end .

    $default  accept


State 12

    2 program: program external_declaration .

    $default  reduce using rule 2 (program)


State 13

   14 declarator: ID .

    $default  reduce using rule 14 (declarator)


State 14

    6 declaration: type init_declarator . SEMICOLON

    SEMICOLON  shift, and go to state 16


State 15

   12 init_declarator: declarator . ASGN initializer
   13                | declarator .
   15 declarator: declarator . LB parameter_list RB
   16           | declarator . LB RB
   17           | declarator . LB identifier_list RB

    ASGN  shift, and go to state 17
    LB    shift, and go to state 18

    $default  reduce using rule 13 (init_declarator)


State 16

    6 declaration: type init_declarator SEMICOLON .

    $default  reduce using rule 6 (declaration)


State 17

   12 init_declarator: declarator ASGN . initializer

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    initializer                go to state 29
    assignment_expression      go to state 30
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    equality_expression        go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 38
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 18

   15 declarator: declarator LB . parameter_list RB
   16           | declarator LB . RB
   17           | declarator LB . identifier_list RB

    RB      shift, and go to state 43
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5
    ID      shift, and go to state 44

    type                   go to state 45
    parameter_list         go to state 46
    parameter_declaration  go to state 47
    identifier_list        go to state 48


State 19

   46 unary_operator: ADD .

    $default  reduce using rule 46 (unary_operator)


State 20

   47 unary_operator: SUB .

    $default  reduce using rule 47 (unary_operator)


State 21

   43 unary_expression: INC . unary_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 49
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    unary_expression    go to state 50
    unary_operator      go to state 39
    postfix_expression  go to state 40
    primary_expression  go to state 41
    constant            go to state 42


State 22

   44 unary_expression: DEC . unary_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 49
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    unary_expression    go to state 51
    unary_operator      go to state 39
    postfix_expression  go to state 40
    primary_expression  go to state 41
    constant            go to state 42


State 23

   48 unary_operator: NOT .

    $default  reduce using rule 48 (unary_operator)


State 24

   41 cast_expression: LB . specifier_qualifier_list RB cast_expression
   54 postfix_expression: LB . specifier_qualifier_list RB LCB initializer_list RCB
   55                   | LB . specifier_qualifier_list RB LCB initializer_list COMMA RCB
   59 primary_expression: LB . expression RB

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    VOID       shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    STRING     shift, and go to state 4
    BOOL       shift, and go to state 5
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    type                       go to state 52
    assignment_expression      go to state 53
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    equality_expression        go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 38
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42
    specifier_qualifier_list   go to state 54
    expression                 go to state 55


State 25

   60 constant: I_CONST .

    $default  reduce using rule 60 (constant)


State 26

   61 constant: F_CONST .

    $default  reduce using rule 61 (constant)


State 27

   58 primary_expression: STR_CONST .

    $default  reduce using rule 58 (primary_expression)


State 28

   56 primary_expression: ID .

    $default  reduce using rule 56 (primary_expression)


State 29

   12 init_declarator: declarator ASGN initializer .

    $default  reduce using rule 12 (init_declarator)


State 30

   18 initializer: assignment_expression .

    $default  reduce using rule 18 (initializer)


State 31

   19 assignment_expression: logical_or_expression .
   22 logical_or_expression: logical_or_expression . OR logical_and_expression

    OR  shift, and go to state 56

    $default  reduce using rule 19 (assignment_expression)


State 32

   21 logical_or_expression: logical_and_expression .
   24 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 57

    $default  reduce using rule 21 (logical_or_expression)


State 33

   23 logical_and_expression: equality_expression .
   26 equality_expression: equality_expression . EQ relational_expression
   27                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 58
    NE  shift, and go to state 59

    $default  reduce using rule 23 (logical_and_expression)


State 34

   25 equality_expression: relational_expression .
   29 relational_expression: relational_expression . MT additive_expression
   30                      | relational_expression . LT additive_expression
   31                      | relational_expression . MTE additive_expression
   32                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 60
    LT   shift, and go to state 61
    MTE  shift, and go to state 62
    LTE  shift, and go to state 63

    $default  reduce using rule 25 (equality_expression)


State 35

   28 relational_expression: additive_expression .
   34 additive_expression: additive_expression . ADD multiplicative_expression
   35                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 64
    SUB  shift, and go to state 65

    $default  reduce using rule 28 (relational_expression)


State 36

   33 additive_expression: multiplicative_expression .
   37 multiplicative_expression: multiplicative_expression . MUL cast_expression
   38                          | multiplicative_expression . DIV cast_expression
   39                          | multiplicative_expression . MOD cast_expression

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67
    MOD  shift, and go to state 68

    $default  reduce using rule 33 (additive_expression)


State 37

   36 multiplicative_expression: cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 38

   20 assignment_expression: unary_expression . assignment_operator assignment_expression
   40 cast_expression: unary_expression .

    ASGN     shift, and go to state 69
    ADDASGN  shift, and go to state 70
    SUBASGN  shift, and go to state 71
    MULASGN  shift, and go to state 72
    DIVASGN  shift, and go to state 73
    MODASGN  shift, and go to state 74

    $default  reduce using rule 40 (cast_expression)

    assignment_operator  go to state 75


State 39

   45 unary_expression: unary_operator . cast_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    cast_expression     go to state 76
    unary_expression    go to state 77
    unary_operator      go to state 39
    postfix_expression  go to state 40
    primary_expression  go to state 41
    constant            go to state 42


State 40

   42 unary_expression: postfix_expression .
   50 postfix_expression: postfix_expression . LB RB
   51                   | postfix_expression . LB argument_expression_list RB
   52                   | postfix_expression . INC
   53                   | postfix_expression . DEC

    INC  shift, and go to state 78
    DEC  shift, and go to state 79
    LB   shift, and go to state 80

    $default  reduce using rule 42 (unary_expression)


State 41

   49 postfix_expression: primary_expression .

    $default  reduce using rule 49 (postfix_expression)


State 42

   57 primary_expression: constant .

    $default  reduce using rule 57 (primary_expression)


State 43

   16 declarator: declarator LB RB .

    $default  reduce using rule 16 (declarator)


State 44

   66 identifier_list: ID .

    $default  reduce using rule 66 (identifier_list)


State 45

   64 parameter_declaration: type . declarator
   65                      | type .

    ID  shift, and go to state 13

    $default  reduce using rule 65 (parameter_declaration)

    declarator  go to state 81


State 46

   15 declarator: declarator LB parameter_list . RB
   63 parameter_list: parameter_list . COMMA parameter_declaration

    RB     shift, and go to state 82
    COMMA  shift, and go to state 83


State 47

   62 parameter_list: parameter_declaration .

    $default  reduce using rule 62 (parameter_list)


State 48

   17 declarator: declarator LB identifier_list . RB
   67 identifier_list: identifier_list . COMMA ID

    RB     shift, and go to state 84
    COMMA  shift, and go to state 85


State 49

   54 postfix_expression: LB . specifier_qualifier_list RB LCB initializer_list RCB
   55                   | LB . specifier_qualifier_list RB LCB initializer_list COMMA RCB
   59 primary_expression: LB . expression RB

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    VOID       shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    STRING     shift, and go to state 4
    BOOL       shift, and go to state 5
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    type                       go to state 52
    assignment_expression      go to state 53
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    equality_expression        go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 38
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42
    specifier_qualifier_list   go to state 86
    expression                 go to state 55


State 50

   43 unary_expression: INC unary_expression .

    $default  reduce using rule 43 (unary_expression)


State 51

   44 unary_expression: DEC unary_expression .

    $default  reduce using rule 44 (unary_expression)


State 52

   74 specifier_qualifier_list: type . specifier_qualifier_list
   75                         | type .

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 75 (specifier_qualifier_list)

    type                      go to state 52
    specifier_qualifier_list  go to state 87


State 53

   80 expression: assignment_expression .

    $default  reduce using rule 80 (expression)


State 54

   41 cast_expression: LB specifier_qualifier_list . RB cast_expression
   54 postfix_expression: LB specifier_qualifier_list . RB LCB initializer_list RCB
   55                   | LB specifier_qualifier_list . RB LCB initializer_list COMMA RCB

    RB  shift, and go to state 88


State 55

   59 primary_expression: LB expression . RB
   81 expression: expression . COMMA assignment_expression

    RB     shift, and go to state 89
    COMMA  shift, and go to state 90


State 56

   22 logical_or_expression: logical_or_expression OR . logical_and_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    logical_and_expression     go to state 91
    equality_expression        go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 77
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 57

   24 logical_and_expression: logical_and_expression AND . equality_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    equality_expression        go to state 92
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 77
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 58

   26 equality_expression: equality_expression EQ . relational_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    relational_expression      go to state 93
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 77
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 59

   27 equality_expression: equality_expression NE . relational_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    relational_expression      go to state 94
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 77
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 60

   29 relational_expression: relational_expression MT . additive_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    additive_expression        go to state 95
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 77
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 61

   30 relational_expression: relational_expression LT . additive_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    additive_expression        go to state 96
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 77
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 62

   31 relational_expression: relational_expression MTE . additive_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    additive_expression        go to state 97
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 77
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 63

   32 relational_expression: relational_expression LTE . additive_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    additive_expression        go to state 98
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 77
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 64

   34 additive_expression: additive_expression ADD . multiplicative_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    multiplicative_expression  go to state 99
    cast_expression            go to state 37
    unary_expression           go to state 77
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 65

   35 additive_expression: additive_expression SUB . multiplicative_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    multiplicative_expression  go to state 100
    cast_expression            go to state 37
    unary_expression           go to state 77
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 66

   37 multiplicative_expression: multiplicative_expression MUL . cast_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    cast_expression     go to state 101
    unary_expression    go to state 77
    unary_operator      go to state 39
    postfix_expression  go to state 40
    primary_expression  go to state 41
    constant            go to state 42


State 67

   38 multiplicative_expression: multiplicative_expression DIV . cast_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    cast_expression     go to state 102
    unary_expression    go to state 77
    unary_operator      go to state 39
    postfix_expression  go to state 40
    primary_expression  go to state 41
    constant            go to state 42


State 68

   39 multiplicative_expression: multiplicative_expression MOD . cast_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    cast_expression     go to state 103
    unary_expression    go to state 77
    unary_operator      go to state 39
    postfix_expression  go to state 40
    primary_expression  go to state 41
    constant            go to state 42


State 69

   68 assignment_operator: ASGN .

    $default  reduce using rule 68 (assignment_operator)


State 70

   72 assignment_operator: ADDASGN .

    $default  reduce using rule 72 (assignment_operator)


State 71

   73 assignment_operator: SUBASGN .

    $default  reduce using rule 73 (assignment_operator)


State 72

   69 assignment_operator: MULASGN .

    $default  reduce using rule 69 (assignment_operator)


State 73

   70 assignment_operator: DIVASGN .

    $default  reduce using rule 70 (assignment_operator)


State 74

   71 assignment_operator: MODASGN .

    $default  reduce using rule 71 (assignment_operator)


State 75

   20 assignment_expression: unary_expression assignment_operator . assignment_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    assignment_expression      go to state 104
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    equality_expression        go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 38
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 76

   45 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 45 (unary_expression)


State 77

   40 cast_expression: unary_expression .

    $default  reduce using rule 40 (cast_expression)


State 78

   52 postfix_expression: postfix_expression INC .

    $default  reduce using rule 52 (postfix_expression)


State 79

   53 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 53 (postfix_expression)


State 80

   50 postfix_expression: postfix_expression LB . RB
   51                   | postfix_expression LB . argument_expression_list RB

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    RB         shift, and go to state 105
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    assignment_expression      go to state 106
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    equality_expression        go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 38
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42
    argument_expression_list   go to state 107


State 81

   15 declarator: declarator . LB parameter_list RB
   16           | declarator . LB RB
   17           | declarator . LB identifier_list RB
   64 parameter_declaration: type declarator .

    LB  shift, and go to state 18

    $default  reduce using rule 64 (parameter_declaration)


State 82

   15 declarator: declarator LB parameter_list RB .

    $default  reduce using rule 15 (declarator)


State 83

   63 parameter_list: parameter_list COMMA . parameter_declaration

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    type                   go to state 45
    parameter_declaration  go to state 108


State 84

   17 declarator: declarator LB identifier_list RB .

    $default  reduce using rule 17 (declarator)


State 85

   67 identifier_list: identifier_list COMMA . ID

    ID  shift, and go to state 109


State 86

   54 postfix_expression: LB specifier_qualifier_list . RB LCB initializer_list RCB
   55                   | LB specifier_qualifier_list . RB LCB initializer_list COMMA RCB

    RB  shift, and go to state 110


State 87

   74 specifier_qualifier_list: type specifier_qualifier_list .

    $default  reduce using rule 74 (specifier_qualifier_list)


State 88

   41 cast_expression: LB specifier_qualifier_list RB . cast_expression
   54 postfix_expression: LB specifier_qualifier_list RB . LCB initializer_list RCB
   55                   | LB specifier_qualifier_list RB . LCB initializer_list COMMA RCB

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    LCB        shift, and go to state 111
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    cast_expression     go to state 112
    unary_expression    go to state 77
    unary_operator      go to state 39
    postfix_expression  go to state 40
    primary_expression  go to state 41
    constant            go to state 42


State 89

   59 primary_expression: LB expression RB .

    $default  reduce using rule 59 (primary_expression)


State 90

   81 expression: expression COMMA . assignment_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    assignment_expression      go to state 113
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    equality_expression        go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 38
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 91

   22 logical_or_expression: logical_or_expression OR logical_and_expression .
   24 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 57

    $default  reduce using rule 22 (logical_or_expression)


State 92

   24 logical_and_expression: logical_and_expression AND equality_expression .
   26 equality_expression: equality_expression . EQ relational_expression
   27                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 58
    NE  shift, and go to state 59

    $default  reduce using rule 24 (logical_and_expression)


State 93

   26 equality_expression: equality_expression EQ relational_expression .
   29 relational_expression: relational_expression . MT additive_expression
   30                      | relational_expression . LT additive_expression
   31                      | relational_expression . MTE additive_expression
   32                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 60
    LT   shift, and go to state 61
    MTE  shift, and go to state 62
    LTE  shift, and go to state 63

    $default  reduce using rule 26 (equality_expression)


State 94

   27 equality_expression: equality_expression NE relational_expression .
   29 relational_expression: relational_expression . MT additive_expression
   30                      | relational_expression . LT additive_expression
   31                      | relational_expression . MTE additive_expression
   32                      | relational_expression . LTE additive_expression

    MT   shift, and go to state 60
    LT   shift, and go to state 61
    MTE  shift, and go to state 62
    LTE  shift, and go to state 63

    $default  reduce using rule 27 (equality_expression)


State 95

   29 relational_expression: relational_expression MT additive_expression .
   34 additive_expression: additive_expression . ADD multiplicative_expression
   35                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 64
    SUB  shift, and go to state 65

    $default  reduce using rule 29 (relational_expression)


State 96

   30 relational_expression: relational_expression LT additive_expression .
   34 additive_expression: additive_expression . ADD multiplicative_expression
   35                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 64
    SUB  shift, and go to state 65

    $default  reduce using rule 30 (relational_expression)


State 97

   31 relational_expression: relational_expression MTE additive_expression .
   34 additive_expression: additive_expression . ADD multiplicative_expression
   35                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 64
    SUB  shift, and go to state 65

    $default  reduce using rule 31 (relational_expression)


State 98

   32 relational_expression: relational_expression LTE additive_expression .
   34 additive_expression: additive_expression . ADD multiplicative_expression
   35                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 64
    SUB  shift, and go to state 65

    $default  reduce using rule 32 (relational_expression)


State 99

   34 additive_expression: additive_expression ADD multiplicative_expression .
   37 multiplicative_expression: multiplicative_expression . MUL cast_expression
   38                          | multiplicative_expression . DIV cast_expression
   39                          | multiplicative_expression . MOD cast_expression

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67
    MOD  shift, and go to state 68

    $default  reduce using rule 34 (additive_expression)


State 100

   35 additive_expression: additive_expression SUB multiplicative_expression .
   37 multiplicative_expression: multiplicative_expression . MUL cast_expression
   38                          | multiplicative_expression . DIV cast_expression
   39                          | multiplicative_expression . MOD cast_expression

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67
    MOD  shift, and go to state 68

    $default  reduce using rule 35 (additive_expression)


State 101

   37 multiplicative_expression: multiplicative_expression MUL cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 102

   38 multiplicative_expression: multiplicative_expression DIV cast_expression .

    $default  reduce using rule 38 (multiplicative_expression)


State 103

   39 multiplicative_expression: multiplicative_expression MOD cast_expression .

    $default  reduce using rule 39 (multiplicative_expression)


State 104

   20 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 20 (assignment_expression)


State 105

   50 postfix_expression: postfix_expression LB RB .

    $default  reduce using rule 50 (postfix_expression)


State 106

   76 argument_expression_list: assignment_expression .

    $default  reduce using rule 76 (argument_expression_list)


State 107

   51 postfix_expression: postfix_expression LB argument_expression_list . RB
   77 argument_expression_list: argument_expression_list . COMMA assignment_expression

    RB     shift, and go to state 114
    COMMA  shift, and go to state 115


State 108

   63 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 63 (parameter_list)


State 109

   67 identifier_list: identifier_list COMMA ID .

    $default  reduce using rule 67 (identifier_list)


State 110

   54 postfix_expression: LB specifier_qualifier_list RB . LCB initializer_list RCB
   55                   | LB specifier_qualifier_list RB . LCB initializer_list COMMA RCB

    LCB  shift, and go to state 111


State 111

   54 postfix_expression: LB specifier_qualifier_list RB LCB . initializer_list RCB
   55                   | LB specifier_qualifier_list RB LCB . initializer_list COMMA RCB

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    initializer                go to state 116
    assignment_expression      go to state 30
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    equality_expression        go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 38
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42
    initializer_list           go to state 117


State 112

   41 cast_expression: LB specifier_qualifier_list RB cast_expression .

    $default  reduce using rule 41 (cast_expression)


State 113

   81 expression: expression COMMA assignment_expression .

    $default  reduce using rule 81 (expression)


State 114

   51 postfix_expression: postfix_expression LB argument_expression_list RB .

    $default  reduce using rule 51 (postfix_expression)


State 115

   77 argument_expression_list: argument_expression_list COMMA . assignment_expression

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    assignment_expression      go to state 118
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    equality_expression        go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 38
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 116

   78 initializer_list: initializer .

    $default  reduce using rule 78 (initializer_list)


State 117

   54 postfix_expression: LB specifier_qualifier_list RB LCB initializer_list . RCB
   55                   | LB specifier_qualifier_list RB LCB initializer_list . COMMA RCB
   79 initializer_list: initializer_list . COMMA initializer

    RCB    shift, and go to state 119
    COMMA  shift, and go to state 120


State 118

   77 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 77 (argument_expression_list)


State 119

   54 postfix_expression: LB specifier_qualifier_list RB LCB initializer_list RCB .

    $default  reduce using rule 54 (postfix_expression)


State 120

   55 postfix_expression: LB specifier_qualifier_list RB LCB initializer_list COMMA . RCB
   79 initializer_list: initializer_list COMMA . initializer

    ADD        shift, and go to state 19
    SUB        shift, and go to state 20
    INC        shift, and go to state 21
    DEC        shift, and go to state 22
    NOT        shift, and go to state 23
    LB         shift, and go to state 24
    RCB        shift, and go to state 121
    I_CONST    shift, and go to state 25
    F_CONST    shift, and go to state 26
    STR_CONST  shift, and go to state 27
    ID         shift, and go to state 28

    initializer                go to state 122
    assignment_expression      go to state 30
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    equality_expression        go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    cast_expression            go to state 37
    unary_expression           go to state 38
    unary_operator             go to state 39
    postfix_expression         go to state 40
    primary_expression         go to state 41
    constant                   go to state 42


State 121

   55 postfix_expression: LB specifier_qualifier_list RB LCB initializer_list COMMA RCB .

    $default  reduce using rule 55 (postfix_expression)


State 122

   79 initializer_list: initializer_list COMMA initializer .

    $default  reduce using rule 79 (initializer_list)
